{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-storage-control\\google\\cloud\\storage_control_v2\\types\\storage_control.py": [
    {
      "type": "function",
      "name": "GetFolderRequest",
      "description": "Request message for GetFolder. This operation is only\napplicable to a hierarchical namespace enabled bucket.\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Required. Name of the folder. Format:\n        ``projects/{project}/buckets/{bucket}/folders/{folder}``\n    if_metageneration_match (int):\n        Makes the operation only succeed conditional\n        on whether the folder's current metageneration\n        matches the given value.\n\n        This field is a member of `oneof`_ ``_if_metageneration_match``.\n    if_metageneration_not_match (int):\n        Makes the operation only succeed conditional\n        on whether the folder's current metageneration\n        does not match the given value.\n\n        This field is a member of `oneof`_ ``_if_metageneration_not_match``.\n    request_id (str):\n        Optional. A unique identifier for this\n        request. UUID is the recommended format, but\n        other formats are sti",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the folder. Format: ``projects/{project}/buckets/{bucket}/folders/{folder}``",
            "type": "string"
          },
          "if_metageneration_match": {
            "description": "Makes the operation only succeed conditional on whether the folder's current metageneration matches the given value.  This field is a member of `oneof`_ ``_if_metageneration_match``.",
            "type": "integer"
          },
          "if_metageneration_not_match": {
            "description": "Makes the operation only succeed conditional on whether the folder's current metageneration does not match the given value.  This field is a member of `oneof`_ ``_if_metageneration_not_match``.",
            "type": "integer"
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. UUID is the recommended format, but other formats are still accepted.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateFolderRequest",
      "description": "Request message for CreateFolder. This operation is only\napplicable to a hierarchical namespace enabled bucket.\n\nAttributes:\n    parent (str):\n        Required. Name of the bucket in which the\n        folder will reside. The bucket must be a\n        hierarchical namespace enabled bucket.\n    folder (google.cloud.storage_control_v2.types.Folder):\n        Required. Properties of the new folder being created. The\n        bucket and name of the folder are specified in the parent\n        and folder_id fields, respectively. Populating those fields\n        in ``folder`` will result in an error.\n    folder_id (str):\n        Required. The full name of a folder, including all its\n        parent folders. Folders use single '/' characters as a\n        delimiter. The folder_id must end with a slash. For example,\n        the folder_id of \"books/biographies/\" would create a new\n        \"biographies/\" folder under the \"books/\" folder.\n    recursive (bool):\n        Optional. If true, parent folder doesn't have\n        to be p",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Name of the bucket in which the folder will reside. The bucket must be a hierarchical namespace enabled bucket.",
            "type": "string"
          },
          "folder": {
            "description": "Required. Properties of the new folder being created. The bucket and name of the folder are specified in the parent and folder_id fields, respectively. Populating those fields in ``folder`` will result in an error.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Identifier. The name of this folder. Format: ``projects/{project}/buckets/{bucket}/folders/{folder}``",
                "type": "string"
              },
              "metageneration": {
                "description": "Output only. The version of the metadata for this folder. Used for preconditions and for detecting changes in metadata.",
                "type": "integer"
              },
              "create_time": {
                "description": "Output only. The creation time of the folder.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The modification time of the folder.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "pending_rename_info": {
                "type": "object",
                "properties": {
                  "operation": {
                    "description": "Output only. The name of the rename operation.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "folder_id": {
            "description": "Required. The full name of a folder, including all its parent folders. Folders use single '/' characters as a delimiter. The folder_id must end with a slash. For example, the folder_id of \"books/biographies/\" would create a new \"biographies/\" folder under the \"books/\" folder.",
            "type": "string"
          },
          "recursive": {
            "description": "Optional. If true, parent folder doesn't have to be present and all missing ancestor folders will be created atomically.",
            "type": "boolean"
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. UUID is the recommended format, but other formats are still accepted.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "folder",
          "folder_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteFolderRequest",
      "description": "Request message for DeleteFolder. This operation is only\napplicable to a hierarchical namespace enabled bucket.\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Required. Name of the folder. Format:\n        ``projects/{project}/buckets/{bucket}/folders/{folder}``\n    if_metageneration_match (int):\n        Makes the operation only succeed conditional\n        on whether the folder's current metageneration\n        matches the given value.\n\n        This field is a member of `oneof`_ ``_if_metageneration_match``.\n    if_metageneration_not_match (int):\n        Makes the operation only succeed conditional\n        on whether the folder's current metageneration\n        does not match the given value.\n\n        This field is a member of `oneof`_ ``_if_metageneration_not_match``.\n    request_id (str):\n        Optional. A unique identifier for this\n        request. UUID is the recommended format, but\n        other formats are ",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the folder. Format: ``projects/{project}/buckets/{bucket}/folders/{folder}``",
            "type": "string"
          },
          "if_metageneration_match": {
            "description": "Makes the operation only succeed conditional on whether the folder's current metageneration matches the given value.  This field is a member of `oneof`_ ``_if_metageneration_match``.",
            "type": "integer"
          },
          "if_metageneration_not_match": {
            "description": "Makes the operation only succeed conditional on whether the folder's current metageneration does not match the given value.  This field is a member of `oneof`_ ``_if_metageneration_not_match``.",
            "type": "integer"
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. UUID is the recommended format, but other formats are still accepted.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListFoldersRequest",
      "description": "Request message for ListFolders. This operation is only\napplicable to a hierarchical namespace enabled bucket.\n\nAttributes:\n    parent (str):\n        Required. Name of the bucket in which to look\n        for folders. The bucket must be a hierarchical\n        namespace enabled bucket.\n    page_size (int):\n        Optional. Maximum number of folders to return\n        in a single response. The service will use this\n        parameter or 1,000 items, whichever is smaller.\n    page_token (str):\n        Optional. A previously-returned page token\n        representing part of the larger set of results\n        to view.\n    prefix (str):\n        Optional. Filter results to folders whose\n        names begin with this prefix. If set, the value\n        must either be an empty string or end with a\n        '/'.\n    delimiter (str):\n        Optional. If set, returns results in a\n        directory-like mode. The results will only\n        include folders that either exactly match the\n        above prefix, or are one level below",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Name of the bucket in which to look for folders. The bucket must be a hierarchical namespace enabled bucket.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. Maximum number of folders to return in a single response. The service will use this parameter or 1,000 items, whichever is smaller.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A previously-returned page token representing part of the larger set of results to view.",
            "type": "string"
          },
          "prefix": {
            "description": "Optional. Filter results to folders whose names begin with this prefix. If set, the value must either be an empty string or end with a '/'.",
            "type": "string"
          },
          "delimiter": {
            "description": "Optional. If set, returns results in a directory-like mode. The results will only include folders that either exactly match the above prefix, or are one level below the prefix. The only supported value is '/'.",
            "type": "string"
          },
          "lexicographic_start": {
            "description": "Optional. Filter results to folders whose names are lexicographically equal to or after lexicographic_start. If lexicographic_end is also set, the folders listed have names between lexicographic_start (inclusive) and lexicographic_end (exclusive).",
            "type": "string"
          },
          "lexicographic_end": {
            "description": "Optional. Filter results to folders whose names are lexicographically before lexicographic_end. If lexicographic_start is also set, the folders listed have names between lexicographic_start (inclusive) and lexicographic_end (exclusive).",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. UUID is the recommended format, but other formats are still accepted.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "RenameFolderRequest",
      "description": "Request message for RenameFolder. This operation is only\napplicable to a hierarchical namespace enabled bucket.\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Required. Name of the source folder being renamed. Format:\n        ``projects/{project}/buckets/{bucket}/folders/{folder}``\n    destination_folder_id (str):\n        Required. The destination folder ID, e.g. ``foo/bar/``.\n    if_metageneration_match (int):\n        Makes the operation only succeed conditional\n        on whether the source folder's current\n        metageneration matches the given value.\n\n        This field is a member of `oneof`_ ``_if_metageneration_match``.\n    if_metageneration_not_match (int):\n        Makes the operation only succeed conditional\n        on whether the source folder's current\n        metageneration does not match the given value.\n\n        This field is a member of `oneof`_ ``_if_metageneration_not_match``.\n    request_id (",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the source folder being renamed. Format: ``projects/{project}/buckets/{bucket}/folders/{folder}``",
            "type": "string"
          },
          "destination_folder_id": {
            "description": "Required. The destination folder ID, e.g. ``foo/bar/``.",
            "type": "string"
          },
          "if_metageneration_match": {
            "description": "Makes the operation only succeed conditional on whether the source folder's current metageneration matches the given value.  This field is a member of `oneof`_ ``_if_metageneration_match``.",
            "type": "integer"
          },
          "if_metageneration_not_match": {
            "description": "Makes the operation only succeed conditional on whether the source folder's current metageneration does not match the given value.  This field is a member of `oneof`_ ``_if_metageneration_not_match``.",
            "type": "integer"
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. UUID is the recommended format, but other formats are still accepted. This request is only idempotent if a ``request_id`` is provided.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "destination_folder_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetStorageLayoutRequest",
      "description": "Request message for GetStorageLayout.\n\nAttributes:\n    name (str):\n        Required. The name of the StorageLayout resource. Format:\n        ``projects/{project}/buckets/{bucket}/storageLayout``\n    prefix (str):\n        An optional prefix used for permission check.\n        It is useful when the caller only has limited\n        permissions under a specific prefix.\n    request_id (str):\n        Optional. A unique identifier for this\n        request. UUID is the recommended format, but\n        other formats are still accepted.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the StorageLayout resource. Format: ``projects/{project}/buckets/{bucket}/storageLayout``",
            "type": "string"
          },
          "prefix": {
            "description": "An optional prefix used for permission check. It is useful when the caller only has limited permissions under a specific prefix.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. UUID is the recommended format, but other formats are still accepted.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetManagedFolderRequest",
      "description": "Request message for GetManagedFolder.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Required. Name of the managed folder. Format:\n        ``projects/{project}/buckets/{bucket}/managedFolders/{managedFolder}``\n    if_metageneration_match (int):\n        The operation succeeds conditional on the\n        managed folder's current metageneration matching\n        the value here specified.\n\n        This field is a member of `oneof`_ ``_if_metageneration_match``.\n    if_metageneration_not_match (int):\n        The operation succeeds conditional on the\n        managed folder's current metageneration NOT\n        matching the value here specified.\n\n        This field is a member of `oneof`_ ``_if_metageneration_not_match``.\n    request_id (str):\n        Optional. A unique identifier for this\n        request. UUID is the recommended format, but\n        other formats are still accepted.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the managed folder. Format: ``projects/{project}/buckets/{bucket}/managedFolders/{managedFolder}``",
            "type": "string"
          },
          "if_metageneration_match": {
            "description": "The operation succeeds conditional on the managed folder's current metageneration matching the value here specified.  This field is a member of `oneof`_ ``_if_metageneration_match``.",
            "type": "integer"
          },
          "if_metageneration_not_match": {
            "description": "The operation succeeds conditional on the managed folder's current metageneration NOT matching the value here specified.  This field is a member of `oneof`_ ``_if_metageneration_not_match``.",
            "type": "integer"
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. UUID is the recommended format, but other formats are still accepted.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateManagedFolderRequest",
      "description": "Request message for CreateManagedFolder.\n\nAttributes:\n    parent (str):\n        Required. Name of the bucket this managed\n        folder belongs to.\n    managed_folder (google.cloud.storage_control_v2.types.ManagedFolder):\n        Required. Properties of the managed folder being created.\n        The bucket and managed folder names are specified in the\n        ``parent`` and ``managed_folder_id`` fields. Populating\n        these fields in ``managed_folder`` will result in an error.\n    managed_folder_id (str):\n        Required. The name of the managed folder. It uses a single\n        ``/`` as delimiter and leading and trailing ``/`` are\n        allowed.\n    request_id (str):\n        Optional. A unique identifier for this\n        request. UUID is the recommended format, but\n        other formats are still accepted.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Name of the bucket this managed folder belongs to.",
            "type": "string"
          },
          "managed_folder": {
            "description": "Required. Properties of the managed folder being created. The bucket and managed folder names are specified in the ``parent`` and ``managed_folder_id`` fields. Populating these fields in ``managed_folder`` will result in an error.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Identifier. The name of this managed folder. Format: ``projects/{project}/buckets/{bucket}/managedFolders/{managedFolder}``",
                "type": "string"
              },
              "metageneration": {
                "description": "Output only. The metadata version of this managed folder. It increases whenever the metadata is updated. Used for preconditions and for detecting changes in metadata. Managed folders don't have a generation number.",
                "type": "integer"
              },
              "create_time": {
                "description": "Output only. The creation time of the managed folder.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The modification time of the managed folder.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              }
            }
          },
          "managed_folder_id": {
            "description": "Required. The name of the managed folder. It uses a single ``/`` as delimiter and leading and trailing ``/`` are allowed.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. UUID is the recommended format, but other formats are still accepted.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "managed_folder",
          "managed_folder_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteManagedFolderRequest",
      "description": "DeleteManagedFolder RPC request message.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Required. Name of the managed folder. Format:\n        ``projects/{project}/buckets/{bucket}/managedFolders/{managedFolder}``\n    if_metageneration_match (int):\n        The operation succeeds conditional on the\n        managed folder's current metageneration matching\n        the value here specified.\n\n        This field is a member of `oneof`_ ``_if_metageneration_match``.\n    if_metageneration_not_match (int):\n        The operation succeeds conditional on the\n        managed folder's current metageneration NOT\n        matching the value here specified.\n\n        This field is a member of `oneof`_ ``_if_metageneration_not_match``.\n    allow_non_empty (bool):\n        Allows deletion of a managed folder even if\n        it is not empty. A managed folder is empty if it\n        manages no child managed folders or objects.\n        Cal",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the managed folder. Format: ``projects/{project}/buckets/{bucket}/managedFolders/{managedFolder}``",
            "type": "string"
          },
          "if_metageneration_match": {
            "description": "The operation succeeds conditional on the managed folder's current metageneration matching the value here specified.  This field is a member of `oneof`_ ``_if_metageneration_match``.",
            "type": "integer"
          },
          "if_metageneration_not_match": {
            "description": "The operation succeeds conditional on the managed folder's current metageneration NOT matching the value here specified.  This field is a member of `oneof`_ ``_if_metageneration_not_match``.",
            "type": "integer"
          },
          "allow_non_empty": {
            "description": "Allows deletion of a managed folder even if it is not empty. A managed folder is empty if it manages no child managed folders or objects. Caller must have permission for storage.managedFolders.setIamPolicy.",
            "type": "boolean"
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. UUID is the recommended format, but other formats are still accepted.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListManagedFoldersRequest",
      "description": "Request message for ListManagedFolders.\n\nAttributes:\n    parent (str):\n        Required. Name of the bucket this managed\n        folder belongs to.\n    page_size (int):\n        Optional. Maximum number of managed folders\n        to return in a single response. The service will\n        use this parameter or 1,000 items, whichever is\n        smaller.\n    page_token (str):\n        Optional. A previously-returned page token\n        representing part of the larger set of results\n        to view.\n    prefix (str):\n        Optional. Filter results to match managed\n        folders with name starting with this prefix.\n    request_id (str):\n        Optional. A unique identifier for this\n        request. UUID is the recommended format, but\n        other formats are still accepted.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Name of the bucket this managed folder belongs to.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. Maximum number of managed folders to return in a single response. The service will use this parameter or 1,000 items, whichever is smaller.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A previously-returned page token representing part of the larger set of results to view.",
            "type": "string"
          },
          "prefix": {
            "description": "Optional. Filter results to match managed folders with name starting with this prefix.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. UUID is the recommended format, but other formats are still accepted.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ]
}