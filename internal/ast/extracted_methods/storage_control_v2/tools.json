{
  "StorageControl": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_folder",
          "description": "Creates a new folder. This operation is only\napplicable to a hierarchical namespace enabled bucket.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import storage_control_v2\n\n    async def sample_create_folder():\n        # Create a client\n        client = storage_control_v2.StorageControlAsyncClient()\n\n        # Initialize request argument(s)\n        request = storage_control_v2.CreateFolderRequest(\n            parent=\"parent_value\",\n            folder_id=\"folder_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_folder(request=request)\n\n        # Handle the response\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the bucket in which the folder will reside. The bucket must be a hierarchical namespace enabled bucket.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "folder": {
                "type": "google.cloud.storage_control_v2.types.Folder",
                "description": "Required. Properties of the new folder being created. The bucket and name of the folder are specified in the parent and folder_id fields, respectively. Populating those fields in ``folder`` will result in an error.  This corresponds to the ``folder`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "folder_id": {
                "type": "str",
                "description": "Required. The full name of a folder, including all its parent folders. Folders use single '/' characters as a delimiter. The folder_id must end with a slash. For example, the folder_id of \"books/biographies/\" would create a new \"biographies/\" folder under the \"books/\" folder.  This corresponds to the ``folder_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.storage_control_v2.types.Folder: A folder resource. This resource can only exist in a hierarchical namespace enabled bucket."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "folder",
              "folder_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.storage_control_v2.types.Folder"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_folder",
          "description": "Permanently deletes an empty folder. This operation\nis only applicable to a hierarchical namespace enabled\nbucket.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import storage_control_v2\n\n    async def sample_delete_folder():\n        # Create a client\n        client = storage_control_v2.StorageControlAsyncClient()\n\n        # Initialize request argument(s)\n        request = storage_control_v2.DeleteFolderRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_folder(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.storage_control_v2.types",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the folder. Format: ``projects/{project}/buckets/{bucket}/folders/{folder}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_folder",
          "description": "Returns metadata for the specified folder. This\noperation is only applicable to a hierarchical namespace\nenabled bucket.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import storage_control_v2\n\n    async def sample_get_folder():\n        # Create a client\n        client = storage_control_v2.StorageControlAsyncClient()\n\n        # Initialize request argument(s)\n        request = storage_control_v2.GetFolderRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_folder(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the folder. Format: ``projects/{project}/buckets/{bucket}/folders/{folder}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.storage_control_v2.types.Folder: A folder resource. This resource can only exist in a hierarchical namespace enabled bucket."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.storage_control_v2.types.Folder"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_folders",
          "description": "Retrieves a list of folders. This operation is only\napplicable to a hierarchical namespace enabled bucket.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import storage_control_v2\n\n    async def sample_list_folders():\n        # Create a client\n        client = storage_control_v2.StorageControlAsyncClient()\n\n        # Initialize request argument(s)\n        request = storage_control_v2.ListFoldersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_folders(request=request)\n\n        # Handle the response\n        async for response in page_resul",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the bucket in which to look for folders. The bucket must be a hierarchical namespace enabled bucket.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.storage_control_v2.services.storage_control.pagers.ListFoldersAsyncPager: Response message for ListFolders.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.storage_control_v2.services.storage_control.pagers.ListFoldersAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "rename_folder",
          "description": "Renames a source folder to a destination folder. This\noperation is only applicable to a hierarchical namespace\nenabled bucket. During a rename, the source and\ndestination folders are locked until the long running\noperation completes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import storage_control_v2\n\n    async def sample_rename_folder():\n        # Create a client\n        client = storage_control_v2.StorageControlAsyncClient()\n\n        # Initialize request argument(s)\n        request = storage_control_v2.RenameFolderRequest(\n            name=\"name_value\",\n            destination_folder_id=\"destinat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the source folder being renamed. Format: ``projects/{project}/buckets/{bucket}/folders/{folder}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "destination_folder_id": {
                "type": "str",
                "description": "Required. The destination folder ID, e.g. ``foo/bar/``. This corresponds to the ``destination_folder_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.storage_control_v2.types.Folder` A folder resource. This resource can only exist in a hierarchical namespace enabled bucket."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "destination_folder_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_storage_layout",
          "description": "Returns the storage layout configuration for a given\nbucket.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import storage_control_v2\n\n    async def sample_get_storage_layout():\n        # Create a client\n        client = storage_control_v2.StorageControlAsyncClient()\n\n        # Initialize request argument(s)\n        request = storage_control_v2.GetStorageLayoutRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_storage_layout(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.clou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the StorageLayout resource. Format: ``projects/{project}/buckets/{bucket}/storageLayout``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.storage_control_v2.types.StorageLayout: The storage layout configuration of a bucket."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.storage_control_v2.types.StorageLayout"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_managed_folder",
          "description": "Creates a new managed folder.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import storage_control_v2\n\n    async def sample_create_managed_folder():\n        # Create a client\n        client = storage_control_v2.StorageControlAsyncClient()\n\n        # Initialize request argument(s)\n        request = storage_control_v2.CreateManagedFolderRequest(\n            parent=\"parent_value\",\n            managed_folder_id=\"managed_folder_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_managed_folder(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the bucket this managed folder belongs to.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "managed_folder": {
                "type": "google.cloud.storage_control_v2.types.ManagedFolder",
                "description": "Required. Properties of the managed folder being created. The bucket and managed folder names are specified in the ``parent`` and ``managed_folder_id`` fields. Populating these fields in ``managed_folder`` will result in an error.  This corresponds to the ``managed_folder`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "managed_folder_id": {
                "type": "str",
                "description": "Required. The name of the managed folder. It uses a single ``/`` as delimiter and leading and trailing ``/`` are allowed.  This corresponds to the ``managed_folder_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.storage_control_v2.types.ManagedFolder: A managed folder."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "managed_folder",
              "managed_folder_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.storage_control_v2.types.ManagedFolder"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_managed_folder",
          "description": "Permanently deletes an empty managed folder.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import storage_control_v2\n\n    async def sample_delete_managed_folder():\n        # Create a client\n        client = storage_control_v2.StorageControlAsyncClient()\n\n        # Initialize request argument(s)\n        request = storage_control_v2.DeleteManagedFolderRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_managed_folder(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.storage_control_v2.types.DeleteManagedFolderRequest, dict]]):\n        T",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the managed folder. Format: ``projects/{project}/buckets/{bucket}/managedFolders/{managedFolder}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_managed_folder",
          "description": "Returns metadata for the specified managed folder.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import storage_control_v2\n\n    async def sample_get_managed_folder():\n        # Create a client\n        client = storage_control_v2.StorageControlAsyncClient()\n\n        # Initialize request argument(s)\n        request = storage_control_v2.GetManagedFolderRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_managed_folder(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.storage_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the managed folder. Format: ``projects/{project}/buckets/{bucket}/managedFolders/{managedFolder}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.storage_control_v2.types.ManagedFolder: A managed folder."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.storage_control_v2.types.ManagedFolder"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_managed_folders",
          "description": "Retrieves a list of managed folders for a given\nbucket.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import storage_control_v2\n\n    async def sample_list_managed_folders():\n        # Create a client\n        client = storage_control_v2.StorageControlAsyncClient()\n\n        # Initialize request argument(s)\n        request = storage_control_v2.ListManagedFoldersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_managed_folders(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the bucket this managed folder belongs to.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.storage_control_v2.services.storage_control.pagers.ListManagedFoldersAsyncPager: Response message for ListManagedFolders. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.storage_control_v2.services.storage_control.pagers.ListManagedFoldersAsyncPager"
          ]
        }
      }
    ]
  }
}