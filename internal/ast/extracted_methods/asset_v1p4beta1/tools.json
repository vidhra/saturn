{
  "AssetService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "analyze_iam_policy",
          "description": "Analyzes IAM policies based on the specified request. Returns a\nlist of\n[IamPolicyAnalysisResult][google.cloud.asset.v1p4beta1.IamPolicyAnalysisResult]\nmatching the request.\n\n.. code-block:: python\n\n    from google.cloud import asset_v1p4beta1\n\n    async def sample_analyze_iam_policy():\n        # Create a client\n        client = asset_v1p4beta1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        analysis_query = asset_v1p4beta1.IamPolicyAnalysisQuery()\n        analysis_query.parent = \"parent_value\"\n\n        request = asset_v1p4beta1.AnalyzeIamPolicyRequest(\n            analysis_query=analysis_query,\n        )\n\n        # Make the request\n        response = await client.analyze_iam_policy(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Union[google.cloud.asset_v1p4beta1.types.AnalyzeIamPolicyRequest, dict]):\n        The request object. A request message for\n        [AssetService.AnalyzeIamPolicy][google.cloud.asset.v1p4beta1.AssetService.Analyz",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_iam_policy_analysis",
          "description": "Exports IAM policy analysis based on the specified request. This\nAPI implements the\n[google.longrunning.Operation][google.longrunning.Operation] API\nallowing you to keep track of the export. The metadata contains\nthe request to help callers to map responses to requests.\n\n.. code-block:: python\n\n    from google.cloud import asset_v1p4beta1\n\n    async def sample_export_iam_policy_analysis():\n        # Create a client\n        client = asset_v1p4beta1.AssetServiceAsyncClient()\n\n        # Initialize request argument(s)\n        analysis_query = asset_v1p4beta1.IamPolicyAnalysisQuery()\n        analysis_query.parent = \"parent_value\"\n\n        output_config = asset_v1p4beta1.IamPolicyAnalysisOutputConfig()\n        output_config.gcs_destination.uri = \"uri_value\"\n\n        request = asset_v1p4beta1.ExportIamPolicyAnalysisRequest(\n            analysis_query=analysis_query,\n            output_config=output_config,\n        )\n\n        # Make the request\n        operation = client.export_iam_policy_analysis(request=request)\n\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}