{
  "Domains": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "search_domains",
          "description": "Searches for available domain names similar to the provided\nquery.\n\nAvailability results from this method are approximate; call\n``RetrieveRegisterParameters`` on a domain before registering to\nconfirm availability.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_search_domains():\n        # Create a client\n        client = domains_v1beta1.DomainsAsyncClient()\n\n        # Initialize request argument(s)\n        request = domains_v1beta1.SearchDomainsRequest(\n            query=\"query_value\",\n            location=\"location_value\",\n        )\n\n        # Make the reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "location": {
                "type": "str",
                "description": "Required. The location. Must be in the format ``projects/*/locations/*``.  This corresponds to the ``location`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query": {
                "type": "str",
                "description": "Required. String used to search for available domain names.  This corresponds to the ``query`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.domains_v1beta1.types.SearchDomainsResponse: Response for the SearchDomains method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "location",
              "query",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.SearchDomainsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "retrieve_register_parameters",
          "description": "Gets parameters needed to register a new domain name, including\nprice and up-to-date availability. Use the returned values to\ncall ``RegisterDomain``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_retrieve_register_parameters():\n        # Create a client\n        client = domains_v1beta1.DomainsAsyncClient()\n\n        # Initialize request argument(s)\n        request = domains_v1beta1.RetrieveRegisterParametersRequest(\n            domain_name=\"domain_name_value\",\n            location=\"location_value\",\n        )\n\n        # Make the request\n        response = awa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "location": {
                "type": "str",
                "description": "Required. The location. Must be in the format ``projects/*/locations/*``.  This corresponds to the ``location`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "domain_name": {
                "type": "str",
                "description": "Required. The domain name. Unicode domain names must be expressed in Punycode format.  This corresponds to the ``domain_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.domains_v1beta1.types.RetrieveRegisterParametersResponse: Response for the RetrieveRegisterParameters method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "location",
              "domain_name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.RetrieveRegisterParametersRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "register_domain",
          "description": "Registers a new domain name and creates a corresponding\n``Registration`` resource.\n\nCall ``RetrieveRegisterParameters`` first to check availability\nof the domain name and determine parameters like price that are\nneeded to build a call to this method.\n\nA successful call creates a ``Registration`` resource in state\n``REGISTRATION_PENDING``, which resolves to ``ACTIVE`` within\n1-2 minutes, indicating that the domain was successfully\nregistered. If the resource ends up in state\n``REGISTRATION_FAILED``, it indicates that the domain was not\nregistered successfully, and you can safely delete the resource\nand retry registration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the ``Registration``. Must be in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "registration": {
                "type": "google.cloud.domains_v1beta1.types.Registration",
                "description": "Required. The complete ``Registration`` resource to be created.  This corresponds to the ``registration`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "yearly_price": {
                "type": "google.type.money_pb2.Money",
                "description": "Required. Yearly price to register or renew the domain. The value that should be put here can be obtained from RetrieveRegisterParameters or SearchDomains calls.  This corresponds to the ``yearly_price`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.domains_v1beta1.types.Registration` The Registration resource facilitates managing and configuring domain name registrations.  There are several ways to create a new Registration resource:  To create a new Registration resource, find a suitable domain name by calling the SearchDomains method with a query to see available domain name options. After choosing a name, call RetrieveRegisterParameters to ensure availability and obtain information like pricing, which is needed to build a call to RegisterDomain.  Another way to create a new Registration is to transfer an existing domain from another registrar. First, go to the current registrar to unlock the domain for transfer and retrieve the domain's transfer authorization code. Then call RetrieveTransferParameters to confirm that the domain is unlocked and to get values needed to build a call to TransferDomain."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "registration",
              "yearly_price",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.RegisterDomainRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "retrieve_transfer_parameters",
          "description": "Gets parameters needed to transfer a domain name from another\nregistrar to Cloud Domains. For domains managed by Google\nDomains, transferring to Cloud Domains is not supported.\n\nUse the returned values to call ``TransferDomain``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_retrieve_transfer_parameters():\n        # Create a client\n        client = domains_v1beta1.DomainsAsyncClient()\n\n        # Initialize request argument(s)\n        request = domains_v1beta1.RetrieveTransferParametersRequest(\n            domain_name=\"domain_name_value\",\n            location",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "location": {
                "type": "str",
                "description": "Required. The location. Must be in the format ``projects/*/locations/*``.  This corresponds to the ``location`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "domain_name": {
                "type": "str",
                "description": "Required. The domain name. Unicode domain names must be expressed in Punycode format.  This corresponds to the ``domain_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.domains_v1beta1.types.RetrieveTransferParametersResponse: Response for the RetrieveTransferParameters method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "location",
              "domain_name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.RetrieveTransferParametersRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "transfer_domain",
          "description": "Transfers a domain name from another registrar to Cloud Domains.\nFor domains managed by Google Domains, transferring to Cloud\nDomains is not supported.\n\nBefore calling this method, go to the domain's current registrar\nto unlock the domain for transfer and retrieve the domain's\ntransfer authorization code. Then call\n``RetrieveTransferParameters`` to confirm that the domain is\nunlocked and to get values needed to build a call to this\nmethod.\n\nA successful call creates a ``Registration`` resource in state\n``TRANSFER_PENDING``. It can take several days to complete the\ntransfer process. The registrant can often speed up this process\nby approving the transfer through the current registrar, either\nby clicking a link in an email from the registrar or by visiting\nthe registrar's website.\n\nA few minutes after transfer approval, the resource transitions\nto state ``ACTIVE``, indicating that the transfer was\nsuccessful. If the transfer is rejected or the request expires\nwithout being approved, the resource can end up in s",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the ``Registration``. Must be in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "registration": {
                "type": "google.cloud.domains_v1beta1.types.Registration",
                "description": "Required. The complete ``Registration`` resource to be created.  You can leave ``registration.dns_settings`` unset to import the domain's current DNS configuration from its current registrar. Use this option only if you are sure that the domain's current DNS service does not cease upon transfer, as is often the case for DNS services provided for free by the registrar.  This corresponds to the ``registration`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "yearly_price": {
                "type": "google.type.money_pb2.Money",
                "description": "Required. Acknowledgement of the price to transfer or renew the domain for one year. Call ``RetrieveTransferParameters`` to obtain the price, which you must acknowledge.  This corresponds to the ``yearly_price`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "authorization_code": {
                "type": "google.cloud.domains_v1beta1.types.AuthorizationCode",
                "description": "The domain's transfer authorization code. You can obtain this from the domain's current registrar.  This corresponds to the ``authorization_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.domains_v1beta1.types.Registration` The Registration resource facilitates managing and configuring domain name registrations.  There are several ways to create a new Registration resource:  To create a new Registration resource, find a suitable domain name by calling the SearchDomains method with a query to see available domain name options. After choosing a name, call RetrieveRegisterParameters to ensure availability and obtain information like pricing, which is needed to build a call to RegisterDomain.  Another way to create a new Registration is to transfer an existing domain from another registrar. First, go to the current registrar to unlock the domain for transfer and retrieve the domain's transfer authorization code. Then call RetrieveTransferParameters to confirm that the domain is unlocked and to get values needed to build a call to TransferDomain."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "registration",
              "yearly_price",
              "authorization_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.TransferDomainRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_registrations",
          "description": "Lists the ``Registration`` resources in a project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_list_registrations():\n        # Create a client\n        client = domains_v1beta1.DomainsAsyncClient()\n\n        # Initialize request argument(s)\n        request = domains_v1beta1.ListRegistrationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_registrations(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Opt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location from which to list ``Registration``\\ s, specified in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.domains_v1beta1.services.domains.pagers.ListRegistrationsAsyncPager: Response for the ListRegistrations method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.ListRegistrationsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_registration",
          "description": "Gets the details of a ``Registration`` resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_get_registration():\n        # Create a client\n        client = domains_v1beta1.DomainsAsyncClient()\n\n        # Initialize request argument(s)\n        request = domains_v1beta1.GetRegistrationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_registration(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.domains_v1beta1.types.GetRegist",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``Registration`` to get, in the format ``projects/*/locations/*/registrations/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.domains_v1beta1.types.Registration: The Registration resource facilitates managing and configuring domain name registrations.  There are several ways to create a new Registration resource:  To create a new Registration resource, find a suitable domain name by calling the SearchDomains method with a query to see available domain name options. After choosing a name, call RetrieveRegisterParameters to ensure availability and obtain information like pricing, which is needed to build a call to RegisterDomain.  Another way to create a new Registration is to transfer an existing domain from another registrar. First, go to the current registrar to unlock the domain for transfer and retrieve the domain's transfer authorization code. Then call RetrieveTransferParameters to confirm that the domain is unlocked and to get values needed to build a call to TransferDomain."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.GetRegistrationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_registration",
          "description": "Updates select fields of a ``Registration`` resource, notably\n``labels``. To update other fields, use the appropriate custom\nupdate method:\n\n-  To update management settings, see\n   ``ConfigureManagementSettings``\n-  To update DNS configuration, see ``ConfigureDnsSettings``\n-  To update contact information, see\n   ``ConfigureContactSettings``\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_update_registration():\n        # Create a client\n        client = domains_v1beta1.DomainsAsyncClient()\n\n        # Initialize request argument(s)\n        request = domains_v1",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "registration": {
                "type": "google.cloud.domains_v1beta1.types.Registration",
                "description": "Fields of the ``Registration`` to update. This corresponds to the ``registration`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The field mask describing which fields to update as a comma-separated list. For example, if only the labels are being updated, the ``update_mask`` is ``\"labels\"``.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.domains_v1beta1.types.Registration` The Registration resource facilitates managing and configuring domain name registrations.  There are several ways to create a new Registration resource:  To create a new Registration resource, find a suitable domain name by calling the SearchDomains method with a query to see available domain name options. After choosing a name, call RetrieveRegisterParameters to ensure availability and obtain information like pricing, which is needed to build a call to RegisterDomain.  Another way to create a new Registration is to transfer an existing domain from another registrar. First, go to the current registrar to unlock the domain for transfer and retrieve the domain's transfer authorization code. Then call RetrieveTransferParameters to confirm that the domain is unlocked and to get values needed to build a call to TransferDomain."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "registration",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.UpdateRegistrationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "configure_management_settings",
          "description": "Updates a ``Registration``'s management settings.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_configure_management_settings():\n        # Create a client\n        client = domains_v1beta1.DomainsAsyncClient()\n\n        # Initialize request argument(s)\n        request = domains_v1beta1.ConfigureManagementSettingsRequest(\n            registration=\"registration_value\",\n        )\n\n        # Make the request\n        operation = client.configure_management_settings(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "registration": {
                "type": "str",
                "description": "Required. The name of the ``Registration`` whose management settings are being updated, in the format ``projects/*/locations/*/registrations/*``.  This corresponds to the ``registration`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "management_settings": {
                "type": "google.cloud.domains_v1beta1.types.ManagementSettings",
                "description": "Fields of the ``ManagementSettings`` to update. This corresponds to the ``management_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The field mask describing which fields to update as a comma-separated list. For example, if only the transfer lock is being updated, the ``update_mask`` is ``\"transfer_lock_state\"``.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.domains_v1beta1.types.Registration` The Registration resource facilitates managing and configuring domain name registrations.  There are several ways to create a new Registration resource:  To create a new Registration resource, find a suitable domain name by calling the SearchDomains method with a query to see available domain name options. After choosing a name, call RetrieveRegisterParameters to ensure availability and obtain information like pricing, which is needed to build a call to RegisterDomain.  Another way to create a new Registration is to transfer an existing domain from another registrar. First, go to the current registrar to unlock the domain for transfer and retrieve the domain's transfer authorization code. Then call RetrieveTransferParameters to confirm that the domain is unlocked and to get values needed to build a call to TransferDomain."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "registration",
              "management_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.ConfigureManagementSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "configure_dns_settings",
          "description": "Updates a ``Registration``'s DNS settings.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_configure_dns_settings():\n        # Create a client\n        client = domains_v1beta1.DomainsAsyncClient()\n\n        # Initialize request argument(s)\n        request = domains_v1beta1.ConfigureDnsSettingsRequest(\n            registration=\"registration_value\",\n        )\n\n        # Make the request\n        operation = client.configure_dns_settings(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        #",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "registration": {
                "type": "str",
                "description": "Required. The name of the ``Registration`` whose DNS settings are being updated, in the format ``projects/*/locations/*/registrations/*``.  This corresponds to the ``registration`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "dns_settings": {
                "type": "google.cloud.domains_v1beta1.types.DnsSettings",
                "description": "Fields of the ``DnsSettings`` to update. This corresponds to the ``dns_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The field mask describing which fields to update as a comma-separated list. For example, if only the name servers are being updated for an existing Custom DNS configuration, the ``update_mask`` is ``\"custom_dns.name_servers\"``.  When changing the DNS provider from one type to another, pass the new provider's field name as part of the field mask. For example, when changing from a Google Domains DNS configuration to a Custom DNS configuration, the ``update_mask`` is ``\"custom_dns\"``. //  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.domains_v1beta1.types.Registration` The Registration resource facilitates managing and configuring domain name registrations.  There are several ways to create a new Registration resource:  To create a new Registration resource, find a suitable domain name by calling the SearchDomains method with a query to see available domain name options. After choosing a name, call RetrieveRegisterParameters to ensure availability and obtain information like pricing, which is needed to build a call to RegisterDomain.  Another way to create a new Registration is to transfer an existing domain from another registrar. First, go to the current registrar to unlock the domain for transfer and retrieve the domain's transfer authorization code. Then call RetrieveTransferParameters to confirm that the domain is unlocked and to get values needed to build a call to TransferDomain."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "registration",
              "dns_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.ConfigureDnsSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "configure_contact_settings",
          "description": "Updates a ``Registration``'s contact settings. Some changes\nrequire confirmation by the domain's registrant contact .\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_configure_contact_settings():\n        # Create a client\n        client = domains_v1beta1.DomainsAsyncClient()\n\n        # Initialize request argument(s)\n        request = domains_v1beta1.ConfigureContactSettingsRequest(\n            registration=\"registration_value\",\n        )\n\n        # Make the request\n        operation = client.configure_contact_settings(request=request)\n\n        print(\"Waiting f",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "registration": {
                "type": "str",
                "description": "Required. The name of the ``Registration`` whose contact settings are being updated, in the format ``projects/*/locations/*/registrations/*``.  This corresponds to the ``registration`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "contact_settings": {
                "type": "google.cloud.domains_v1beta1.types.ContactSettings",
                "description": "Fields of the ``ContactSettings`` to update. This corresponds to the ``contact_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The field mask describing which fields to update as a comma-separated list. For example, if only the registrant contact is being updated, the ``update_mask`` is ``\"registrant_contact\"``.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.domains_v1beta1.types.Registration` The Registration resource facilitates managing and configuring domain name registrations.  There are several ways to create a new Registration resource:  To create a new Registration resource, find a suitable domain name by calling the SearchDomains method with a query to see available domain name options. After choosing a name, call RetrieveRegisterParameters to ensure availability and obtain information like pricing, which is needed to build a call to RegisterDomain.  Another way to create a new Registration is to transfer an existing domain from another registrar. First, go to the current registrar to unlock the domain for transfer and retrieve the domain's transfer authorization code. Then call RetrieveTransferParameters to confirm that the domain is unlocked and to get values needed to build a call to TransferDomain."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "registration",
              "contact_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.ConfigureContactSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_registration",
          "description": "Exports a ``Registration`` resource, such that it is no longer\nmanaged by Cloud Domains.\n\nWhen an active domain is successfully exported, you can continue\nto use the domain in `Google\nDomains <https://domains.google/>`__ until it expires. The\ncalling user becomes the domain's sole owner in Google Domains,\nand permissions for the domain are subsequently managed there.\nThe domain does not renew automatically unless the new owner\nsets up billing in Google Domains.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_export_registration():\n        # Create a client\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``Registration`` to export, in the format ``projects/*/locations/*/registrations/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.domains_v1beta1.types.Registration` The Registration resource facilitates managing and configuring domain name registrations.  There are several ways to create a new Registration resource:  To create a new Registration resource, find a suitable domain name by calling the SearchDomains method with a query to see available domain name options. After choosing a name, call RetrieveRegisterParameters to ensure availability and obtain information like pricing, which is needed to build a call to RegisterDomain.  Another way to create a new Registration is to transfer an existing domain from another registrar. First, go to the current registrar to unlock the domain for transfer and retrieve the domain's transfer authorization code. Then call RetrieveTransferParameters to confirm that the domain is unlocked and to get values needed to build a call to TransferDomain."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.ExportRegistrationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_registration",
          "description": "Deletes a ``Registration`` resource.\n\nThis method works on any ``Registration`` resource using\n`Subscription or Commitment\nbilling </domains/pricing#billing-models>`__, provided that the\nresource was created at least 1 day in the past.\n\nFor ``Registration`` resources using `Monthly\nbilling </domains/pricing#billing-models>`__, this method works\nif:\n\n-  ``state`` is ``EXPORTED`` with ``expire_time`` in the past\n-  ``state`` is ``REGISTRATION_FAILED``\n-  ``state`` is ``TRANSFER_FAILED``\n\nWhen an active registration is successfully deleted, you can\ncontinue to use the domain in `Google\nDomains <https://domains.google/>`__ until it expires. The\ncalling user becomes the domain's sole owner in Google Domains,\nand permissions for the domain are subsequently managed there.\nThe domain does not renew automatically unless the new owner\nsets up billing in Google Domains.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``Registration`` to delete, in the format ``projects/*/locations/*/registrations/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.DeleteRegistrationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "retrieve_authorization_code",
          "description": "Gets the authorization code of the ``Registration`` for the\npurpose of transferring the domain to another registrar.\n\nYou can call this method only after 60 days have elapsed since\nthe initial domain registration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_retrieve_authorization_code():\n        # Create a client\n        client = domains_v1beta1.DomainsAsyncClient()\n\n        # Initialize request argument(s)\n        request = domains_v1beta1.RetrieveAuthorizationCodeRequest(\n            registration=\"registration_value\",\n        )\n\n        # Make the reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "registration": {
                "type": "str",
                "description": "Required. The name of the ``Registration`` whose authorization code is being retrieved, in the format ``projects/*/locations/*/registrations/*``.  This corresponds to the ``registration`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.domains_v1beta1.types.AuthorizationCode: Defines an authorization code."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "registration",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.RetrieveAuthorizationCodeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reset_authorization_code",
          "description": "Resets the authorization code of the ``Registration`` to a new\nrandom string.\n\nYou can call this method only after 60 days have elapsed since\nthe initial domain registration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import domains_v1beta1\n\n    async def sample_reset_authorization_code():\n        # Create a client\n        client = domains_v1beta1.DomainsAsyncClient()\n\n        # Initialize request argument(s)\n        request = domains_v1beta1.ResetAuthorizationCodeRequest(\n            registration=\"registration_value\",\n        )\n\n        # Make the request\n        response = await client.reset_autho",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "registration": {
                "type": "str",
                "description": "Required. The name of the ``Registration`` whose authorization code is being reset, in the format ``projects/*/locations/*/registrations/*``.  This corresponds to the ``registration`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.domains_v1beta1.types.AuthorizationCode: Defines an authorization code."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "registration",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "domains.ResetAuthorizationCodeRequest"
          ]
        }
      }
    ]
  }
}