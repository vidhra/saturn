{
  "CompanyService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_company",
          "description": "Creates a new company entity.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_create_company():\n        # Create a client\n        client = talent_v4beta1.CompanyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        company = talent_v4beta1.Company()\n        company.display_name = \"display_name_value\"\n        company.external_id = \"external_id_value\"\n\n        request = talent_v4beta1.CreateCompanyRequest(\n            parent=\"parent_value\",\n            company=company,\n        )\n\n        # Make the request\n        response = await client.create_c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the tenant under which the company is created.  The format is \"projects/{project_id}/tenants/{tenant_id}\", for example, \"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant is created, for example, \"projects/foo\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "company": {
                "type": "google.cloud.talent_v4beta1.types.Company",
                "description": "Required. The company to be created. This corresponds to the ``company`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.types.Company: A Company resource represents a company in the service. A company is the entity that owns job postings, that is, the hiring entity responsible for employing applicants for the job position."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "company",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "company_service.CreateCompanyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_company",
          "description": "Retrieves specified company.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_get_company():\n        # Create a client\n        client = talent_v4beta1.CompanyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.GetCompanyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_company(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.talent_v4beta1.types.GetCompanyRequest, dict]]):\n        The r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the company to be retrieved.  The format is \"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\", for example, \"projects/api-test-project/tenants/foo/companies/bar\".  If tenant id is unspecified, the default tenant is used, for example, \"projects/api-test-project/companies/bar\".  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.types.Company: A Company resource represents a company in the service. A company is the entity that owns job postings, that is, the hiring entity responsible for employing applicants for the job position."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "company_service.GetCompanyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_company",
          "description": "Updates specified company.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_update_company():\n        # Create a client\n        client = talent_v4beta1.CompanyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        company = talent_v4beta1.Company()\n        company.display_name = \"display_name_value\"\n        company.external_id = \"external_id_value\"\n\n        request = talent_v4beta1.UpdateCompanyRequest(\n            company=company,\n        )\n\n        # Make the request\n        response = await client.update_company(request=request)\n\n        # Han",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "company": {
                "type": "google.cloud.talent_v4beta1.types.Company",
                "description": "Required. The company resource to replace the current resource in the system.  This corresponds to the ``company`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.types.Company: A Company resource represents a company in the service. A company is the entity that owns job postings, that is, the hiring entity responsible for employing applicants for the job position."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "company",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "company_service.UpdateCompanyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_company",
          "description": "Deletes specified company.\nPrerequisite: The company has no jobs associated with\nit.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_delete_company():\n        # Create a client\n        client = talent_v4beta1.CompanyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.DeleteCompanyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_company(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.talent_v4beta1.types.DeleteCompanyRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the company to be deleted.  The format is \"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\", for example, \"projects/foo/tenants/bar/companies/baz\".  If tenant id is unspecified, the default tenant is used, for example, \"projects/foo/companies/bar\".  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "company_service.DeleteCompanyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_companies",
          "description": "Lists all companies associated with the project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_list_companies():\n        # Create a client\n        client = talent_v4beta1.CompanyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.ListCompaniesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_companies(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Unio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the tenant under which the company is created.  The format is \"projects/{project_id}/tenants/{tenant_id}\", for example, \"projects/foo/tenant/bar\".  If tenant id is unspecified, the default tenant will be used, for example, \"projects/foo\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.services.company_service.pagers.ListCompaniesAsyncPager: The List companies response object.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "company_service.ListCompaniesRequest"
          ]
        }
      }
    ]
  },
  "Completion": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "complete_query",
          "description": "Completes the specified prefix with keyword\nsuggestions. Intended for use by a job search\nauto-complete search box.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_complete_query():\n        # Create a client\n        client = talent_v4beta1.CompletionAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.CompleteQueryRequest(\n            parent=\"parent_value\",\n            query=\"query_value\",\n            page_size=951,\n        )\n\n        # Make the request\n        response = await client.complete_query(request=request)\n\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "completion_service.CompleteQueryRequest"
          ]
        }
      }
    ]
  },
  "EventService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_client_event",
          "description": "Report events issued when end user interacts with customer's\napplication that uses Cloud Talent Solution. You may inspect the\ncreated events in `self service\ntools <https://console.cloud.google.com/talent-solution/overview>`__.\n`Learn\nmore <https://cloud.google.com/talent-solution/docs/management-tools>`__\nabout self service tools.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_create_client_event():\n        # Create a client\n        client = talent_v4beta1.EventServiceAsyncClient()\n\n        # Initialize request argument(s)\n        client_event = talent_v4beta",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the tenant under which the event is created.  The format is \"projects/{project_id}/tenants/{tenant_id}\", for example, \"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant is created, for example, \"projects/foo\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "client_event": {
                "type": "google.cloud.talent_v4beta1.types.ClientEvent",
                "description": "Required. Events issued when end user interacts with customer's application that uses Cloud Talent Solution.  This corresponds to the ``client_event`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.types.ClientEvent: An event issued when an end user interacts with the application that implements Cloud Talent Solution. Providing this information improves the quality of results for the API clients, enabling the service to perform optimally. The number of events sent must be consistent with other calls, such as job searches, issued to the service by the client."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "client_event",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "event_service.CreateClientEventRequest"
          ]
        }
      }
    ]
  },
  "JobService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_job",
          "description": "Creates a new job.\n\nTypically, the job becomes searchable within 10 seconds,\nbut it may take up to 5 minutes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_create_job():\n        # Create a client\n        client = talent_v4beta1.JobServiceAsyncClient()\n\n        # Initialize request argument(s)\n        job = talent_v4beta1.Job()\n        job.company = \"company_value\"\n        job.requisition_id = \"requisition_id_value\"\n        job.title = \"title_value\"\n        job.description = \"description_value\"\n\n        request = talent_v4beta1.CreateJobRequest(\n            pa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the tenant under which the job is created.  The format is \"projects/{project_id}/tenants/{tenant_id}\". For example, \"projects/foo/tenant/bar\". If tenant id is unspecified a default tenant is created. For example, \"projects/foo\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "job": {
                "type": "google.cloud.talent_v4beta1.types.Job",
                "description": "Required. The Job to be created. This corresponds to the ``job`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.types.Job: A Job resource represents a job posting (also referred to as a \"job listing\" or \"job requisition\"). A job belongs to a [Company][google.cloud.talent.v4beta1.Company], which is the hiring entity responsible for the job."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "job",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "job_service.CreateJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_create_jobs",
          "description": "Begins executing a batch create jobs operation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_batch_create_jobs():\n        # Create a client\n        client = talent_v4beta1.JobServiceAsyncClient()\n\n        # Initialize request argument(s)\n        jobs = talent_v4beta1.Job()\n        jobs.company = \"company_value\"\n        jobs.requisition_id = \"requisition_id_value\"\n        jobs.title = \"title_value\"\n        jobs.description = \"description_value\"\n\n        request = talent_v4beta1.BatchCreateJobsRequest(\n            parent=\"parent_value\",\n            jobs=jobs,\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the tenant under which the job is created.  The format is \"projects/{project_id}/tenants/{tenant_id}\". For example, \"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant is created. For example, \"projects/foo\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "jobs": {
                "type": "MutableSequence[google.cloud.talent_v4beta1.types.Job]",
                "description": "Required. The jobs to be created. This corresponds to the ``jobs`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.talent_v4beta1.types.JobOperationResult` The result of [JobService.BatchCreateJobs][google.cloud.talent.v4beta1.JobService.BatchCreateJobs] or [JobService.BatchUpdateJobs][google.cloud.talent.v4beta1.JobService.BatchUpdateJobs] APIs. It's used to replace [google.longrunning.Operation.response][google.longrunning.Operation.response] in case of success."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "jobs",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "job_service.BatchCreateJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_job",
          "description": "Retrieves the specified job, whose status is OPEN or\nrecently EXPIRED within the last 90 days.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_get_job():\n        # Create a client\n        client = talent_v4beta1.JobServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.GetJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.talent_v4bet",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the job to retrieve.  The format is \"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For example, \"projects/foo/tenants/bar/jobs/baz\".  If tenant id is unspecified, the default tenant is used. For example, \"projects/foo/jobs/bar\".  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.types.Job: A Job resource represents a job posting (also referred to as a \"job listing\" or \"job requisition\"). A job belongs to a [Company][google.cloud.talent.v4beta1.Company], which is the hiring entity responsible for the job."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "job_service.GetJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_job",
          "description": "Updates specified job.\n\nTypically, updated contents become visible in search\nresults within 10 seconds, but it may take up to 5\nminutes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_update_job():\n        # Create a client\n        client = talent_v4beta1.JobServiceAsyncClient()\n\n        # Initialize request argument(s)\n        job = talent_v4beta1.Job()\n        job.company = \"company_value\"\n        job.requisition_id = \"requisition_id_value\"\n        job.title = \"title_value\"\n        job.description = \"description_value\"\n\n        request = talent_v4beta1.Updat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "job": {
                "type": "google.cloud.talent_v4beta1.types.Job",
                "description": "Required. The Job to be updated. This corresponds to the ``job`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.types.Job: A Job resource represents a job posting (also referred to as a \"job listing\" or \"job requisition\"). A job belongs to a [Company][google.cloud.talent.v4beta1.Company], which is the hiring entity responsible for the job."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "job",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "job_service.UpdateJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_update_jobs",
          "description": "Begins executing a batch update jobs operation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_batch_update_jobs():\n        # Create a client\n        client = talent_v4beta1.JobServiceAsyncClient()\n\n        # Initialize request argument(s)\n        jobs = talent_v4beta1.Job()\n        jobs.company = \"company_value\"\n        jobs.requisition_id = \"requisition_id_value\"\n        jobs.title = \"title_value\"\n        jobs.description = \"description_value\"\n\n        request = talent_v4beta1.BatchUpdateJobsRequest(\n            parent=\"parent_value\",\n            jobs=jobs,\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the tenant under which the job is created.  The format is \"projects/{project_id}/tenants/{tenant_id}\". For example, \"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant is created. For example, \"projects/foo\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "jobs": {
                "type": "MutableSequence[google.cloud.talent_v4beta1.types.Job]",
                "description": "Required. The jobs to be updated. This corresponds to the ``jobs`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.talent_v4beta1.types.JobOperationResult` The result of [JobService.BatchCreateJobs][google.cloud.talent.v4beta1.JobService.BatchCreateJobs] or [JobService.BatchUpdateJobs][google.cloud.talent.v4beta1.JobService.BatchUpdateJobs] APIs. It's used to replace [google.longrunning.Operation.response][google.longrunning.Operation.response] in case of success."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "jobs",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "job_service.BatchUpdateJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_job",
          "description": "Deletes the specified job.\n\nTypically, the job becomes unsearchable within 10\nseconds, but it may take up to 5 minutes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_delete_job():\n        # Create a client\n        client = talent_v4beta1.JobServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.DeleteJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_job(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.talent_v4beta1.types.DeleteJobRequest, dict]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the job to be deleted.  The format is \"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For example, \"projects/foo/tenants/bar/jobs/baz\".  If tenant id is unspecified, the default tenant is used. For example, \"projects/foo/jobs/bar\".  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "job_service.DeleteJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_delete_jobs",
          "description": "Deletes a list of [Job][google.cloud.talent.v4beta1.Job]s by\nfilter.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_batch_delete_jobs():\n        # Create a client\n        client = talent_v4beta1.JobServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.BatchDeleteJobsRequest(\n            parent=\"parent_value\",\n            filter=\"filter_value\",\n        )\n\n        # Make the request\n        await client.batch_delete_jobs(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.talent_v4beta1.types.BatchDeleteJobs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the tenant under which the job is created.  The format is \"projects/{project_id}/tenants/{tenant_id}\". For example, \"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant is created. For example, \"projects/foo\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Required. The filter string specifies the jobs to be deleted.  Supported operator: =, AND  The fields eligible for filtering are:  -  ``companyName`` (Required) -  ``requisitionId`` (Required)  Sample Query: companyName = \"projects/foo/companies/bar\" AND requisitionId = \"req-1\"  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "job_service.BatchDeleteJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_jobs",
          "description": "Lists jobs by filter.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_list_jobs():\n        # Create a client\n        client = talent_v4beta1.JobServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.ListJobsRequest(\n            parent=\"parent_value\",\n            filter=\"filter_value\",\n        )\n\n        # Make the request\n        page_result = client.list_jobs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the tenant under which the job is created.  The format is \"projects/{project_id}/tenants/{tenant_id}\". For example, \"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant is created. For example, \"projects/foo\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Required. The filter string specifies the jobs to be enumerated.  Supported operator: =, AND  The fields eligible for filtering are:  -  ``companyName`` -  ``requisitionId`` -  ``status`` Available values: OPEN, EXPIRED, ALL. Defaults to OPEN if no value is specified.  At least one of ``companyName`` and ``requisitionId`` must present or an INVALID_ARGUMENT error is thrown.  Sample Query:  -  companyName = \"projects/foo/tenants/bar/companies/baz\" -  companyName = \"projects/foo/tenants/bar/companies/baz\" AND requisitionId = \"req-1\" -  companyName = \"projects/foo/tenants/bar/companies/baz\" AND status = \"EXPIRED\" -  requisitionId = \"req-1\" -  requisitionId = \"req-1\" AND status = \"EXPIRED\"  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.services.job_service.pagers.ListJobsAsyncPager: List jobs response.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "job_service.ListJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_jobs",
          "description": "Searches for jobs using the provided\n[SearchJobsRequest][google.cloud.talent.v4beta1.SearchJobsRequest].\n\nThis call constrains the\n[visibility][google.cloud.talent.v4beta1.Job.visibility] of jobs\npresent in the database, and only returns jobs that the caller\nhas permission to search against.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_search_jobs():\n        # Create a client\n        client = talent_v4beta1.JobServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.SearchJobsRequest(\n            parent=\"parent_value\",\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "job_service.SearchJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_jobs_for_alert",
          "description": "Searches for jobs using the provided\n[SearchJobsRequest][google.cloud.talent.v4beta1.SearchJobsRequest].\n\nThis API call is intended for the use case of targeting passive\njob seekers (for example, job seekers who have signed up to\nreceive email alerts about potential job opportunities), and has\ndifferent algorithmic adjustments that are targeted to passive\njob seekers.\n\nThis call constrains the\n[visibility][google.cloud.talent.v4beta1.Job.visibility] of jobs\npresent in the database, and only returns jobs the caller has\npermission to search against.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import ta",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "job_service.SearchJobsRequest"
          ]
        }
      }
    ]
  },
  "TenantService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_tenant",
          "description": "Creates a new tenant entity.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_create_tenant():\n        # Create a client\n        client = talent_v4beta1.TenantServiceAsyncClient()\n\n        # Initialize request argument(s)\n        tenant = talent_v4beta1.Tenant()\n        tenant.external_id = \"external_id_value\"\n\n        request = talent_v4beta1.CreateTenantRequest(\n            parent=\"parent_value\",\n            tenant=tenant,\n        )\n\n        # Make the request\n        response = await client.create_tenant(request=request)\n\n        # Handle the response\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the project under which the tenant is created.  The format is \"projects/{project_id}\", for example, \"projects/foo\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "tenant": {
                "type": "google.cloud.talent_v4beta1.types.Tenant",
                "description": "Required. The tenant to be created. This corresponds to the ``tenant`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.types.Tenant: A Tenant resource represents a tenant in the service. A tenant is a group or entity that shares common access with specific privileges for resources like profiles. Customer may create multiple tenants to provide data isolation for different groups."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "tenant",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "tenant_service.CreateTenantRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_tenant",
          "description": "Retrieves specified tenant.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_get_tenant():\n        # Create a client\n        client = talent_v4beta1.TenantServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.GetTenantRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_tenant(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.talent_v4beta1.types.GetTenantRequest, dict]]):\n        The request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the tenant to be retrieved.  The format is \"projects/{project_id}/tenants/{tenant_id}\", for example, \"projects/foo/tenants/bar\".  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.types.Tenant: A Tenant resource represents a tenant in the service. A tenant is a group or entity that shares common access with specific privileges for resources like profiles. Customer may create multiple tenants to provide data isolation for different groups."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "tenant_service.GetTenantRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_tenant",
          "description": "Updates specified tenant.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_update_tenant():\n        # Create a client\n        client = talent_v4beta1.TenantServiceAsyncClient()\n\n        # Initialize request argument(s)\n        tenant = talent_v4beta1.Tenant()\n        tenant.external_id = \"external_id_value\"\n\n        request = talent_v4beta1.UpdateTenantRequest(\n            tenant=tenant,\n        )\n\n        # Make the request\n        response = await client.update_tenant(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (O",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "tenant": {
                "type": "google.cloud.talent_v4beta1.types.Tenant",
                "description": "Required. The tenant resource to replace the current resource in the system.  This corresponds to the ``tenant`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.types.Tenant: A Tenant resource represents a tenant in the service. A tenant is a group or entity that shares common access with specific privileges for resources like profiles. Customer may create multiple tenants to provide data isolation for different groups."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "tenant",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "tenant_service.UpdateTenantRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_tenant",
          "description": "Deletes specified tenant.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_delete_tenant():\n        # Create a client\n        client = talent_v4beta1.TenantServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.DeleteTenantRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_tenant(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.talent_v4beta1.types.DeleteTenantRequest, dict]]):\n        The request object. Request to delete a tenant.\n    name (:class:`s",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the tenant to be deleted.  The format is \"projects/{project_id}/tenants/{tenant_id}\", for example, \"projects/foo/tenants/bar\".  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "tenant_service.DeleteTenantRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_tenants",
          "description": "Lists all tenants associated with the project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import talent_v4beta1\n\n    async def sample_list_tenants():\n        # Create a client\n        client = talent_v4beta1.TenantServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = talent_v4beta1.ListTenantsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_tenants(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the project under which the tenant is created.  The format is \"projects/{project_id}\", for example, \"projects/foo\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.talent_v4beta1.services.tenant_service.pagers.ListTenantsAsyncPager: The List tenants response object.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "tenant_service.ListTenantsRequest"
          ]
        }
      }
    ]
  }
}