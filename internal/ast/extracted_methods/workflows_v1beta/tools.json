{
  "Workflows": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_workflows",
          "description": "Lists Workflows in a given project and location.\nThe default order is not specified.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workflows_v1beta\n\n    async def sample_list_workflows():\n        # Create a client\n        client = workflows_v1beta.WorkflowsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workflows_v1beta.ListWorkflowsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_workflows(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(respon",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Project and location from which the workflows should be listed. Format: projects/{project}/locations/{location}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workflows_v1beta.services.workflows.pagers.ListWorkflowsAsyncPager: Response for the [ListWorkflows][google.cloud.workflows.v1beta.Workflows.ListWorkflows] method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workflows.ListWorkflowsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_workflow",
          "description": "Gets details of a single Workflow.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workflows_v1beta\n\n    async def sample_get_workflow():\n        # Create a client\n        client = workflows_v1beta.WorkflowsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workflows_v1beta.GetWorkflowRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_workflow(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.workflows_v1beta.types.GetWorkflowRequest, dict]]):\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the workflow which information should be retrieved. Format: projects/{project}/locations/{location}/workflows/{workflow}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workflows_v1beta.types.Workflow: Workflow program to be executed by Workflows."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workflows.GetWorkflowRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_workflow",
          "description": "Creates a new workflow. If a workflow with the specified name\nalready exists in the specified project and location, the long\nrunning operation will return\n[ALREADY_EXISTS][google.rpc.Code.ALREADY_EXISTS] error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workflows_v1beta\n\n    async def sample_create_workflow():\n        # Create a client\n        client = workflows_v1beta.WorkflowsAsyncClient()\n\n        # Initialize request argument(s)\n        workflow = workflows_v1beta.Workflow()\n        workflow.source_contents = \"source_contents_value\"\n\n        request = workflows_v1beta.CreateWorkflowReques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Project and location in which the workflow should be created. Format: projects/{project}/locations/{location}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workflow": {
                "type": "google.cloud.workflows_v1beta.types.Workflow",
                "description": "Required. Workflow to be created. This corresponds to the ``workflow`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workflow_id": {
                "type": "str",
                "description": "Required. The ID of the workflow to be created. It has to fulfill the following requirements:  -  Must contain only letters, numbers, underscores and hyphens. -  Must start with a letter. -  Must be between 1-64 characters. -  Must end with a number or a letter. -  Must be unique within the customer project and location.  This corresponds to the ``workflow_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workflows_v1beta.types.Workflow` Workflow program to be executed by Workflows."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "workflow",
              "workflow_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workflows.CreateWorkflowRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_workflow",
          "description": "Deletes a workflow with the specified name.\nThis method also cancels and deletes all running\nexecutions of the workflow.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workflows_v1beta\n\n    async def sample_delete_workflow():\n        # Create a client\n        client = workflows_v1beta.WorkflowsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workflows_v1beta.DeleteWorkflowRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_workflow(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the workflow to be deleted. Format: projects/{project}/locations/{location}/workflows/{workflow}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workflows.DeleteWorkflowRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_workflow",
          "description": "Updates an existing workflow.\nRunning this method has no impact on already running\nexecutions of the workflow. A new revision of the\nworkflow may be created as a result of a successful\nupdate operation. In that case, such revision will be\nused in new workflow executions.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workflows_v1beta\n\n    async def sample_update_workflow():\n        # Create a client\n        client = workflows_v1beta.WorkflowsAsyncClient()\n\n        # Initialize request argument(s)\n        workflow = workflows_v1beta.Workflow()\n        workflow.source_contents = \"source_contents_va",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "workflow": {
                "type": "google.cloud.workflows_v1beta.types.Workflow",
                "description": "Required. Workflow to be updated. This corresponds to the ``workflow`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "List of fields to be updated. If not present, the entire workflow will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workflows_v1beta.types.Workflow` Workflow program to be executed by Workflows."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "workflow",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workflows.UpdateWorkflowRequest"
          ]
        }
      }
    ]
  }
}