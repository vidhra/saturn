{
  "DataTransferService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_data_source",
          "description": "Retrieves a supported data source and returns its\nsettings.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_get_data_source():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.GetDataSourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_data_source(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Unio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The field will contain name of the resource requested, for example: ``projects/{project_id}/dataSources/{data_source_id}`` or ``projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datatransfer_v1.types.DataSource: Defines the properties and custom parameters for a data source."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.types.DataSource"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_data_sources",
          "description": "Lists supported data sources and returns their\nsettings.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_list_data_sources():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.ListDataSourcesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_data_sources(request=request)\n\n        # Handle the response\n        async for response in page_result:\n          ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The BigQuery project id for which data sources should be returned. Must be in the form: ``projects/{project_id}`` or ``projects/{project_id}/locations/{location_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datatransfer_v1.services.data_transfer_service.pagers.ListDataSourcesAsyncPager: Returns list of supported data sources and their metadata. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.services.data_transfer_service.pagers.ListDataSourcesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_transfer_config",
          "description": "Creates a new data transfer configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_create_transfer_config():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        transfer_config = bigquery_datatransfer_v1.TransferConfig()\n        transfer_config.destination_dataset_id = \"destination_dataset_id_value\"\n\n        request = bigquery_datatransfer_v1.CreateTransferConfigRequest(\n            parent=\"parent_value\",\n            transfer_config=transfer_conf",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The BigQuery project id where the transfer configuration should be created. Must be in the format projects/{project_id}/locations/{location_id} or projects/{project_id}. If specified location and location of the destination bigquery dataset do not match - the request will fail.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "transfer_config": {
                "type": "google.cloud.bigquery_datatransfer_v1.types.TransferConfig",
                "description": "Required. Data transfer configuration to create.  This corresponds to the ``transfer_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datatransfer_v1.types.TransferConfig: Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, destination_dataset_id specifies where data should be stored. When a new transfer configuration is created, the specified destination_dataset_id is created when needed and shared with the appropriate data source service account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "transfer_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.types.TransferConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_transfer_config",
          "description": "Updates a data transfer configuration.\nAll fields must be set, even if they are not updated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_update_transfer_config():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        transfer_config = bigquery_datatransfer_v1.TransferConfig()\n        transfer_config.destination_dataset_id = \"destination_dataset_id_value\"\n\n        request = bigquery_datatransfer_v1.UpdateTransferConfigRequest(\n            transfer_confi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "transfer_config": {
                "type": "google.cloud.bigquery_datatransfer_v1.types.TransferConfig",
                "description": "Required. Data transfer configuration to create.  This corresponds to the ``transfer_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Required list of fields to be updated in this request.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datatransfer_v1.types.TransferConfig: Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, destination_dataset_id specifies where data should be stored. When a new transfer configuration is created, the specified destination_dataset_id is created when needed and shared with the appropriate data source service account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "transfer_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.types.TransferConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_transfer_config",
          "description": "Deletes a data transfer configuration, including any\nassociated transfer runs and logs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_delete_transfer_config():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.DeleteTransferConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_transfer_config(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.bi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The field will contain name of the resource requested, for example: ``projects/{project_id}/transferConfigs/{config_id}`` or ``projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_transfer_config",
          "description": "Returns information about a data transfer config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_get_transfer_config():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.GetTransferConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_transfer_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Un",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The field will contain name of the resource requested, for example: ``projects/{project_id}/transferConfigs/{config_id}`` or ``projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datatransfer_v1.types.TransferConfig: Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, destination_dataset_id specifies where data should be stored. When a new transfer configuration is created, the specified destination_dataset_id is created when needed and shared with the appropriate data source service account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.types.TransferConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_transfer_configs",
          "description": "Returns information about all transfer configs owned\nby a project in the specified location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_list_transfer_configs():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.ListTransferConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_transfer_configs(request=request)\n\n        # Handle the response\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The BigQuery project id for which transfer configs should be returned: ``projects/{project_id}`` or ``projects/{project_id}/locations/{location_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datatransfer_v1.services.data_transfer_service.pagers.ListTransferConfigsAsyncPager: The returned list of pipelines in the project. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.services.data_transfer_service.pagers.ListTransferConfigsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "schedule_transfer_runs",
          "description": "Creates transfer runs for a time range [start_time, end_time].\nFor each date - or whatever granularity the data source supports\n- in the range, one transfer run is created. Note that runs are\ncreated per UTC time in the time range. DEPRECATED: use\nStartManualTransferRuns instead.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_schedule_transfer_runs():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.ScheduleTransfer",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Transfer configuration name in the form: ``projects/{project_id}/transferConfigs/{config_id}`` or ``projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "start_time": {
                "type": "google.protobuf.timestamp_pb2.Timestamp",
                "description": "Required. Start time of the range of transfer runs. For example, ``\"2017-05-25T00:00:00+00:00\"``.  This corresponds to the ``start_time`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "end_time": {
                "type": "google.protobuf.timestamp_pb2.Timestamp",
                "description": "Required. End time of the range of transfer runs. For example, ``\"2017-05-30T00:00:00+00:00\"``.  This corresponds to the ``end_time`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datatransfer_v1.types.ScheduleTransferRunsResponse: A response to schedule transfer runs for a time range."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "start_time",
              "end_time",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.types.ScheduleTransferRunsResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_manual_transfer_runs",
          "description": "Start manual transfer runs to be executed now with schedule_time\nequal to current time. The transfer runs can be created for a\ntime range where the run_time is between start_time (inclusive)\nand end_time (exclusive), or for a specific run_time.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_start_manual_transfer_runs():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.StartManualTransferRunsRequest(\n            pare",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.types.StartManualTransferRunsResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_transfer_run",
          "description": "Returns information about the particular transfer\nrun.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_get_transfer_run():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.GetTransferRunRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_transfer_run(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The field will contain name of the resource requested, for example: ``projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`` or ``projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datatransfer_v1.types.TransferRun: Represents a data transfer run."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.types.TransferRun"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_transfer_run",
          "description": "Deletes the specified transfer run.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_delete_transfer_run():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.DeleteTransferRunRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_transfer_run(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.bigquery_datatransfer_v1.types.DeleteTransferRunRequest, dict]]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The field will contain name of the resource requested, for example: ``projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`` or ``projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_transfer_runs",
          "description": "Returns information about running and completed\ntransfer runs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_list_transfer_runs():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.ListTransferRunsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_transfer_runs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of transfer configuration for which transfer runs should be retrieved. Format of transfer configuration resource name is: ``projects/{project_id}/transferConfigs/{config_id}`` or ``projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datatransfer_v1.services.data_transfer_service.pagers.ListTransferRunsAsyncPager: The returned list of pipelines in the project. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.services.data_transfer_service.pagers.ListTransferRunsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_transfer_logs",
          "description": "Returns log messages for the transfer run.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_list_transfer_logs():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.ListTransferLogsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_transfer_logs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Transfer run name in the form: ``projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`` or ``projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datatransfer_v1.services.data_transfer_service.pagers.ListTransferLogsAsyncPager: The returned list transfer run messages. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.services.data_transfer_service.pagers.ListTransferLogsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "check_valid_creds",
          "description": "Returns true if valid credentials exist for the given\ndata source and requesting user.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_check_valid_creds():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_datatransfer_v1.CheckValidCredsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.check_valid_creds(request=request)\n\n        # Handle the response\n        print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The data source in the form: ``projects/{project_id}/dataSources/{data_source_id}`` or ``projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_datatransfer_v1.types.CheckValidCredsResponse: A response indicating whether the credentials exist and are valid."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.bigquery_datatransfer_v1.types.CheckValidCredsResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "enroll_data_sources",
          "description": "Enroll data sources in a user project. This allows users to\ncreate transfer configurations for these data sources. They will\nalso appear in the ListDataSources RPC and as such, will appear\nin the `BigQuery\nUI <https://console.cloud.google.com/bigquery>`__, and the\ndocuments can be found in the public guide for `BigQuery Web\nUI <https://cloud.google.com/bigquery/bigquery-web-ui>`__ and\n`Data Transfer\nService <https://cloud.google.com/bigquery/docs/working-with-transfers>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_enroll_data_sources():\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "unenroll_data_sources",
          "description": "Unenroll data sources in a user project. This allows users to\nremove transfer configurations for these data sources. They will\nno longer appear in the ListDataSources RPC and will also no\nlonger appear in the `BigQuery\nUI <https://console.cloud.google.com/bigquery>`__. Data\ntransfers configurations of unenrolled data sources will not be\nscheduled.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_datatransfer_v1\n\n    async def sample_unenroll_data_sources():\n        # Create a client\n        client = bigquery_datatransfer_v1.DataTransferServiceAsyncClient()\n\n        # Initialize request arg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      }
    ]
  }
}