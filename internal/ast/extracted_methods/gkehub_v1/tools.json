{
  "GkeHub": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_memberships",
          "description": "Lists Memberships in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gkehub_v1\n\n    async def sample_list_memberships():\n        # Create a client\n        client = gkehub_v1.GkeHubAsyncClient()\n\n        # Initialize request argument(s)\n        request = gkehub_v1.ListMembershipsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_memberships(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent (project and location) where the Memberships will be listed. Specified in the format ``projects/*/locations/*``. ``projects/*/locations/-`` list memberships in all the regions.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gkehub_v1.services.gke_hub.pagers.ListMembershipsAsyncPager: Response message for the GkeHub.ListMemberships method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GkeHub.ListMembershipsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_features",
          "description": "Lists Features in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gkehub_v1\n\n    async def sample_list_features():\n        # Create a client\n        client = gkehub_v1.GkeHubAsyncClient()\n\n        # Initialize request argument(s)\n        request = gkehub_v1.ListFeaturesRequest(\n        )\n\n        # Make the request\n        page_result = client.list_features(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gkehub_v1.types.ListFeaturesRequest, dict]]):\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent (project and location) where the Features will be listed. Specified in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gkehub_v1.services.gke_hub.pagers.ListFeaturesAsyncPager: Response message for the GkeHub.ListFeatures method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GkeHub.ListFeaturesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_membership",
          "description": "Gets the details of a Membership.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gkehub_v1\n\n    async def sample_get_membership():\n        # Create a client\n        client = gkehub_v1.GkeHubAsyncClient()\n\n        # Initialize request argument(s)\n        request = gkehub_v1.GetMembershipRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_membership(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gkehub_v1.types.GetMembershipRequest, dict]]):\n        The request obje",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The Membership resource name in the format ``projects/*/locations/*/memberships/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gkehub_v1.types.Membership: Membership contains information about a member cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GkeHub.GetMembershipRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_feature",
          "description": "Gets details of a single Feature.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gkehub_v1\n\n    async def sample_get_feature():\n        # Create a client\n        client = gkehub_v1.GkeHubAsyncClient()\n\n        # Initialize request argument(s)\n        request = gkehub_v1.GetFeatureRequest(\n        )\n\n        # Make the request\n        response = await client.get_feature(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gkehub_v1.types.GetFeatureRequest, dict]]):\n        The request object. Request message for ``GkeHub.GetFeature",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The Feature resource name in the format ``projects/*/locations/*/features/*``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gkehub_v1.types.Feature: Feature represents the settings and status of any Hub Feature."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GkeHub.GetFeatureRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_membership",
          "description": "Creates a new Membership.\n\n**This is currently only supported for GKE clusters on Google\nCloud**. To register other clusters, follow the instructions at\nhttps://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gkehub_v1\n\n    async def sample_create_membership():\n        # Create a client\n        client = gkehub_v1.GkeHubAsyncClient()\n\n        # Initialize request argument(s)\n        request = gkehub_v1.CreateMembershipRequest(\n            parent=\"parent_value\",\n            membership_id=\"membership_id_value\",\n        )\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent (project and location) where the Memberships will be created. Specified in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "resource": {
                "type": "google.cloud.gkehub_v1.types.Membership",
                "description": "Required. The membership to create. This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "membership_id": {
                "type": "str",
                "description": "Required. Client chosen ID for the membership. ``membership_id`` must be a valid RFC 1123 compliant DNS label:  1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or ``-`` 3. It must start and end with an alphanumeric character  Which can be expressed as the regex: ``[a-z0-9]([-a-z0-9]*[a-z0-9])?``, with a maximum length of 63 characters.  This corresponds to the ``membership_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gkehub_v1.types.Membership` Membership contains information about a member cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "resource",
              "membership_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_feature",
          "description": "Adds a new Feature.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gkehub_v1\n\n    async def sample_create_feature():\n        # Create a client\n        client = gkehub_v1.GkeHubAsyncClient()\n\n        # Initialize request argument(s)\n        request = gkehub_v1.CreateFeatureRequest(\n        )\n\n        # Make the request\n        operation = client.create_feature(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gkehub_v1.types.Cre",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent (project and location) where the Feature will be created. Specified in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "resource": {
                "type": "google.cloud.gkehub_v1.types.Feature",
                "description": "The Feature resource to create. This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "feature_id": {
                "type": "str",
                "description": "The ID of the feature to create. This corresponds to the ``feature_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gkehub_v1.types.Feature` Feature represents the settings and status of any Hub Feature."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "resource",
              "feature_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_membership",
          "description": "Removes a Membership.\n\n**This is currently only supported for GKE clusters on Google\nCloud**. To unregister other clusters, follow the instructions\nat\nhttps://cloud.google.com/anthos/multicluster-management/connect/unregistering-a-cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gkehub_v1\n\n    async def sample_delete_membership():\n        # Create a client\n        client = gkehub_v1.GkeHubAsyncClient()\n\n        # Initialize request argument(s)\n        request = gkehub_v1.DeleteMembershipRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The Membership resource name in the format ``projects/*/locations/*/memberships/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GkeHub.DeleteMembershipRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_feature",
          "description": "Removes a Feature.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gkehub_v1\n\n    async def sample_delete_feature():\n        # Create a client\n        client = gkehub_v1.GkeHubAsyncClient()\n\n        # Initialize request argument(s)\n        request = gkehub_v1.DeleteFeatureRequest(\n        )\n\n        # Make the request\n        operation = client.delete_feature(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gkehub_v1.types.Dele",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The Feature resource name in the format ``projects/*/locations/*/features/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GkeHub.DeleteFeatureRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_membership",
          "description": "Updates an existing Membership.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gkehub_v1\n\n    async def sample_update_membership():\n        # Create a client\n        client = gkehub_v1.GkeHubAsyncClient()\n\n        # Initialize request argument(s)\n        request = gkehub_v1.UpdateMembershipRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.update_membership(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The Membership resource name in the format ``projects/*/locations/*/memberships/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "resource": {
                "type": "google.cloud.gkehub_v1.types.Membership",
                "description": "Required. Only fields specified in update_mask are updated. If you specify a field in the update_mask but don't specify its value here that field will be deleted. If you are updating a map field, set the value of a key to null or empty string to delete the key from the map. It's not possible to update a key's value to the empty string. If you specify the update_mask to be a special path \"*\", fully replaces all user-modifiable fields to match ``resource``.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Mask of fields to update. This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gkehub_v1.types.Membership` Membership contains information about a member cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "resource",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GkeHub.UpdateMembershipRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_feature",
          "description": "Updates an existing Feature.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gkehub_v1\n\n    async def sample_update_feature():\n        # Create a client\n        client = gkehub_v1.GkeHubAsyncClient()\n\n        # Initialize request argument(s)\n        request = gkehub_v1.UpdateFeatureRequest(\n        )\n\n        # Make the request\n        operation = client.update_feature(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gkehub_v1.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The Feature resource name in the format ``projects/*/locations/*/features/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "resource": {
                "type": "google.cloud.gkehub_v1.types.Feature",
                "description": "Only fields specified in update_mask are updated. If you specify a field in the update_mask but don't specify its value here that field will be deleted. If you are updating a map field, set the value of a key to null or empty string to delete the key from the map. It's not possible to update a key's value to the empty string. If you specify the update_mask to be a special path \"*\", fully replaces all user-modifiable fields to match ``resource``.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Mask of fields to update. This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gkehub_v1.types.Feature` Feature represents the settings and status of any Hub Feature."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "resource",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GkeHub.UpdateFeatureRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_connect_manifest",
          "description": "Generates the manifest for deployment of the GKE connect agent.\n\n**This method is used internally by Google-provided libraries.**\nMost clients should not need to call this method directly.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gkehub_v1\n\n    async def sample_generate_connect_manifest():\n        # Create a client\n        client = gkehub_v1.GkeHubAsyncClient()\n\n        # Initialize request argument(s)\n        request = gkehub_v1.GenerateConnectManifestRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.generate_connect_manifest(requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GkeHub.GenerateConnectManifestRequest"
          ]
        }
      }
    ]
  }
}