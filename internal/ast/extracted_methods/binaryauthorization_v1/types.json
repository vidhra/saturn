{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-binary-authorization\\google\\cloud\\binaryauthorization_v1\\types\\resources.py": [
    {
      "type": "request_class",
      "name": "Policy",
      "docstring": "A [policy][google.cloud.binaryauthorization.v1.Policy] for container\nimage binary authorization.\n\nAttributes:\n    name (str):\n        Output only. The resource name, in the format\n        ``projects/*/policy``. There is at most one policy per\n        project.\n    description (str):\n        Optional. A descriptive comment.\n    global_policy_evaluation_mode (google.cloud.binaryauthorization_v1.types.Policy.GlobalPolicyEvaluationMode):\n        Optional. Controls the evaluation of a\n        Google-maintained global admission policy for\n        common system-level images. Images not covered\n        by the global policy will be subject to the\n        project admission policy. This setting has no\n        effect when specified inside a global admission\n        policy.\n    admission_whitelist_patterns (MutableSequence[google.cloud.binaryauthorization_v1.types.AdmissionWhitelistPattern]):\n        Optional. Admission policy allowlisting. A\n        matching admission request will always be\n        permitted. This feature",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. The resource name, in the format ``projects/*/policy``. There is at most one policy per project."
        },
        "description": {
          "type": "str",
          "description": "Optional. A descriptive comment."
        },
        "global_policy_evaluation_mode": {
          "type": "google.cloud.binaryauthorization_v1.types.Policy.GlobalPolicyEvaluationMode",
          "description": "Optional. Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not covered by the global policy will be subject to the project admission policy. This setting has no effect when specified inside a global admission policy."
        },
        "admission_whitelist_patterns": {
          "type": "MutableSequence[google.cloud.binaryauthorization_v1.types.AdmissionWhitelistPattern]",
          "description": "Optional. Admission policy allowlisting. A matching admission request will always be permitted. This feature is typically used to exclude Google or third-party infrastructure images from Binary Authorization policies."
        },
        "cluster_admission_rules": {
          "type": "MutableMapping[str, google.cloud.binaryauthorization_v1.types.AdmissionRule]",
          "description": "Optional. Per-cluster admission rules. Cluster spec format: ``location.clusterId``. There can be at most one admission rule per cluster spec. A ``location`` is either a compute zone (e.g. us-central1-a) or a region (e.g. us-central1). For ``clusterId`` syntax restrictions see https://cloud.google.com/container-engine/reference/rest/v1/projects.zones.clusters."
        },
        "kubernetes_namespace_admission_rules": {
          "type": "MutableMapping[str, google.cloud.binaryauthorization_v1.types.AdmissionRule]",
          "description": "Optional. Per-kubernetes-namespace admission rules. K8s namespace spec format: [a-z.-]+, e.g. 'some-namespace'"
        },
        "kubernetes_service_account_admission_rules": {
          "type": "MutableMapping[str, google.cloud.binaryauthorization_v1.types.AdmissionRule]",
          "description": "Optional. Per-kubernetes-service-account admission rules. Service account spec format: ``namespace:serviceaccount``. e.g. 'test-ns:default'"
        },
        "istio_service_identity_admission_rules": {
          "type": "MutableMapping[str, google.cloud.binaryauthorization_v1.types.AdmissionRule]",
          "description": "Optional. Per-istio-service-identity admission rules. Istio service identity spec format:  spiffe://<domain>/ns/<namespace>/sa/<serviceaccount> or <domain>/ns/<namespace>/sa/<serviceaccount> e.g. spiffe://example.com/ns/test-ns/sa/default"
        },
        "default_admission_rule": {
          "type": "google.cloud.binaryauthorization_v1.types.AdmissionRule",
          "description": "Required. Default admission rule for a cluster without a per-cluster, per- kubernetes-service-account, or per-istio-service-identity admission rule."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Time when the policy was last updated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AdmissionWhitelistPattern",
      "docstring": "An [admission allowlist\npattern][google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern]\nexempts images from checks by [admission\nrules][google.cloud.binaryauthorization.v1.AdmissionRule].\n\nAttributes:\n    name_pattern (str):\n        An image name pattern to allowlist, in the form\n        ``registry/path/to/image``. This supports a trailing ``*``\n        wildcard, but this is allowed only in text after the\n        ``registry/`` part. This also supports a trailing ``**``\n        wildcard which matches subdirectories of a given entry.",
      "attributes": {
        "name_pattern": {
          "type": "str",
          "description": "An image name pattern to allowlist, in the form ``registry/path/to/image``. This supports a trailing ``*`` wildcard, but this is allowed only in text after the ``registry/`` part. This also supports a trailing ``**`` wildcard which matches subdirectories of a given entry."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AdmissionRule",
      "docstring": "An [admission\nrule][google.cloud.binaryauthorization.v1.AdmissionRule] specifies\neither that all container images used in a pod creation request must\nbe attested to by one or more\n[attestors][google.cloud.binaryauthorization.v1.Attestor], that all\npod creations will be allowed, or that all pod creations will be\ndenied.\n\nImages matching an [admission allowlist\npattern][google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern]\nare exempted from admission rules and will never block a pod\ncreation.\n\nAttributes:\n    evaluation_mode (google.cloud.binaryauthorization_v1.types.AdmissionRule.EvaluationMode):\n        Required. How this admission rule will be\n        evaluated.\n    require_attestations_by (MutableSequence[str]):\n        Optional. The resource names of the attestors that must\n        attest to a container image, in the format\n        ``projects/*/attestors/*``. Each attestor must exist before\n        a policy can reference it. To add an attestor to a policy\n        the principal issuing the policy c",
      "attributes": {
        "evaluation_mode": {
          "type": "google.cloud.binaryauthorization_v1.types.AdmissionRule.EvaluationMode",
          "description": "Required. How this admission rule will be evaluated."
        },
        "require_attestations_by": {
          "type": "MutableSequence[str]",
          "description": "Optional. The resource names of the attestors that must attest to a container image, in the format ``projects/*/attestors/*``. Each attestor must exist before a policy can reference it. To add an attestor to a policy the principal issuing the policy change request must be able to read the attestor resource.  Note: this field must be non-empty when the evaluation_mode field specifies REQUIRE_ATTESTATION, otherwise it must be empty."
        },
        "enforcement_mode": {
          "type": "google.cloud.binaryauthorization_v1.types.AdmissionRule.EnforcementMode",
          "description": "Required. The action when a pod creation is denied by the admission rule."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Attestor",
      "docstring": "An [attestor][google.cloud.binaryauthorization.v1.Attestor] that\nattests to container image artifacts. An existing attestor cannot be\nmodified except where indicated.\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Required. The resource name, in the format:\n        ``projects/*/attestors/*``. This field may not be updated.\n    description (str):\n        Optional. A descriptive comment.  This field\n        may be updated. The field may be displayed in\n        chooser dialogs.\n    user_owned_grafeas_note (google.cloud.binaryauthorization_v1.types.UserOwnedGrafeasNote):\n        This specifies how an attestation will be\n        read, and how it will be used during policy\n        enforcement.\n\n        This field is a member of `oneof`_ ``attestor_type``.\n    update_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Time when the attestor was last\n        updated.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The resource name, in the format: ``projects/*/attestors/*``. This field may not be updated."
        },
        "description": {
          "type": "str",
          "description": "Optional. A descriptive comment.  This field may be updated. The field may be displayed in chooser dialogs."
        },
        "user_owned_grafeas_note": {
          "type": "google.cloud.binaryauthorization_v1.types.UserOwnedGrafeasNote",
          "description": "This specifies how an attestation will be read, and how it will be used during policy enforcement.  This field is a member of `oneof`_ ``attestor_type``."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Time when the attestor was last updated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UserOwnedGrafeasNote",
      "docstring": "An [user owned Grafeas\nnote][google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote]\nreferences a Grafeas Attestation.Authority Note created by the user.\n\nAttributes:\n    note_reference (str):\n        Required. The Grafeas resource name of a\n        Attestation.Authority Note, created by the user, in the\n        format: ``projects/*/notes/*``. This field may not be\n        updated.\n\n        An attestation by this attestor is stored as a Grafeas\n        Attestation.Authority Occurrence that names a container\n        image and that links to this Note. Grafeas is an external\n        dependency.\n    public_keys (MutableSequence[google.cloud.binaryauthorization_v1.types.AttestorPublicKey]):\n        Optional. Public keys that verify\n        attestations signed by this attestor.  This\n        field may be updated.\n\n        If this field is non-empty, one of the specified\n        public keys must verify that an attestation was\n        signed by this attestor for the image specified\n        in the admission request.",
      "attributes": {
        "note_reference": {
          "type": "str",
          "description": "Required. The Grafeas resource name of a Attestation.Authority Note, created by the user, in the format: ``projects/*/notes/*``. This field may not be updated.  An attestation by this attestor is stored as a Grafeas Attestation.Authority Occurrence that names a container image and that links to this Note. Grafeas is an external dependency."
        },
        "public_keys": {
          "type": "MutableSequence[google.cloud.binaryauthorization_v1.types.AttestorPublicKey]",
          "description": "Optional. Public keys that verify attestations signed by this attestor.  This field may be updated.  If this field is non-empty, one of the specified public keys must verify that an attestation was signed by this attestor for the image specified in the admission request.  If this field is empty, this attestor always returns that no valid attestations exist."
        },
        "delegation_service_account_email": {
          "type": "str",
          "description": "Output only. This field will contain the service account email address that this Attestor will use as the principal when querying Container Analysis. Attestor administrators must grant this service account the IAM role needed to read attestations from the [note_reference][Note] in Container Analysis (``containeranalysis.notes.occurrences.viewer``).  This email address is fixed for the lifetime of the Attestor, but callers should not make any other assumptions about the service account email; future versions may use an email based on a different naming pattern."
        }
      }
    },
    {
      "type": "request_class",
      "name": "PkixPublicKey",
      "docstring": "A public key in the PkixPublicKey format (see\nhttps://tools.ietf.org/html/rfc5280#section-4.1.2.7 for\ndetails). Public keys of this type are typically textually\nencoded using the PEM format.\n\nAttributes:\n    public_key_pem (str):\n        A PEM-encoded public key, as described in\n        https://tools.ietf.org/html/rfc7468#section-13\n    signature_algorithm (google.cloud.binaryauthorization_v1.types.PkixPublicKey.SignatureAlgorithm):\n        The signature algorithm used to verify a message against a\n        signature using this key. These signature algorithm must\n        match the structure and any object identifiers encoded in\n        ``public_key_pem`` (i.e. this algorithm must match that of\n        the public key).",
      "attributes": {
        "public_key_pem": {
          "type": "str",
          "description": "A PEM-encoded public key, as described in https://tools.ietf.org/html/rfc7468#section-13"
        },
        "signature_algorithm": {
          "type": "google.cloud.binaryauthorization_v1.types.PkixPublicKey.SignatureAlgorithm",
          "description": "The signature algorithm used to verify a message against a signature using this key. These signature algorithm must match the structure and any object identifiers encoded in ``public_key_pem`` (i.e. this algorithm must match that of the public key)."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AttestorPublicKey",
      "docstring": "An [attestor public\nkey][google.cloud.binaryauthorization.v1.AttestorPublicKey] that\nwill be used to verify attestations signed by this attestor.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    comment (str):\n        Optional. A descriptive comment. This field\n        may be updated.\n    id (str):\n        The ID of this public key. Signatures verified by BinAuthz\n        must include the ID of the public key that can be used to\n        verify them, and that ID must match the contents of this\n        field exactly. Additional restrictions on this field can be\n        imposed based on which public key type is encapsulated. See\n        the documentation on ``public_key`` cases below for details.\n    ascii_armored_pgp_public_key (str):\n",
      "attributes": {
        "comment": {
          "type": "str",
          "description": "Optional. A descriptive comment. This field may be updated."
        },
        "id": {
          "type": "str",
          "description": "The ID of this public key. Signatures verified by BinAuthz must include the ID of the public key that can be used to verify them, and that ID must match the contents of this field exactly. Additional restrictions on this field can be imposed based on which public key type is encapsulated. See the documentation on ``public_key`` cases below for details."
        },
        "ascii_armored_pgp_public_key": {
          "type": "str",
          "description": "ASCII-armored representation of a PGP public key, as the entire output by the command ``gpg --export --armor foo@example.com`` (either LF or CRLF line endings). When using this field, ``id`` should be left blank. The BinAuthz API handlers will calculate the ID and fill it in automatically. BinAuthz computes this ID as the OpenPGP RFC4880 V4 fingerprint, represented as upper-case hex. If ``id`` is provided by the caller, it will be overwritten by the API-calculated ID.  This field is a member of `oneof`_ ``public_key``."
        },
        "pkix_public_key": {
          "type": "google.cloud.binaryauthorization_v1.types.PkixPublicKey",
          "description": "A raw PKIX SubjectPublicKeyInfo format public key.  NOTE: ``id`` may be explicitly provided by the caller when using this type of public key, but it MUST be a valid RFC3986 URI. If ``id`` is left blank, a default one will be computed based on the digest of the DER encoding of the public key.  This field is a member of `oneof`_ ``public_key``."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-binary-authorization\\google\\cloud\\binaryauthorization_v1\\types\\service.py": [
    {
      "type": "request_class",
      "name": "GetPolicyRequest",
      "docstring": "Request message for [BinauthzManagementService.GetPolicy][].\n\nAttributes:\n    name (str):\n        Required. The resource name of the\n        [policy][google.cloud.binaryauthorization.v1.Policy] to\n        retrieve, in the format ``projects/*/policy``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The resource name of the [policy][google.cloud.binaryauthorization.v1.Policy] to retrieve, in the format ``projects/*/policy``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdatePolicyRequest",
      "docstring": "Request message for [BinauthzManagementService.UpdatePolicy][].\n\nAttributes:\n    policy (google.cloud.binaryauthorization_v1.types.Policy):\n        Required. A new or updated\n        [policy][google.cloud.binaryauthorization.v1.Policy] value.\n        The service will overwrite the [policy\n        name][google.cloud.binaryauthorization.v1.Policy.name] field\n        with the resource name in the request URL, in the format\n        ``projects/*/policy``.",
      "attributes": {
        "policy": {
          "type": "google.cloud.binaryauthorization_v1.types.Policy",
          "description": "Required. A new or updated [policy][google.cloud.binaryauthorization.v1.Policy] value. The service will overwrite the [policy name][google.cloud.binaryauthorization.v1.Policy.name] field with the resource name in the request URL, in the format ``projects/*/policy``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateAttestorRequest",
      "docstring": "Request message for [BinauthzManagementService.CreateAttestor][].\n\nAttributes:\n    parent (str):\n        Required. The parent of this\n        [attestor][google.cloud.binaryauthorization.v1.Attestor].\n    attestor_id (str):\n        Required. The\n        [attestors][google.cloud.binaryauthorization.v1.Attestor]\n        ID.\n    attestor (google.cloud.binaryauthorization_v1.types.Attestor):\n        Required. The initial\n        [attestor][google.cloud.binaryauthorization.v1.Attestor]\n        value. The service will overwrite the [attestor\n        name][google.cloud.binaryauthorization.v1.Attestor.name]\n        field with the resource name, in the format\n        ``projects/*/attestors/*``.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent of this [attestor][google.cloud.binaryauthorization.v1.Attestor]."
        },
        "attestor_id": {
          "type": "str",
          "description": "Required. The [attestors][google.cloud.binaryauthorization.v1.Attestor] ID."
        },
        "attestor": {
          "type": "google.cloud.binaryauthorization_v1.types.Attestor",
          "description": "Required. The initial [attestor][google.cloud.binaryauthorization.v1.Attestor] value. The service will overwrite the [attestor name][google.cloud.binaryauthorization.v1.Attestor.name] field with the resource name, in the format ``projects/*/attestors/*``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetAttestorRequest",
      "docstring": "Request message for [BinauthzManagementService.GetAttestor][].\n\nAttributes:\n    name (str):\n        Required. The name of the\n        [attestor][google.cloud.binaryauthorization.v1.Attestor] to\n        retrieve, in the format ``projects/*/attestors/*``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the [attestor][google.cloud.binaryauthorization.v1.Attestor] to retrieve, in the format ``projects/*/attestors/*``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateAttestorRequest",
      "docstring": "Request message for [BinauthzManagementService.UpdateAttestor][].\n\nAttributes:\n    attestor (google.cloud.binaryauthorization_v1.types.Attestor):\n        Required. The updated\n        [attestor][google.cloud.binaryauthorization.v1.Attestor]\n        value. The service will overwrite the [attestor\n        name][google.cloud.binaryauthorization.v1.Attestor.name]\n        field with the resource name in the request URL, in the\n        format ``projects/*/attestors/*``.",
      "attributes": {
        "attestor": {
          "type": "google.cloud.binaryauthorization_v1.types.Attestor",
          "description": "Required. The updated [attestor][google.cloud.binaryauthorization.v1.Attestor] value. The service will overwrite the [attestor name][google.cloud.binaryauthorization.v1.Attestor.name] field with the resource name in the request URL, in the format ``projects/*/attestors/*``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListAttestorsRequest",
      "docstring": "Request message for [BinauthzManagementService.ListAttestors][].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the project associated with\n        the\n        [attestors][google.cloud.binaryauthorization.v1.Attestor],\n        in the format ``projects/*``.\n    page_size (int):\n        Requested page size. The server may return\n        fewer results than requested. If unspecified,\n        the server will pick an appropriate default.\n    page_token (str):\n        A token identifying a page of results the server should\n        return. Typically, this is the value of\n        [ListAttestorsResponse.next_page_token][google.cloud.binaryauthorization.v1.ListAttestorsResponse.next_page_token]\n        returned from the previous call to the ``ListAttestors``\n        method.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The resource name of the project associated with the [attestors][google.cloud.binaryauthorization.v1.Attestor], in the format ``projects/*``."
        },
        "page_size": {
          "type": "int",
          "description": "Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default."
        },
        "page_token": {
          "type": "str",
          "description": "A token identifying a page of results the server should return. Typically, this is the value of [ListAttestorsResponse.next_page_token][google.cloud.binaryauthorization.v1.ListAttestorsResponse.next_page_token] returned from the previous call to the ``ListAttestors`` method."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListAttestorsResponse",
      "docstring": "Response message for [BinauthzManagementService.ListAttestors][].\n\nAttributes:\n    attestors (MutableSequence[google.cloud.binaryauthorization_v1.types.Attestor]):\n        The list of\n        [attestors][google.cloud.binaryauthorization.v1.Attestor].\n    next_page_token (str):\n        A token to retrieve the next page of results. Pass this\n        value in the\n        [ListAttestorsRequest.page_token][google.cloud.binaryauthorization.v1.ListAttestorsRequest.page_token]\n        field in the subsequent call to the ``ListAttestors`` method\n        to retrieve the next page of results.",
      "attributes": {
        "attestors": {
          "type": "MutableSequence[google.cloud.binaryauthorization_v1.types.Attestor]",
          "description": "The list of [attestors][google.cloud.binaryauthorization.v1.Attestor]."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token to retrieve the next page of results. Pass this value in the [ListAttestorsRequest.page_token][google.cloud.binaryauthorization.v1.ListAttestorsRequest.page_token] field in the subsequent call to the ``ListAttestors`` method to retrieve the next page of results."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteAttestorRequest",
      "docstring": "Request message for [BinauthzManagementService.DeleteAttestor][].\n\nAttributes:\n    name (str):\n        Required. The name of the\n        [attestors][google.cloud.binaryauthorization.v1.Attestor] to\n        delete, in the format ``projects/*/attestors/*``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the [attestors][google.cloud.binaryauthorization.v1.Attestor] to delete, in the format ``projects/*/attestors/*``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetSystemPolicyRequest",
      "docstring": "Request to read the current system policy.\n\nAttributes:\n    name (str):\n        Required. The resource name, in the format\n        ``locations/*/policy``. Note that the system policy is not\n        associated with a project.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The resource name, in the format ``locations/*/policy``. Note that the system policy is not associated with a project."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ValidateAttestationOccurrenceRequest",
      "docstring": "Request message for\n[ValidationHelperV1.ValidateAttestationOccurrence][google.cloud.binaryauthorization.v1.ValidationHelperV1.ValidateAttestationOccurrence].\n\nAttributes:\n    attestor (str):\n        Required. The resource name of the\n        [Attestor][google.cloud.binaryauthorization.v1.Attestor] of\n        the [occurrence][grafeas.v1.Occurrence], in the format\n        ``projects/*/attestors/*``.\n    attestation (grafeas.grafeas_v1.types.AttestationOccurrence):\n        Required. An\n        [AttestationOccurrence][grafeas.v1.AttestationOccurrence] to\n        be checked that it can be verified by the Attestor. It does\n        not have to be an existing entity in Container Analysis. It\n        must otherwise be a valid AttestationOccurrence.\n    occurrence_note (str):\n        Required. The resource name of the [Note][grafeas.v1.Note]\n        to which the containing [Occurrence][grafeas.v1.Occurrence]\n        is associated.\n    occurrence_resource_uri (str):\n        Required. The URI of the artifact (e.g. contai",
      "attributes": {
        "attestor": {
          "type": "str",
          "description": "Required. The resource name of the [Attestor][google.cloud.binaryauthorization.v1.Attestor] of the [occurrence][grafeas.v1.Occurrence], in the format ``projects/*/attestors/*``."
        },
        "attestation": {
          "type": "grafeas.grafeas_v1.types.AttestationOccurrence",
          "description": "Required. An [AttestationOccurrence][grafeas.v1.AttestationOccurrence] to be checked that it can be verified by the Attestor. It does not have to be an existing entity in Container Analysis. It must otherwise be a valid AttestationOccurrence."
        },
        "occurrence_note": {
          "type": "str",
          "description": "Required. The resource name of the [Note][grafeas.v1.Note] to which the containing [Occurrence][grafeas.v1.Occurrence] is associated."
        },
        "occurrence_resource_uri": {
          "type": "str",
          "description": "Required. The URI of the artifact (e.g. container image) that is the subject of the containing [Occurrence][grafeas.v1.Occurrence]."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ValidateAttestationOccurrenceResponse",
      "docstring": "Response message for\n[ValidationHelperV1.ValidateAttestationOccurrence][google.cloud.binaryauthorization.v1.ValidationHelperV1.ValidateAttestationOccurrence].\n\nAttributes:\n    result (google.cloud.binaryauthorization_v1.types.ValidateAttestationOccurrenceResponse.Result):\n        The result of the Attestation validation.\n    denial_reason (str):\n        The reason for denial if the Attestation\n        couldn't be validated.",
      "attributes": {
        "result": {
          "type": "google.cloud.binaryauthorization_v1.types.ValidateAttestationOccurrenceResponse.Result",
          "description": "The result of the Attestation validation."
        },
        "denial_reason": {
          "type": "str",
          "description": "The reason for denial if the Attestation couldn't be validated."
        }
      }
    }
  ]
}