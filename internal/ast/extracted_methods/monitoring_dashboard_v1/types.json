{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-monitoring-dashboards\\google\\cloud\\monitoring_dashboard_v1\\types\\dashboards_service.py": [
    {
      "type": "function",
      "name": "CreateDashboardRequest",
      "description": "The ``CreateDashboard`` request.\n\nAttributes:\n    parent (str):\n        Required. The project on which to execute the request. The\n        format is:\n\n        ::\n\n            projects/[PROJECT_ID_OR_NUMBER]\n\n        The ``[PROJECT_ID_OR_NUMBER]`` must match the dashboard\n        resource name.\n    dashboard (google.cloud.monitoring_dashboard_v1.types.Dashboard):\n        Required. The initial dashboard\n        specification.\n    validate_only (bool):\n        If set, validate the request and preview the\n        review, but do not actually save it.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The project on which to execute the request. The format is:  ::  projects/[PROJECT_ID_OR_NUMBER]  The ``[PROJECT_ID_OR_NUMBER]`` must match the dashboard resource name.",
            "type": "string"
          },
          "dashboard": {
            "description": "Required. The initial dashboard specification.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Identifier. The resource name of the dashboard.",
                "type": "string"
              },
              "display_name": {
                "description": "Required. The mutable, human-readable name.",
                "type": "string"
              },
              "etag": {
                "description": "``etag`` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. An ``etag`` is returned in the response to ``GetDashboard``, and users are expected to put that etag in the request to ``UpdateDashboard`` to ensure that their change will be applied to the same version of the Dashboard configuration. The field should not be passed during dashboard creation.",
                "type": "string"
              },
              "grid_layout": {
                "type": "object",
                "properties": {
                  "columns": {
                    "description": "The number of columns into which the view's width is divided. If omitted or set to zero, a system default will be used while rendering.",
                    "type": "integer"
                  },
                  "widgets": {
                    "description": "The informational elements that are arranged into the columns row-first.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "description": "Optional. The title of the widget.",
                          "type": "string"
                        },
                        "xy_chart": {
                          "type": "object",
                          "properties": {
                            "data_sets": {
                              "description": "Required. The data displayed in this chart.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "time_series_query": {
                                    "type": "object",
                                    "properties": {
                                      "time_series_filter": {
                                        "type": "object",
                                        "properties": {
                                          "filter": {
                                            "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                            "type": "string"
                                          },
                                          "aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "filter"
                                        ]
                                      },
                                      "time_series_filter_ratio": {
                                        "type": "object",
                                        "properties": {
                                          "numerator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "denominator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "time_series_query_language": {
                                        "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "prometheus_query": {
                                        "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "unit_override": {
                                        "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                        "type": "string"
                                      },
                                      "output_full_duration": {
                                        "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "plot_type": {
                                    "type": "enum",
                                    "name": "PlotType",
                                    "description": "The types of plotting strategies for data sets.\n\nValues:\n    PLOT_TYPE_UNSPECIFIED (0):\n        Plot type is unspecified. The view will default to ``LINE``.\n    LINE (1):\n        The data is plotted as a set of lines (one\n        line per series).\n    STACKED_AREA (2):\n        The data is plotted as a set of filled areas\n        (one area per series), with the areas stacked\n        vertically (the base of each area is the top of\n        its predecessor, and the base of the first area\n        is the x-axis). Since the areas do not overlap,\n        each is filled with a different opaque color.\n    STACKED_BAR (3):\n        The data is plotted as a set of rectangular\n        boxes (one box per series), with the boxes\n        stacked vertically (the base of each box is the\n        top of its predecessor, and the base of the\n        first box is the x-axis). Since the boxes do not\n        overlap, each is filled with a different opaque\n        color.\n    HEATMAP (4):\n        The data is plotted as a heatmap. The se",
                                    "values": {
                                      "PLOT_TYPE_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "LINE": {
                                        "value": 1
                                      },
                                      "STACKED_AREA": {
                                        "value": 2
                                      },
                                      "STACKED_BAR": {
                                        "value": 3
                                      },
                                      "HEATMAP": {
                                        "value": 4
                                      }
                                    }
                                  },
                                  "legend_template": {
                                    "description": "A template string for naming ``TimeSeries`` in the resulting data set. This should be a string with interpolations of the form ``${label_name}``, which will resolve to the label's value.",
                                    "type": "string"
                                  },
                                  "min_alignment_period": {
                                    "type": "enum",
                                    "name": "Duration",
                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                    "values": {
                                      "UNDEFINED_DURATION": {
                                        "value": 0
                                      },
                                      "DURATION_UNSPECIFIED": {
                                        "value": 529071340
                                      },
                                      "HOUR": {
                                        "value": 2223588
                                      },
                                      "MAX": {
                                        "value": 76100
                                      },
                                      "MINUTE": {
                                        "value": 126786068
                                      }
                                    }
                                  },
                                  "target_axis": {
                                    "type": "enum",
                                    "name": "TargetAxis",
                                    "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                    "values": {
                                      "TARGET_AXIS_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "Y1": {
                                        "value": 1
                                      },
                                      "Y2": {
                                        "value": 2
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "time_series_query"
                                ]
                              }
                            },
                            "timeshift_duration": {
                              "type": "enum",
                              "name": "Duration",
                              "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                              "values": {
                                "UNDEFINED_DURATION": {
                                  "value": 0
                                },
                                "DURATION_UNSPECIFIED": {
                                  "value": 529071340
                                },
                                "HOUR": {
                                  "value": 2223588
                                },
                                "MAX": {
                                  "value": 76100
                                },
                                "MINUTE": {
                                  "value": 126786068
                                }
                              }
                            },
                            "thresholds": {
                              "description": "Threshold lines drawn horizontally across the chart.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "description": "A label for the threshold.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The value of the threshold. The value should be defined in the native scale of the metric.",
                                    "type": "number"
                                  },
                                  "color": {
                                    "type": "object",
                                    "properties": {
                                      "saturation": {
                                        "description": "Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.",
                                        "type": "number"
                                      },
                                      "contrast": {
                                        "description": "Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.",
                                        "type": "number"
                                      },
                                      "brightness": {
                                        "description": "Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.",
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "direction": {
                                    "type": "enum",
                                    "name": "Direction",
                                    "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                    "values": {
                                      "DIRECTION_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "INCOMING": {
                                        "value": 1
                                      },
                                      "OUTGOING": {
                                        "value": 2
                                      }
                                    }
                                  },
                                  "target_axis": {
                                    "type": "enum",
                                    "name": "TargetAxis",
                                    "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                    "values": {
                                      "TARGET_AXIS_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "Y1": {
                                        "value": 1
                                      },
                                      "Y2": {
                                        "value": 2
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x_axis": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "description": "The label of the axis.",
                                  "type": "string"
                                },
                                "scale": {
                                  "type": "enum",
                                  "name": "Scale",
                                  "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                  "values": {
                                    "SCALE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "LINEAR": {
                                      "value": 1
                                    },
                                    "LOG10": {
                                      "value": 2
                                    }
                                  }
                                }
                              }
                            },
                            "y_axis": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "description": "The label of the axis.",
                                  "type": "string"
                                },
                                "scale": {
                                  "type": "enum",
                                  "name": "Scale",
                                  "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                  "values": {
                                    "SCALE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "LINEAR": {
                                      "value": 1
                                    },
                                    "LOG10": {
                                      "value": 2
                                    }
                                  }
                                }
                              }
                            },
                            "y2_axis": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "description": "The label of the axis.",
                                  "type": "string"
                                },
                                "scale": {
                                  "type": "enum",
                                  "name": "Scale",
                                  "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                  "values": {
                                    "SCALE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "LINEAR": {
                                      "value": 1
                                    },
                                    "LOG10": {
                                      "value": 2
                                    }
                                  }
                                }
                              }
                            },
                            "chart_options": {
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "type": "enum",
                                  "name": "Mode",
                                  "description": "Options for handling file mode attribute.\n\nValues:\n    MODE_UNSPECIFIED (0):\n        Mode behavior is unspecified.\n    MODE_SKIP (1):\n        Do not preserve mode during a transfer job.\n    MODE_PRESERVE (2):\n        Preserve mode during a transfer job.",
                                  "values": {
                                    "MODE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "MODE_SKIP": {
                                      "value": 1
                                    },
                                    "MODE_PRESERVE": {
                                      "value": 2
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "data_sets"
                          ]
                        },
                        "scorecard": {
                          "type": "object",
                          "properties": {
                            "time_series_query": {
                              "type": "object",
                              "properties": {
                                "time_series_filter": {
                                  "type": "object",
                                  "properties": {
                                    "filter": {
                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                      "type": "string"
                                    },
                                    "aggregation": {
                                      "type": "object",
                                      "properties": {
                                        "alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        },
                                        "per_series_aligner": {
                                          "type": "enum",
                                          "name": "Aligner",
                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                          "values": {
                                            "ALIGN_NONE": {
                                              "value": 0
                                            },
                                            "ALIGN_DELTA": {
                                              "value": 1
                                            },
                                            "ALIGN_RATE": {
                                              "value": 2
                                            },
                                            "ALIGN_INTERPOLATE": {
                                              "value": 3
                                            },
                                            "ALIGN_NEXT_OLDER": {
                                              "value": 4
                                            },
                                            "ALIGN_MIN": {
                                              "value": 10
                                            },
                                            "ALIGN_MAX": {
                                              "value": 11
                                            },
                                            "ALIGN_MEAN": {
                                              "value": 12
                                            },
                                            "ALIGN_COUNT": {
                                              "value": 13
                                            },
                                            "ALIGN_SUM": {
                                              "value": 14
                                            },
                                            "ALIGN_STDDEV": {
                                              "value": 15
                                            },
                                            "ALIGN_COUNT_TRUE": {
                                              "value": 16
                                            },
                                            "ALIGN_COUNT_FALSE": {
                                              "value": 24
                                            },
                                            "ALIGN_FRACTION_TRUE": {
                                              "value": 17
                                            },
                                            "ALIGN_PERCENTILE_99": {
                                              "value": 18
                                            },
                                            "ALIGN_PERCENTILE_95": {
                                              "value": 19
                                            },
                                            "ALIGN_PERCENTILE_50": {
                                              "value": 20
                                            },
                                            "ALIGN_PERCENTILE_05": {
                                              "value": 21
                                            },
                                            "ALIGN_PERCENT_CHANGE": {
                                              "value": 23
                                            }
                                          }
                                        },
                                        "cross_series_reducer": {
                                          "type": "enum",
                                          "name": "Reducer",
                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                          "values": {
                                            "REDUCE_NONE": {
                                              "value": 0
                                            },
                                            "REDUCE_MEAN": {
                                              "value": 1
                                            },
                                            "REDUCE_MIN": {
                                              "value": 2
                                            },
                                            "REDUCE_MAX": {
                                              "value": 3
                                            },
                                            "REDUCE_SUM": {
                                              "value": 4
                                            },
                                            "REDUCE_STDDEV": {
                                              "value": 5
                                            },
                                            "REDUCE_COUNT": {
                                              "value": 6
                                            },
                                            "REDUCE_COUNT_TRUE": {
                                              "value": 7
                                            },
                                            "REDUCE_COUNT_FALSE": {
                                              "value": 15
                                            },
                                            "REDUCE_FRACTION_TRUE": {
                                              "value": 8
                                            },
                                            "REDUCE_PERCENTILE_99": {
                                              "value": 9
                                            },
                                            "REDUCE_PERCENTILE_95": {
                                              "value": 10
                                            },
                                            "REDUCE_PERCENTILE_50": {
                                              "value": 11
                                            },
                                            "REDUCE_PERCENTILE_05": {
                                              "value": 12
                                            }
                                          }
                                        },
                                        "group_by_fields": {
                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "secondary_aggregation": {
                                      "type": "object",
                                      "properties": {
                                        "alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        },
                                        "per_series_aligner": {
                                          "type": "enum",
                                          "name": "Aligner",
                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                          "values": {
                                            "ALIGN_NONE": {
                                              "value": 0
                                            },
                                            "ALIGN_DELTA": {
                                              "value": 1
                                            },
                                            "ALIGN_RATE": {
                                              "value": 2
                                            },
                                            "ALIGN_INTERPOLATE": {
                                              "value": 3
                                            },
                                            "ALIGN_NEXT_OLDER": {
                                              "value": 4
                                            },
                                            "ALIGN_MIN": {
                                              "value": 10
                                            },
                                            "ALIGN_MAX": {
                                              "value": 11
                                            },
                                            "ALIGN_MEAN": {
                                              "value": 12
                                            },
                                            "ALIGN_COUNT": {
                                              "value": 13
                                            },
                                            "ALIGN_SUM": {
                                              "value": 14
                                            },
                                            "ALIGN_STDDEV": {
                                              "value": 15
                                            },
                                            "ALIGN_COUNT_TRUE": {
                                              "value": 16
                                            },
                                            "ALIGN_COUNT_FALSE": {
                                              "value": 24
                                            },
                                            "ALIGN_FRACTION_TRUE": {
                                              "value": 17
                                            },
                                            "ALIGN_PERCENTILE_99": {
                                              "value": 18
                                            },
                                            "ALIGN_PERCENTILE_95": {
                                              "value": 19
                                            },
                                            "ALIGN_PERCENTILE_50": {
                                              "value": 20
                                            },
                                            "ALIGN_PERCENTILE_05": {
                                              "value": 21
                                            },
                                            "ALIGN_PERCENT_CHANGE": {
                                              "value": 23
                                            }
                                          }
                                        },
                                        "cross_series_reducer": {
                                          "type": "enum",
                                          "name": "Reducer",
                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                          "values": {
                                            "REDUCE_NONE": {
                                              "value": 0
                                            },
                                            "REDUCE_MEAN": {
                                              "value": 1
                                            },
                                            "REDUCE_MIN": {
                                              "value": 2
                                            },
                                            "REDUCE_MAX": {
                                              "value": 3
                                            },
                                            "REDUCE_SUM": {
                                              "value": 4
                                            },
                                            "REDUCE_STDDEV": {
                                              "value": 5
                                            },
                                            "REDUCE_COUNT": {
                                              "value": 6
                                            },
                                            "REDUCE_COUNT_TRUE": {
                                              "value": 7
                                            },
                                            "REDUCE_COUNT_FALSE": {
                                              "value": 15
                                            },
                                            "REDUCE_FRACTION_TRUE": {
                                              "value": 8
                                            },
                                            "REDUCE_PERCENTILE_99": {
                                              "value": 9
                                            },
                                            "REDUCE_PERCENTILE_95": {
                                              "value": 10
                                            },
                                            "REDUCE_PERCENTILE_50": {
                                              "value": 11
                                            },
                                            "REDUCE_PERCENTILE_05": {
                                              "value": 12
                                            }
                                          }
                                        },
                                        "group_by_fields": {
                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "pick_time_series_filter": {
                                      "type": "object",
                                      "properties": {
                                        "ranking_method": {
                                          "type": "enum",
                                          "name": "Method",
                                          "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                          "values": {
                                            "METHOD_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "METHOD_CLUSTER_OUTLIER": {
                                              "value": 1
                                            }
                                          }
                                        },
                                        "num_time_series": {
                                          "description": "How many time series to allow to pass through the filter.",
                                          "type": "integer"
                                        },
                                        "direction": {
                                          "type": "enum",
                                          "name": "Direction",
                                          "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                          "values": {
                                            "DIRECTION_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "INCOMING": {
                                              "value": 1
                                            },
                                            "OUTGOING": {
                                              "value": 2
                                            }
                                          }
                                        },
                                        "interval": {
                                          "type": "object",
                                          "properties": {
                                            "min_": {
                                              "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                              "type": "integer"
                                            },
                                            "max_": {
                                              "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "statistical_time_series_filter": {
                                      "type": "object",
                                      "properties": {
                                        "ranking_method": {
                                          "type": "enum",
                                          "name": "Method",
                                          "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                          "values": {
                                            "METHOD_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "METHOD_CLUSTER_OUTLIER": {
                                              "value": 1
                                            }
                                          }
                                        },
                                        "num_time_series": {
                                          "description": "How many time series to output.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "filter"
                                  ]
                                },
                                "time_series_filter_ratio": {
                                  "type": "object",
                                  "properties": {
                                    "numerator": {
                                      "type": "object",
                                      "properties": {
                                        "filter": {
                                          "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                          "type": "string"
                                        },
                                        "aggregation": {
                                          "type": "object",
                                          "properties": {
                                            "alignment_period": {
                                              "type": "enum",
                                              "name": "Duration",
                                              "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                              "values": {
                                                "UNDEFINED_DURATION": {
                                                  "value": 0
                                                },
                                                "DURATION_UNSPECIFIED": {
                                                  "value": 529071340
                                                },
                                                "HOUR": {
                                                  "value": 2223588
                                                },
                                                "MAX": {
                                                  "value": 76100
                                                },
                                                "MINUTE": {
                                                  "value": 126786068
                                                }
                                              }
                                            },
                                            "per_series_aligner": {
                                              "type": "enum",
                                              "name": "Aligner",
                                              "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                              "values": {
                                                "ALIGN_NONE": {
                                                  "value": 0
                                                },
                                                "ALIGN_DELTA": {
                                                  "value": 1
                                                },
                                                "ALIGN_RATE": {
                                                  "value": 2
                                                },
                                                "ALIGN_INTERPOLATE": {
                                                  "value": 3
                                                },
                                                "ALIGN_NEXT_OLDER": {
                                                  "value": 4
                                                },
                                                "ALIGN_MIN": {
                                                  "value": 10
                                                },
                                                "ALIGN_MAX": {
                                                  "value": 11
                                                },
                                                "ALIGN_MEAN": {
                                                  "value": 12
                                                },
                                                "ALIGN_COUNT": {
                                                  "value": 13
                                                },
                                                "ALIGN_SUM": {
                                                  "value": 14
                                                },
                                                "ALIGN_STDDEV": {
                                                  "value": 15
                                                },
                                                "ALIGN_COUNT_TRUE": {
                                                  "value": 16
                                                },
                                                "ALIGN_COUNT_FALSE": {
                                                  "value": 24
                                                },
                                                "ALIGN_FRACTION_TRUE": {
                                                  "value": 17
                                                },
                                                "ALIGN_PERCENTILE_99": {
                                                  "value": 18
                                                },
                                                "ALIGN_PERCENTILE_95": {
                                                  "value": 19
                                                },
                                                "ALIGN_PERCENTILE_50": {
                                                  "value": 20
                                                },
                                                "ALIGN_PERCENTILE_05": {
                                                  "value": 21
                                                },
                                                "ALIGN_PERCENT_CHANGE": {
                                                  "value": 23
                                                }
                                              }
                                            },
                                            "cross_series_reducer": {
                                              "type": "enum",
                                              "name": "Reducer",
                                              "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                              "values": {
                                                "REDUCE_NONE": {
                                                  "value": 0
                                                },
                                                "REDUCE_MEAN": {
                                                  "value": 1
                                                },
                                                "REDUCE_MIN": {
                                                  "value": 2
                                                },
                                                "REDUCE_MAX": {
                                                  "value": 3
                                                },
                                                "REDUCE_SUM": {
                                                  "value": 4
                                                },
                                                "REDUCE_STDDEV": {
                                                  "value": 5
                                                },
                                                "REDUCE_COUNT": {
                                                  "value": 6
                                                },
                                                "REDUCE_COUNT_TRUE": {
                                                  "value": 7
                                                },
                                                "REDUCE_COUNT_FALSE": {
                                                  "value": 15
                                                },
                                                "REDUCE_FRACTION_TRUE": {
                                                  "value": 8
                                                },
                                                "REDUCE_PERCENTILE_99": {
                                                  "value": 9
                                                },
                                                "REDUCE_PERCENTILE_95": {
                                                  "value": 10
                                                },
                                                "REDUCE_PERCENTILE_50": {
                                                  "value": 11
                                                },
                                                "REDUCE_PERCENTILE_05": {
                                                  "value": 12
                                                }
                                              }
                                            },
                                            "group_by_fields": {
                                              "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "filter"
                                      ]
                                    },
                                    "denominator": {
                                      "type": "object",
                                      "properties": {
                                        "filter": {
                                          "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                          "type": "string"
                                        },
                                        "aggregation": {
                                          "type": "object",
                                          "properties": {
                                            "alignment_period": {
                                              "type": "enum",
                                              "name": "Duration",
                                              "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                              "values": {
                                                "UNDEFINED_DURATION": {
                                                  "value": 0
                                                },
                                                "DURATION_UNSPECIFIED": {
                                                  "value": 529071340
                                                },
                                                "HOUR": {
                                                  "value": 2223588
                                                },
                                                "MAX": {
                                                  "value": 76100
                                                },
                                                "MINUTE": {
                                                  "value": 126786068
                                                }
                                              }
                                            },
                                            "per_series_aligner": {
                                              "type": "enum",
                                              "name": "Aligner",
                                              "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                              "values": {
                                                "ALIGN_NONE": {
                                                  "value": 0
                                                },
                                                "ALIGN_DELTA": {
                                                  "value": 1
                                                },
                                                "ALIGN_RATE": {
                                                  "value": 2
                                                },
                                                "ALIGN_INTERPOLATE": {
                                                  "value": 3
                                                },
                                                "ALIGN_NEXT_OLDER": {
                                                  "value": 4
                                                },
                                                "ALIGN_MIN": {
                                                  "value": 10
                                                },
                                                "ALIGN_MAX": {
                                                  "value": 11
                                                },
                                                "ALIGN_MEAN": {
                                                  "value": 12
                                                },
                                                "ALIGN_COUNT": {
                                                  "value": 13
                                                },
                                                "ALIGN_SUM": {
                                                  "value": 14
                                                },
                                                "ALIGN_STDDEV": {
                                                  "value": 15
                                                },
                                                "ALIGN_COUNT_TRUE": {
                                                  "value": 16
                                                },
                                                "ALIGN_COUNT_FALSE": {
                                                  "value": 24
                                                },
                                                "ALIGN_FRACTION_TRUE": {
                                                  "value": 17
                                                },
                                                "ALIGN_PERCENTILE_99": {
                                                  "value": 18
                                                },
                                                "ALIGN_PERCENTILE_95": {
                                                  "value": 19
                                                },
                                                "ALIGN_PERCENTILE_50": {
                                                  "value": 20
                                                },
                                                "ALIGN_PERCENTILE_05": {
                                                  "value": 21
                                                },
                                                "ALIGN_PERCENT_CHANGE": {
                                                  "value": 23
                                                }
                                              }
                                            },
                                            "cross_series_reducer": {
                                              "type": "enum",
                                              "name": "Reducer",
                                              "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                              "values": {
                                                "REDUCE_NONE": {
                                                  "value": 0
                                                },
                                                "REDUCE_MEAN": {
                                                  "value": 1
                                                },
                                                "REDUCE_MIN": {
                                                  "value": 2
                                                },
                                                "REDUCE_MAX": {
                                                  "value": 3
                                                },
                                                "REDUCE_SUM": {
                                                  "value": 4
                                                },
                                                "REDUCE_STDDEV": {
                                                  "value": 5
                                                },
                                                "REDUCE_COUNT": {
                                                  "value": 6
                                                },
                                                "REDUCE_COUNT_TRUE": {
                                                  "value": 7
                                                },
                                                "REDUCE_COUNT_FALSE": {
                                                  "value": 15
                                                },
                                                "REDUCE_FRACTION_TRUE": {
                                                  "value": 8
                                                },
                                                "REDUCE_PERCENTILE_99": {
                                                  "value": 9
                                                },
                                                "REDUCE_PERCENTILE_95": {
                                                  "value": 10
                                                },
                                                "REDUCE_PERCENTILE_50": {
                                                  "value": 11
                                                },
                                                "REDUCE_PERCENTILE_05": {
                                                  "value": 12
                                                }
                                              }
                                            },
                                            "group_by_fields": {
                                              "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "filter"
                                      ]
                                    },
                                    "secondary_aggregation": {
                                      "type": "object",
                                      "properties": {
                                        "alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        },
                                        "per_series_aligner": {
                                          "type": "enum",
                                          "name": "Aligner",
                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                          "values": {
                                            "ALIGN_NONE": {
                                              "value": 0
                                            },
                                            "ALIGN_DELTA": {
                                              "value": 1
                                            },
                                            "ALIGN_RATE": {
                                              "value": 2
                                            },
                                            "ALIGN_INTERPOLATE": {
                                              "value": 3
                                            },
                                            "ALIGN_NEXT_OLDER": {
                                              "value": 4
                                            },
                                            "ALIGN_MIN": {
                                              "value": 10
                                            },
                                            "ALIGN_MAX": {
                                              "value": 11
                                            },
                                            "ALIGN_MEAN": {
                                              "value": 12
                                            },
                                            "ALIGN_COUNT": {
                                              "value": 13
                                            },
                                            "ALIGN_SUM": {
                                              "value": 14
                                            },
                                            "ALIGN_STDDEV": {
                                              "value": 15
                                            },
                                            "ALIGN_COUNT_TRUE": {
                                              "value": 16
                                            },
                                            "ALIGN_COUNT_FALSE": {
                                              "value": 24
                                            },
                                            "ALIGN_FRACTION_TRUE": {
                                              "value": 17
                                            },
                                            "ALIGN_PERCENTILE_99": {
                                              "value": 18
                                            },
                                            "ALIGN_PERCENTILE_95": {
                                              "value": 19
                                            },
                                            "ALIGN_PERCENTILE_50": {
                                              "value": 20
                                            },
                                            "ALIGN_PERCENTILE_05": {
                                              "value": 21
                                            },
                                            "ALIGN_PERCENT_CHANGE": {
                                              "value": 23
                                            }
                                          }
                                        },
                                        "cross_series_reducer": {
                                          "type": "enum",
                                          "name": "Reducer",
                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                          "values": {
                                            "REDUCE_NONE": {
                                              "value": 0
                                            },
                                            "REDUCE_MEAN": {
                                              "value": 1
                                            },
                                            "REDUCE_MIN": {
                                              "value": 2
                                            },
                                            "REDUCE_MAX": {
                                              "value": 3
                                            },
                                            "REDUCE_SUM": {
                                              "value": 4
                                            },
                                            "REDUCE_STDDEV": {
                                              "value": 5
                                            },
                                            "REDUCE_COUNT": {
                                              "value": 6
                                            },
                                            "REDUCE_COUNT_TRUE": {
                                              "value": 7
                                            },
                                            "REDUCE_COUNT_FALSE": {
                                              "value": 15
                                            },
                                            "REDUCE_FRACTION_TRUE": {
                                              "value": 8
                                            },
                                            "REDUCE_PERCENTILE_99": {
                                              "value": 9
                                            },
                                            "REDUCE_PERCENTILE_95": {
                                              "value": 10
                                            },
                                            "REDUCE_PERCENTILE_50": {
                                              "value": 11
                                            },
                                            "REDUCE_PERCENTILE_05": {
                                              "value": 12
                                            }
                                          }
                                        },
                                        "group_by_fields": {
                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "pick_time_series_filter": {
                                      "type": "object",
                                      "properties": {
                                        "ranking_method": {
                                          "type": "enum",
                                          "name": "Method",
                                          "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                          "values": {
                                            "METHOD_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "METHOD_CLUSTER_OUTLIER": {
                                              "value": 1
                                            }
                                          }
                                        },
                                        "num_time_series": {
                                          "description": "How many time series to allow to pass through the filter.",
                                          "type": "integer"
                                        },
                                        "direction": {
                                          "type": "enum",
                                          "name": "Direction",
                                          "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                          "values": {
                                            "DIRECTION_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "INCOMING": {
                                              "value": 1
                                            },
                                            "OUTGOING": {
                                              "value": 2
                                            }
                                          }
                                        },
                                        "interval": {
                                          "type": "object",
                                          "properties": {
                                            "min_": {
                                              "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                              "type": "integer"
                                            },
                                            "max_": {
                                              "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "statistical_time_series_filter": {
                                      "type": "object",
                                      "properties": {
                                        "ranking_method": {
                                          "type": "enum",
                                          "name": "Method",
                                          "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                          "values": {
                                            "METHOD_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "METHOD_CLUSTER_OUTLIER": {
                                              "value": 1
                                            }
                                          }
                                        },
                                        "num_time_series": {
                                          "description": "How many time series to output.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                },
                                "time_series_query_language": {
                                  "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                  "type": "string"
                                },
                                "prometheus_query": {
                                  "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                  "type": "string"
                                },
                                "unit_override": {
                                  "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                  "type": "string"
                                },
                                "output_full_duration": {
                                  "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                  "type": "boolean"
                                }
                              }
                            },
                            "gauge_view": {
                              "type": "object",
                              "properties": {
                                "lower_bound": {
                                  "description": "The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.",
                                  "type": "number"
                                },
                                "upper_bound": {
                                  "description": "The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.",
                                  "type": "number"
                                }
                              }
                            },
                            "spark_chart_view": {
                              "type": "object",
                              "properties": {
                                "spark_chart_type": {
                                  "type": "enum",
                                  "name": "SparkChartType",
                                  "description": "Defines the possible types of spark chart supported by the\n``Scorecard``.\n\nValues:\n    SPARK_CHART_TYPE_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    SPARK_LINE (1):\n        The sparkline will be rendered as a small\n        line chart.\n    SPARK_BAR (2):\n        The sparkbar will be rendered as a small bar\n        chart.",
                                  "values": {
                                    "SPARK_CHART_TYPE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "SPARK_LINE": {
                                      "value": 1
                                    },
                                    "SPARK_BAR": {
                                      "value": 2
                                    }
                                  }
                                },
                                "min_alignment_period": {
                                  "type": "enum",
                                  "name": "Duration",
                                  "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                  "values": {
                                    "UNDEFINED_DURATION": {
                                      "value": 0
                                    },
                                    "DURATION_UNSPECIFIED": {
                                      "value": 529071340
                                    },
                                    "HOUR": {
                                      "value": 2223588
                                    },
                                    "MAX": {
                                      "value": 76100
                                    },
                                    "MINUTE": {
                                      "value": 126786068
                                    }
                                  }
                                }
                              },
                              "required": [
                                "spark_chart_type"
                              ]
                            },
                            "blank_view": {
                              "description": "Will cause the ``Scorecard`` to show only the value, with no indicator to its value relative to its thresholds.  This field is a member of `oneof`_ ``data_view``.",
                              "type": "object",
                              "reference": "google.protobuf.empty_pb2.Empty"
                            },
                            "thresholds": {
                              "description": "The thresholds used to determine the state of the scorecard given the time series' current value. For an actual value x, the scorecard is in a danger state if x is less than or equal to a danger threshold that triggers below, or greater than or equal to a danger threshold that triggers above. Similarly, if x is above/below a warning threshold that triggers above/below, then the scorecard is in a warning state - unless x also puts it in a danger state. (Danger trumps warning.)  As an example, consider a scorecard with the following four thresholds:  ::  { value: 90, category: 'DANGER', trigger: 'ABOVE', }, { value: 70, category: 'WARNING', trigger: 'ABOVE', }, { value: 10, category: 'DANGER', trigger: 'BELOW', }, { value: 20, category: 'WARNING', trigger: 'BELOW', }  Then: values less than or equal to 10 would put the scorecard in a DANGER state, values greater than 10 but less than or equal to 20 a WARNING state, values strictly between 20 and 70 an OK state, values greater than or equal to 70 but less than 90 a WARNING state, and values greater than or equal to 90 a DANGER state.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "description": "A label for the threshold.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The value of the threshold. The value should be defined in the native scale of the metric.",
                                    "type": "number"
                                  },
                                  "color": {
                                    "type": "object",
                                    "properties": {
                                      "saturation": {
                                        "description": "Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.",
                                        "type": "number"
                                      },
                                      "contrast": {
                                        "description": "Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.",
                                        "type": "number"
                                      },
                                      "brightness": {
                                        "description": "Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.",
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "direction": {
                                    "type": "enum",
                                    "name": "Direction",
                                    "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                    "values": {
                                      "DIRECTION_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "INCOMING": {
                                        "value": 1
                                      },
                                      "OUTGOING": {
                                        "value": 2
                                      }
                                    }
                                  },
                                  "target_axis": {
                                    "type": "enum",
                                    "name": "TargetAxis",
                                    "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                    "values": {
                                      "TARGET_AXIS_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "Y1": {
                                        "value": 1
                                      },
                                      "Y2": {
                                        "value": 2
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "time_series_query"
                          ]
                        },
                        "text": {
                          "type": "object",
                          "properties": {
                            "content": {
                              "description": "The text content to be displayed.",
                              "type": "string"
                            },
                            "format_": {
                              "type": "enum",
                              "name": "Format",
                              "description": "The format type of the text content.\n\nValues:\n    FORMAT_UNSPECIFIED (0):\n        Format is unspecified. Defaults to MARKDOWN.\n    MARKDOWN (1):\n        The text contains Markdown formatting.\n    RAW (2):\n        The text contains no special formatting.",
                              "values": {
                                "FORMAT_UNSPECIFIED": {
                                  "value": 0
                                },
                                "MARKDOWN": {
                                  "value": 1
                                },
                                "RAW": {
                                  "value": 2
                                }
                              }
                            },
                            "style": {
                              "type": "object",
                              "properties": {
                                "background_color": {
                                  "description": "The background color as a hex string. \"#RRGGBB\" or \"#RGB\".",
                                  "type": "string"
                                },
                                "text_color": {
                                  "description": "The text color as a hex string. \"#RRGGBB\" or \"#RGB\".",
                                  "type": "string"
                                },
                                "horizontal_alignment": {
                                  "type": "enum",
                                  "name": "HorizontalAlignment",
                                  "description": "The horizontal alignment of both the title and content on a\ntext widget\n\nValues:\n    HORIZONTAL_ALIGNMENT_UNSPECIFIED (0):\n        No horizontal alignment specified, will default to H_LEFT\n    H_LEFT (1):\n        Left-align\n    H_CENTER (2):\n        Center-align\n    H_RIGHT (3):\n        Right-align",
                                  "values": {
                                    "HORIZONTAL_ALIGNMENT_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "H_LEFT": {
                                      "value": 1
                                    },
                                    "H_CENTER": {
                                      "value": 2
                                    },
                                    "H_RIGHT": {
                                      "value": 3
                                    }
                                  }
                                },
                                "vertical_alignment": {
                                  "type": "enum",
                                  "name": "VerticalAlignment",
                                  "description": "The vertical alignment of both the title and content on a\ntext widget\n\nValues:\n    VERTICAL_ALIGNMENT_UNSPECIFIED (0):\n        No vertical alignment specified, will default to V_TOP\n    V_TOP (1):\n        Top-align\n    V_CENTER (2):\n        Center-align\n    V_BOTTOM (3):\n        Bottom-align",
                                  "values": {
                                    "VERTICAL_ALIGNMENT_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "V_TOP": {
                                      "value": 1
                                    },
                                    "V_CENTER": {
                                      "value": 2
                                    },
                                    "V_BOTTOM": {
                                      "value": 3
                                    }
                                  }
                                },
                                "padding": {
                                  "type": "enum",
                                  "name": "PaddingSize",
                                  "description": "Specifies padding size around a text widget\n\nValues:\n    PADDING_SIZE_UNSPECIFIED (0):\n        No padding size specified, will default to P_EXTRA_SMALL\n    P_EXTRA_SMALL (1):\n        Extra small padding\n    P_SMALL (2):\n        Small padding\n    P_MEDIUM (3):\n        Medium padding\n    P_LARGE (4):\n        Large padding\n    P_EXTRA_LARGE (5):\n        Extra large padding",
                                  "values": {
                                    "PADDING_SIZE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "P_EXTRA_SMALL": {
                                      "value": 1
                                    },
                                    "P_SMALL": {
                                      "value": 2
                                    },
                                    "P_MEDIUM": {
                                      "value": 3
                                    },
                                    "P_LARGE": {
                                      "value": 4
                                    },
                                    "P_EXTRA_LARGE": {
                                      "value": 5
                                    }
                                  }
                                },
                                "font_size": {
                                  "type": "enum",
                                  "name": "FontSize",
                                  "description": "Specifies a font size for the title and content of a text\nwidget\n\nValues:\n    FONT_SIZE_UNSPECIFIED (0):\n        No font size specified, will default to FS_LARGE\n    FS_EXTRA_SMALL (1):\n        Extra small font size\n    FS_SMALL (2):\n        Small font size\n    FS_MEDIUM (3):\n        Medium font size\n    FS_LARGE (4):\n        Large font size\n    FS_EXTRA_LARGE (5):\n        Extra large font size",
                                  "values": {
                                    "FONT_SIZE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "FS_EXTRA_SMALL": {
                                      "value": 1
                                    },
                                    "FS_SMALL": {
                                      "value": 2
                                    },
                                    "FS_MEDIUM": {
                                      "value": 3
                                    },
                                    "FS_LARGE": {
                                      "value": 4
                                    },
                                    "FS_EXTRA_LARGE": {
                                      "value": 5
                                    }
                                  }
                                },
                                "pointer_location": {
                                  "type": "enum",
                                  "name": "PointerLocation",
                                  "description": "Specifies where a visual pointer is placed on a text widget\n(also sometimes called a \"tail\")\n\nValues:\n    POINTER_LOCATION_UNSPECIFIED (0):\n        No visual pointer\n    PL_TOP (1):\n        Placed in the middle of the top of the widget\n    PL_RIGHT (2):\n        Placed in the middle of the right side of the\n        widget\n    PL_BOTTOM (3):\n        Placed in the middle of the bottom of the\n        widget\n    PL_LEFT (4):\n        Placed in the middle of the left side of the\n        widget\n    PL_TOP_LEFT (5):\n        Placed on the left side of the top of the\n        widget\n    PL_TOP_RIGHT (6):\n        Placed on the right side of the top of the\n        widget\n    PL_RIGHT_TOP (7):\n        Placed on the top of the right side of the\n        widget\n    PL_RIGHT_BOTTOM (8):\n        Placed on the bottom of the right side of the\n        widget\n    PL_BOTTOM_RIGHT (9):\n        Placed on the right side of the bottom of the\n        widget\n    PL_BOTTOM_LEFT (10):\n        Placed on the left side of the bottom of the\n    ",
                                  "values": {
                                    "POINTER_LOCATION_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "PL_TOP": {
                                      "value": 1
                                    },
                                    "PL_RIGHT": {
                                      "value": 2
                                    },
                                    "PL_BOTTOM": {
                                      "value": 3
                                    },
                                    "PL_LEFT": {
                                      "value": 4
                                    },
                                    "PL_TOP_LEFT": {
                                      "value": 5
                                    },
                                    "PL_TOP_RIGHT": {
                                      "value": 6
                                    },
                                    "PL_RIGHT_TOP": {
                                      "value": 7
                                    },
                                    "PL_RIGHT_BOTTOM": {
                                      "value": 8
                                    },
                                    "PL_BOTTOM_RIGHT": {
                                      "value": 9
                                    },
                                    "PL_BOTTOM_LEFT": {
                                      "value": 10
                                    },
                                    "PL_LEFT_BOTTOM": {
                                      "value": 11
                                    },
                                    "PL_LEFT_TOP": {
                                      "value": 12
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "blank": {
                          "description": "A blank space.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.protobuf.empty_pb2.Empty"
                        },
                        "alert_chart": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Required. The resource name of the alert policy. The format is:  ::  projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ]
                        },
                        "time_series_table": {
                          "type": "object",
                          "properties": {
                            "data_sets": {
                              "description": "Required. The data displayed in this table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "time_series_query": {
                                    "type": "object",
                                    "properties": {
                                      "time_series_filter": {
                                        "type": "object",
                                        "properties": {
                                          "filter": {
                                            "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                            "type": "string"
                                          },
                                          "aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "filter"
                                        ]
                                      },
                                      "time_series_filter_ratio": {
                                        "type": "object",
                                        "properties": {
                                          "numerator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "denominator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "time_series_query_language": {
                                        "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "prometheus_query": {
                                        "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "unit_override": {
                                        "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                        "type": "string"
                                      },
                                      "output_full_duration": {
                                        "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "table_template": {
                                    "description": "Optional. A template string for naming ``TimeSeries`` in the resulting data set. This should be a string with interpolations of the form ``${label_name}``, which will resolve to the label's value i.e. \"${resource.labels.project_id}.\".",
                                    "type": "string"
                                  },
                                  "min_alignment_period": {
                                    "type": "enum",
                                    "name": "Duration",
                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                    "values": {
                                      "UNDEFINED_DURATION": {
                                        "value": 0
                                      },
                                      "DURATION_UNSPECIFIED": {
                                        "value": 529071340
                                      },
                                      "HOUR": {
                                        "value": 2223588
                                      },
                                      "MAX": {
                                        "value": 76100
                                      },
                                      "MINUTE": {
                                        "value": 126786068
                                      }
                                    }
                                  },
                                  "table_display_options": {
                                    "type": "object",
                                    "properties": {
                                      "shown_columns": {
                                        "description": "Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "time_series_query"
                                ]
                              }
                            },
                            "metric_visualization": {
                              "type": "enum",
                              "name": "MetricVisualization",
                              "description": "Enum for metric metric_visualization\n\nValues:\n    METRIC_VISUALIZATION_UNSPECIFIED (0):\n        Unspecified state\n    NUMBER (1):\n        Default text rendering\n    BAR (2):\n        Horizontal bar rendering",
                              "values": {
                                "METRIC_VISUALIZATION_UNSPECIFIED": {
                                  "value": 0
                                },
                                "NUMBER": {
                                  "value": 1
                                },
                                "BAR": {
                                  "value": 2
                                }
                              }
                            },
                            "column_settings": {
                              "description": "Optional. The list of the persistent column settings for the table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "column": {
                                    "description": "Required. The id of the column.",
                                    "type": "string"
                                  },
                                  "visible": {
                                    "description": "Required. Whether the column should be visible on page load.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "column",
                                  "visible"
                                ]
                              }
                            }
                          },
                          "required": [
                            "data_sets"
                          ]
                        },
                        "collapsible_group": {
                          "type": "object",
                          "properties": {
                            "collapsed": {
                              "description": "The collapsed state of the widget on first page load.",
                              "type": "boolean"
                            }
                          }
                        },
                        "logs_panel": {
                          "type": "object",
                          "properties": {
                            "filter": {
                              "description": "A filter that chooses which log entries to return. See `Advanced Logs Queries <https://cloud.google.com/logging/docs/view/advanced-queries>`__. Only log entries that match the filter are returned. An empty filter matches all log entries.",
                              "type": "string"
                            },
                            "resource_names": {
                              "description": "The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "incident_list": {
                          "type": "object",
                          "properties": {
                            "monitored_resources": {
                              "description": "Optional. The monitored resource for which incidents are listed. The resource doesn't need to be fully specified. That is, you can specify the resource type but not the values of the resource labels. The resource type and labels are used for filtering.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.api.monitored_resource_pb2.MonitoredResource"
                              }
                            },
                            "policy_names": {
                              "description": "Optional. A list of alert policy names to filter the incident list by. Don't include the project ID prefix in the policy name. For example, use ``alertPolicies/utilization``.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "pie_chart": {
                          "type": "object",
                          "properties": {
                            "data_sets": {
                              "description": "Required. The queries for the chart's data.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "time_series_query": {
                                    "type": "object",
                                    "properties": {
                                      "time_series_filter": {
                                        "type": "object",
                                        "properties": {
                                          "filter": {
                                            "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                            "type": "string"
                                          },
                                          "aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "filter"
                                        ]
                                      },
                                      "time_series_filter_ratio": {
                                        "type": "object",
                                        "properties": {
                                          "numerator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "denominator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "time_series_query_language": {
                                        "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "prometheus_query": {
                                        "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "unit_override": {
                                        "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                        "type": "string"
                                      },
                                      "output_full_duration": {
                                        "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "slice_name_template": {
                                    "description": "Optional. A template for the name of the slice. This name will be displayed in the legend and the tooltip of the pie chart. It replaces the auto-generated names for the slices. For example, if the template is set to ``${resource.labels.zone}``, the zone's value will be used for the name instead of the default name.",
                                    "type": "string"
                                  },
                                  "min_alignment_period": {
                                    "type": "enum",
                                    "name": "Duration",
                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                    "values": {
                                      "UNDEFINED_DURATION": {
                                        "value": 0
                                      },
                                      "DURATION_UNSPECIFIED": {
                                        "value": 529071340
                                      },
                                      "HOUR": {
                                        "value": 2223588
                                      },
                                      "MAX": {
                                        "value": 76100
                                      },
                                      "MINUTE": {
                                        "value": 126786068
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "time_series_query"
                                ]
                              }
                            },
                            "chart_type": {
                              "type": "enum",
                              "name": "PieChartType",
                              "description": "Types for the pie chart.\n\nValues:\n    PIE_CHART_TYPE_UNSPECIFIED (0):\n        The zero value. No type specified. Do not\n        use.\n    PIE (1):\n        A Pie type PieChart.\n    DONUT (2):\n        Similar to PIE, but the DONUT type PieChart\n        has a hole in the middle.",
                              "values": {
                                "PIE_CHART_TYPE_UNSPECIFIED": {
                                  "value": 0
                                },
                                "PIE": {
                                  "value": 1
                                },
                                "DONUT": {
                                  "value": 2
                                }
                              }
                            },
                            "show_labels": {
                              "description": "Optional. Indicates whether or not the pie chart should show slices' labels",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "data_sets",
                            "chart_type"
                          ]
                        },
                        "error_reporting_panel": {
                          "type": "object",
                          "properties": {
                            "project_names": {
                              "description": "The resource name of the Google Cloud Platform project. Written as ``projects/{projectID}`` or ``projects/{projectNumber}``, where ``{projectID}`` and ``{projectNumber}`` can be found in the `Google Cloud console <https://support.google.com/cloud/answer/6158840>`__.  Examples: ``projects/my-project-123``, ``projects/5551234``.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "services": {
                              "description": "An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to ``version``, which can be changed whenever new code is deployed.  Contains the service name for error reports extracted from Google App Engine logs or ``default`` if the App Engine default service is used.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "versions": {
                              "description": "Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "section_header": {
                          "type": "object",
                          "properties": {
                            "subtitle": {
                              "description": "The subtitle of the section",
                              "type": "string"
                            },
                            "divider_below": {
                              "description": "Whether to insert a divider below the section in the table of contents",
                              "type": "boolean"
                            }
                          }
                        },
                        "single_view_group": {
                          "type": "object",
                          "properties": {}
                        },
                        "id": {
                          "description": "Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "mosaic_layout": {
                "type": "object",
                "properties": {
                  "columns": {
                    "description": "The number of columns in the mosaic grid. The number of columns must be between 1 and 12, inclusive.",
                    "type": "integer"
                  },
                  "tiles": {
                    "description": "The tiles to display.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_attribute_value": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The attribute name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The attribute value.",
                              "type": "string"
                            }
                          }
                        },
                        "product_attribute_interval": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The attribute name (e.g. \"length\")",
                              "type": "string"
                            },
                            "interval": {
                              "type": "object",
                              "properties": {
                                "min_": {
                                  "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                  "type": "integer"
                                },
                                "max_": {
                                  "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        },
                        "representative_product_id": {
                          "description": "The representative product id for this tile.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "row_layout": {
                "type": "object",
                "properties": {
                  "rows": {
                    "description": "The rows of content to display.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cells": {
                          "description": "Required. The list of cells that constitute the row. Must have the same length as ``columnHeaders`` for two-dimensional tables, a length of 1 for one-dimensional tables.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "no_shipping": {
                                "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                                "type": "boolean"
                              },
                              "flat_rate": {
                                "type": "object",
                                "properties": {
                                  "amount_micros": {
                                    "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                    "type": "integer"
                                  },
                                  "currency_code": {
                                    "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                    "type": "string"
                                  }
                                }
                              },
                              "price_percentage": {
                                "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                                "type": "string"
                              },
                              "carrier_rate": {
                                "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                                "type": "string"
                              },
                              "subtable": {
                                "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "cells"
                      ]
                    }
                  }
                }
              },
              "column_layout": {
                "type": "object",
                "properties": {
                  "columns": {
                    "description": "The columns of content to display.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "weight": {
                          "description": "The relative weight of this column. The column weight is used to adjust the width of columns on the screen (relative to peers). Greater the weight, greater the width of the column on the screen. If omitted, a value of 1 is used while rendering.",
                          "type": "integer"
                        },
                        "widgets": {
                          "description": "The display widgets arranged vertically in this column.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "description": "Optional. The title of the widget.",
                                "type": "string"
                              },
                              "xy_chart": {
                                "type": "object",
                                "properties": {
                                  "data_sets": {
                                    "description": "Required. The data displayed in this chart.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "time_series_query": {
                                          "type": "object",
                                          "properties": {
                                            "time_series_filter": {
                                              "type": "object",
                                              "properties": {
                                                "filter": {
                                                  "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                  "type": "string"
                                                },
                                                "aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "required": [
                                                "filter"
                                              ]
                                            },
                                            "time_series_filter_ratio": {
                                              "type": "object",
                                              "properties": {
                                                "numerator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "denominator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "time_series_query_language": {
                                              "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "prometheus_query": {
                                              "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "unit_override": {
                                              "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                              "type": "string"
                                            },
                                            "output_full_duration": {
                                              "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "plot_type": {
                                          "type": "enum",
                                          "name": "PlotType",
                                          "description": "The types of plotting strategies for data sets.\n\nValues:\n    PLOT_TYPE_UNSPECIFIED (0):\n        Plot type is unspecified. The view will default to ``LINE``.\n    LINE (1):\n        The data is plotted as a set of lines (one\n        line per series).\n    STACKED_AREA (2):\n        The data is plotted as a set of filled areas\n        (one area per series), with the areas stacked\n        vertically (the base of each area is the top of\n        its predecessor, and the base of the first area\n        is the x-axis). Since the areas do not overlap,\n        each is filled with a different opaque color.\n    STACKED_BAR (3):\n        The data is plotted as a set of rectangular\n        boxes (one box per series), with the boxes\n        stacked vertically (the base of each box is the\n        top of its predecessor, and the base of the\n        first box is the x-axis). Since the boxes do not\n        overlap, each is filled with a different opaque\n        color.\n    HEATMAP (4):\n        The data is plotted as a heatmap. The se",
                                          "values": {
                                            "PLOT_TYPE_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "LINE": {
                                              "value": 1
                                            },
                                            "STACKED_AREA": {
                                              "value": 2
                                            },
                                            "STACKED_BAR": {
                                              "value": 3
                                            },
                                            "HEATMAP": {
                                              "value": 4
                                            }
                                          }
                                        },
                                        "legend_template": {
                                          "description": "A template string for naming ``TimeSeries`` in the resulting data set. This should be a string with interpolations of the form ``${label_name}``, which will resolve to the label's value.",
                                          "type": "string"
                                        },
                                        "min_alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        },
                                        "target_axis": {
                                          "type": "enum",
                                          "name": "TargetAxis",
                                          "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                          "values": {
                                            "TARGET_AXIS_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "Y1": {
                                              "value": 1
                                            },
                                            "Y2": {
                                              "value": 2
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "time_series_query"
                                      ]
                                    }
                                  },
                                  "timeshift_duration": {
                                    "type": "enum",
                                    "name": "Duration",
                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                    "values": {
                                      "UNDEFINED_DURATION": {
                                        "value": 0
                                      },
                                      "DURATION_UNSPECIFIED": {
                                        "value": 529071340
                                      },
                                      "HOUR": {
                                        "value": 2223588
                                      },
                                      "MAX": {
                                        "value": 76100
                                      },
                                      "MINUTE": {
                                        "value": 126786068
                                      }
                                    }
                                  },
                                  "thresholds": {
                                    "description": "Threshold lines drawn horizontally across the chart.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "label": {
                                          "description": "A label for the threshold.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The value of the threshold. The value should be defined in the native scale of the metric.",
                                          "type": "number"
                                        },
                                        "color": {
                                          "type": "object",
                                          "properties": {
                                            "saturation": {
                                              "description": "Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.",
                                              "type": "number"
                                            },
                                            "contrast": {
                                              "description": "Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.",
                                              "type": "number"
                                            },
                                            "brightness": {
                                              "description": "Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.",
                                              "type": "number"
                                            }
                                          }
                                        },
                                        "direction": {
                                          "type": "enum",
                                          "name": "Direction",
                                          "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                          "values": {
                                            "DIRECTION_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "INCOMING": {
                                              "value": 1
                                            },
                                            "OUTGOING": {
                                              "value": 2
                                            }
                                          }
                                        },
                                        "target_axis": {
                                          "type": "enum",
                                          "name": "TargetAxis",
                                          "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                          "values": {
                                            "TARGET_AXIS_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "Y1": {
                                              "value": 1
                                            },
                                            "Y2": {
                                              "value": 2
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "x_axis": {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "description": "The label of the axis.",
                                        "type": "string"
                                      },
                                      "scale": {
                                        "type": "enum",
                                        "name": "Scale",
                                        "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                        "values": {
                                          "SCALE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "LINEAR": {
                                            "value": 1
                                          },
                                          "LOG10": {
                                            "value": 2
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "y_axis": {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "description": "The label of the axis.",
                                        "type": "string"
                                      },
                                      "scale": {
                                        "type": "enum",
                                        "name": "Scale",
                                        "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                        "values": {
                                          "SCALE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "LINEAR": {
                                            "value": 1
                                          },
                                          "LOG10": {
                                            "value": 2
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "y2_axis": {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "description": "The label of the axis.",
                                        "type": "string"
                                      },
                                      "scale": {
                                        "type": "enum",
                                        "name": "Scale",
                                        "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                        "values": {
                                          "SCALE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "LINEAR": {
                                            "value": 1
                                          },
                                          "LOG10": {
                                            "value": 2
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "chart_options": {
                                    "type": "object",
                                    "properties": {
                                      "mode": {
                                        "type": "enum",
                                        "name": "Mode",
                                        "description": "Options for handling file mode attribute.\n\nValues:\n    MODE_UNSPECIFIED (0):\n        Mode behavior is unspecified.\n    MODE_SKIP (1):\n        Do not preserve mode during a transfer job.\n    MODE_PRESERVE (2):\n        Preserve mode during a transfer job.",
                                        "values": {
                                          "MODE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "MODE_SKIP": {
                                            "value": 1
                                          },
                                          "MODE_PRESERVE": {
                                            "value": 2
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "data_sets"
                                ]
                              },
                              "scorecard": {
                                "type": "object",
                                "properties": {
                                  "time_series_query": {
                                    "type": "object",
                                    "properties": {
                                      "time_series_filter": {
                                        "type": "object",
                                        "properties": {
                                          "filter": {
                                            "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                            "type": "string"
                                          },
                                          "aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "filter"
                                        ]
                                      },
                                      "time_series_filter_ratio": {
                                        "type": "object",
                                        "properties": {
                                          "numerator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "denominator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "time_series_query_language": {
                                        "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "prometheus_query": {
                                        "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "unit_override": {
                                        "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                        "type": "string"
                                      },
                                      "output_full_duration": {
                                        "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "gauge_view": {
                                    "type": "object",
                                    "properties": {
                                      "lower_bound": {
                                        "description": "The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.",
                                        "type": "number"
                                      },
                                      "upper_bound": {
                                        "description": "The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.",
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "spark_chart_view": {
                                    "type": "object",
                                    "properties": {
                                      "spark_chart_type": {
                                        "type": "enum",
                                        "name": "SparkChartType",
                                        "description": "Defines the possible types of spark chart supported by the\n``Scorecard``.\n\nValues:\n    SPARK_CHART_TYPE_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    SPARK_LINE (1):\n        The sparkline will be rendered as a small\n        line chart.\n    SPARK_BAR (2):\n        The sparkbar will be rendered as a small bar\n        chart.",
                                        "values": {
                                          "SPARK_CHART_TYPE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "SPARK_LINE": {
                                            "value": 1
                                          },
                                          "SPARK_BAR": {
                                            "value": 2
                                          }
                                        }
                                      },
                                      "min_alignment_period": {
                                        "type": "enum",
                                        "name": "Duration",
                                        "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                        "values": {
                                          "UNDEFINED_DURATION": {
                                            "value": 0
                                          },
                                          "DURATION_UNSPECIFIED": {
                                            "value": 529071340
                                          },
                                          "HOUR": {
                                            "value": 2223588
                                          },
                                          "MAX": {
                                            "value": 76100
                                          },
                                          "MINUTE": {
                                            "value": 126786068
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "spark_chart_type"
                                    ]
                                  },
                                  "blank_view": {
                                    "description": "Will cause the ``Scorecard`` to show only the value, with no indicator to its value relative to its thresholds.  This field is a member of `oneof`_ ``data_view``.",
                                    "type": "object",
                                    "reference": "google.protobuf.empty_pb2.Empty"
                                  },
                                  "thresholds": {
                                    "description": "The thresholds used to determine the state of the scorecard given the time series' current value. For an actual value x, the scorecard is in a danger state if x is less than or equal to a danger threshold that triggers below, or greater than or equal to a danger threshold that triggers above. Similarly, if x is above/below a warning threshold that triggers above/below, then the scorecard is in a warning state - unless x also puts it in a danger state. (Danger trumps warning.)  As an example, consider a scorecard with the following four thresholds:  ::  { value: 90, category: 'DANGER', trigger: 'ABOVE', }, { value: 70, category: 'WARNING', trigger: 'ABOVE', }, { value: 10, category: 'DANGER', trigger: 'BELOW', }, { value: 20, category: 'WARNING', trigger: 'BELOW', }  Then: values less than or equal to 10 would put the scorecard in a DANGER state, values greater than 10 but less than or equal to 20 a WARNING state, values strictly between 20 and 70 an OK state, values greater than or equal to 70 but less than 90 a WARNING state, and values greater than or equal to 90 a DANGER state.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "label": {
                                          "description": "A label for the threshold.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The value of the threshold. The value should be defined in the native scale of the metric.",
                                          "type": "number"
                                        },
                                        "color": {
                                          "type": "object",
                                          "properties": {
                                            "saturation": {
                                              "description": "Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.",
                                              "type": "number"
                                            },
                                            "contrast": {
                                              "description": "Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.",
                                              "type": "number"
                                            },
                                            "brightness": {
                                              "description": "Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.",
                                              "type": "number"
                                            }
                                          }
                                        },
                                        "direction": {
                                          "type": "enum",
                                          "name": "Direction",
                                          "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                          "values": {
                                            "DIRECTION_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "INCOMING": {
                                              "value": 1
                                            },
                                            "OUTGOING": {
                                              "value": 2
                                            }
                                          }
                                        },
                                        "target_axis": {
                                          "type": "enum",
                                          "name": "TargetAxis",
                                          "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                          "values": {
                                            "TARGET_AXIS_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "Y1": {
                                              "value": 1
                                            },
                                            "Y2": {
                                              "value": 2
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "time_series_query"
                                ]
                              },
                              "text": {
                                "type": "object",
                                "properties": {
                                  "content": {
                                    "description": "The text content to be displayed.",
                                    "type": "string"
                                  },
                                  "format_": {
                                    "type": "enum",
                                    "name": "Format",
                                    "description": "The format type of the text content.\n\nValues:\n    FORMAT_UNSPECIFIED (0):\n        Format is unspecified. Defaults to MARKDOWN.\n    MARKDOWN (1):\n        The text contains Markdown formatting.\n    RAW (2):\n        The text contains no special formatting.",
                                    "values": {
                                      "FORMAT_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "MARKDOWN": {
                                        "value": 1
                                      },
                                      "RAW": {
                                        "value": 2
                                      }
                                    }
                                  },
                                  "style": {
                                    "type": "object",
                                    "properties": {
                                      "background_color": {
                                        "description": "The background color as a hex string. \"#RRGGBB\" or \"#RGB\".",
                                        "type": "string"
                                      },
                                      "text_color": {
                                        "description": "The text color as a hex string. \"#RRGGBB\" or \"#RGB\".",
                                        "type": "string"
                                      },
                                      "horizontal_alignment": {
                                        "type": "enum",
                                        "name": "HorizontalAlignment",
                                        "description": "The horizontal alignment of both the title and content on a\ntext widget\n\nValues:\n    HORIZONTAL_ALIGNMENT_UNSPECIFIED (0):\n        No horizontal alignment specified, will default to H_LEFT\n    H_LEFT (1):\n        Left-align\n    H_CENTER (2):\n        Center-align\n    H_RIGHT (3):\n        Right-align",
                                        "values": {
                                          "HORIZONTAL_ALIGNMENT_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "H_LEFT": {
                                            "value": 1
                                          },
                                          "H_CENTER": {
                                            "value": 2
                                          },
                                          "H_RIGHT": {
                                            "value": 3
                                          }
                                        }
                                      },
                                      "vertical_alignment": {
                                        "type": "enum",
                                        "name": "VerticalAlignment",
                                        "description": "The vertical alignment of both the title and content on a\ntext widget\n\nValues:\n    VERTICAL_ALIGNMENT_UNSPECIFIED (0):\n        No vertical alignment specified, will default to V_TOP\n    V_TOP (1):\n        Top-align\n    V_CENTER (2):\n        Center-align\n    V_BOTTOM (3):\n        Bottom-align",
                                        "values": {
                                          "VERTICAL_ALIGNMENT_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "V_TOP": {
                                            "value": 1
                                          },
                                          "V_CENTER": {
                                            "value": 2
                                          },
                                          "V_BOTTOM": {
                                            "value": 3
                                          }
                                        }
                                      },
                                      "padding": {
                                        "type": "enum",
                                        "name": "PaddingSize",
                                        "description": "Specifies padding size around a text widget\n\nValues:\n    PADDING_SIZE_UNSPECIFIED (0):\n        No padding size specified, will default to P_EXTRA_SMALL\n    P_EXTRA_SMALL (1):\n        Extra small padding\n    P_SMALL (2):\n        Small padding\n    P_MEDIUM (3):\n        Medium padding\n    P_LARGE (4):\n        Large padding\n    P_EXTRA_LARGE (5):\n        Extra large padding",
                                        "values": {
                                          "PADDING_SIZE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "P_EXTRA_SMALL": {
                                            "value": 1
                                          },
                                          "P_SMALL": {
                                            "value": 2
                                          },
                                          "P_MEDIUM": {
                                            "value": 3
                                          },
                                          "P_LARGE": {
                                            "value": 4
                                          },
                                          "P_EXTRA_LARGE": {
                                            "value": 5
                                          }
                                        }
                                      },
                                      "font_size": {
                                        "type": "enum",
                                        "name": "FontSize",
                                        "description": "Specifies a font size for the title and content of a text\nwidget\n\nValues:\n    FONT_SIZE_UNSPECIFIED (0):\n        No font size specified, will default to FS_LARGE\n    FS_EXTRA_SMALL (1):\n        Extra small font size\n    FS_SMALL (2):\n        Small font size\n    FS_MEDIUM (3):\n        Medium font size\n    FS_LARGE (4):\n        Large font size\n    FS_EXTRA_LARGE (5):\n        Extra large font size",
                                        "values": {
                                          "FONT_SIZE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "FS_EXTRA_SMALL": {
                                            "value": 1
                                          },
                                          "FS_SMALL": {
                                            "value": 2
                                          },
                                          "FS_MEDIUM": {
                                            "value": 3
                                          },
                                          "FS_LARGE": {
                                            "value": 4
                                          },
                                          "FS_EXTRA_LARGE": {
                                            "value": 5
                                          }
                                        }
                                      },
                                      "pointer_location": {
                                        "type": "enum",
                                        "name": "PointerLocation",
                                        "description": "Specifies where a visual pointer is placed on a text widget\n(also sometimes called a \"tail\")\n\nValues:\n    POINTER_LOCATION_UNSPECIFIED (0):\n        No visual pointer\n    PL_TOP (1):\n        Placed in the middle of the top of the widget\n    PL_RIGHT (2):\n        Placed in the middle of the right side of the\n        widget\n    PL_BOTTOM (3):\n        Placed in the middle of the bottom of the\n        widget\n    PL_LEFT (4):\n        Placed in the middle of the left side of the\n        widget\n    PL_TOP_LEFT (5):\n        Placed on the left side of the top of the\n        widget\n    PL_TOP_RIGHT (6):\n        Placed on the right side of the top of the\n        widget\n    PL_RIGHT_TOP (7):\n        Placed on the top of the right side of the\n        widget\n    PL_RIGHT_BOTTOM (8):\n        Placed on the bottom of the right side of the\n        widget\n    PL_BOTTOM_RIGHT (9):\n        Placed on the right side of the bottom of the\n        widget\n    PL_BOTTOM_LEFT (10):\n        Placed on the left side of the bottom of the\n    ",
                                        "values": {
                                          "POINTER_LOCATION_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "PL_TOP": {
                                            "value": 1
                                          },
                                          "PL_RIGHT": {
                                            "value": 2
                                          },
                                          "PL_BOTTOM": {
                                            "value": 3
                                          },
                                          "PL_LEFT": {
                                            "value": 4
                                          },
                                          "PL_TOP_LEFT": {
                                            "value": 5
                                          },
                                          "PL_TOP_RIGHT": {
                                            "value": 6
                                          },
                                          "PL_RIGHT_TOP": {
                                            "value": 7
                                          },
                                          "PL_RIGHT_BOTTOM": {
                                            "value": 8
                                          },
                                          "PL_BOTTOM_RIGHT": {
                                            "value": 9
                                          },
                                          "PL_BOTTOM_LEFT": {
                                            "value": 10
                                          },
                                          "PL_LEFT_BOTTOM": {
                                            "value": 11
                                          },
                                          "PL_LEFT_TOP": {
                                            "value": 12
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "blank": {
                                "description": "A blank space.  This field is a member of `oneof`_ ``content``.",
                                "type": "object",
                                "reference": "google.protobuf.empty_pb2.Empty"
                              },
                              "alert_chart": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Required. The resource name of the alert policy. The format is:  ::  projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              },
                              "time_series_table": {
                                "type": "object",
                                "properties": {
                                  "data_sets": {
                                    "description": "Required. The data displayed in this table.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "time_series_query": {
                                          "type": "object",
                                          "properties": {
                                            "time_series_filter": {
                                              "type": "object",
                                              "properties": {
                                                "filter": {
                                                  "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                  "type": "string"
                                                },
                                                "aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "required": [
                                                "filter"
                                              ]
                                            },
                                            "time_series_filter_ratio": {
                                              "type": "object",
                                              "properties": {
                                                "numerator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "denominator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "time_series_query_language": {
                                              "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "prometheus_query": {
                                              "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "unit_override": {
                                              "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                              "type": "string"
                                            },
                                            "output_full_duration": {
                                              "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "table_template": {
                                          "description": "Optional. A template string for naming ``TimeSeries`` in the resulting data set. This should be a string with interpolations of the form ``${label_name}``, which will resolve to the label's value i.e. \"${resource.labels.project_id}.\".",
                                          "type": "string"
                                        },
                                        "min_alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        },
                                        "table_display_options": {
                                          "type": "object",
                                          "properties": {
                                            "shown_columns": {
                                              "description": "Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "time_series_query"
                                      ]
                                    }
                                  },
                                  "metric_visualization": {
                                    "type": "enum",
                                    "name": "MetricVisualization",
                                    "description": "Enum for metric metric_visualization\n\nValues:\n    METRIC_VISUALIZATION_UNSPECIFIED (0):\n        Unspecified state\n    NUMBER (1):\n        Default text rendering\n    BAR (2):\n        Horizontal bar rendering",
                                    "values": {
                                      "METRIC_VISUALIZATION_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "NUMBER": {
                                        "value": 1
                                      },
                                      "BAR": {
                                        "value": 2
                                      }
                                    }
                                  },
                                  "column_settings": {
                                    "description": "Optional. The list of the persistent column settings for the table.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "column": {
                                          "description": "Required. The id of the column.",
                                          "type": "string"
                                        },
                                        "visible": {
                                          "description": "Required. Whether the column should be visible on page load.",
                                          "type": "boolean"
                                        }
                                      },
                                      "required": [
                                        "column",
                                        "visible"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "data_sets"
                                ]
                              },
                              "collapsible_group": {
                                "type": "object",
                                "properties": {
                                  "collapsed": {
                                    "description": "The collapsed state of the widget on first page load.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "logs_panel": {
                                "type": "object",
                                "properties": {
                                  "filter": {
                                    "description": "A filter that chooses which log entries to return. See `Advanced Logs Queries <https://cloud.google.com/logging/docs/view/advanced-queries>`__. Only log entries that match the filter are returned. An empty filter matches all log entries.",
                                    "type": "string"
                                  },
                                  "resource_names": {
                                    "description": "The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "incident_list": {
                                "type": "object",
                                "properties": {
                                  "monitored_resources": {
                                    "description": "Optional. The monitored resource for which incidents are listed. The resource doesn't need to be fully specified. That is, you can specify the resource type but not the values of the resource labels. The resource type and labels are used for filtering.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.api.monitored_resource_pb2.MonitoredResource"
                                    }
                                  },
                                  "policy_names": {
                                    "description": "Optional. A list of alert policy names to filter the incident list by. Don't include the project ID prefix in the policy name. For example, use ``alertPolicies/utilization``.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "pie_chart": {
                                "type": "object",
                                "properties": {
                                  "data_sets": {
                                    "description": "Required. The queries for the chart's data.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "time_series_query": {
                                          "type": "object",
                                          "properties": {
                                            "time_series_filter": {
                                              "type": "object",
                                              "properties": {
                                                "filter": {
                                                  "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                  "type": "string"
                                                },
                                                "aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "required": [
                                                "filter"
                                              ]
                                            },
                                            "time_series_filter_ratio": {
                                              "type": "object",
                                              "properties": {
                                                "numerator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "denominator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "time_series_query_language": {
                                              "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "prometheus_query": {
                                              "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "unit_override": {
                                              "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                              "type": "string"
                                            },
                                            "output_full_duration": {
                                              "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "slice_name_template": {
                                          "description": "Optional. A template for the name of the slice. This name will be displayed in the legend and the tooltip of the pie chart. It replaces the auto-generated names for the slices. For example, if the template is set to ``${resource.labels.zone}``, the zone's value will be used for the name instead of the default name.",
                                          "type": "string"
                                        },
                                        "min_alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "time_series_query"
                                      ]
                                    }
                                  },
                                  "chart_type": {
                                    "type": "enum",
                                    "name": "PieChartType",
                                    "description": "Types for the pie chart.\n\nValues:\n    PIE_CHART_TYPE_UNSPECIFIED (0):\n        The zero value. No type specified. Do not\n        use.\n    PIE (1):\n        A Pie type PieChart.\n    DONUT (2):\n        Similar to PIE, but the DONUT type PieChart\n        has a hole in the middle.",
                                    "values": {
                                      "PIE_CHART_TYPE_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "PIE": {
                                        "value": 1
                                      },
                                      "DONUT": {
                                        "value": 2
                                      }
                                    }
                                  },
                                  "show_labels": {
                                    "description": "Optional. Indicates whether or not the pie chart should show slices' labels",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "data_sets",
                                  "chart_type"
                                ]
                              },
                              "error_reporting_panel": {
                                "type": "object",
                                "properties": {
                                  "project_names": {
                                    "description": "The resource name of the Google Cloud Platform project. Written as ``projects/{projectID}`` or ``projects/{projectNumber}``, where ``{projectID}`` and ``{projectNumber}`` can be found in the `Google Cloud console <https://support.google.com/cloud/answer/6158840>`__.  Examples: ``projects/my-project-123``, ``projects/5551234``.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "services": {
                                    "description": "An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to ``version``, which can be changed whenever new code is deployed.  Contains the service name for error reports extracted from Google App Engine logs or ``default`` if the App Engine default service is used.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "versions": {
                                    "description": "Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "section_header": {
                                "type": "object",
                                "properties": {
                                  "subtitle": {
                                    "description": "The subtitle of the section",
                                    "type": "string"
                                  },
                                  "divider_below": {
                                    "description": "Whether to insert a divider below the section in the table of contents",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "single_view_group": {
                                "type": "object",
                                "properties": {}
                              },
                              "id": {
                                "description": "Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "dashboard_filters": {
                "description": "Filters to reduce the amount of data charted based on the filter criteria.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "label_key": {
                      "description": "Required. The key for the label",
                      "type": "string"
                    },
                    "template_variable": {
                      "description": "The placeholder text that can be referenced in a filter string or MQL query. If omitted, the dashboard filter will be applied to all relevant widgets in the dashboard.",
                      "type": "string"
                    },
                    "string_value": {
                      "description": "A variable-length string value.  This field is a member of `oneof`_ ``default_value``.",
                      "type": "string"
                    },
                    "filter_type": {
                      "type": "enum",
                      "name": "FilterType",
                      "description": "Specify the type of filtering.\n\nValues:\n    FILTER_TYPE_UNSPECIFIED (0):\n        Filter type unspecified. Position holder,\n        INVALID, should never be used.\n    UNIT_ONLY (1):\n        Filter by ``base compensation entry's`` unit. A job is a\n        match if and only if the job contains a base\n        CompensationEntry and the base CompensationEntry's unit\n        matches provided\n        [units][google.cloud.talent.v4beta1.CompensationFilter.units].\n        Populate one or more\n        [units][google.cloud.talent.v4beta1.CompensationFilter.units].\n\n        See\n        [CompensationInfo.CompensationEntry][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry]\n        for definition of base compensation entry.\n    UNIT_AND_AMOUNT (2):\n        Filter by ``base compensation entry's`` unit and amount /\n        range. A job is a match if and only if the job contains a\n        base CompensationEntry, and the base entry's unit matches\n        provided\n        [CompensationUnit][google.cloud.talent.v4bet",
                      "values": {
                        "FILTER_TYPE_UNSPECIFIED": {
                          "value": 0
                        },
                        "UNIT_ONLY": {
                          "value": 1
                        },
                        "UNIT_AND_AMOUNT": {
                          "value": 2
                        },
                        "ANNUALIZED_BASE_AMOUNT": {
                          "value": 3
                        },
                        "ANNUALIZED_TOTAL_AMOUNT": {
                          "value": 4
                        }
                      }
                    }
                  },
                  "required": [
                    "label_key"
                  ]
                }
              },
              "labels": {
                "description": "Labels applied to the dashboard",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "display_name"
            ]
          },
          "validate_only": {
            "description": "If set, validate the request and preview the review, but do not actually save it.",
            "type": "boolean"
          }
        },
        "required": [
          "parent",
          "dashboard"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListDashboardsRequest",
      "description": "The ``ListDashboards`` request.\n\nAttributes:\n    parent (str):\n        Required. The scope of the dashboards to list. The format\n        is:\n\n        ::\n\n            projects/[PROJECT_ID_OR_NUMBER]\n    page_size (int):\n        A positive number that is the maximum number\n        of results to return. If unspecified, a default\n        of 1000 is used.\n    page_token (str):\n        Optional. If this field is not empty then it must contain\n        the ``nextPageToken`` value returned by a previous call to\n        this method. Using this field causes the method to return\n        additional results from the previous method call.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The scope of the dashboards to list. The format is:  ::  projects/[PROJECT_ID_OR_NUMBER]",
            "type": "string"
          },
          "page_size": {
            "description": "A positive number that is the maximum number of results to return. If unspecified, a default of 1000 is used.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. If this field is not empty then it must contain the ``nextPageToken`` value returned by a previous call to this method. Using this field causes the method to return additional results from the previous method call.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetDashboardRequest",
      "description": "The ``GetDashboard`` request.\n\nAttributes:\n    name (str):\n        Required. The resource name of the Dashboard. The format is\n        one of:\n\n        -  ``dashboards/[DASHBOARD_ID]`` (for system dashboards)\n        -  ``projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID]``\n           (for custom dashboards).",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the Dashboard. The format is one of:  -  ``dashboards/[DASHBOARD_ID]`` (for system dashboards) -  ``projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID]`` (for custom dashboards).",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteDashboardRequest",
      "description": "The ``DeleteDashboard`` request.\n\nAttributes:\n    name (str):\n        Required. The resource name of the Dashboard. The format is:\n\n        ::\n\n            projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID]",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the Dashboard. The format is:  ::  projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID]",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateDashboardRequest",
      "description": "The ``UpdateDashboard`` request.\n\nAttributes:\n    dashboard (google.cloud.monitoring_dashboard_v1.types.Dashboard):\n        Required. The dashboard that will replace the\n        existing dashboard.\n    validate_only (bool):\n        If set, validate the request and preview the\n        review, but do not actually save it.",
      "parameters": {
        "type": "object",
        "properties": {
          "dashboard": {
            "description": "Required. The dashboard that will replace the existing dashboard.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Identifier. The resource name of the dashboard.",
                "type": "string"
              },
              "display_name": {
                "description": "Required. The mutable, human-readable name.",
                "type": "string"
              },
              "etag": {
                "description": "``etag`` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. An ``etag`` is returned in the response to ``GetDashboard``, and users are expected to put that etag in the request to ``UpdateDashboard`` to ensure that their change will be applied to the same version of the Dashboard configuration. The field should not be passed during dashboard creation.",
                "type": "string"
              },
              "grid_layout": {
                "type": "object",
                "properties": {
                  "columns": {
                    "description": "The number of columns into which the view's width is divided. If omitted or set to zero, a system default will be used while rendering.",
                    "type": "integer"
                  },
                  "widgets": {
                    "description": "The informational elements that are arranged into the columns row-first.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "description": "Optional. The title of the widget.",
                          "type": "string"
                        },
                        "xy_chart": {
                          "type": "object",
                          "properties": {
                            "data_sets": {
                              "description": "Required. The data displayed in this chart.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "time_series_query": {
                                    "type": "object",
                                    "properties": {
                                      "time_series_filter": {
                                        "type": "object",
                                        "properties": {
                                          "filter": {
                                            "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                            "type": "string"
                                          },
                                          "aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "filter"
                                        ]
                                      },
                                      "time_series_filter_ratio": {
                                        "type": "object",
                                        "properties": {
                                          "numerator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "denominator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "time_series_query_language": {
                                        "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "prometheus_query": {
                                        "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "unit_override": {
                                        "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                        "type": "string"
                                      },
                                      "output_full_duration": {
                                        "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "plot_type": {
                                    "type": "enum",
                                    "name": "PlotType",
                                    "description": "The types of plotting strategies for data sets.\n\nValues:\n    PLOT_TYPE_UNSPECIFIED (0):\n        Plot type is unspecified. The view will default to ``LINE``.\n    LINE (1):\n        The data is plotted as a set of lines (one\n        line per series).\n    STACKED_AREA (2):\n        The data is plotted as a set of filled areas\n        (one area per series), with the areas stacked\n        vertically (the base of each area is the top of\n        its predecessor, and the base of the first area\n        is the x-axis). Since the areas do not overlap,\n        each is filled with a different opaque color.\n    STACKED_BAR (3):\n        The data is plotted as a set of rectangular\n        boxes (one box per series), with the boxes\n        stacked vertically (the base of each box is the\n        top of its predecessor, and the base of the\n        first box is the x-axis). Since the boxes do not\n        overlap, each is filled with a different opaque\n        color.\n    HEATMAP (4):\n        The data is plotted as a heatmap. The se",
                                    "values": {
                                      "PLOT_TYPE_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "LINE": {
                                        "value": 1
                                      },
                                      "STACKED_AREA": {
                                        "value": 2
                                      },
                                      "STACKED_BAR": {
                                        "value": 3
                                      },
                                      "HEATMAP": {
                                        "value": 4
                                      }
                                    }
                                  },
                                  "legend_template": {
                                    "description": "A template string for naming ``TimeSeries`` in the resulting data set. This should be a string with interpolations of the form ``${label_name}``, which will resolve to the label's value.",
                                    "type": "string"
                                  },
                                  "min_alignment_period": {
                                    "type": "enum",
                                    "name": "Duration",
                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                    "values": {
                                      "UNDEFINED_DURATION": {
                                        "value": 0
                                      },
                                      "DURATION_UNSPECIFIED": {
                                        "value": 529071340
                                      },
                                      "HOUR": {
                                        "value": 2223588
                                      },
                                      "MAX": {
                                        "value": 76100
                                      },
                                      "MINUTE": {
                                        "value": 126786068
                                      }
                                    }
                                  },
                                  "target_axis": {
                                    "type": "enum",
                                    "name": "TargetAxis",
                                    "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                    "values": {
                                      "TARGET_AXIS_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "Y1": {
                                        "value": 1
                                      },
                                      "Y2": {
                                        "value": 2
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "time_series_query"
                                ]
                              }
                            },
                            "timeshift_duration": {
                              "type": "enum",
                              "name": "Duration",
                              "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                              "values": {
                                "UNDEFINED_DURATION": {
                                  "value": 0
                                },
                                "DURATION_UNSPECIFIED": {
                                  "value": 529071340
                                },
                                "HOUR": {
                                  "value": 2223588
                                },
                                "MAX": {
                                  "value": 76100
                                },
                                "MINUTE": {
                                  "value": 126786068
                                }
                              }
                            },
                            "thresholds": {
                              "description": "Threshold lines drawn horizontally across the chart.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "description": "A label for the threshold.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The value of the threshold. The value should be defined in the native scale of the metric.",
                                    "type": "number"
                                  },
                                  "color": {
                                    "type": "object",
                                    "properties": {
                                      "saturation": {
                                        "description": "Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.",
                                        "type": "number"
                                      },
                                      "contrast": {
                                        "description": "Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.",
                                        "type": "number"
                                      },
                                      "brightness": {
                                        "description": "Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.",
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "direction": {
                                    "type": "enum",
                                    "name": "Direction",
                                    "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                    "values": {
                                      "DIRECTION_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "INCOMING": {
                                        "value": 1
                                      },
                                      "OUTGOING": {
                                        "value": 2
                                      }
                                    }
                                  },
                                  "target_axis": {
                                    "type": "enum",
                                    "name": "TargetAxis",
                                    "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                    "values": {
                                      "TARGET_AXIS_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "Y1": {
                                        "value": 1
                                      },
                                      "Y2": {
                                        "value": 2
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x_axis": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "description": "The label of the axis.",
                                  "type": "string"
                                },
                                "scale": {
                                  "type": "enum",
                                  "name": "Scale",
                                  "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                  "values": {
                                    "SCALE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "LINEAR": {
                                      "value": 1
                                    },
                                    "LOG10": {
                                      "value": 2
                                    }
                                  }
                                }
                              }
                            },
                            "y_axis": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "description": "The label of the axis.",
                                  "type": "string"
                                },
                                "scale": {
                                  "type": "enum",
                                  "name": "Scale",
                                  "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                  "values": {
                                    "SCALE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "LINEAR": {
                                      "value": 1
                                    },
                                    "LOG10": {
                                      "value": 2
                                    }
                                  }
                                }
                              }
                            },
                            "y2_axis": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "description": "The label of the axis.",
                                  "type": "string"
                                },
                                "scale": {
                                  "type": "enum",
                                  "name": "Scale",
                                  "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                  "values": {
                                    "SCALE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "LINEAR": {
                                      "value": 1
                                    },
                                    "LOG10": {
                                      "value": 2
                                    }
                                  }
                                }
                              }
                            },
                            "chart_options": {
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "type": "enum",
                                  "name": "Mode",
                                  "description": "Options for handling file mode attribute.\n\nValues:\n    MODE_UNSPECIFIED (0):\n        Mode behavior is unspecified.\n    MODE_SKIP (1):\n        Do not preserve mode during a transfer job.\n    MODE_PRESERVE (2):\n        Preserve mode during a transfer job.",
                                  "values": {
                                    "MODE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "MODE_SKIP": {
                                      "value": 1
                                    },
                                    "MODE_PRESERVE": {
                                      "value": 2
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "data_sets"
                          ]
                        },
                        "scorecard": {
                          "type": "object",
                          "properties": {
                            "time_series_query": {
                              "type": "object",
                              "properties": {
                                "time_series_filter": {
                                  "type": "object",
                                  "properties": {
                                    "filter": {
                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                      "type": "string"
                                    },
                                    "aggregation": {
                                      "type": "object",
                                      "properties": {
                                        "alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        },
                                        "per_series_aligner": {
                                          "type": "enum",
                                          "name": "Aligner",
                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                          "values": {
                                            "ALIGN_NONE": {
                                              "value": 0
                                            },
                                            "ALIGN_DELTA": {
                                              "value": 1
                                            },
                                            "ALIGN_RATE": {
                                              "value": 2
                                            },
                                            "ALIGN_INTERPOLATE": {
                                              "value": 3
                                            },
                                            "ALIGN_NEXT_OLDER": {
                                              "value": 4
                                            },
                                            "ALIGN_MIN": {
                                              "value": 10
                                            },
                                            "ALIGN_MAX": {
                                              "value": 11
                                            },
                                            "ALIGN_MEAN": {
                                              "value": 12
                                            },
                                            "ALIGN_COUNT": {
                                              "value": 13
                                            },
                                            "ALIGN_SUM": {
                                              "value": 14
                                            },
                                            "ALIGN_STDDEV": {
                                              "value": 15
                                            },
                                            "ALIGN_COUNT_TRUE": {
                                              "value": 16
                                            },
                                            "ALIGN_COUNT_FALSE": {
                                              "value": 24
                                            },
                                            "ALIGN_FRACTION_TRUE": {
                                              "value": 17
                                            },
                                            "ALIGN_PERCENTILE_99": {
                                              "value": 18
                                            },
                                            "ALIGN_PERCENTILE_95": {
                                              "value": 19
                                            },
                                            "ALIGN_PERCENTILE_50": {
                                              "value": 20
                                            },
                                            "ALIGN_PERCENTILE_05": {
                                              "value": 21
                                            },
                                            "ALIGN_PERCENT_CHANGE": {
                                              "value": 23
                                            }
                                          }
                                        },
                                        "cross_series_reducer": {
                                          "type": "enum",
                                          "name": "Reducer",
                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                          "values": {
                                            "REDUCE_NONE": {
                                              "value": 0
                                            },
                                            "REDUCE_MEAN": {
                                              "value": 1
                                            },
                                            "REDUCE_MIN": {
                                              "value": 2
                                            },
                                            "REDUCE_MAX": {
                                              "value": 3
                                            },
                                            "REDUCE_SUM": {
                                              "value": 4
                                            },
                                            "REDUCE_STDDEV": {
                                              "value": 5
                                            },
                                            "REDUCE_COUNT": {
                                              "value": 6
                                            },
                                            "REDUCE_COUNT_TRUE": {
                                              "value": 7
                                            },
                                            "REDUCE_COUNT_FALSE": {
                                              "value": 15
                                            },
                                            "REDUCE_FRACTION_TRUE": {
                                              "value": 8
                                            },
                                            "REDUCE_PERCENTILE_99": {
                                              "value": 9
                                            },
                                            "REDUCE_PERCENTILE_95": {
                                              "value": 10
                                            },
                                            "REDUCE_PERCENTILE_50": {
                                              "value": 11
                                            },
                                            "REDUCE_PERCENTILE_05": {
                                              "value": 12
                                            }
                                          }
                                        },
                                        "group_by_fields": {
                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "secondary_aggregation": {
                                      "type": "object",
                                      "properties": {
                                        "alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        },
                                        "per_series_aligner": {
                                          "type": "enum",
                                          "name": "Aligner",
                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                          "values": {
                                            "ALIGN_NONE": {
                                              "value": 0
                                            },
                                            "ALIGN_DELTA": {
                                              "value": 1
                                            },
                                            "ALIGN_RATE": {
                                              "value": 2
                                            },
                                            "ALIGN_INTERPOLATE": {
                                              "value": 3
                                            },
                                            "ALIGN_NEXT_OLDER": {
                                              "value": 4
                                            },
                                            "ALIGN_MIN": {
                                              "value": 10
                                            },
                                            "ALIGN_MAX": {
                                              "value": 11
                                            },
                                            "ALIGN_MEAN": {
                                              "value": 12
                                            },
                                            "ALIGN_COUNT": {
                                              "value": 13
                                            },
                                            "ALIGN_SUM": {
                                              "value": 14
                                            },
                                            "ALIGN_STDDEV": {
                                              "value": 15
                                            },
                                            "ALIGN_COUNT_TRUE": {
                                              "value": 16
                                            },
                                            "ALIGN_COUNT_FALSE": {
                                              "value": 24
                                            },
                                            "ALIGN_FRACTION_TRUE": {
                                              "value": 17
                                            },
                                            "ALIGN_PERCENTILE_99": {
                                              "value": 18
                                            },
                                            "ALIGN_PERCENTILE_95": {
                                              "value": 19
                                            },
                                            "ALIGN_PERCENTILE_50": {
                                              "value": 20
                                            },
                                            "ALIGN_PERCENTILE_05": {
                                              "value": 21
                                            },
                                            "ALIGN_PERCENT_CHANGE": {
                                              "value": 23
                                            }
                                          }
                                        },
                                        "cross_series_reducer": {
                                          "type": "enum",
                                          "name": "Reducer",
                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                          "values": {
                                            "REDUCE_NONE": {
                                              "value": 0
                                            },
                                            "REDUCE_MEAN": {
                                              "value": 1
                                            },
                                            "REDUCE_MIN": {
                                              "value": 2
                                            },
                                            "REDUCE_MAX": {
                                              "value": 3
                                            },
                                            "REDUCE_SUM": {
                                              "value": 4
                                            },
                                            "REDUCE_STDDEV": {
                                              "value": 5
                                            },
                                            "REDUCE_COUNT": {
                                              "value": 6
                                            },
                                            "REDUCE_COUNT_TRUE": {
                                              "value": 7
                                            },
                                            "REDUCE_COUNT_FALSE": {
                                              "value": 15
                                            },
                                            "REDUCE_FRACTION_TRUE": {
                                              "value": 8
                                            },
                                            "REDUCE_PERCENTILE_99": {
                                              "value": 9
                                            },
                                            "REDUCE_PERCENTILE_95": {
                                              "value": 10
                                            },
                                            "REDUCE_PERCENTILE_50": {
                                              "value": 11
                                            },
                                            "REDUCE_PERCENTILE_05": {
                                              "value": 12
                                            }
                                          }
                                        },
                                        "group_by_fields": {
                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "pick_time_series_filter": {
                                      "type": "object",
                                      "properties": {
                                        "ranking_method": {
                                          "type": "enum",
                                          "name": "Method",
                                          "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                          "values": {
                                            "METHOD_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "METHOD_CLUSTER_OUTLIER": {
                                              "value": 1
                                            }
                                          }
                                        },
                                        "num_time_series": {
                                          "description": "How many time series to allow to pass through the filter.",
                                          "type": "integer"
                                        },
                                        "direction": {
                                          "type": "enum",
                                          "name": "Direction",
                                          "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                          "values": {
                                            "DIRECTION_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "INCOMING": {
                                              "value": 1
                                            },
                                            "OUTGOING": {
                                              "value": 2
                                            }
                                          }
                                        },
                                        "interval": {
                                          "type": "object",
                                          "properties": {
                                            "min_": {
                                              "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                              "type": "integer"
                                            },
                                            "max_": {
                                              "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "statistical_time_series_filter": {
                                      "type": "object",
                                      "properties": {
                                        "ranking_method": {
                                          "type": "enum",
                                          "name": "Method",
                                          "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                          "values": {
                                            "METHOD_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "METHOD_CLUSTER_OUTLIER": {
                                              "value": 1
                                            }
                                          }
                                        },
                                        "num_time_series": {
                                          "description": "How many time series to output.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "filter"
                                  ]
                                },
                                "time_series_filter_ratio": {
                                  "type": "object",
                                  "properties": {
                                    "numerator": {
                                      "type": "object",
                                      "properties": {
                                        "filter": {
                                          "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                          "type": "string"
                                        },
                                        "aggregation": {
                                          "type": "object",
                                          "properties": {
                                            "alignment_period": {
                                              "type": "enum",
                                              "name": "Duration",
                                              "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                              "values": {
                                                "UNDEFINED_DURATION": {
                                                  "value": 0
                                                },
                                                "DURATION_UNSPECIFIED": {
                                                  "value": 529071340
                                                },
                                                "HOUR": {
                                                  "value": 2223588
                                                },
                                                "MAX": {
                                                  "value": 76100
                                                },
                                                "MINUTE": {
                                                  "value": 126786068
                                                }
                                              }
                                            },
                                            "per_series_aligner": {
                                              "type": "enum",
                                              "name": "Aligner",
                                              "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                              "values": {
                                                "ALIGN_NONE": {
                                                  "value": 0
                                                },
                                                "ALIGN_DELTA": {
                                                  "value": 1
                                                },
                                                "ALIGN_RATE": {
                                                  "value": 2
                                                },
                                                "ALIGN_INTERPOLATE": {
                                                  "value": 3
                                                },
                                                "ALIGN_NEXT_OLDER": {
                                                  "value": 4
                                                },
                                                "ALIGN_MIN": {
                                                  "value": 10
                                                },
                                                "ALIGN_MAX": {
                                                  "value": 11
                                                },
                                                "ALIGN_MEAN": {
                                                  "value": 12
                                                },
                                                "ALIGN_COUNT": {
                                                  "value": 13
                                                },
                                                "ALIGN_SUM": {
                                                  "value": 14
                                                },
                                                "ALIGN_STDDEV": {
                                                  "value": 15
                                                },
                                                "ALIGN_COUNT_TRUE": {
                                                  "value": 16
                                                },
                                                "ALIGN_COUNT_FALSE": {
                                                  "value": 24
                                                },
                                                "ALIGN_FRACTION_TRUE": {
                                                  "value": 17
                                                },
                                                "ALIGN_PERCENTILE_99": {
                                                  "value": 18
                                                },
                                                "ALIGN_PERCENTILE_95": {
                                                  "value": 19
                                                },
                                                "ALIGN_PERCENTILE_50": {
                                                  "value": 20
                                                },
                                                "ALIGN_PERCENTILE_05": {
                                                  "value": 21
                                                },
                                                "ALIGN_PERCENT_CHANGE": {
                                                  "value": 23
                                                }
                                              }
                                            },
                                            "cross_series_reducer": {
                                              "type": "enum",
                                              "name": "Reducer",
                                              "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                              "values": {
                                                "REDUCE_NONE": {
                                                  "value": 0
                                                },
                                                "REDUCE_MEAN": {
                                                  "value": 1
                                                },
                                                "REDUCE_MIN": {
                                                  "value": 2
                                                },
                                                "REDUCE_MAX": {
                                                  "value": 3
                                                },
                                                "REDUCE_SUM": {
                                                  "value": 4
                                                },
                                                "REDUCE_STDDEV": {
                                                  "value": 5
                                                },
                                                "REDUCE_COUNT": {
                                                  "value": 6
                                                },
                                                "REDUCE_COUNT_TRUE": {
                                                  "value": 7
                                                },
                                                "REDUCE_COUNT_FALSE": {
                                                  "value": 15
                                                },
                                                "REDUCE_FRACTION_TRUE": {
                                                  "value": 8
                                                },
                                                "REDUCE_PERCENTILE_99": {
                                                  "value": 9
                                                },
                                                "REDUCE_PERCENTILE_95": {
                                                  "value": 10
                                                },
                                                "REDUCE_PERCENTILE_50": {
                                                  "value": 11
                                                },
                                                "REDUCE_PERCENTILE_05": {
                                                  "value": 12
                                                }
                                              }
                                            },
                                            "group_by_fields": {
                                              "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "filter"
                                      ]
                                    },
                                    "denominator": {
                                      "type": "object",
                                      "properties": {
                                        "filter": {
                                          "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                          "type": "string"
                                        },
                                        "aggregation": {
                                          "type": "object",
                                          "properties": {
                                            "alignment_period": {
                                              "type": "enum",
                                              "name": "Duration",
                                              "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                              "values": {
                                                "UNDEFINED_DURATION": {
                                                  "value": 0
                                                },
                                                "DURATION_UNSPECIFIED": {
                                                  "value": 529071340
                                                },
                                                "HOUR": {
                                                  "value": 2223588
                                                },
                                                "MAX": {
                                                  "value": 76100
                                                },
                                                "MINUTE": {
                                                  "value": 126786068
                                                }
                                              }
                                            },
                                            "per_series_aligner": {
                                              "type": "enum",
                                              "name": "Aligner",
                                              "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                              "values": {
                                                "ALIGN_NONE": {
                                                  "value": 0
                                                },
                                                "ALIGN_DELTA": {
                                                  "value": 1
                                                },
                                                "ALIGN_RATE": {
                                                  "value": 2
                                                },
                                                "ALIGN_INTERPOLATE": {
                                                  "value": 3
                                                },
                                                "ALIGN_NEXT_OLDER": {
                                                  "value": 4
                                                },
                                                "ALIGN_MIN": {
                                                  "value": 10
                                                },
                                                "ALIGN_MAX": {
                                                  "value": 11
                                                },
                                                "ALIGN_MEAN": {
                                                  "value": 12
                                                },
                                                "ALIGN_COUNT": {
                                                  "value": 13
                                                },
                                                "ALIGN_SUM": {
                                                  "value": 14
                                                },
                                                "ALIGN_STDDEV": {
                                                  "value": 15
                                                },
                                                "ALIGN_COUNT_TRUE": {
                                                  "value": 16
                                                },
                                                "ALIGN_COUNT_FALSE": {
                                                  "value": 24
                                                },
                                                "ALIGN_FRACTION_TRUE": {
                                                  "value": 17
                                                },
                                                "ALIGN_PERCENTILE_99": {
                                                  "value": 18
                                                },
                                                "ALIGN_PERCENTILE_95": {
                                                  "value": 19
                                                },
                                                "ALIGN_PERCENTILE_50": {
                                                  "value": 20
                                                },
                                                "ALIGN_PERCENTILE_05": {
                                                  "value": 21
                                                },
                                                "ALIGN_PERCENT_CHANGE": {
                                                  "value": 23
                                                }
                                              }
                                            },
                                            "cross_series_reducer": {
                                              "type": "enum",
                                              "name": "Reducer",
                                              "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                              "values": {
                                                "REDUCE_NONE": {
                                                  "value": 0
                                                },
                                                "REDUCE_MEAN": {
                                                  "value": 1
                                                },
                                                "REDUCE_MIN": {
                                                  "value": 2
                                                },
                                                "REDUCE_MAX": {
                                                  "value": 3
                                                },
                                                "REDUCE_SUM": {
                                                  "value": 4
                                                },
                                                "REDUCE_STDDEV": {
                                                  "value": 5
                                                },
                                                "REDUCE_COUNT": {
                                                  "value": 6
                                                },
                                                "REDUCE_COUNT_TRUE": {
                                                  "value": 7
                                                },
                                                "REDUCE_COUNT_FALSE": {
                                                  "value": 15
                                                },
                                                "REDUCE_FRACTION_TRUE": {
                                                  "value": 8
                                                },
                                                "REDUCE_PERCENTILE_99": {
                                                  "value": 9
                                                },
                                                "REDUCE_PERCENTILE_95": {
                                                  "value": 10
                                                },
                                                "REDUCE_PERCENTILE_50": {
                                                  "value": 11
                                                },
                                                "REDUCE_PERCENTILE_05": {
                                                  "value": 12
                                                }
                                              }
                                            },
                                            "group_by_fields": {
                                              "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "filter"
                                      ]
                                    },
                                    "secondary_aggregation": {
                                      "type": "object",
                                      "properties": {
                                        "alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        },
                                        "per_series_aligner": {
                                          "type": "enum",
                                          "name": "Aligner",
                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                          "values": {
                                            "ALIGN_NONE": {
                                              "value": 0
                                            },
                                            "ALIGN_DELTA": {
                                              "value": 1
                                            },
                                            "ALIGN_RATE": {
                                              "value": 2
                                            },
                                            "ALIGN_INTERPOLATE": {
                                              "value": 3
                                            },
                                            "ALIGN_NEXT_OLDER": {
                                              "value": 4
                                            },
                                            "ALIGN_MIN": {
                                              "value": 10
                                            },
                                            "ALIGN_MAX": {
                                              "value": 11
                                            },
                                            "ALIGN_MEAN": {
                                              "value": 12
                                            },
                                            "ALIGN_COUNT": {
                                              "value": 13
                                            },
                                            "ALIGN_SUM": {
                                              "value": 14
                                            },
                                            "ALIGN_STDDEV": {
                                              "value": 15
                                            },
                                            "ALIGN_COUNT_TRUE": {
                                              "value": 16
                                            },
                                            "ALIGN_COUNT_FALSE": {
                                              "value": 24
                                            },
                                            "ALIGN_FRACTION_TRUE": {
                                              "value": 17
                                            },
                                            "ALIGN_PERCENTILE_99": {
                                              "value": 18
                                            },
                                            "ALIGN_PERCENTILE_95": {
                                              "value": 19
                                            },
                                            "ALIGN_PERCENTILE_50": {
                                              "value": 20
                                            },
                                            "ALIGN_PERCENTILE_05": {
                                              "value": 21
                                            },
                                            "ALIGN_PERCENT_CHANGE": {
                                              "value": 23
                                            }
                                          }
                                        },
                                        "cross_series_reducer": {
                                          "type": "enum",
                                          "name": "Reducer",
                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                          "values": {
                                            "REDUCE_NONE": {
                                              "value": 0
                                            },
                                            "REDUCE_MEAN": {
                                              "value": 1
                                            },
                                            "REDUCE_MIN": {
                                              "value": 2
                                            },
                                            "REDUCE_MAX": {
                                              "value": 3
                                            },
                                            "REDUCE_SUM": {
                                              "value": 4
                                            },
                                            "REDUCE_STDDEV": {
                                              "value": 5
                                            },
                                            "REDUCE_COUNT": {
                                              "value": 6
                                            },
                                            "REDUCE_COUNT_TRUE": {
                                              "value": 7
                                            },
                                            "REDUCE_COUNT_FALSE": {
                                              "value": 15
                                            },
                                            "REDUCE_FRACTION_TRUE": {
                                              "value": 8
                                            },
                                            "REDUCE_PERCENTILE_99": {
                                              "value": 9
                                            },
                                            "REDUCE_PERCENTILE_95": {
                                              "value": 10
                                            },
                                            "REDUCE_PERCENTILE_50": {
                                              "value": 11
                                            },
                                            "REDUCE_PERCENTILE_05": {
                                              "value": 12
                                            }
                                          }
                                        },
                                        "group_by_fields": {
                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "pick_time_series_filter": {
                                      "type": "object",
                                      "properties": {
                                        "ranking_method": {
                                          "type": "enum",
                                          "name": "Method",
                                          "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                          "values": {
                                            "METHOD_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "METHOD_CLUSTER_OUTLIER": {
                                              "value": 1
                                            }
                                          }
                                        },
                                        "num_time_series": {
                                          "description": "How many time series to allow to pass through the filter.",
                                          "type": "integer"
                                        },
                                        "direction": {
                                          "type": "enum",
                                          "name": "Direction",
                                          "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                          "values": {
                                            "DIRECTION_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "INCOMING": {
                                              "value": 1
                                            },
                                            "OUTGOING": {
                                              "value": 2
                                            }
                                          }
                                        },
                                        "interval": {
                                          "type": "object",
                                          "properties": {
                                            "min_": {
                                              "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                              "type": "integer"
                                            },
                                            "max_": {
                                              "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "statistical_time_series_filter": {
                                      "type": "object",
                                      "properties": {
                                        "ranking_method": {
                                          "type": "enum",
                                          "name": "Method",
                                          "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                          "values": {
                                            "METHOD_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "METHOD_CLUSTER_OUTLIER": {
                                              "value": 1
                                            }
                                          }
                                        },
                                        "num_time_series": {
                                          "description": "How many time series to output.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                },
                                "time_series_query_language": {
                                  "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                  "type": "string"
                                },
                                "prometheus_query": {
                                  "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                  "type": "string"
                                },
                                "unit_override": {
                                  "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                  "type": "string"
                                },
                                "output_full_duration": {
                                  "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                  "type": "boolean"
                                }
                              }
                            },
                            "gauge_view": {
                              "type": "object",
                              "properties": {
                                "lower_bound": {
                                  "description": "The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.",
                                  "type": "number"
                                },
                                "upper_bound": {
                                  "description": "The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.",
                                  "type": "number"
                                }
                              }
                            },
                            "spark_chart_view": {
                              "type": "object",
                              "properties": {
                                "spark_chart_type": {
                                  "type": "enum",
                                  "name": "SparkChartType",
                                  "description": "Defines the possible types of spark chart supported by the\n``Scorecard``.\n\nValues:\n    SPARK_CHART_TYPE_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    SPARK_LINE (1):\n        The sparkline will be rendered as a small\n        line chart.\n    SPARK_BAR (2):\n        The sparkbar will be rendered as a small bar\n        chart.",
                                  "values": {
                                    "SPARK_CHART_TYPE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "SPARK_LINE": {
                                      "value": 1
                                    },
                                    "SPARK_BAR": {
                                      "value": 2
                                    }
                                  }
                                },
                                "min_alignment_period": {
                                  "type": "enum",
                                  "name": "Duration",
                                  "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                  "values": {
                                    "UNDEFINED_DURATION": {
                                      "value": 0
                                    },
                                    "DURATION_UNSPECIFIED": {
                                      "value": 529071340
                                    },
                                    "HOUR": {
                                      "value": 2223588
                                    },
                                    "MAX": {
                                      "value": 76100
                                    },
                                    "MINUTE": {
                                      "value": 126786068
                                    }
                                  }
                                }
                              },
                              "required": [
                                "spark_chart_type"
                              ]
                            },
                            "blank_view": {
                              "description": "Will cause the ``Scorecard`` to show only the value, with no indicator to its value relative to its thresholds.  This field is a member of `oneof`_ ``data_view``.",
                              "type": "object",
                              "reference": "google.protobuf.empty_pb2.Empty"
                            },
                            "thresholds": {
                              "description": "The thresholds used to determine the state of the scorecard given the time series' current value. For an actual value x, the scorecard is in a danger state if x is less than or equal to a danger threshold that triggers below, or greater than or equal to a danger threshold that triggers above. Similarly, if x is above/below a warning threshold that triggers above/below, then the scorecard is in a warning state - unless x also puts it in a danger state. (Danger trumps warning.)  As an example, consider a scorecard with the following four thresholds:  ::  { value: 90, category: 'DANGER', trigger: 'ABOVE', }, { value: 70, category: 'WARNING', trigger: 'ABOVE', }, { value: 10, category: 'DANGER', trigger: 'BELOW', }, { value: 20, category: 'WARNING', trigger: 'BELOW', }  Then: values less than or equal to 10 would put the scorecard in a DANGER state, values greater than 10 but less than or equal to 20 a WARNING state, values strictly between 20 and 70 an OK state, values greater than or equal to 70 but less than 90 a WARNING state, and values greater than or equal to 90 a DANGER state.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "description": "A label for the threshold.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The value of the threshold. The value should be defined in the native scale of the metric.",
                                    "type": "number"
                                  },
                                  "color": {
                                    "type": "object",
                                    "properties": {
                                      "saturation": {
                                        "description": "Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.",
                                        "type": "number"
                                      },
                                      "contrast": {
                                        "description": "Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.",
                                        "type": "number"
                                      },
                                      "brightness": {
                                        "description": "Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.",
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "direction": {
                                    "type": "enum",
                                    "name": "Direction",
                                    "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                    "values": {
                                      "DIRECTION_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "INCOMING": {
                                        "value": 1
                                      },
                                      "OUTGOING": {
                                        "value": 2
                                      }
                                    }
                                  },
                                  "target_axis": {
                                    "type": "enum",
                                    "name": "TargetAxis",
                                    "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                    "values": {
                                      "TARGET_AXIS_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "Y1": {
                                        "value": 1
                                      },
                                      "Y2": {
                                        "value": 2
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "time_series_query"
                          ]
                        },
                        "text": {
                          "type": "object",
                          "properties": {
                            "content": {
                              "description": "The text content to be displayed.",
                              "type": "string"
                            },
                            "format_": {
                              "type": "enum",
                              "name": "Format",
                              "description": "The format type of the text content.\n\nValues:\n    FORMAT_UNSPECIFIED (0):\n        Format is unspecified. Defaults to MARKDOWN.\n    MARKDOWN (1):\n        The text contains Markdown formatting.\n    RAW (2):\n        The text contains no special formatting.",
                              "values": {
                                "FORMAT_UNSPECIFIED": {
                                  "value": 0
                                },
                                "MARKDOWN": {
                                  "value": 1
                                },
                                "RAW": {
                                  "value": 2
                                }
                              }
                            },
                            "style": {
                              "type": "object",
                              "properties": {
                                "background_color": {
                                  "description": "The background color as a hex string. \"#RRGGBB\" or \"#RGB\".",
                                  "type": "string"
                                },
                                "text_color": {
                                  "description": "The text color as a hex string. \"#RRGGBB\" or \"#RGB\".",
                                  "type": "string"
                                },
                                "horizontal_alignment": {
                                  "type": "enum",
                                  "name": "HorizontalAlignment",
                                  "description": "The horizontal alignment of both the title and content on a\ntext widget\n\nValues:\n    HORIZONTAL_ALIGNMENT_UNSPECIFIED (0):\n        No horizontal alignment specified, will default to H_LEFT\n    H_LEFT (1):\n        Left-align\n    H_CENTER (2):\n        Center-align\n    H_RIGHT (3):\n        Right-align",
                                  "values": {
                                    "HORIZONTAL_ALIGNMENT_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "H_LEFT": {
                                      "value": 1
                                    },
                                    "H_CENTER": {
                                      "value": 2
                                    },
                                    "H_RIGHT": {
                                      "value": 3
                                    }
                                  }
                                },
                                "vertical_alignment": {
                                  "type": "enum",
                                  "name": "VerticalAlignment",
                                  "description": "The vertical alignment of both the title and content on a\ntext widget\n\nValues:\n    VERTICAL_ALIGNMENT_UNSPECIFIED (0):\n        No vertical alignment specified, will default to V_TOP\n    V_TOP (1):\n        Top-align\n    V_CENTER (2):\n        Center-align\n    V_BOTTOM (3):\n        Bottom-align",
                                  "values": {
                                    "VERTICAL_ALIGNMENT_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "V_TOP": {
                                      "value": 1
                                    },
                                    "V_CENTER": {
                                      "value": 2
                                    },
                                    "V_BOTTOM": {
                                      "value": 3
                                    }
                                  }
                                },
                                "padding": {
                                  "type": "enum",
                                  "name": "PaddingSize",
                                  "description": "Specifies padding size around a text widget\n\nValues:\n    PADDING_SIZE_UNSPECIFIED (0):\n        No padding size specified, will default to P_EXTRA_SMALL\n    P_EXTRA_SMALL (1):\n        Extra small padding\n    P_SMALL (2):\n        Small padding\n    P_MEDIUM (3):\n        Medium padding\n    P_LARGE (4):\n        Large padding\n    P_EXTRA_LARGE (5):\n        Extra large padding",
                                  "values": {
                                    "PADDING_SIZE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "P_EXTRA_SMALL": {
                                      "value": 1
                                    },
                                    "P_SMALL": {
                                      "value": 2
                                    },
                                    "P_MEDIUM": {
                                      "value": 3
                                    },
                                    "P_LARGE": {
                                      "value": 4
                                    },
                                    "P_EXTRA_LARGE": {
                                      "value": 5
                                    }
                                  }
                                },
                                "font_size": {
                                  "type": "enum",
                                  "name": "FontSize",
                                  "description": "Specifies a font size for the title and content of a text\nwidget\n\nValues:\n    FONT_SIZE_UNSPECIFIED (0):\n        No font size specified, will default to FS_LARGE\n    FS_EXTRA_SMALL (1):\n        Extra small font size\n    FS_SMALL (2):\n        Small font size\n    FS_MEDIUM (3):\n        Medium font size\n    FS_LARGE (4):\n        Large font size\n    FS_EXTRA_LARGE (5):\n        Extra large font size",
                                  "values": {
                                    "FONT_SIZE_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "FS_EXTRA_SMALL": {
                                      "value": 1
                                    },
                                    "FS_SMALL": {
                                      "value": 2
                                    },
                                    "FS_MEDIUM": {
                                      "value": 3
                                    },
                                    "FS_LARGE": {
                                      "value": 4
                                    },
                                    "FS_EXTRA_LARGE": {
                                      "value": 5
                                    }
                                  }
                                },
                                "pointer_location": {
                                  "type": "enum",
                                  "name": "PointerLocation",
                                  "description": "Specifies where a visual pointer is placed on a text widget\n(also sometimes called a \"tail\")\n\nValues:\n    POINTER_LOCATION_UNSPECIFIED (0):\n        No visual pointer\n    PL_TOP (1):\n        Placed in the middle of the top of the widget\n    PL_RIGHT (2):\n        Placed in the middle of the right side of the\n        widget\n    PL_BOTTOM (3):\n        Placed in the middle of the bottom of the\n        widget\n    PL_LEFT (4):\n        Placed in the middle of the left side of the\n        widget\n    PL_TOP_LEFT (5):\n        Placed on the left side of the top of the\n        widget\n    PL_TOP_RIGHT (6):\n        Placed on the right side of the top of the\n        widget\n    PL_RIGHT_TOP (7):\n        Placed on the top of the right side of the\n        widget\n    PL_RIGHT_BOTTOM (8):\n        Placed on the bottom of the right side of the\n        widget\n    PL_BOTTOM_RIGHT (9):\n        Placed on the right side of the bottom of the\n        widget\n    PL_BOTTOM_LEFT (10):\n        Placed on the left side of the bottom of the\n    ",
                                  "values": {
                                    "POINTER_LOCATION_UNSPECIFIED": {
                                      "value": 0
                                    },
                                    "PL_TOP": {
                                      "value": 1
                                    },
                                    "PL_RIGHT": {
                                      "value": 2
                                    },
                                    "PL_BOTTOM": {
                                      "value": 3
                                    },
                                    "PL_LEFT": {
                                      "value": 4
                                    },
                                    "PL_TOP_LEFT": {
                                      "value": 5
                                    },
                                    "PL_TOP_RIGHT": {
                                      "value": 6
                                    },
                                    "PL_RIGHT_TOP": {
                                      "value": 7
                                    },
                                    "PL_RIGHT_BOTTOM": {
                                      "value": 8
                                    },
                                    "PL_BOTTOM_RIGHT": {
                                      "value": 9
                                    },
                                    "PL_BOTTOM_LEFT": {
                                      "value": 10
                                    },
                                    "PL_LEFT_BOTTOM": {
                                      "value": 11
                                    },
                                    "PL_LEFT_TOP": {
                                      "value": 12
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "blank": {
                          "description": "A blank space.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.protobuf.empty_pb2.Empty"
                        },
                        "alert_chart": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Required. The resource name of the alert policy. The format is:  ::  projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ]
                        },
                        "time_series_table": {
                          "type": "object",
                          "properties": {
                            "data_sets": {
                              "description": "Required. The data displayed in this table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "time_series_query": {
                                    "type": "object",
                                    "properties": {
                                      "time_series_filter": {
                                        "type": "object",
                                        "properties": {
                                          "filter": {
                                            "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                            "type": "string"
                                          },
                                          "aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "filter"
                                        ]
                                      },
                                      "time_series_filter_ratio": {
                                        "type": "object",
                                        "properties": {
                                          "numerator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "denominator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "time_series_query_language": {
                                        "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "prometheus_query": {
                                        "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "unit_override": {
                                        "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                        "type": "string"
                                      },
                                      "output_full_duration": {
                                        "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "table_template": {
                                    "description": "Optional. A template string for naming ``TimeSeries`` in the resulting data set. This should be a string with interpolations of the form ``${label_name}``, which will resolve to the label's value i.e. \"${resource.labels.project_id}.\".",
                                    "type": "string"
                                  },
                                  "min_alignment_period": {
                                    "type": "enum",
                                    "name": "Duration",
                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                    "values": {
                                      "UNDEFINED_DURATION": {
                                        "value": 0
                                      },
                                      "DURATION_UNSPECIFIED": {
                                        "value": 529071340
                                      },
                                      "HOUR": {
                                        "value": 2223588
                                      },
                                      "MAX": {
                                        "value": 76100
                                      },
                                      "MINUTE": {
                                        "value": 126786068
                                      }
                                    }
                                  },
                                  "table_display_options": {
                                    "type": "object",
                                    "properties": {
                                      "shown_columns": {
                                        "description": "Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "time_series_query"
                                ]
                              }
                            },
                            "metric_visualization": {
                              "type": "enum",
                              "name": "MetricVisualization",
                              "description": "Enum for metric metric_visualization\n\nValues:\n    METRIC_VISUALIZATION_UNSPECIFIED (0):\n        Unspecified state\n    NUMBER (1):\n        Default text rendering\n    BAR (2):\n        Horizontal bar rendering",
                              "values": {
                                "METRIC_VISUALIZATION_UNSPECIFIED": {
                                  "value": 0
                                },
                                "NUMBER": {
                                  "value": 1
                                },
                                "BAR": {
                                  "value": 2
                                }
                              }
                            },
                            "column_settings": {
                              "description": "Optional. The list of the persistent column settings for the table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "column": {
                                    "description": "Required. The id of the column.",
                                    "type": "string"
                                  },
                                  "visible": {
                                    "description": "Required. Whether the column should be visible on page load.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "column",
                                  "visible"
                                ]
                              }
                            }
                          },
                          "required": [
                            "data_sets"
                          ]
                        },
                        "collapsible_group": {
                          "type": "object",
                          "properties": {
                            "collapsed": {
                              "description": "The collapsed state of the widget on first page load.",
                              "type": "boolean"
                            }
                          }
                        },
                        "logs_panel": {
                          "type": "object",
                          "properties": {
                            "filter": {
                              "description": "A filter that chooses which log entries to return. See `Advanced Logs Queries <https://cloud.google.com/logging/docs/view/advanced-queries>`__. Only log entries that match the filter are returned. An empty filter matches all log entries.",
                              "type": "string"
                            },
                            "resource_names": {
                              "description": "The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "incident_list": {
                          "type": "object",
                          "properties": {
                            "monitored_resources": {
                              "description": "Optional. The monitored resource for which incidents are listed. The resource doesn't need to be fully specified. That is, you can specify the resource type but not the values of the resource labels. The resource type and labels are used for filtering.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.api.monitored_resource_pb2.MonitoredResource"
                              }
                            },
                            "policy_names": {
                              "description": "Optional. A list of alert policy names to filter the incident list by. Don't include the project ID prefix in the policy name. For example, use ``alertPolicies/utilization``.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "pie_chart": {
                          "type": "object",
                          "properties": {
                            "data_sets": {
                              "description": "Required. The queries for the chart's data.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "time_series_query": {
                                    "type": "object",
                                    "properties": {
                                      "time_series_filter": {
                                        "type": "object",
                                        "properties": {
                                          "filter": {
                                            "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                            "type": "string"
                                          },
                                          "aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "filter"
                                        ]
                                      },
                                      "time_series_filter_ratio": {
                                        "type": "object",
                                        "properties": {
                                          "numerator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "denominator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "time_series_query_language": {
                                        "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "prometheus_query": {
                                        "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "unit_override": {
                                        "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                        "type": "string"
                                      },
                                      "output_full_duration": {
                                        "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "slice_name_template": {
                                    "description": "Optional. A template for the name of the slice. This name will be displayed in the legend and the tooltip of the pie chart. It replaces the auto-generated names for the slices. For example, if the template is set to ``${resource.labels.zone}``, the zone's value will be used for the name instead of the default name.",
                                    "type": "string"
                                  },
                                  "min_alignment_period": {
                                    "type": "enum",
                                    "name": "Duration",
                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                    "values": {
                                      "UNDEFINED_DURATION": {
                                        "value": 0
                                      },
                                      "DURATION_UNSPECIFIED": {
                                        "value": 529071340
                                      },
                                      "HOUR": {
                                        "value": 2223588
                                      },
                                      "MAX": {
                                        "value": 76100
                                      },
                                      "MINUTE": {
                                        "value": 126786068
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "time_series_query"
                                ]
                              }
                            },
                            "chart_type": {
                              "type": "enum",
                              "name": "PieChartType",
                              "description": "Types for the pie chart.\n\nValues:\n    PIE_CHART_TYPE_UNSPECIFIED (0):\n        The zero value. No type specified. Do not\n        use.\n    PIE (1):\n        A Pie type PieChart.\n    DONUT (2):\n        Similar to PIE, but the DONUT type PieChart\n        has a hole in the middle.",
                              "values": {
                                "PIE_CHART_TYPE_UNSPECIFIED": {
                                  "value": 0
                                },
                                "PIE": {
                                  "value": 1
                                },
                                "DONUT": {
                                  "value": 2
                                }
                              }
                            },
                            "show_labels": {
                              "description": "Optional. Indicates whether or not the pie chart should show slices' labels",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "data_sets",
                            "chart_type"
                          ]
                        },
                        "error_reporting_panel": {
                          "type": "object",
                          "properties": {
                            "project_names": {
                              "description": "The resource name of the Google Cloud Platform project. Written as ``projects/{projectID}`` or ``projects/{projectNumber}``, where ``{projectID}`` and ``{projectNumber}`` can be found in the `Google Cloud console <https://support.google.com/cloud/answer/6158840>`__.  Examples: ``projects/my-project-123``, ``projects/5551234``.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "services": {
                              "description": "An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to ``version``, which can be changed whenever new code is deployed.  Contains the service name for error reports extracted from Google App Engine logs or ``default`` if the App Engine default service is used.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "versions": {
                              "description": "Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "section_header": {
                          "type": "object",
                          "properties": {
                            "subtitle": {
                              "description": "The subtitle of the section",
                              "type": "string"
                            },
                            "divider_below": {
                              "description": "Whether to insert a divider below the section in the table of contents",
                              "type": "boolean"
                            }
                          }
                        },
                        "single_view_group": {
                          "type": "object",
                          "properties": {}
                        },
                        "id": {
                          "description": "Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "mosaic_layout": {
                "type": "object",
                "properties": {
                  "columns": {
                    "description": "The number of columns in the mosaic grid. The number of columns must be between 1 and 12, inclusive.",
                    "type": "integer"
                  },
                  "tiles": {
                    "description": "The tiles to display.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_attribute_value": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The attribute name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The attribute value.",
                              "type": "string"
                            }
                          }
                        },
                        "product_attribute_interval": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The attribute name (e.g. \"length\")",
                              "type": "string"
                            },
                            "interval": {
                              "type": "object",
                              "properties": {
                                "min_": {
                                  "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                  "type": "integer"
                                },
                                "max_": {
                                  "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        },
                        "representative_product_id": {
                          "description": "The representative product id for this tile.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "row_layout": {
                "type": "object",
                "properties": {
                  "rows": {
                    "description": "The rows of content to display.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cells": {
                          "description": "Required. The list of cells that constitute the row. Must have the same length as ``columnHeaders`` for two-dimensional tables, a length of 1 for one-dimensional tables.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "no_shipping": {
                                "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                                "type": "boolean"
                              },
                              "flat_rate": {
                                "type": "object",
                                "properties": {
                                  "amount_micros": {
                                    "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                    "type": "integer"
                                  },
                                  "currency_code": {
                                    "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                    "type": "string"
                                  }
                                }
                              },
                              "price_percentage": {
                                "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                                "type": "string"
                              },
                              "carrier_rate": {
                                "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                                "type": "string"
                              },
                              "subtable": {
                                "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "cells"
                      ]
                    }
                  }
                }
              },
              "column_layout": {
                "type": "object",
                "properties": {
                  "columns": {
                    "description": "The columns of content to display.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "weight": {
                          "description": "The relative weight of this column. The column weight is used to adjust the width of columns on the screen (relative to peers). Greater the weight, greater the width of the column on the screen. If omitted, a value of 1 is used while rendering.",
                          "type": "integer"
                        },
                        "widgets": {
                          "description": "The display widgets arranged vertically in this column.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "description": "Optional. The title of the widget.",
                                "type": "string"
                              },
                              "xy_chart": {
                                "type": "object",
                                "properties": {
                                  "data_sets": {
                                    "description": "Required. The data displayed in this chart.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "time_series_query": {
                                          "type": "object",
                                          "properties": {
                                            "time_series_filter": {
                                              "type": "object",
                                              "properties": {
                                                "filter": {
                                                  "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                  "type": "string"
                                                },
                                                "aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "required": [
                                                "filter"
                                              ]
                                            },
                                            "time_series_filter_ratio": {
                                              "type": "object",
                                              "properties": {
                                                "numerator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "denominator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "time_series_query_language": {
                                              "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "prometheus_query": {
                                              "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "unit_override": {
                                              "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                              "type": "string"
                                            },
                                            "output_full_duration": {
                                              "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "plot_type": {
                                          "type": "enum",
                                          "name": "PlotType",
                                          "description": "The types of plotting strategies for data sets.\n\nValues:\n    PLOT_TYPE_UNSPECIFIED (0):\n        Plot type is unspecified. The view will default to ``LINE``.\n    LINE (1):\n        The data is plotted as a set of lines (one\n        line per series).\n    STACKED_AREA (2):\n        The data is plotted as a set of filled areas\n        (one area per series), with the areas stacked\n        vertically (the base of each area is the top of\n        its predecessor, and the base of the first area\n        is the x-axis). Since the areas do not overlap,\n        each is filled with a different opaque color.\n    STACKED_BAR (3):\n        The data is plotted as a set of rectangular\n        boxes (one box per series), with the boxes\n        stacked vertically (the base of each box is the\n        top of its predecessor, and the base of the\n        first box is the x-axis). Since the boxes do not\n        overlap, each is filled with a different opaque\n        color.\n    HEATMAP (4):\n        The data is plotted as a heatmap. The se",
                                          "values": {
                                            "PLOT_TYPE_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "LINE": {
                                              "value": 1
                                            },
                                            "STACKED_AREA": {
                                              "value": 2
                                            },
                                            "STACKED_BAR": {
                                              "value": 3
                                            },
                                            "HEATMAP": {
                                              "value": 4
                                            }
                                          }
                                        },
                                        "legend_template": {
                                          "description": "A template string for naming ``TimeSeries`` in the resulting data set. This should be a string with interpolations of the form ``${label_name}``, which will resolve to the label's value.",
                                          "type": "string"
                                        },
                                        "min_alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        },
                                        "target_axis": {
                                          "type": "enum",
                                          "name": "TargetAxis",
                                          "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                          "values": {
                                            "TARGET_AXIS_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "Y1": {
                                              "value": 1
                                            },
                                            "Y2": {
                                              "value": 2
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "time_series_query"
                                      ]
                                    }
                                  },
                                  "timeshift_duration": {
                                    "type": "enum",
                                    "name": "Duration",
                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                    "values": {
                                      "UNDEFINED_DURATION": {
                                        "value": 0
                                      },
                                      "DURATION_UNSPECIFIED": {
                                        "value": 529071340
                                      },
                                      "HOUR": {
                                        "value": 2223588
                                      },
                                      "MAX": {
                                        "value": 76100
                                      },
                                      "MINUTE": {
                                        "value": 126786068
                                      }
                                    }
                                  },
                                  "thresholds": {
                                    "description": "Threshold lines drawn horizontally across the chart.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "label": {
                                          "description": "A label for the threshold.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The value of the threshold. The value should be defined in the native scale of the metric.",
                                          "type": "number"
                                        },
                                        "color": {
                                          "type": "object",
                                          "properties": {
                                            "saturation": {
                                              "description": "Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.",
                                              "type": "number"
                                            },
                                            "contrast": {
                                              "description": "Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.",
                                              "type": "number"
                                            },
                                            "brightness": {
                                              "description": "Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.",
                                              "type": "number"
                                            }
                                          }
                                        },
                                        "direction": {
                                          "type": "enum",
                                          "name": "Direction",
                                          "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                          "values": {
                                            "DIRECTION_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "INCOMING": {
                                              "value": 1
                                            },
                                            "OUTGOING": {
                                              "value": 2
                                            }
                                          }
                                        },
                                        "target_axis": {
                                          "type": "enum",
                                          "name": "TargetAxis",
                                          "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                          "values": {
                                            "TARGET_AXIS_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "Y1": {
                                              "value": 1
                                            },
                                            "Y2": {
                                              "value": 2
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "x_axis": {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "description": "The label of the axis.",
                                        "type": "string"
                                      },
                                      "scale": {
                                        "type": "enum",
                                        "name": "Scale",
                                        "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                        "values": {
                                          "SCALE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "LINEAR": {
                                            "value": 1
                                          },
                                          "LOG10": {
                                            "value": 2
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "y_axis": {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "description": "The label of the axis.",
                                        "type": "string"
                                      },
                                      "scale": {
                                        "type": "enum",
                                        "name": "Scale",
                                        "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                        "values": {
                                          "SCALE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "LINEAR": {
                                            "value": 1
                                          },
                                          "LOG10": {
                                            "value": 2
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "y2_axis": {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "description": "The label of the axis.",
                                        "type": "string"
                                      },
                                      "scale": {
                                        "type": "enum",
                                        "name": "Scale",
                                        "description": "Types of scales used in axes.\n\nValues:\n    SCALE_UNSPECIFIED (0):\n        Scale is unspecified. The view will default to ``LINEAR``.\n    LINEAR (1):\n        Linear scale.\n    LOG10 (2):\n        Logarithmic scale (base 10).",
                                        "values": {
                                          "SCALE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "LINEAR": {
                                            "value": 1
                                          },
                                          "LOG10": {
                                            "value": 2
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "chart_options": {
                                    "type": "object",
                                    "properties": {
                                      "mode": {
                                        "type": "enum",
                                        "name": "Mode",
                                        "description": "Options for handling file mode attribute.\n\nValues:\n    MODE_UNSPECIFIED (0):\n        Mode behavior is unspecified.\n    MODE_SKIP (1):\n        Do not preserve mode during a transfer job.\n    MODE_PRESERVE (2):\n        Preserve mode during a transfer job.",
                                        "values": {
                                          "MODE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "MODE_SKIP": {
                                            "value": 1
                                          },
                                          "MODE_PRESERVE": {
                                            "value": 2
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "data_sets"
                                ]
                              },
                              "scorecard": {
                                "type": "object",
                                "properties": {
                                  "time_series_query": {
                                    "type": "object",
                                    "properties": {
                                      "time_series_filter": {
                                        "type": "object",
                                        "properties": {
                                          "filter": {
                                            "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                            "type": "string"
                                          },
                                          "aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "filter"
                                        ]
                                      },
                                      "time_series_filter_ratio": {
                                        "type": "object",
                                        "properties": {
                                          "numerator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "denominator": {
                                            "type": "object",
                                            "properties": {
                                              "filter": {
                                                "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                "type": "string"
                                              },
                                              "aggregation": {
                                                "type": "object",
                                                "properties": {
                                                  "alignment_period": {
                                                    "type": "enum",
                                                    "name": "Duration",
                                                    "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                    "values": {
                                                      "UNDEFINED_DURATION": {
                                                        "value": 0
                                                      },
                                                      "DURATION_UNSPECIFIED": {
                                                        "value": 529071340
                                                      },
                                                      "HOUR": {
                                                        "value": 2223588
                                                      },
                                                      "MAX": {
                                                        "value": 76100
                                                      },
                                                      "MINUTE": {
                                                        "value": 126786068
                                                      }
                                                    }
                                                  },
                                                  "per_series_aligner": {
                                                    "type": "enum",
                                                    "name": "Aligner",
                                                    "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                    "values": {
                                                      "ALIGN_NONE": {
                                                        "value": 0
                                                      },
                                                      "ALIGN_DELTA": {
                                                        "value": 1
                                                      },
                                                      "ALIGN_RATE": {
                                                        "value": 2
                                                      },
                                                      "ALIGN_INTERPOLATE": {
                                                        "value": 3
                                                      },
                                                      "ALIGN_NEXT_OLDER": {
                                                        "value": 4
                                                      },
                                                      "ALIGN_MIN": {
                                                        "value": 10
                                                      },
                                                      "ALIGN_MAX": {
                                                        "value": 11
                                                      },
                                                      "ALIGN_MEAN": {
                                                        "value": 12
                                                      },
                                                      "ALIGN_COUNT": {
                                                        "value": 13
                                                      },
                                                      "ALIGN_SUM": {
                                                        "value": 14
                                                      },
                                                      "ALIGN_STDDEV": {
                                                        "value": 15
                                                      },
                                                      "ALIGN_COUNT_TRUE": {
                                                        "value": 16
                                                      },
                                                      "ALIGN_COUNT_FALSE": {
                                                        "value": 24
                                                      },
                                                      "ALIGN_FRACTION_TRUE": {
                                                        "value": 17
                                                      },
                                                      "ALIGN_PERCENTILE_99": {
                                                        "value": 18
                                                      },
                                                      "ALIGN_PERCENTILE_95": {
                                                        "value": 19
                                                      },
                                                      "ALIGN_PERCENTILE_50": {
                                                        "value": 20
                                                      },
                                                      "ALIGN_PERCENTILE_05": {
                                                        "value": 21
                                                      },
                                                      "ALIGN_PERCENT_CHANGE": {
                                                        "value": 23
                                                      }
                                                    }
                                                  },
                                                  "cross_series_reducer": {
                                                    "type": "enum",
                                                    "name": "Reducer",
                                                    "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                    "values": {
                                                      "REDUCE_NONE": {
                                                        "value": 0
                                                      },
                                                      "REDUCE_MEAN": {
                                                        "value": 1
                                                      },
                                                      "REDUCE_MIN": {
                                                        "value": 2
                                                      },
                                                      "REDUCE_MAX": {
                                                        "value": 3
                                                      },
                                                      "REDUCE_SUM": {
                                                        "value": 4
                                                      },
                                                      "REDUCE_STDDEV": {
                                                        "value": 5
                                                      },
                                                      "REDUCE_COUNT": {
                                                        "value": 6
                                                      },
                                                      "REDUCE_COUNT_TRUE": {
                                                        "value": 7
                                                      },
                                                      "REDUCE_COUNT_FALSE": {
                                                        "value": 15
                                                      },
                                                      "REDUCE_FRACTION_TRUE": {
                                                        "value": 8
                                                      },
                                                      "REDUCE_PERCENTILE_99": {
                                                        "value": 9
                                                      },
                                                      "REDUCE_PERCENTILE_95": {
                                                        "value": 10
                                                      },
                                                      "REDUCE_PERCENTILE_50": {
                                                        "value": 11
                                                      },
                                                      "REDUCE_PERCENTILE_05": {
                                                        "value": 12
                                                      }
                                                    }
                                                  },
                                                  "group_by_fields": {
                                                    "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "filter"
                                            ]
                                          },
                                          "secondary_aggregation": {
                                            "type": "object",
                                            "properties": {
                                              "alignment_period": {
                                                "type": "enum",
                                                "name": "Duration",
                                                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                "values": {
                                                  "UNDEFINED_DURATION": {
                                                    "value": 0
                                                  },
                                                  "DURATION_UNSPECIFIED": {
                                                    "value": 529071340
                                                  },
                                                  "HOUR": {
                                                    "value": 2223588
                                                  },
                                                  "MAX": {
                                                    "value": 76100
                                                  },
                                                  "MINUTE": {
                                                    "value": 126786068
                                                  }
                                                }
                                              },
                                              "per_series_aligner": {
                                                "type": "enum",
                                                "name": "Aligner",
                                                "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                "values": {
                                                  "ALIGN_NONE": {
                                                    "value": 0
                                                  },
                                                  "ALIGN_DELTA": {
                                                    "value": 1
                                                  },
                                                  "ALIGN_RATE": {
                                                    "value": 2
                                                  },
                                                  "ALIGN_INTERPOLATE": {
                                                    "value": 3
                                                  },
                                                  "ALIGN_NEXT_OLDER": {
                                                    "value": 4
                                                  },
                                                  "ALIGN_MIN": {
                                                    "value": 10
                                                  },
                                                  "ALIGN_MAX": {
                                                    "value": 11
                                                  },
                                                  "ALIGN_MEAN": {
                                                    "value": 12
                                                  },
                                                  "ALIGN_COUNT": {
                                                    "value": 13
                                                  },
                                                  "ALIGN_SUM": {
                                                    "value": 14
                                                  },
                                                  "ALIGN_STDDEV": {
                                                    "value": 15
                                                  },
                                                  "ALIGN_COUNT_TRUE": {
                                                    "value": 16
                                                  },
                                                  "ALIGN_COUNT_FALSE": {
                                                    "value": 24
                                                  },
                                                  "ALIGN_FRACTION_TRUE": {
                                                    "value": 17
                                                  },
                                                  "ALIGN_PERCENTILE_99": {
                                                    "value": 18
                                                  },
                                                  "ALIGN_PERCENTILE_95": {
                                                    "value": 19
                                                  },
                                                  "ALIGN_PERCENTILE_50": {
                                                    "value": 20
                                                  },
                                                  "ALIGN_PERCENTILE_05": {
                                                    "value": 21
                                                  },
                                                  "ALIGN_PERCENT_CHANGE": {
                                                    "value": 23
                                                  }
                                                }
                                              },
                                              "cross_series_reducer": {
                                                "type": "enum",
                                                "name": "Reducer",
                                                "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                "values": {
                                                  "REDUCE_NONE": {
                                                    "value": 0
                                                  },
                                                  "REDUCE_MEAN": {
                                                    "value": 1
                                                  },
                                                  "REDUCE_MIN": {
                                                    "value": 2
                                                  },
                                                  "REDUCE_MAX": {
                                                    "value": 3
                                                  },
                                                  "REDUCE_SUM": {
                                                    "value": 4
                                                  },
                                                  "REDUCE_STDDEV": {
                                                    "value": 5
                                                  },
                                                  "REDUCE_COUNT": {
                                                    "value": 6
                                                  },
                                                  "REDUCE_COUNT_TRUE": {
                                                    "value": 7
                                                  },
                                                  "REDUCE_COUNT_FALSE": {
                                                    "value": 15
                                                  },
                                                  "REDUCE_FRACTION_TRUE": {
                                                    "value": 8
                                                  },
                                                  "REDUCE_PERCENTILE_99": {
                                                    "value": 9
                                                  },
                                                  "REDUCE_PERCENTILE_95": {
                                                    "value": 10
                                                  },
                                                  "REDUCE_PERCENTILE_50": {
                                                    "value": 11
                                                  },
                                                  "REDUCE_PERCENTILE_05": {
                                                    "value": 12
                                                  }
                                                }
                                              },
                                              "group_by_fields": {
                                                "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "pick_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to allow to pass through the filter.",
                                                "type": "integer"
                                              },
                                              "direction": {
                                                "type": "enum",
                                                "name": "Direction",
                                                "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                "values": {
                                                  "DIRECTION_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "INCOMING": {
                                                    "value": 1
                                                  },
                                                  "OUTGOING": {
                                                    "value": 2
                                                  }
                                                }
                                              },
                                              "interval": {
                                                "type": "object",
                                                "properties": {
                                                  "min_": {
                                                    "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                    "type": "integer"
                                                  },
                                                  "max_": {
                                                    "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "statistical_time_series_filter": {
                                            "type": "object",
                                            "properties": {
                                              "ranking_method": {
                                                "type": "enum",
                                                "name": "Method",
                                                "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                "values": {
                                                  "METHOD_UNSPECIFIED": {
                                                    "value": 0
                                                  },
                                                  "METHOD_CLUSTER_OUTLIER": {
                                                    "value": 1
                                                  }
                                                }
                                              },
                                              "num_time_series": {
                                                "description": "How many time series to output.",
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "time_series_query_language": {
                                        "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "prometheus_query": {
                                        "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                        "type": "string"
                                      },
                                      "unit_override": {
                                        "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                        "type": "string"
                                      },
                                      "output_full_duration": {
                                        "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "gauge_view": {
                                    "type": "object",
                                    "properties": {
                                      "lower_bound": {
                                        "description": "The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.",
                                        "type": "number"
                                      },
                                      "upper_bound": {
                                        "description": "The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.",
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "spark_chart_view": {
                                    "type": "object",
                                    "properties": {
                                      "spark_chart_type": {
                                        "type": "enum",
                                        "name": "SparkChartType",
                                        "description": "Defines the possible types of spark chart supported by the\n``Scorecard``.\n\nValues:\n    SPARK_CHART_TYPE_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    SPARK_LINE (1):\n        The sparkline will be rendered as a small\n        line chart.\n    SPARK_BAR (2):\n        The sparkbar will be rendered as a small bar\n        chart.",
                                        "values": {
                                          "SPARK_CHART_TYPE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "SPARK_LINE": {
                                            "value": 1
                                          },
                                          "SPARK_BAR": {
                                            "value": 2
                                          }
                                        }
                                      },
                                      "min_alignment_period": {
                                        "type": "enum",
                                        "name": "Duration",
                                        "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                        "values": {
                                          "UNDEFINED_DURATION": {
                                            "value": 0
                                          },
                                          "DURATION_UNSPECIFIED": {
                                            "value": 529071340
                                          },
                                          "HOUR": {
                                            "value": 2223588
                                          },
                                          "MAX": {
                                            "value": 76100
                                          },
                                          "MINUTE": {
                                            "value": 126786068
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "spark_chart_type"
                                    ]
                                  },
                                  "blank_view": {
                                    "description": "Will cause the ``Scorecard`` to show only the value, with no indicator to its value relative to its thresholds.  This field is a member of `oneof`_ ``data_view``.",
                                    "type": "object",
                                    "reference": "google.protobuf.empty_pb2.Empty"
                                  },
                                  "thresholds": {
                                    "description": "The thresholds used to determine the state of the scorecard given the time series' current value. For an actual value x, the scorecard is in a danger state if x is less than or equal to a danger threshold that triggers below, or greater than or equal to a danger threshold that triggers above. Similarly, if x is above/below a warning threshold that triggers above/below, then the scorecard is in a warning state - unless x also puts it in a danger state. (Danger trumps warning.)  As an example, consider a scorecard with the following four thresholds:  ::  { value: 90, category: 'DANGER', trigger: 'ABOVE', }, { value: 70, category: 'WARNING', trigger: 'ABOVE', }, { value: 10, category: 'DANGER', trigger: 'BELOW', }, { value: 20, category: 'WARNING', trigger: 'BELOW', }  Then: values less than or equal to 10 would put the scorecard in a DANGER state, values greater than 10 but less than or equal to 20 a WARNING state, values strictly between 20 and 70 an OK state, values greater than or equal to 70 but less than 90 a WARNING state, and values greater than or equal to 90 a DANGER state.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "label": {
                                          "description": "A label for the threshold.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The value of the threshold. The value should be defined in the native scale of the metric.",
                                          "type": "number"
                                        },
                                        "color": {
                                          "type": "object",
                                          "properties": {
                                            "saturation": {
                                              "description": "Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.",
                                              "type": "number"
                                            },
                                            "contrast": {
                                              "description": "Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.",
                                              "type": "number"
                                            },
                                            "brightness": {
                                              "description": "Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.",
                                              "type": "number"
                                            }
                                          }
                                        },
                                        "direction": {
                                          "type": "enum",
                                          "name": "Direction",
                                          "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                          "values": {
                                            "DIRECTION_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "INCOMING": {
                                              "value": 1
                                            },
                                            "OUTGOING": {
                                              "value": 2
                                            }
                                          }
                                        },
                                        "target_axis": {
                                          "type": "enum",
                                          "name": "TargetAxis",
                                          "description": "An axis identifier.\n\nValues:\n    TARGET_AXIS_UNSPECIFIED (0):\n        The target axis was not specified. Defaults\n        to Y1.\n    Y1 (1):\n        The y_axis (the right axis of chart).\n    Y2 (2):\n        The y2_axis (the left axis of chart).",
                                          "values": {
                                            "TARGET_AXIS_UNSPECIFIED": {
                                              "value": 0
                                            },
                                            "Y1": {
                                              "value": 1
                                            },
                                            "Y2": {
                                              "value": 2
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "time_series_query"
                                ]
                              },
                              "text": {
                                "type": "object",
                                "properties": {
                                  "content": {
                                    "description": "The text content to be displayed.",
                                    "type": "string"
                                  },
                                  "format_": {
                                    "type": "enum",
                                    "name": "Format",
                                    "description": "The format type of the text content.\n\nValues:\n    FORMAT_UNSPECIFIED (0):\n        Format is unspecified. Defaults to MARKDOWN.\n    MARKDOWN (1):\n        The text contains Markdown formatting.\n    RAW (2):\n        The text contains no special formatting.",
                                    "values": {
                                      "FORMAT_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "MARKDOWN": {
                                        "value": 1
                                      },
                                      "RAW": {
                                        "value": 2
                                      }
                                    }
                                  },
                                  "style": {
                                    "type": "object",
                                    "properties": {
                                      "background_color": {
                                        "description": "The background color as a hex string. \"#RRGGBB\" or \"#RGB\".",
                                        "type": "string"
                                      },
                                      "text_color": {
                                        "description": "The text color as a hex string. \"#RRGGBB\" or \"#RGB\".",
                                        "type": "string"
                                      },
                                      "horizontal_alignment": {
                                        "type": "enum",
                                        "name": "HorizontalAlignment",
                                        "description": "The horizontal alignment of both the title and content on a\ntext widget\n\nValues:\n    HORIZONTAL_ALIGNMENT_UNSPECIFIED (0):\n        No horizontal alignment specified, will default to H_LEFT\n    H_LEFT (1):\n        Left-align\n    H_CENTER (2):\n        Center-align\n    H_RIGHT (3):\n        Right-align",
                                        "values": {
                                          "HORIZONTAL_ALIGNMENT_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "H_LEFT": {
                                            "value": 1
                                          },
                                          "H_CENTER": {
                                            "value": 2
                                          },
                                          "H_RIGHT": {
                                            "value": 3
                                          }
                                        }
                                      },
                                      "vertical_alignment": {
                                        "type": "enum",
                                        "name": "VerticalAlignment",
                                        "description": "The vertical alignment of both the title and content on a\ntext widget\n\nValues:\n    VERTICAL_ALIGNMENT_UNSPECIFIED (0):\n        No vertical alignment specified, will default to V_TOP\n    V_TOP (1):\n        Top-align\n    V_CENTER (2):\n        Center-align\n    V_BOTTOM (3):\n        Bottom-align",
                                        "values": {
                                          "VERTICAL_ALIGNMENT_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "V_TOP": {
                                            "value": 1
                                          },
                                          "V_CENTER": {
                                            "value": 2
                                          },
                                          "V_BOTTOM": {
                                            "value": 3
                                          }
                                        }
                                      },
                                      "padding": {
                                        "type": "enum",
                                        "name": "PaddingSize",
                                        "description": "Specifies padding size around a text widget\n\nValues:\n    PADDING_SIZE_UNSPECIFIED (0):\n        No padding size specified, will default to P_EXTRA_SMALL\n    P_EXTRA_SMALL (1):\n        Extra small padding\n    P_SMALL (2):\n        Small padding\n    P_MEDIUM (3):\n        Medium padding\n    P_LARGE (4):\n        Large padding\n    P_EXTRA_LARGE (5):\n        Extra large padding",
                                        "values": {
                                          "PADDING_SIZE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "P_EXTRA_SMALL": {
                                            "value": 1
                                          },
                                          "P_SMALL": {
                                            "value": 2
                                          },
                                          "P_MEDIUM": {
                                            "value": 3
                                          },
                                          "P_LARGE": {
                                            "value": 4
                                          },
                                          "P_EXTRA_LARGE": {
                                            "value": 5
                                          }
                                        }
                                      },
                                      "font_size": {
                                        "type": "enum",
                                        "name": "FontSize",
                                        "description": "Specifies a font size for the title and content of a text\nwidget\n\nValues:\n    FONT_SIZE_UNSPECIFIED (0):\n        No font size specified, will default to FS_LARGE\n    FS_EXTRA_SMALL (1):\n        Extra small font size\n    FS_SMALL (2):\n        Small font size\n    FS_MEDIUM (3):\n        Medium font size\n    FS_LARGE (4):\n        Large font size\n    FS_EXTRA_LARGE (5):\n        Extra large font size",
                                        "values": {
                                          "FONT_SIZE_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "FS_EXTRA_SMALL": {
                                            "value": 1
                                          },
                                          "FS_SMALL": {
                                            "value": 2
                                          },
                                          "FS_MEDIUM": {
                                            "value": 3
                                          },
                                          "FS_LARGE": {
                                            "value": 4
                                          },
                                          "FS_EXTRA_LARGE": {
                                            "value": 5
                                          }
                                        }
                                      },
                                      "pointer_location": {
                                        "type": "enum",
                                        "name": "PointerLocation",
                                        "description": "Specifies where a visual pointer is placed on a text widget\n(also sometimes called a \"tail\")\n\nValues:\n    POINTER_LOCATION_UNSPECIFIED (0):\n        No visual pointer\n    PL_TOP (1):\n        Placed in the middle of the top of the widget\n    PL_RIGHT (2):\n        Placed in the middle of the right side of the\n        widget\n    PL_BOTTOM (3):\n        Placed in the middle of the bottom of the\n        widget\n    PL_LEFT (4):\n        Placed in the middle of the left side of the\n        widget\n    PL_TOP_LEFT (5):\n        Placed on the left side of the top of the\n        widget\n    PL_TOP_RIGHT (6):\n        Placed on the right side of the top of the\n        widget\n    PL_RIGHT_TOP (7):\n        Placed on the top of the right side of the\n        widget\n    PL_RIGHT_BOTTOM (8):\n        Placed on the bottom of the right side of the\n        widget\n    PL_BOTTOM_RIGHT (9):\n        Placed on the right side of the bottom of the\n        widget\n    PL_BOTTOM_LEFT (10):\n        Placed on the left side of the bottom of the\n    ",
                                        "values": {
                                          "POINTER_LOCATION_UNSPECIFIED": {
                                            "value": 0
                                          },
                                          "PL_TOP": {
                                            "value": 1
                                          },
                                          "PL_RIGHT": {
                                            "value": 2
                                          },
                                          "PL_BOTTOM": {
                                            "value": 3
                                          },
                                          "PL_LEFT": {
                                            "value": 4
                                          },
                                          "PL_TOP_LEFT": {
                                            "value": 5
                                          },
                                          "PL_TOP_RIGHT": {
                                            "value": 6
                                          },
                                          "PL_RIGHT_TOP": {
                                            "value": 7
                                          },
                                          "PL_RIGHT_BOTTOM": {
                                            "value": 8
                                          },
                                          "PL_BOTTOM_RIGHT": {
                                            "value": 9
                                          },
                                          "PL_BOTTOM_LEFT": {
                                            "value": 10
                                          },
                                          "PL_LEFT_BOTTOM": {
                                            "value": 11
                                          },
                                          "PL_LEFT_TOP": {
                                            "value": 12
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "blank": {
                                "description": "A blank space.  This field is a member of `oneof`_ ``content``.",
                                "type": "object",
                                "reference": "google.protobuf.empty_pb2.Empty"
                              },
                              "alert_chart": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Required. The resource name of the alert policy. The format is:  ::  projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              },
                              "time_series_table": {
                                "type": "object",
                                "properties": {
                                  "data_sets": {
                                    "description": "Required. The data displayed in this table.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "time_series_query": {
                                          "type": "object",
                                          "properties": {
                                            "time_series_filter": {
                                              "type": "object",
                                              "properties": {
                                                "filter": {
                                                  "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                  "type": "string"
                                                },
                                                "aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "required": [
                                                "filter"
                                              ]
                                            },
                                            "time_series_filter_ratio": {
                                              "type": "object",
                                              "properties": {
                                                "numerator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "denominator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "time_series_query_language": {
                                              "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "prometheus_query": {
                                              "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "unit_override": {
                                              "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                              "type": "string"
                                            },
                                            "output_full_duration": {
                                              "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "table_template": {
                                          "description": "Optional. A template string for naming ``TimeSeries`` in the resulting data set. This should be a string with interpolations of the form ``${label_name}``, which will resolve to the label's value i.e. \"${resource.labels.project_id}.\".",
                                          "type": "string"
                                        },
                                        "min_alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        },
                                        "table_display_options": {
                                          "type": "object",
                                          "properties": {
                                            "shown_columns": {
                                              "description": "Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "time_series_query"
                                      ]
                                    }
                                  },
                                  "metric_visualization": {
                                    "type": "enum",
                                    "name": "MetricVisualization",
                                    "description": "Enum for metric metric_visualization\n\nValues:\n    METRIC_VISUALIZATION_UNSPECIFIED (0):\n        Unspecified state\n    NUMBER (1):\n        Default text rendering\n    BAR (2):\n        Horizontal bar rendering",
                                    "values": {
                                      "METRIC_VISUALIZATION_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "NUMBER": {
                                        "value": 1
                                      },
                                      "BAR": {
                                        "value": 2
                                      }
                                    }
                                  },
                                  "column_settings": {
                                    "description": "Optional. The list of the persistent column settings for the table.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "column": {
                                          "description": "Required. The id of the column.",
                                          "type": "string"
                                        },
                                        "visible": {
                                          "description": "Required. Whether the column should be visible on page load.",
                                          "type": "boolean"
                                        }
                                      },
                                      "required": [
                                        "column",
                                        "visible"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "data_sets"
                                ]
                              },
                              "collapsible_group": {
                                "type": "object",
                                "properties": {
                                  "collapsed": {
                                    "description": "The collapsed state of the widget on first page load.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "logs_panel": {
                                "type": "object",
                                "properties": {
                                  "filter": {
                                    "description": "A filter that chooses which log entries to return. See `Advanced Logs Queries <https://cloud.google.com/logging/docs/view/advanced-queries>`__. Only log entries that match the filter are returned. An empty filter matches all log entries.",
                                    "type": "string"
                                  },
                                  "resource_names": {
                                    "description": "The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "incident_list": {
                                "type": "object",
                                "properties": {
                                  "monitored_resources": {
                                    "description": "Optional. The monitored resource for which incidents are listed. The resource doesn't need to be fully specified. That is, you can specify the resource type but not the values of the resource labels. The resource type and labels are used for filtering.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.api.monitored_resource_pb2.MonitoredResource"
                                    }
                                  },
                                  "policy_names": {
                                    "description": "Optional. A list of alert policy names to filter the incident list by. Don't include the project ID prefix in the policy name. For example, use ``alertPolicies/utilization``.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "pie_chart": {
                                "type": "object",
                                "properties": {
                                  "data_sets": {
                                    "description": "Required. The queries for the chart's data.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "time_series_query": {
                                          "type": "object",
                                          "properties": {
                                            "time_series_filter": {
                                              "type": "object",
                                              "properties": {
                                                "filter": {
                                                  "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                  "type": "string"
                                                },
                                                "aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              },
                                              "required": [
                                                "filter"
                                              ]
                                            },
                                            "time_series_filter_ratio": {
                                              "type": "object",
                                              "properties": {
                                                "numerator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "denominator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "filter": {
                                                      "description": "Required. The `monitoring filter <https://cloud.google.com/monitoring/api/v3/filters>`__ that identifies the metric types, resources, and projects to query.",
                                                      "type": "string"
                                                    },
                                                    "aggregation": {
                                                      "type": "object",
                                                      "properties": {
                                                        "alignment_period": {
                                                          "type": "enum",
                                                          "name": "Duration",
                                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                          "values": {
                                                            "UNDEFINED_DURATION": {
                                                              "value": 0
                                                            },
                                                            "DURATION_UNSPECIFIED": {
                                                              "value": 529071340
                                                            },
                                                            "HOUR": {
                                                              "value": 2223588
                                                            },
                                                            "MAX": {
                                                              "value": 76100
                                                            },
                                                            "MINUTE": {
                                                              "value": 126786068
                                                            }
                                                          }
                                                        },
                                                        "per_series_aligner": {
                                                          "type": "enum",
                                                          "name": "Aligner",
                                                          "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                          "values": {
                                                            "ALIGN_NONE": {
                                                              "value": 0
                                                            },
                                                            "ALIGN_DELTA": {
                                                              "value": 1
                                                            },
                                                            "ALIGN_RATE": {
                                                              "value": 2
                                                            },
                                                            "ALIGN_INTERPOLATE": {
                                                              "value": 3
                                                            },
                                                            "ALIGN_NEXT_OLDER": {
                                                              "value": 4
                                                            },
                                                            "ALIGN_MIN": {
                                                              "value": 10
                                                            },
                                                            "ALIGN_MAX": {
                                                              "value": 11
                                                            },
                                                            "ALIGN_MEAN": {
                                                              "value": 12
                                                            },
                                                            "ALIGN_COUNT": {
                                                              "value": 13
                                                            },
                                                            "ALIGN_SUM": {
                                                              "value": 14
                                                            },
                                                            "ALIGN_STDDEV": {
                                                              "value": 15
                                                            },
                                                            "ALIGN_COUNT_TRUE": {
                                                              "value": 16
                                                            },
                                                            "ALIGN_COUNT_FALSE": {
                                                              "value": 24
                                                            },
                                                            "ALIGN_FRACTION_TRUE": {
                                                              "value": 17
                                                            },
                                                            "ALIGN_PERCENTILE_99": {
                                                              "value": 18
                                                            },
                                                            "ALIGN_PERCENTILE_95": {
                                                              "value": 19
                                                            },
                                                            "ALIGN_PERCENTILE_50": {
                                                              "value": 20
                                                            },
                                                            "ALIGN_PERCENTILE_05": {
                                                              "value": 21
                                                            },
                                                            "ALIGN_PERCENT_CHANGE": {
                                                              "value": 23
                                                            }
                                                          }
                                                        },
                                                        "cross_series_reducer": {
                                                          "type": "enum",
                                                          "name": "Reducer",
                                                          "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                          "values": {
                                                            "REDUCE_NONE": {
                                                              "value": 0
                                                            },
                                                            "REDUCE_MEAN": {
                                                              "value": 1
                                                            },
                                                            "REDUCE_MIN": {
                                                              "value": 2
                                                            },
                                                            "REDUCE_MAX": {
                                                              "value": 3
                                                            },
                                                            "REDUCE_SUM": {
                                                              "value": 4
                                                            },
                                                            "REDUCE_STDDEV": {
                                                              "value": 5
                                                            },
                                                            "REDUCE_COUNT": {
                                                              "value": 6
                                                            },
                                                            "REDUCE_COUNT_TRUE": {
                                                              "value": 7
                                                            },
                                                            "REDUCE_COUNT_FALSE": {
                                                              "value": 15
                                                            },
                                                            "REDUCE_FRACTION_TRUE": {
                                                              "value": 8
                                                            },
                                                            "REDUCE_PERCENTILE_99": {
                                                              "value": 9
                                                            },
                                                            "REDUCE_PERCENTILE_95": {
                                                              "value": 10
                                                            },
                                                            "REDUCE_PERCENTILE_50": {
                                                              "value": 11
                                                            },
                                                            "REDUCE_PERCENTILE_05": {
                                                              "value": 12
                                                            }
                                                          }
                                                        },
                                                        "group_by_fields": {
                                                          "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "filter"
                                                  ]
                                                },
                                                "secondary_aggregation": {
                                                  "type": "object",
                                                  "properties": {
                                                    "alignment_period": {
                                                      "type": "enum",
                                                      "name": "Duration",
                                                      "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                                      "values": {
                                                        "UNDEFINED_DURATION": {
                                                          "value": 0
                                                        },
                                                        "DURATION_UNSPECIFIED": {
                                                          "value": 529071340
                                                        },
                                                        "HOUR": {
                                                          "value": 2223588
                                                        },
                                                        "MAX": {
                                                          "value": 76100
                                                        },
                                                        "MINUTE": {
                                                          "value": 126786068
                                                        }
                                                      }
                                                    },
                                                    "per_series_aligner": {
                                                      "type": "enum",
                                                      "name": "Aligner",
                                                      "description": "The ``Aligner`` specifies the operation that will be applied to the\ndata points in each alignment period in a time series. Except for\n``ALIGN_NONE``, which specifies that no operation be applied, each\nalignment operation replaces the set of data values in each\nalignment period with a single value: the result of applying the\noperation to the data values. An aligned time series has a single\ndata value at the end of each ``alignment_period``.\n\nAn alignment operation can change the data type of the values, too.\nFor example, if you apply a counting operation to boolean values,\nthe data ``value_type`` in the original time series is ``BOOLEAN``,\nbut the ``value_type`` in the aligned result is ``INT64``.\n\nValues:\n    ALIGN_NONE (0):\n        No alignment. Raw data is returned. Not valid if\n        cross-series reduction is requested. The ``value_type`` of\n        the result is the same as the ``value_type`` of the input.\n    ALIGN_DELTA (1):\n        Align and convert to\n        [DELTA][google.api.MetricDescriptor.Metr",
                                                      "values": {
                                                        "ALIGN_NONE": {
                                                          "value": 0
                                                        },
                                                        "ALIGN_DELTA": {
                                                          "value": 1
                                                        },
                                                        "ALIGN_RATE": {
                                                          "value": 2
                                                        },
                                                        "ALIGN_INTERPOLATE": {
                                                          "value": 3
                                                        },
                                                        "ALIGN_NEXT_OLDER": {
                                                          "value": 4
                                                        },
                                                        "ALIGN_MIN": {
                                                          "value": 10
                                                        },
                                                        "ALIGN_MAX": {
                                                          "value": 11
                                                        },
                                                        "ALIGN_MEAN": {
                                                          "value": 12
                                                        },
                                                        "ALIGN_COUNT": {
                                                          "value": 13
                                                        },
                                                        "ALIGN_SUM": {
                                                          "value": 14
                                                        },
                                                        "ALIGN_STDDEV": {
                                                          "value": 15
                                                        },
                                                        "ALIGN_COUNT_TRUE": {
                                                          "value": 16
                                                        },
                                                        "ALIGN_COUNT_FALSE": {
                                                          "value": 24
                                                        },
                                                        "ALIGN_FRACTION_TRUE": {
                                                          "value": 17
                                                        },
                                                        "ALIGN_PERCENTILE_99": {
                                                          "value": 18
                                                        },
                                                        "ALIGN_PERCENTILE_95": {
                                                          "value": 19
                                                        },
                                                        "ALIGN_PERCENTILE_50": {
                                                          "value": 20
                                                        },
                                                        "ALIGN_PERCENTILE_05": {
                                                          "value": 21
                                                        },
                                                        "ALIGN_PERCENT_CHANGE": {
                                                          "value": 23
                                                        }
                                                      }
                                                    },
                                                    "cross_series_reducer": {
                                                      "type": "enum",
                                                      "name": "Reducer",
                                                      "description": "A Reducer operation describes how to aggregate data points\nfrom multiple time series into a single time series, where the\nvalue of each data point in the resulting series is a function\nof all the already aligned values in the input time series.\n\nValues:\n    REDUCE_NONE (0):\n        No cross-time series reduction. The output of the\n        ``Aligner`` is returned.\n    REDUCE_MEAN (1):\n        Reduce by computing the mean value across time series for\n        each alignment period. This reducer is valid for\n        [DELTA][google.api.MetricDescriptor.MetricKind.DELTA] and\n        [GAUGE][google.api.MetricDescriptor.MetricKind.GAUGE]\n        metrics with numeric or distribution values. The\n        ``value_type`` of the output is\n        [DOUBLE][google.api.MetricDescriptor.ValueType.DOUBLE].\n    REDUCE_MIN (2):\n        Reduce by computing the minimum value across time series for\n        each alignment period. This reducer is valid for ``DELTA``\n        and ``GAUGE`` metrics with numeric values. The\n        ``valu",
                                                      "values": {
                                                        "REDUCE_NONE": {
                                                          "value": 0
                                                        },
                                                        "REDUCE_MEAN": {
                                                          "value": 1
                                                        },
                                                        "REDUCE_MIN": {
                                                          "value": 2
                                                        },
                                                        "REDUCE_MAX": {
                                                          "value": 3
                                                        },
                                                        "REDUCE_SUM": {
                                                          "value": 4
                                                        },
                                                        "REDUCE_STDDEV": {
                                                          "value": 5
                                                        },
                                                        "REDUCE_COUNT": {
                                                          "value": 6
                                                        },
                                                        "REDUCE_COUNT_TRUE": {
                                                          "value": 7
                                                        },
                                                        "REDUCE_COUNT_FALSE": {
                                                          "value": 15
                                                        },
                                                        "REDUCE_FRACTION_TRUE": {
                                                          "value": 8
                                                        },
                                                        "REDUCE_PERCENTILE_99": {
                                                          "value": 9
                                                        },
                                                        "REDUCE_PERCENTILE_95": {
                                                          "value": 10
                                                        },
                                                        "REDUCE_PERCENTILE_50": {
                                                          "value": 11
                                                        },
                                                        "REDUCE_PERCENTILE_05": {
                                                          "value": 12
                                                        }
                                                      }
                                                    },
                                                    "group_by_fields": {
                                                      "description": "The set of fields to preserve when ``cross_series_reducer`` is specified. The ``group_by_fields`` determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The ``cross_series_reducer`` is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains ``resource.type``. Fields not specified in ``group_by_fields`` are aggregated away. If ``group_by_fields`` is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If ``cross_series_reducer`` is not defined, this field is ignored.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "pick_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to allow to pass through the filter.",
                                                      "type": "integer"
                                                    },
                                                    "direction": {
                                                      "type": "enum",
                                                      "name": "Direction",
                                                      "description": "The direction of the exchanged routes.\n\nValues:\n    DIRECTION_UNSPECIFIED (0):\n        Unspecified exchanged routes direction. This\n        is default.\n    INCOMING (1):\n        Routes imported from the peer network.\n    OUTGOING (2):\n        Routes exported to the peer network.",
                                                      "values": {
                                                        "DIRECTION_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "INCOMING": {
                                                          "value": 1
                                                        },
                                                        "OUTGOING": {
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    "interval": {
                                                      "type": "object",
                                                      "properties": {
                                                        "min_": {
                                                          "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].",
                                                          "type": "integer"
                                                        },
                                                        "max_": {
                                                          "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                                          "type": "integer"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "statistical_time_series_filter": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ranking_method": {
                                                      "type": "enum",
                                                      "name": "Method",
                                                      "description": "The filter methods that can be applied to a stream.\n\nValues:\n    METHOD_UNSPECIFIED (0):\n        Not allowed in well-formed requests.\n    METHOD_CLUSTER_OUTLIER (1):\n        Compute the outlier score of each stream.",
                                                      "values": {
                                                        "METHOD_UNSPECIFIED": {
                                                          "value": 0
                                                        },
                                                        "METHOD_CLUSTER_OUTLIER": {
                                                          "value": 1
                                                        }
                                                      }
                                                    },
                                                    "num_time_series": {
                                                      "description": "How many time series to output.",
                                                      "type": "integer"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "time_series_query_language": {
                                              "description": "A query used to fetch time series with MQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "prometheus_query": {
                                              "description": "A query used to fetch time series with PromQL.  This field is a member of `oneof`_ ``source``.",
                                              "type": "string"
                                            },
                                            "unit_override": {
                                              "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the ```unit`` <https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors>`__ field in ``MetricDescriptor``.",
                                              "type": "string"
                                            },
                                            "output_full_duration": {
                                              "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.  \\*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like  -  XyChart -  Scorecard's spark chart",
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "slice_name_template": {
                                          "description": "Optional. A template for the name of the slice. This name will be displayed in the legend and the tooltip of the pie chart. It replaces the auto-generated names for the slices. For example, if the template is set to ``${resource.labels.zone}``, the zone's value will be used for the name instead of the default name.",
                                          "type": "string"
                                        },
                                        "min_alignment_period": {
                                          "type": "enum",
                                          "name": "Duration",
                                          "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                                          "values": {
                                            "UNDEFINED_DURATION": {
                                              "value": 0
                                            },
                                            "DURATION_UNSPECIFIED": {
                                              "value": 529071340
                                            },
                                            "HOUR": {
                                              "value": 2223588
                                            },
                                            "MAX": {
                                              "value": 76100
                                            },
                                            "MINUTE": {
                                              "value": 126786068
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "time_series_query"
                                      ]
                                    }
                                  },
                                  "chart_type": {
                                    "type": "enum",
                                    "name": "PieChartType",
                                    "description": "Types for the pie chart.\n\nValues:\n    PIE_CHART_TYPE_UNSPECIFIED (0):\n        The zero value. No type specified. Do not\n        use.\n    PIE (1):\n        A Pie type PieChart.\n    DONUT (2):\n        Similar to PIE, but the DONUT type PieChart\n        has a hole in the middle.",
                                    "values": {
                                      "PIE_CHART_TYPE_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "PIE": {
                                        "value": 1
                                      },
                                      "DONUT": {
                                        "value": 2
                                      }
                                    }
                                  },
                                  "show_labels": {
                                    "description": "Optional. Indicates whether or not the pie chart should show slices' labels",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "data_sets",
                                  "chart_type"
                                ]
                              },
                              "error_reporting_panel": {
                                "type": "object",
                                "properties": {
                                  "project_names": {
                                    "description": "The resource name of the Google Cloud Platform project. Written as ``projects/{projectID}`` or ``projects/{projectNumber}``, where ``{projectID}`` and ``{projectNumber}`` can be found in the `Google Cloud console <https://support.google.com/cloud/answer/6158840>`__.  Examples: ``projects/my-project-123``, ``projects/5551234``.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "services": {
                                    "description": "An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to ``version``, which can be changed whenever new code is deployed.  Contains the service name for error reports extracted from Google App Engine logs or ``default`` if the App Engine default service is used.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "versions": {
                                    "description": "Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "section_header": {
                                "type": "object",
                                "properties": {
                                  "subtitle": {
                                    "description": "The subtitle of the section",
                                    "type": "string"
                                  },
                                  "divider_below": {
                                    "description": "Whether to insert a divider below the section in the table of contents",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "single_view_group": {
                                "type": "object",
                                "properties": {}
                              },
                              "id": {
                                "description": "Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "dashboard_filters": {
                "description": "Filters to reduce the amount of data charted based on the filter criteria.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "label_key": {
                      "description": "Required. The key for the label",
                      "type": "string"
                    },
                    "template_variable": {
                      "description": "The placeholder text that can be referenced in a filter string or MQL query. If omitted, the dashboard filter will be applied to all relevant widgets in the dashboard.",
                      "type": "string"
                    },
                    "string_value": {
                      "description": "A variable-length string value.  This field is a member of `oneof`_ ``default_value``.",
                      "type": "string"
                    },
                    "filter_type": {
                      "type": "enum",
                      "name": "FilterType",
                      "description": "Specify the type of filtering.\n\nValues:\n    FILTER_TYPE_UNSPECIFIED (0):\n        Filter type unspecified. Position holder,\n        INVALID, should never be used.\n    UNIT_ONLY (1):\n        Filter by ``base compensation entry's`` unit. A job is a\n        match if and only if the job contains a base\n        CompensationEntry and the base CompensationEntry's unit\n        matches provided\n        [units][google.cloud.talent.v4beta1.CompensationFilter.units].\n        Populate one or more\n        [units][google.cloud.talent.v4beta1.CompensationFilter.units].\n\n        See\n        [CompensationInfo.CompensationEntry][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry]\n        for definition of base compensation entry.\n    UNIT_AND_AMOUNT (2):\n        Filter by ``base compensation entry's`` unit and amount /\n        range. A job is a match if and only if the job contains a\n        base CompensationEntry, and the base entry's unit matches\n        provided\n        [CompensationUnit][google.cloud.talent.v4bet",
                      "values": {
                        "FILTER_TYPE_UNSPECIFIED": {
                          "value": 0
                        },
                        "UNIT_ONLY": {
                          "value": 1
                        },
                        "UNIT_AND_AMOUNT": {
                          "value": 2
                        },
                        "ANNUALIZED_BASE_AMOUNT": {
                          "value": 3
                        },
                        "ANNUALIZED_TOTAL_AMOUNT": {
                          "value": 4
                        }
                      }
                    }
                  },
                  "required": [
                    "label_key"
                  ]
                }
              },
              "labels": {
                "description": "Labels applied to the dashboard",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "display_name"
            ]
          },
          "validate_only": {
            "description": "If set, validate the request and preview the review, but do not actually save it.",
            "type": "boolean"
          }
        },
        "required": [
          "dashboard"
        ]
      }
    }
  ]
}