{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-ai-generativelanguage/google/ai/generativelanguage_v1/types/model_service.py": [
    {
      "type": "function",
      "name": "GetModelRequest",
      "description": "Request for getting information about a specific Model.\n\nAttributes:\n    name (str):\n        Required. The resource name of the model.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the model.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListModelsRequest",
      "description": "Request for listing all Models.\n\nAttributes:\n    page_size (int):\n        The maximum number of ``Models`` to return (per page).\n\n        If unspecified, 50 models will be returned per page. This\n        method returns at most 1000 models per page, even if you\n        pass a larger page_size.\n    page_token (str):\n        A page token, received from a previous ``ListModels`` call.\n\n        Provide the ``page_token`` returned by one request as an\n        argument to the next request to retrieve the next page.\n\n        When paginating, all other parameters provided to\n        ``ListModels`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "page_size": {
            "description": "The maximum number of ``Models`` to return (per page).  If unspecified, 50 models will be returned per page. This method returns at most 1000 models per page, even if you pass a larger page_size.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListModels`` call.  Provide the ``page_token`` returned by one request as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to ``ListModels`` must match the call that provided the page token.",
            "type": "string"
          }
        }
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-ai-generativelanguage/google/ai/generativelanguage_v1/types/generative_service.py": [
    {
      "type": "function",
      "name": "GenerateContentRequest",
      "description": "Request to generate a completion from the model.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    model (str):\n        Required. The name of the ``Model`` to use for generating\n        the completion.\n\n        Format: ``name=models/{model}``.\n    contents (MutableSequence[google.ai.generativelanguage_v1.types.Content]):\n        Required. The content of the current conversation with the\n        model.\n\n        For single-turn queries, this is a single instance. For\n        multi-turn queries like\n        `chat <https://ai.google.dev/gemini-api/docs/text-generation#chat>`__,\n        this is a repeated field that contains the conversation\n        history and the latest request.\n    safety_settings (MutableSequence[google.ai.generativelanguage_v1.types.SafetySetting]):\n        Optional. A list of unique ``SafetySetting`` instances for\n        blocking unsafe content.\n\n        This will be enforced on the\n        ``GenerateContentRequest.c",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The name of the ``Model`` to use for generating the completion.  Format: ``name=models/{model}``.",
            "type": "string"
          },
          "contents": {
            "description": "Required. The content of the current conversation with the model.  For single-turn queries, this is a single instance. For multi-turn queries like `chat <https://ai.google.dev/gemini-api/docs/text-generation#chat>`__, this is a repeated field that contains the conversation history and the latest request.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1.types.Content",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                    "type": "string",
                    "output_only": true
                  },
                  "uid": {
                    "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                    "type": "string",
                    "output_only": true
                  },
                  "path": {
                    "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                    "type": "string"
                  },
                  "create_time": {
                    "description": "Output only. Content creation time.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "update_time": {
                    "description": "Output only. The time when the content was last updated.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "labels": {
                    "description": "Optional. User defined labels for the content.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "description": {
                    "description": "Optional. Description of the content.",
                    "type": "string"
                  },
                  "data_text": {
                    "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                    "type": "string"
                  },
                  "sql_script": {
                    "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                    "type": "object",
                    "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "engine": {
                          "description": "Required. Query Engine to be used for the Sql Query.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                        }
                      },
                      "required": [
                        "engine"
                      ]
                    }
                  },
                  "notebook": {
                    "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                    "type": "object",
                    "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "kernel_type": {
                          "description": "Required. Kernel Type of the notebook.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                        }
                      },
                      "required": [
                        "kernel_type"
                      ]
                    }
                  }
                },
                "required": [
                  "path",
                  "data_text"
                ]
              }
            }
          },
          "safety_settings": {
            "description": "Optional. A list of unique ``SafetySetting`` instances for blocking unsafe content.  This will be enforced on the ``GenerateContentRequest.contents`` and ``GenerateContentResponse.candidates``. There should not be more than one setting for each ``SafetyCategory`` type. The API will block any contents and responses that fail to meet the thresholds set by these settings. This list overrides the default settings for each ``SafetyCategory`` specified in the safety_settings. If there is no ``SafetySetting`` for a given ``SafetyCategory`` provided in the list, the API will use the default safety setting for that category. Harm categories HARM_CATEGORY_HATE_SPEECH, HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT, HARM_CATEGORY_HARASSMENT are supported. Refer to the `guide <https://ai.google.dev/gemini-api/docs/safety-settings>`__ for detailed information on available safety settings. Also refer to the `Safety guidance <https://ai.google.dev/gemini-api/docs/safety-guidance>`__ to learn how to incorporate safety considerations in your AI applications.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1.types.SafetySetting",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "category": {
                    "description": "Required. The category for this setting.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.HarmCategory"
                  },
                  "threshold": {
                    "description": "Required. Controls the probability threshold at which harm is blocked.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.SafetySetting.HarmBlockThreshold"
                  }
                },
                "required": [
                  "category",
                  "threshold"
                ]
              }
            }
          },
          "generation_config": {
            "description": "Optional. Configuration options for model generation and outputs.  This field is a member of `oneof`_ ``_generation_config``.",
            "reference": "google.ai.generativelanguage_v1.types.GenerationConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "candidate_count": {
                  "description": "Optional. Number of generated responses to return. Currently, this value can only be set to 1. If unset, this will default to 1.  This field is a member of `oneof`_ ``_candidate_count``.",
                  "type": "integer"
                },
                "stop_sequences": {
                  "description": "Optional. The set of character sequences (up to 5) that will stop output generation. If specified, the API will stop at the first appearance of a ``stop_sequence``. The stop sequence will not be included as part of the response.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "max_output_tokens": {
                  "description": "Optional. The maximum number of tokens to include in a response candidate.  Note: The default value varies by model, see the ``Model.output_token_limit`` attribute of the ``Model`` returned from the ``getModel`` function.  This field is a member of `oneof`_ ``_max_output_tokens``.",
                  "type": "integer"
                },
                "temperature": {
                  "description": "Optional. Controls the randomness of the output.  Note: The default value varies by model, see the ``Model.temperature`` attribute of the ``Model`` returned from the ``getModel`` function.  Values can range from [0.0, 2.0].  This field is a member of `oneof`_ ``_temperature``.",
                  "type": "number"
                },
                "top_p": {
                  "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.  The model uses combined Top-k and Top-p (nucleus) sampling.  Tokens are sorted based on their assigned probabilities so that only the most likely tokens are considered. Top-k sampling directly limits the maximum number of tokens to consider, while Nucleus sampling limits the number of tokens based on the cumulative probability.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_p``.",
                  "type": "number"
                },
                "top_k": {
                  "description": "Optional. The maximum number of tokens to consider when sampling.  Gemini models use Top-p (nucleus) sampling or a combination of Top-k and nucleus sampling. Top-k sampling considers the set of ``top_k`` most probable tokens. Models running with nucleus sampling don't allow top_k setting.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_k``.",
                  "type": "integer"
                },
                "presence_penalty": {
                  "description": "Optional. Presence penalty applied to the next token's logprobs if the token has already been seen in the response.  This penalty is binary on/off and not dependant on the number of times the token is used (after the first). Use [frequency_penalty][google.ai.generativelanguage.v1.GenerationConfig.frequency_penalty] for a penalty that increases with each use.  A positive penalty will discourage the use of tokens that have already been used in the response, increasing the vocabulary.  A negative penalty will encourage the use of tokens that have already been used in the response, decreasing the vocabulary.  This field is a member of `oneof`_ ``_presence_penalty``.",
                  "type": "number"
                },
                "frequency_penalty": {
                  "description": "Optional. Frequency penalty applied to the next token's logprobs, multiplied by the number of times each token has been seen in the respponse so far.  A positive penalty will discourage the use of tokens that have already been used, proportional to the number of times the token has been used: The more a token is used, the more dificult it is for the model to use that token again increasing the vocabulary of responses.  Caution: A *negative* penalty will encourage the model to reuse tokens proportional to the number of times the token has been used. Small negative values will reduce the vocabulary of a response. Larger negative values will cause the model to start repeating a common token until it hits the [max_output_tokens][google.ai.generativelanguage.v1.GenerationConfig.max_output_tokens] limit.  This field is a member of `oneof`_ ``_frequency_penalty``.",
                  "type": "number"
                },
                "response_logprobs": {
                  "description": "Optional. If true, export the logprobs results in response.  This field is a member of `oneof`_ ``_response_logprobs``.",
                  "type": "boolean"
                },
                "logprobs": {
                  "description": "Optional. Only valid if [response_logprobs=True][google.ai.generativelanguage.v1.GenerationConfig.response_logprobs]. This sets the number of top logprobs to return at each decoding step in the [Candidate.logprobs_result][google.ai.generativelanguage.v1.Candidate.logprobs_result].  This field is a member of `oneof`_ ``_logprobs``.",
                  "type": "integer"
                }
              }
            }
          }
        },
        "required": [
          "model",
          "contents"
        ]
      }
    },
    {
      "type": "function",
      "name": "EmbedContentRequest",
      "description": "Request containing the ``Content`` for the model to embed.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    model (str):\n        Required. The model's resource name. This serves as an ID\n        for the Model to use.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``\n    content (google.ai.generativelanguage_v1.types.Content):\n        Required. The content to embed. Only the ``parts.text``\n        fields will be counted.\n    task_type (google.ai.generativelanguage_v1.types.TaskType):\n        Optional. Optional task type for which the embeddings will\n        be used. Can only be set for ``models/embedding-001``.\n\n        This field is a member of `oneof`_ ``_task_type``.\n    title (str):\n        Optional. An optional title for the text. Only applicable\n        when TaskType is ``RETRIEVAL_DOCUMENT``.\n\n        Note: Specifying a ``title`` for ``RETRIEVAL_DOCUME",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          },
          "content": {
            "description": "Required. The content to embed. Only the ``parts.text`` fields will be counted.",
            "reference": "google.ai.generativelanguage_v1.types.Content",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                  "type": "string",
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                  "type": "string",
                  "output_only": true
                },
                "path": {
                  "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. Content creation time.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The time when the content was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. User defined labels for the content.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "description": {
                  "description": "Optional. Description of the content.",
                  "type": "string"
                },
                "data_text": {
                  "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                  "type": "string"
                },
                "sql_script": {
                  "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                  "type": "object",
                  "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "engine": {
                        "description": "Required. Query Engine to be used for the Sql Query.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                      }
                    },
                    "required": [
                      "engine"
                    ]
                  }
                },
                "notebook": {
                  "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                  "type": "object",
                  "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kernel_type": {
                        "description": "Required. Kernel Type of the notebook.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                      }
                    },
                    "required": [
                      "kernel_type"
                    ]
                  }
                }
              },
              "required": [
                "path",
                "data_text"
              ]
            }
          },
          "task_type": {
            "description": "Optional. Optional task type for which the embeddings will be used. Can only be set for ``models/embedding-001``.  This field is a member of `oneof`_ ``_task_type``.",
            "type": "object",
            "reference": "google.ai.generativelanguage_v1.types.TaskType"
          },
          "title": {
            "description": "Optional. An optional title for the text. Only applicable when TaskType is ``RETRIEVAL_DOCUMENT``.  Note: Specifying a ``title`` for ``RETRIEVAL_DOCUMENT`` provides better quality embeddings for retrieval.  This field is a member of `oneof`_ ``_title``.",
            "type": "string"
          },
          "output_dimensionality": {
            "description": "Optional. Optional reduced dimension for the output embedding. If set, excessive values in the output embedding are truncated from the end. Supported by newer models since 2024 only. You cannot set this value if using the earlier model (``models/embedding-001``).  This field is a member of `oneof`_ ``_output_dimensionality``.",
            "type": "integer"
          }
        },
        "required": [
          "model",
          "content"
        ]
      }
    },
    {
      "type": "function",
      "name": "BatchEmbedContentsRequest",
      "description": "Batch request to get embeddings from the model for a list of\nprompts.\n\nAttributes:\n    model (str):\n        Required. The model's resource name. This serves as an ID\n        for the Model to use.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``\n    requests (MutableSequence[google.ai.generativelanguage_v1.types.EmbedContentRequest]):\n        Required. Embed requests for the batch. The model in each of\n        these requests must match the model specified\n        ``BatchEmbedContentsRequest.model``.",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          },
          "requests": {
            "description": "Required. Embed requests for the batch. The model in each of these requests must match the model specified ``BatchEmbedContentsRequest.model``.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1.types.EmbedContentRequest",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
                    "type": "string"
                  },
                  "content": {
                    "description": "Required. The content to embed. Only the ``parts.text`` fields will be counted.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1.types.Content",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "type": "string",
                          "output_only": true
                        },
                        "uid": {
                          "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                          "type": "string",
                          "output_only": true
                        },
                        "path": {
                          "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                          "type": "string"
                        },
                        "create_time": {
                          "description": "Output only. Content creation time.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "update_time": {
                          "description": "Output only. The time when the content was last updated.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "labels": {
                          "description": "Optional. User defined labels for the content.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "description": {
                          "description": "Optional. Description of the content.",
                          "type": "string"
                        },
                        "data_text": {
                          "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                          "type": "string"
                        },
                        "sql_script": {
                          "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "engine": {
                                "description": "Required. Query Engine to be used for the Sql Query.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                              }
                            },
                            "required": [
                              "engine"
                            ]
                          }
                        },
                        "notebook": {
                          "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "kernel_type": {
                                "description": "Required. Kernel Type of the notebook.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                              }
                            },
                            "required": [
                              "kernel_type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "path",
                        "data_text"
                      ]
                    }
                  },
                  "task_type": {
                    "description": "Optional. Optional task type for which the embeddings will be used. Can only be set for ``models/embedding-001``.  This field is a member of `oneof`_ ``_task_type``.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1.types.TaskType"
                  },
                  "title": {
                    "description": "Optional. An optional title for the text. Only applicable when TaskType is ``RETRIEVAL_DOCUMENT``.  Note: Specifying a ``title`` for ``RETRIEVAL_DOCUMENT`` provides better quality embeddings for retrieval.  This field is a member of `oneof`_ ``_title``.",
                    "type": "string"
                  },
                  "output_dimensionality": {
                    "description": "Optional. Optional reduced dimension for the output embedding. If set, excessive values in the output embedding are truncated from the end. Supported by newer models since 2024 only. You cannot set this value if using the earlier model (``models/embedding-001``).  This field is a member of `oneof`_ ``_output_dimensionality``.",
                    "type": "integer"
                  }
                },
                "required": [
                  "model",
                  "content"
                ]
              }
            }
          }
        },
        "required": [
          "model",
          "requests"
        ]
      }
    },
    {
      "type": "function",
      "name": "CountTokensRequest",
      "description": "Counts the number of tokens in the ``prompt`` sent to a model.\n\nModels may tokenize text differently, so each model may return a\ndifferent ``token_count``.\n\nAttributes:\n    model (str):\n        Required. The model's resource name. This serves as an ID\n        for the Model to use.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``\n    contents (MutableSequence[google.ai.generativelanguage_v1.types.Content]):\n        Optional. The input given to the model as a prompt. This\n        field is ignored when ``generate_content_request`` is set.\n    generate_content_request (google.ai.generativelanguage_v1.types.GenerateContentRequest):\n        Optional. The overall input given to the ``Model``. This\n        includes the prompt as well as other model steering\n        information like `system\n        instructions <https://ai.google.dev/gemini-api/docs/system-instructions>`__,\n        and/or function declarations for `function\n        calling ",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          },
          "contents": {
            "description": "Optional. The input given to the model as a prompt. This field is ignored when ``generate_content_request`` is set.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1.types.Content",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                    "type": "string",
                    "output_only": true
                  },
                  "uid": {
                    "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                    "type": "string",
                    "output_only": true
                  },
                  "path": {
                    "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                    "type": "string"
                  },
                  "create_time": {
                    "description": "Output only. Content creation time.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "update_time": {
                    "description": "Output only. The time when the content was last updated.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "labels": {
                    "description": "Optional. User defined labels for the content.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "description": {
                    "description": "Optional. Description of the content.",
                    "type": "string"
                  },
                  "data_text": {
                    "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                    "type": "string"
                  },
                  "sql_script": {
                    "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                    "type": "object",
                    "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "engine": {
                          "description": "Required. Query Engine to be used for the Sql Query.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                        }
                      },
                      "required": [
                        "engine"
                      ]
                    }
                  },
                  "notebook": {
                    "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                    "type": "object",
                    "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "kernel_type": {
                          "description": "Required. Kernel Type of the notebook.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                        }
                      },
                      "required": [
                        "kernel_type"
                      ]
                    }
                  }
                },
                "required": [
                  "path",
                  "data_text"
                ]
              }
            }
          },
          "generate_content_request": {
            "description": "Optional. The overall input given to the ``Model``. This includes the prompt as well as other model steering information like `system instructions <https://ai.google.dev/gemini-api/docs/system-instructions>`__, and/or function declarations for `function calling <https://ai.google.dev/gemini-api/docs/function-calling>`__. ``Model``\\ s/\\ ``Content``\\ s and ``generate_content_request``\\ s are mutually exclusive. You can either send ``Model`` + ``Content``\\ s or a ``generate_content_request``, but never both.",
            "reference": "google.ai.generativelanguage_v1.types.GenerateContentRequest",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "model": {
                  "description": "Required. The name of the ``Model`` to use for generating the completion.  Format: ``name=models/{model}``.",
                  "type": "string"
                },
                "contents": {
                  "description": "Required. The content of the current conversation with the model.  For single-turn queries, this is a single instance. For multi-turn queries like `chat <https://ai.google.dev/gemini-api/docs/text-generation#chat>`__, this is a repeated field that contains the conversation history and the latest request.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1.types.Content",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "type": "string",
                          "output_only": true
                        },
                        "uid": {
                          "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                          "type": "string",
                          "output_only": true
                        },
                        "path": {
                          "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                          "type": "string"
                        },
                        "create_time": {
                          "description": "Output only. Content creation time.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "update_time": {
                          "description": "Output only. The time when the content was last updated.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "labels": {
                          "description": "Optional. User defined labels for the content.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "description": {
                          "description": "Optional. Description of the content.",
                          "type": "string"
                        },
                        "data_text": {
                          "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                          "type": "string"
                        },
                        "sql_script": {
                          "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "engine": {
                                "description": "Required. Query Engine to be used for the Sql Query.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                              }
                            },
                            "required": [
                              "engine"
                            ]
                          }
                        },
                        "notebook": {
                          "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "kernel_type": {
                                "description": "Required. Kernel Type of the notebook.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                              }
                            },
                            "required": [
                              "kernel_type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "path",
                        "data_text"
                      ]
                    }
                  }
                },
                "safety_settings": {
                  "description": "Optional. A list of unique ``SafetySetting`` instances for blocking unsafe content.  This will be enforced on the ``GenerateContentRequest.contents`` and ``GenerateContentResponse.candidates``. There should not be more than one setting for each ``SafetyCategory`` type. The API will block any contents and responses that fail to meet the thresholds set by these settings. This list overrides the default settings for each ``SafetyCategory`` specified in the safety_settings. If there is no ``SafetySetting`` for a given ``SafetyCategory`` provided in the list, the API will use the default safety setting for that category. Harm categories HARM_CATEGORY_HATE_SPEECH, HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT, HARM_CATEGORY_HARASSMENT are supported. Refer to the `guide <https://ai.google.dev/gemini-api/docs/safety-settings>`__ for detailed information on available safety settings. Also refer to the `Safety guidance <https://ai.google.dev/gemini-api/docs/safety-guidance>`__ to learn how to incorporate safety considerations in your AI applications.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1.types.SafetySetting",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "description": "Required. The category for this setting.",
                          "type": "object",
                          "reference": "google.ai.generativelanguage_v1beta3.types.HarmCategory"
                        },
                        "threshold": {
                          "description": "Required. Controls the probability threshold at which harm is blocked.",
                          "type": "object",
                          "reference": "google.ai.generativelanguage_v1beta3.types.SafetySetting.HarmBlockThreshold"
                        }
                      },
                      "required": [
                        "category",
                        "threshold"
                      ]
                    }
                  }
                },
                "generation_config": {
                  "description": "Optional. Configuration options for model generation and outputs.  This field is a member of `oneof`_ ``_generation_config``.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1.types.GenerationConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "candidate_count": {
                        "description": "Optional. Number of generated responses to return. Currently, this value can only be set to 1. If unset, this will default to 1.  This field is a member of `oneof`_ ``_candidate_count``.",
                        "type": "integer"
                      },
                      "stop_sequences": {
                        "description": "Optional. The set of character sequences (up to 5) that will stop output generation. If specified, the API will stop at the first appearance of a ``stop_sequence``. The stop sequence will not be included as part of the response.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "max_output_tokens": {
                        "description": "Optional. The maximum number of tokens to include in a response candidate.  Note: The default value varies by model, see the ``Model.output_token_limit`` attribute of the ``Model`` returned from the ``getModel`` function.  This field is a member of `oneof`_ ``_max_output_tokens``.",
                        "type": "integer"
                      },
                      "temperature": {
                        "description": "Optional. Controls the randomness of the output.  Note: The default value varies by model, see the ``Model.temperature`` attribute of the ``Model`` returned from the ``getModel`` function.  Values can range from [0.0, 2.0].  This field is a member of `oneof`_ ``_temperature``.",
                        "type": "number"
                      },
                      "top_p": {
                        "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.  The model uses combined Top-k and Top-p (nucleus) sampling.  Tokens are sorted based on their assigned probabilities so that only the most likely tokens are considered. Top-k sampling directly limits the maximum number of tokens to consider, while Nucleus sampling limits the number of tokens based on the cumulative probability.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_p``.",
                        "type": "number"
                      },
                      "top_k": {
                        "description": "Optional. The maximum number of tokens to consider when sampling.  Gemini models use Top-p (nucleus) sampling or a combination of Top-k and nucleus sampling. Top-k sampling considers the set of ``top_k`` most probable tokens. Models running with nucleus sampling don't allow top_k setting.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_k``.",
                        "type": "integer"
                      },
                      "presence_penalty": {
                        "description": "Optional. Presence penalty applied to the next token's logprobs if the token has already been seen in the response.  This penalty is binary on/off and not dependant on the number of times the token is used (after the first). Use [frequency_penalty][google.ai.generativelanguage.v1.GenerationConfig.frequency_penalty] for a penalty that increases with each use.  A positive penalty will discourage the use of tokens that have already been used in the response, increasing the vocabulary.  A negative penalty will encourage the use of tokens that have already been used in the response, decreasing the vocabulary.  This field is a member of `oneof`_ ``_presence_penalty``.",
                        "type": "number"
                      },
                      "frequency_penalty": {
                        "description": "Optional. Frequency penalty applied to the next token's logprobs, multiplied by the number of times each token has been seen in the respponse so far.  A positive penalty will discourage the use of tokens that have already been used, proportional to the number of times the token has been used: The more a token is used, the more dificult it is for the model to use that token again increasing the vocabulary of responses.  Caution: A *negative* penalty will encourage the model to reuse tokens proportional to the number of times the token has been used. Small negative values will reduce the vocabulary of a response. Larger negative values will cause the model to start repeating a common token until it hits the [max_output_tokens][google.ai.generativelanguage.v1.GenerationConfig.max_output_tokens] limit.  This field is a member of `oneof`_ ``_frequency_penalty``.",
                        "type": "number"
                      },
                      "response_logprobs": {
                        "description": "Optional. If true, export the logprobs results in response.  This field is a member of `oneof`_ ``_response_logprobs``.",
                        "type": "boolean"
                      },
                      "logprobs": {
                        "description": "Optional. Only valid if [response_logprobs=True][google.ai.generativelanguage.v1.GenerationConfig.response_logprobs]. This sets the number of top logprobs to return at each decoding step in the [Candidate.logprobs_result][google.ai.generativelanguage.v1.Candidate.logprobs_result].  This field is a member of `oneof`_ ``_logprobs``.",
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": [
                "model",
                "contents"
              ]
            }
          }
        },
        "required": [
          "model"
        ]
      }
    }
  ]
}