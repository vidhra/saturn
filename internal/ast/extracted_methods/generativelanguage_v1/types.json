{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-ai-generativelanguage\\google\\ai\\generativelanguage_v1\\types\\generative_service.py": [
    {
      "type": "function",
      "name": "GenerateContentRequest",
      "description": "Request to generate a completion from the model.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    model (str):\n        Required. The name of the ``Model`` to use for generating\n        the completion.\n\n        Format: ``name=models/{model}``.\n    contents (MutableSequence[google.ai.generativelanguage_v1.types.Content]):\n        Required. The content of the current conversation with the\n        model.\n\n        For single-turn queries, this is a single instance. For\n        multi-turn queries like\n        `chat <https://ai.google.dev/gemini-api/docs/text-generation#chat>`__,\n        this is a repeated field that contains the conversation\n        history and the latest request.\n    safety_settings (MutableSequence[google.ai.generativelanguage_v1.types.SafetySetting]):\n        Optional. A list of unique ``SafetySetting`` instances for\n        blocking unsafe content.\n\n        This will be enforced on the\n        ``GenerateContentRequest.c",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The name of the ``Model`` to use for generating the completion.  Format: ``name=models/{model}``.",
            "type": "string"
          },
          "contents": {
            "description": "Required. The content of the current conversation with the model.  For single-turn queries, this is a single instance. For multi-turn queries like `chat <https://ai.google.dev/gemini-api/docs/text-generation#chat>`__, this is a repeated field that contains the conversation history and the latest request.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "raw_bytes": {
                  "description": "The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB / ~0.95 MiB).  Note: As with all ``bytes`` fields, this field is represented as pure binary in Protocol Buffers and base64-encoded string in JSON. For example, ``abc123!?$*&()'-=@~`` should be represented as ``YWJjMTIzIT8kKiYoKSctPUB+`` in JSON. See https://developers.google.com/protocol-buffers/docs/proto3#json.  This field is a member of `oneof`_ ``content``.",
                  "type": "object",
                  "reference": "bytes"
                },
                "uri": {
                  "description": "The URI of the content. Only Cloud Storage URIs (e.g. ``gs://bucket-name/path/to/file``) are supported. The maximum file size is 2.5 MB for text-based formats, 200 MB for other formats.  This field is a member of `oneof`_ ``content``.",
                  "type": "string"
                },
                "mime_type": {
                  "description": "The MIME type of the content. Supported types:  -  ``application/pdf`` (PDF, only native PDFs are supported for now) -  ``text/html`` (HTML) -  ``application/vnd.openxmlformats-officedocument.wordprocessingml.document`` (DOCX) -  ``application/vnd.openxmlformats-officedocument.presentationml.presentation`` (PPTX) -  ``text/plain`` (TXT)  See https://www.iana.org/assignments/media-types/media-types.xhtml.",
                  "type": "string"
                }
              }
            }
          },
          "safety_settings": {
            "description": "Optional. A list of unique ``SafetySetting`` instances for blocking unsafe content.  This will be enforced on the ``GenerateContentRequest.contents`` and ``GenerateContentResponse.candidates``. There should not be more than one setting for each ``SafetyCategory`` type. The API will block any contents and responses that fail to meet the thresholds set by these settings. This list overrides the default settings for each ``SafetyCategory`` specified in the safety_settings. If there is no ``SafetySetting`` for a given ``SafetyCategory`` provided in the list, the API will use the default safety setting for that category. Harm categories HARM_CATEGORY_HATE_SPEECH, HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT, HARM_CATEGORY_HARASSMENT are supported. Refer to the `guide <https://ai.google.dev/gemini-api/docs/safety-settings>`__ for detailed information on available safety settings. Also refer to the `Safety guidance <https://ai.google.dev/gemini-api/docs/safety-guidance>`__ to learn how to incorporate safety considerations in your AI applications.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "description": "Required. The category for this setting.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta3.types.HarmCategory"
                },
                "threshold": {
                  "description": "Required. Controls the probability threshold at which harm is blocked.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta3.types.SafetySetting.HarmBlockThreshold"
                }
              },
              "required": [
                "category",
                "threshold"
              ]
            }
          },
          "generation_config": {
            "description": "Optional. Configuration options for model generation and outputs.  This field is a member of `oneof`_ ``_generation_config``.",
            "type": "object",
            "properties": {
              "candidate_count": {
                "description": "Optional. Number of generated responses to return. Currently, this value can only be set to 1. If unset, this will default to 1.  This field is a member of `oneof`_ ``_candidate_count``.",
                "type": "integer"
              },
              "stop_sequences": {
                "description": "Optional. The set of character sequences (up to 5) that will stop output generation. If specified, the API will stop at the first appearance of a ``stop_sequence``. The stop sequence will not be included as part of the response.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "max_output_tokens": {
                "description": "Optional. The maximum number of tokens to include in a response candidate.  Note: The default value varies by model, see the ``Model.output_token_limit`` attribute of the ``Model`` returned from the ``getModel`` function.  This field is a member of `oneof`_ ``_max_output_tokens``.",
                "type": "integer"
              },
              "temperature": {
                "description": "Optional. Controls the randomness of the output.  Note: The default value varies by model, see the ``Model.temperature`` attribute of the ``Model`` returned from the ``getModel`` function.  Values can range from [0.0, 2.0].  This field is a member of `oneof`_ ``_temperature``.",
                "type": "number"
              },
              "top_p": {
                "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.  The model uses combined Top-k and Top-p (nucleus) sampling.  Tokens are sorted based on their assigned probabilities so that only the most likely tokens are considered. Top-k sampling directly limits the maximum number of tokens to consider, while Nucleus sampling limits the number of tokens based on the cumulative probability.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_p``.",
                "type": "number"
              },
              "top_k": {
                "description": "Optional. The maximum number of tokens to consider when sampling.  Gemini models use Top-p (nucleus) sampling or a combination of Top-k and nucleus sampling. Top-k sampling considers the set of ``top_k`` most probable tokens. Models running with nucleus sampling don't allow top_k setting.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_k``.",
                "type": "integer"
              },
              "response_mime_type": {
                "description": "Optional. MIME type of the generated candidate text. Supported MIME types are: ``text/plain``: (default) Text output. ``application/json``: JSON response in the response candidates. ``text/x.enum``: ENUM as a string response in the response candidates. Refer to the `docs <https://ai.google.dev/gemini-api/docs/prompting_with_media#plain_text_formats>`__ for a list of all supported text MIME types.",
                "type": "string"
              },
              "response_schema": {
                "type": "object",
                "properties": {
                  "struct_schema": {
                    "description": "The structured representation of the schema.  This field is a member of `oneof`_ ``schema``.",
                    "type": "object",
                    "reference": "google.protobuf.struct_pb2.Struct"
                  },
                  "json_schema": {
                    "description": "The JSON representation of the schema.  This field is a member of `oneof`_ ``schema``.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Immutable. The full resource name of the schema, in the format of ``projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}``.  This field must be a UTF-8 encoded string with a length limit of 1024 characters.",
                    "type": "string"
                  }
                }
              },
              "presence_penalty": {
                "description": "Optional. Presence penalty applied to the next token's logprobs if the token has already been seen in the response.  This penalty is binary on/off and not dependant on the number of times the token is used (after the first). Use [frequency_penalty][google.ai.generativelanguage.v1beta.GenerationConfig.frequency_penalty] for a penalty that increases with each use.  A positive penalty will discourage the use of tokens that have already been used in the response, increasing the vocabulary.  A negative penalty will encourage the use of tokens that have already been used in the response, decreasing the vocabulary.  This field is a member of `oneof`_ ``_presence_penalty``.",
                "type": "number"
              },
              "frequency_penalty": {
                "description": "Optional. Frequency penalty applied to the next token's logprobs, multiplied by the number of times each token has been seen in the respponse so far.  A positive penalty will discourage the use of tokens that have already been used, proportional to the number of times the token has been used: The more a token is used, the more dificult it is for the model to use that token again increasing the vocabulary of responses.  Caution: A *negative* penalty will encourage the model to reuse tokens proportional to the number of times the token has been used. Small negative values will reduce the vocabulary of a response. Larger negative values will cause the model to start repeating a common token until it hits the [max_output_tokens][google.ai.generativelanguage.v1beta.GenerationConfig.max_output_tokens] limit.  This field is a member of `oneof`_ ``_frequency_penalty``.",
                "type": "number"
              },
              "response_logprobs": {
                "description": "Optional. If true, export the logprobs results in response.  This field is a member of `oneof`_ ``_response_logprobs``.",
                "type": "boolean"
              },
              "logprobs": {
                "description": "Optional. Only valid if [response_logprobs=True][google.ai.generativelanguage.v1beta.GenerationConfig.response_logprobs]. This sets the number of top logprobs to return at each decoding step in the [Candidate.logprobs_result][google.ai.generativelanguage.v1beta.Candidate.logprobs_result].  This field is a member of `oneof`_ ``_logprobs``.",
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "model",
          "contents"
        ]
      }
    },
    {
      "type": "function",
      "name": "EmbedContentRequest",
      "description": "Request containing the ``Content`` for the model to embed.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    model (str):\n        Required. The model's resource name. This serves as an ID\n        for the Model to use.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``\n    content (google.ai.generativelanguage_v1.types.Content):\n        Required. The content to embed. Only the ``parts.text``\n        fields will be counted.\n    task_type (google.ai.generativelanguage_v1.types.TaskType):\n        Optional. Optional task type for which the embeddings will\n        be used. Can only be set for ``models/embedding-001``.\n\n        This field is a member of `oneof`_ ``_task_type``.\n    title (str):\n        Optional. An optional title for the text. Only applicable\n        when TaskType is ``RETRIEVAL_DOCUMENT``.\n\n        Note: Specifying a ``title`` for ``RETRIEVAL_DOCUME",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          },
          "content": {
            "description": "Required. The content to embed. Only the ``parts.text`` fields will be counted.",
            "type": "object",
            "properties": {
              "raw_bytes": {
                "description": "The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB / ~0.95 MiB).  Note: As with all ``bytes`` fields, this field is represented as pure binary in Protocol Buffers and base64-encoded string in JSON. For example, ``abc123!?$*&()'-=@~`` should be represented as ``YWJjMTIzIT8kKiYoKSctPUB+`` in JSON. See https://developers.google.com/protocol-buffers/docs/proto3#json.  This field is a member of `oneof`_ ``content``.",
                "type": "object",
                "reference": "bytes"
              },
              "uri": {
                "description": "The URI of the content. Only Cloud Storage URIs (e.g. ``gs://bucket-name/path/to/file``) are supported. The maximum file size is 2.5 MB for text-based formats, 200 MB for other formats.  This field is a member of `oneof`_ ``content``.",
                "type": "string"
              },
              "mime_type": {
                "description": "The MIME type of the content. Supported types:  -  ``application/pdf`` (PDF, only native PDFs are supported for now) -  ``text/html`` (HTML) -  ``application/vnd.openxmlformats-officedocument.wordprocessingml.document`` (DOCX) -  ``application/vnd.openxmlformats-officedocument.presentationml.presentation`` (PPTX) -  ``text/plain`` (TXT)  See https://www.iana.org/assignments/media-types/media-types.xhtml.",
                "type": "string"
              }
            }
          },
          "task_type": {
            "description": "Optional. Optional task type for which the embeddings will be used. Can only be set for ``models/embedding-001``.  This field is a member of `oneof`_ ``_task_type``.",
            "type": "object",
            "reference": "google.ai.generativelanguage_v1.types.TaskType"
          },
          "title": {
            "description": "Optional. An optional title for the text. Only applicable when TaskType is ``RETRIEVAL_DOCUMENT``.  Note: Specifying a ``title`` for ``RETRIEVAL_DOCUMENT`` provides better quality embeddings for retrieval.  This field is a member of `oneof`_ ``_title``.",
            "type": "string"
          },
          "output_dimensionality": {
            "description": "Optional. Optional reduced dimension for the output embedding. If set, excessive values in the output embedding are truncated from the end. Supported by newer models since 2024 only. You cannot set this value if using the earlier model (``models/embedding-001``).  This field is a member of `oneof`_ ``_output_dimensionality``.",
            "type": "integer"
          }
        },
        "required": [
          "model",
          "content"
        ]
      }
    },
    {
      "type": "function",
      "name": "BatchEmbedContentsRequest",
      "description": "Batch request to get embeddings from the model for a list of\nprompts.\n\nAttributes:\n    model (str):\n        Required. The model's resource name. This serves as an ID\n        for the Model to use.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``\n    requests (MutableSequence[google.ai.generativelanguage_v1.types.EmbedContentRequest]):\n        Required. Embed requests for the batch. The model in each of\n        these requests must match the model specified\n        ``BatchEmbedContentsRequest.model``.",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          },
          "requests": {
            "description": "Required. Embed requests for the batch. The model in each of these requests must match the model specified ``BatchEmbedContentsRequest.model``.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model": {
                  "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
                  "type": "string"
                },
                "content": {
                  "type": "object",
                  "properties": {
                    "raw_bytes": {
                      "description": "The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB / ~0.95 MiB).  Note: As with all ``bytes`` fields, this field is represented as pure binary in Protocol Buffers and base64-encoded string in JSON. For example, ``abc123!?$*&()'-=@~`` should be represented as ``YWJjMTIzIT8kKiYoKSctPUB+`` in JSON. See https://developers.google.com/protocol-buffers/docs/proto3#json.  This field is a member of `oneof`_ ``content``.",
                      "type": "object",
                      "reference": "bytes"
                    },
                    "uri": {
                      "description": "The URI of the content. Only Cloud Storage URIs (e.g. ``gs://bucket-name/path/to/file``) are supported. The maximum file size is 2.5 MB for text-based formats, 200 MB for other formats.  This field is a member of `oneof`_ ``content``.",
                      "type": "string"
                    },
                    "mime_type": {
                      "description": "The MIME type of the content. Supported types:  -  ``application/pdf`` (PDF, only native PDFs are supported for now) -  ``text/html`` (HTML) -  ``application/vnd.openxmlformats-officedocument.wordprocessingml.document`` (DOCX) -  ``application/vnd.openxmlformats-officedocument.presentationml.presentation`` (PPTX) -  ``text/plain`` (TXT)  See https://www.iana.org/assignments/media-types/media-types.xhtml.",
                      "type": "string"
                    }
                  }
                },
                "task_type": {
                  "description": "Optional. Optional task type for which the embeddings will be used. Can only be set for ``models/embedding-001``.  This field is a member of `oneof`_ ``_task_type``.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta.types.TaskType"
                },
                "title": {
                  "description": "Optional. An optional title for the text. Only applicable when TaskType is ``RETRIEVAL_DOCUMENT``.  Note: Specifying a ``title`` for ``RETRIEVAL_DOCUMENT`` provides better quality embeddings for retrieval.  This field is a member of `oneof`_ ``_title``.",
                  "type": "string"
                },
                "output_dimensionality": {
                  "description": "Optional. Optional reduced dimension for the output embedding. If set, excessive values in the output embedding are truncated from the end. Supported by newer models since 2024 only. You cannot set this value if using the earlier model (``models/embedding-001``).  This field is a member of `oneof`_ ``_output_dimensionality``.",
                  "type": "integer"
                }
              },
              "required": [
                "model",
                "content"
              ]
            }
          }
        },
        "required": [
          "model",
          "requests"
        ]
      }
    },
    {
      "type": "function",
      "name": "CountTokensRequest",
      "description": "Counts the number of tokens in the ``prompt`` sent to a model.\n\nModels may tokenize text differently, so each model may return a\ndifferent ``token_count``.\n\nAttributes:\n    model (str):\n        Required. The model's resource name. This serves as an ID\n        for the Model to use.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``\n    contents (MutableSequence[google.ai.generativelanguage_v1.types.Content]):\n        Optional. The input given to the model as a prompt. This\n        field is ignored when ``generate_content_request`` is set.\n    generate_content_request (google.ai.generativelanguage_v1.types.GenerateContentRequest):\n        Optional. The overall input given to the ``Model``. This\n        includes the prompt as well as other model steering\n        information like `system\n        instructions <https://ai.google.dev/gemini-api/docs/system-instructions>`__,\n        and/or function declarations for `function\n        calling ",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          },
          "contents": {
            "description": "Optional. The input given to the model as a prompt. This field is ignored when ``generate_content_request`` is set.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "raw_bytes": {
                  "description": "The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB / ~0.95 MiB).  Note: As with all ``bytes`` fields, this field is represented as pure binary in Protocol Buffers and base64-encoded string in JSON. For example, ``abc123!?$*&()'-=@~`` should be represented as ``YWJjMTIzIT8kKiYoKSctPUB+`` in JSON. See https://developers.google.com/protocol-buffers/docs/proto3#json.  This field is a member of `oneof`_ ``content``.",
                  "type": "object",
                  "reference": "bytes"
                },
                "uri": {
                  "description": "The URI of the content. Only Cloud Storage URIs (e.g. ``gs://bucket-name/path/to/file``) are supported. The maximum file size is 2.5 MB for text-based formats, 200 MB for other formats.  This field is a member of `oneof`_ ``content``.",
                  "type": "string"
                },
                "mime_type": {
                  "description": "The MIME type of the content. Supported types:  -  ``application/pdf`` (PDF, only native PDFs are supported for now) -  ``text/html`` (HTML) -  ``application/vnd.openxmlformats-officedocument.wordprocessingml.document`` (DOCX) -  ``application/vnd.openxmlformats-officedocument.presentationml.presentation`` (PPTX) -  ``text/plain`` (TXT)  See https://www.iana.org/assignments/media-types/media-types.xhtml.",
                  "type": "string"
                }
              }
            }
          },
          "generate_content_request": {
            "description": "Optional. The overall input given to the ``Model``. This includes the prompt as well as other model steering information like `system instructions <https://ai.google.dev/gemini-api/docs/system-instructions>`__, and/or function declarations for `function calling <https://ai.google.dev/gemini-api/docs/function-calling>`__. ``Model``\\ s/\\ ``Content``\\ s and ``generate_content_request``\\ s are mutually exclusive. You can either send ``Model`` + ``Content``\\ s or a ``generate_content_request``, but never both.",
            "type": "object",
            "properties": {
              "model": {
                "description": "Required. The name of the ``Model`` to use for generating the completion.  Format: ``name=models/{model}``.",
                "type": "string"
              },
              "system_instruction": {
                "type": "object",
                "properties": {
                  "raw_bytes": {
                    "description": "The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB / ~0.95 MiB).  Note: As with all ``bytes`` fields, this field is represented as pure binary in Protocol Buffers and base64-encoded string in JSON. For example, ``abc123!?$*&()'-=@~`` should be represented as ``YWJjMTIzIT8kKiYoKSctPUB+`` in JSON. See https://developers.google.com/protocol-buffers/docs/proto3#json.  This field is a member of `oneof`_ ``content``.",
                    "type": "object",
                    "reference": "bytes"
                  },
                  "uri": {
                    "description": "The URI of the content. Only Cloud Storage URIs (e.g. ``gs://bucket-name/path/to/file``) are supported. The maximum file size is 2.5 MB for text-based formats, 200 MB for other formats.  This field is a member of `oneof`_ ``content``.",
                    "type": "string"
                  },
                  "mime_type": {
                    "description": "The MIME type of the content. Supported types:  -  ``application/pdf`` (PDF, only native PDFs are supported for now) -  ``text/html`` (HTML) -  ``application/vnd.openxmlformats-officedocument.wordprocessingml.document`` (DOCX) -  ``application/vnd.openxmlformats-officedocument.presentationml.presentation`` (PPTX) -  ``text/plain`` (TXT)  See https://www.iana.org/assignments/media-types/media-types.xhtml.",
                    "type": "string"
                  }
                }
              },
              "contents": {
                "description": "Required. The content of the current conversation with the model.  For single-turn queries, this is a single instance. For multi-turn queries like `chat <https://ai.google.dev/gemini-api/docs/text-generation#chat>`__, this is a repeated field that contains the conversation history and the latest request.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "raw_bytes": {
                      "description": "The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB / ~0.95 MiB).  Note: As with all ``bytes`` fields, this field is represented as pure binary in Protocol Buffers and base64-encoded string in JSON. For example, ``abc123!?$*&()'-=@~`` should be represented as ``YWJjMTIzIT8kKiYoKSctPUB+`` in JSON. See https://developers.google.com/protocol-buffers/docs/proto3#json.  This field is a member of `oneof`_ ``content``.",
                      "type": "object",
                      "reference": "bytes"
                    },
                    "uri": {
                      "description": "The URI of the content. Only Cloud Storage URIs (e.g. ``gs://bucket-name/path/to/file``) are supported. The maximum file size is 2.5 MB for text-based formats, 200 MB for other formats.  This field is a member of `oneof`_ ``content``.",
                      "type": "string"
                    },
                    "mime_type": {
                      "description": "The MIME type of the content. Supported types:  -  ``application/pdf`` (PDF, only native PDFs are supported for now) -  ``text/html`` (HTML) -  ``application/vnd.openxmlformats-officedocument.wordprocessingml.document`` (DOCX) -  ``application/vnd.openxmlformats-officedocument.presentationml.presentation`` (PPTX) -  ``text/plain`` (TXT)  See https://www.iana.org/assignments/media-types/media-types.xhtml.",
                      "type": "string"
                    }
                  }
                }
              },
              "tools": {
                "description": "Optional. A list of ``Tools`` the ``Model`` may use to generate the next response.  A ``Tool`` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the ``Model``. Supported ``Tool``\\ s are ``Function`` and ``code_execution``. Refer to the `Function calling <https://ai.google.dev/gemini-api/docs/function-calling>`__ and the `Code execution <https://ai.google.dev/gemini-api/docs/code-execution>`__ guides to learn more.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The unique identifier of the Tool. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/tools/<ToolID>``.",
                      "type": "string"
                    },
                    "display_name": {
                      "description": "Required. The human-readable name of the Tool, unique within an agent.",
                      "type": "string"
                    },
                    "description": {
                      "description": "Required. High level description of the Tool and its usage.",
                      "type": "string"
                    },
                    "open_api_spec": {
                      "type": "object",
                      "properties": {
                        "text_schema": {
                          "description": "Required. The OpenAPI schema specified as a text.  This field is a member of `oneof`_ ``schema``.",
                          "type": "string"
                        },
                        "authentication": {
                          "type": "object",
                          "properties": {
                            "google_account": {
                              "type": "object",
                              "properties": {
                                "username": {
                                  "description": "Required. The user name of the Google account.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Required. Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "username",
                                "password"
                              ]
                            },
                            "custom_account": {
                              "type": "object",
                              "properties": {
                                "username": {
                                  "description": "Required. The user name of the custom account.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Required. Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.",
                                  "type": "string"
                                },
                                "login_url": {
                                  "description": "Required. The login form URL of the website.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "username",
                                "password",
                                "login_url"
                              ]
                            }
                          }
                        },
                        "tls_config": {
                          "type": "object",
                          "properties": {
                            "ca_certs": {
                              "description": "Required. Specifies a list of allowed custom CA certificates for HTTPS verification.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "display_name": {
                                    "description": "Required. The name of the allowed custom CA certificates. This can be used to disambiguate the custom CA certificates.",
                                    "type": "string"
                                  },
                                  "cert": {
                                    "description": "Required. The allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with \"subject alt name\". For instance a certificate can be self-signed using the following command:  ::  openssl x509 -req -days 200 -in example.com.csr \\ -signkey example.com.key \\ -out example.com.crt \\ -extfile <(printf \"\\nsubjectAltName='DNS:www.example.com'\")",
                                    "type": "object",
                                    "reference": "bytes"
                                  }
                                },
                                "required": [
                                  "display_name",
                                  "cert"
                                ]
                              }
                            }
                          },
                          "required": [
                            "ca_certs"
                          ]
                        },
                        "service_directory_config": {
                          "type": "object",
                          "properties": {
                            "service": {
                              "description": "Required. The name of `Service Directory <https://cloud.google.com/service-directory>`__ service. Format: ``projects/<ProjectID>/locations/<LocationID>/namespaces/<NamespaceID>/services/<ServiceID>``. ``Location ID`` of the service directory must be the same as the location of the agent.",
                              "type": "string"
                            },
                            "generic_web_service": {
                              "type": "object",
                              "properties": {
                                "uri": {
                                  "description": "Required. The webhook URI for receiving POST requests. It must use https protocol.",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "The user name for HTTP Basic authentication.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "The password for HTTP Basic authentication.",
                                  "type": "string"
                                },
                                "request_headers": {
                                  "description": "The HTTP request headers to send together with webhook requests.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "allowed_ca_certs": {
                                  "description": "Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with \"subject alt name\". For instance a certificate can be self-signed using the following command,  ::  openssl x509 -req -days 200 -in example.com.csr \\ -signkey example.com.key \\ -out example.com.crt \\ -extfile <(printf \"\\nsubjectAltName='DNS:www.example.com'\")",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "reference": "bytes"
                                  }
                                },
                                "oauth_config": {
                                  "type": "object",
                                  "properties": {
                                    "client_id": {
                                      "description": "Required. The client ID provided by the 3rd party platform.",
                                      "type": "string"
                                    },
                                    "client_secret": {
                                      "description": "Required. The client secret provided by the 3rd party platform.",
                                      "type": "string"
                                    },
                                    "token_endpoint": {
                                      "description": "Required. The token endpoint provided by the 3rd party platform to exchange an access token.",
                                      "type": "string"
                                    },
                                    "scopes": {
                                      "description": "Optional. The OAuth scopes to grant.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "client_id",
                                    "client_secret",
                                    "token_endpoint"
                                  ]
                                },
                                "service_agent_auth": {
                                  "description": "Optional. Indicate the auth token type generated from the `Diglogflow service agent <https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent>`__. The generated token is sent in the Authorization header.",
                                  "type": "object",
                                  "reference": "google.cloud.dialogflowcx_v3beta1.types.Webhook.GenericWebService.ServiceAgentAuth"
                                },
                                "webhook_type": {
                                  "description": "Optional. Type of the webhook.",
                                  "type": "object",
                                  "reference": "google.cloud.dialogflowcx_v3beta1.types.Webhook.GenericWebService.WebhookType"
                                },
                                "http_method": {
                                  "description": "Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.",
                                  "type": "object",
                                  "reference": "google.cloud.dialogflowcx_v3beta1.types.Webhook.GenericWebService.HttpMethod"
                                },
                                "request_body": {
                                  "description": "Optional. Defines a custom JSON object as request body to send to flexible webhook.",
                                  "type": "string"
                                },
                                "parameter_mapping": {
                                  "description": "Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "uri"
                              ]
                            }
                          },
                          "required": [
                            "service"
                          ]
                        }
                      },
                      "required": [
                        "text_schema"
                      ]
                    },
                    "data_store_spec": {
                      "type": "object",
                      "properties": {
                        "data_store_connections": {
                          "description": "Required. List of data stores to search.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "data_store_type": {
                                "description": "The type of the connected data store.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.DataStoreType"
                              },
                              "data_store": {
                                "description": "The full name of the referenced data store. Formats: ``projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`` ``projects/{project}/locations/{location}/dataStores/{data_store}``",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "fallback_prompt": {
                          "type": "object",
                          "properties": {}
                        }
                      },
                      "required": [
                        "data_store_connections",
                        "fallback_prompt"
                      ]
                    },
                    "extension_spec": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Required. The full name of the referenced vertex extension. Formats: ``projects/{project}/locations/{location}/extensions/{extension}``",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "function_spec": {
                      "type": "object",
                      "properties": {
                        "input_schema": {
                          "description": "Optional. The JSON schema is encapsulated in a [google.protobuf.Struct][google.protobuf.Struct] to describe the input of the function. This input is a JSON object that contains the function's parameters as properties of the object.",
                          "type": "object",
                          "reference": "google.protobuf.struct_pb2.Struct"
                        },
                        "output_schema": {
                          "description": "Optional. The JSON schema is encapsulated in a [google.protobuf.Struct][google.protobuf.Struct] to describe the output of the function. This output is a JSON object that contains the function's parameters as properties of the object.",
                          "type": "object",
                          "reference": "google.protobuf.struct_pb2.Struct"
                        }
                      }
                    },
                    "tool_type": {
                      "description": "Output only. The tool type.",
                      "type": "object",
                      "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.ToolType"
                    }
                  },
                  "required": [
                    "display_name",
                    "description"
                  ]
                }
              },
              "tool_config": {
                "type": "object",
                "properties": {
                  "function_calling_config": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. Specifies the mode in which function calling should execute. If unspecified, the default value will be set to AUTO.",
                        "type": "object",
                        "reference": "google.ai.generativelanguage_v1beta.types.FunctionCallingConfig.Mode"
                      },
                      "allowed_function_names": {
                        "description": "Optional. A set of function names that, when provided, limits the functions the model will call.  This should only be set when the Mode is ANY. Function names should match [FunctionDeclaration.name]. With mode set to ANY, model will predict a function call from the set of function names provided.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "safety_settings": {
                "description": "Optional. A list of unique ``SafetySetting`` instances for blocking unsafe content.  This will be enforced on the ``GenerateContentRequest.contents`` and ``GenerateContentResponse.candidates``. There should not be more than one setting for each ``SafetyCategory`` type. The API will block any contents and responses that fail to meet the thresholds set by these settings. This list overrides the default settings for each ``SafetyCategory`` specified in the safety_settings. If there is no ``SafetySetting`` for a given ``SafetyCategory`` provided in the list, the API will use the default safety setting for that category. Harm categories HARM_CATEGORY_HATE_SPEECH, HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT, HARM_CATEGORY_HARASSMENT are supported. Refer to the `guide <https://ai.google.dev/gemini-api/docs/safety-settings>`__ for detailed information on available safety settings. Also refer to the `Safety guidance <https://ai.google.dev/gemini-api/docs/safety-guidance>`__ to learn how to incorporate safety considerations in your AI applications.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "description": "Required. The category for this setting.",
                      "type": "object",
                      "reference": "google.ai.generativelanguage_v1beta3.types.HarmCategory"
                    },
                    "threshold": {
                      "description": "Required. Controls the probability threshold at which harm is blocked.",
                      "type": "object",
                      "reference": "google.ai.generativelanguage_v1beta3.types.SafetySetting.HarmBlockThreshold"
                    }
                  },
                  "required": [
                    "category",
                    "threshold"
                  ]
                }
              },
              "generation_config": {
                "type": "object",
                "properties": {
                  "candidate_count": {
                    "description": "Optional. Number of generated responses to return. Currently, this value can only be set to 1. If unset, this will default to 1.  This field is a member of `oneof`_ ``_candidate_count``.",
                    "type": "integer"
                  },
                  "stop_sequences": {
                    "description": "Optional. The set of character sequences (up to 5) that will stop output generation. If specified, the API will stop at the first appearance of a ``stop_sequence``. The stop sequence will not be included as part of the response.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "max_output_tokens": {
                    "description": "Optional. The maximum number of tokens to include in a response candidate.  Note: The default value varies by model, see the ``Model.output_token_limit`` attribute of the ``Model`` returned from the ``getModel`` function.  This field is a member of `oneof`_ ``_max_output_tokens``.",
                    "type": "integer"
                  },
                  "temperature": {
                    "description": "Optional. Controls the randomness of the output.  Note: The default value varies by model, see the ``Model.temperature`` attribute of the ``Model`` returned from the ``getModel`` function.  Values can range from [0.0, 2.0].  This field is a member of `oneof`_ ``_temperature``.",
                    "type": "number"
                  },
                  "top_p": {
                    "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.  The model uses combined Top-k and Top-p (nucleus) sampling.  Tokens are sorted based on their assigned probabilities so that only the most likely tokens are considered. Top-k sampling directly limits the maximum number of tokens to consider, while Nucleus sampling limits the number of tokens based on the cumulative probability.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_p``.",
                    "type": "number"
                  },
                  "top_k": {
                    "description": "Optional. The maximum number of tokens to consider when sampling.  Gemini models use Top-p (nucleus) sampling or a combination of Top-k and nucleus sampling. Top-k sampling considers the set of ``top_k`` most probable tokens. Models running with nucleus sampling don't allow top_k setting.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_k``.",
                    "type": "integer"
                  },
                  "response_mime_type": {
                    "description": "Optional. MIME type of the generated candidate text. Supported MIME types are: ``text/plain``: (default) Text output. ``application/json``: JSON response in the response candidates. ``text/x.enum``: ENUM as a string response in the response candidates. Refer to the `docs <https://ai.google.dev/gemini-api/docs/prompting_with_media#plain_text_formats>`__ for a list of all supported text MIME types.",
                    "type": "string"
                  },
                  "response_schema": {
                    "type": "object",
                    "properties": {
                      "struct_schema": {
                        "description": "The structured representation of the schema.  This field is a member of `oneof`_ ``schema``.",
                        "type": "object",
                        "reference": "google.protobuf.struct_pb2.Struct"
                      },
                      "json_schema": {
                        "description": "The JSON representation of the schema.  This field is a member of `oneof`_ ``schema``.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Immutable. The full resource name of the schema, in the format of ``projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}``.  This field must be a UTF-8 encoded string with a length limit of 1024 characters.",
                        "type": "string"
                      }
                    }
                  },
                  "presence_penalty": {
                    "description": "Optional. Presence penalty applied to the next token's logprobs if the token has already been seen in the response.  This penalty is binary on/off and not dependant on the number of times the token is used (after the first). Use [frequency_penalty][google.ai.generativelanguage.v1beta.GenerationConfig.frequency_penalty] for a penalty that increases with each use.  A positive penalty will discourage the use of tokens that have already been used in the response, increasing the vocabulary.  A negative penalty will encourage the use of tokens that have already been used in the response, decreasing the vocabulary.  This field is a member of `oneof`_ ``_presence_penalty``.",
                    "type": "number"
                  },
                  "frequency_penalty": {
                    "description": "Optional. Frequency penalty applied to the next token's logprobs, multiplied by the number of times each token has been seen in the respponse so far.  A positive penalty will discourage the use of tokens that have already been used, proportional to the number of times the token has been used: The more a token is used, the more dificult it is for the model to use that token again increasing the vocabulary of responses.  Caution: A *negative* penalty will encourage the model to reuse tokens proportional to the number of times the token has been used. Small negative values will reduce the vocabulary of a response. Larger negative values will cause the model to start repeating a common token until it hits the [max_output_tokens][google.ai.generativelanguage.v1beta.GenerationConfig.max_output_tokens] limit.  This field is a member of `oneof`_ ``_frequency_penalty``.",
                    "type": "number"
                  },
                  "response_logprobs": {
                    "description": "Optional. If true, export the logprobs results in response.  This field is a member of `oneof`_ ``_response_logprobs``.",
                    "type": "boolean"
                  },
                  "logprobs": {
                    "description": "Optional. Only valid if [response_logprobs=True][google.ai.generativelanguage.v1beta.GenerationConfig.response_logprobs]. This sets the number of top logprobs to return at each decoding step in the [Candidate.logprobs_result][google.ai.generativelanguage.v1beta.Candidate.logprobs_result].  This field is a member of `oneof`_ ``_logprobs``.",
                    "type": "integer"
                  }
                }
              },
              "cached_content": {
                "description": "Optional. The name of the content `cached <https://ai.google.dev/gemini-api/docs/caching>`__ to use as context to serve the prediction. Format: ``cachedContents/{cachedContent}``  This field is a member of `oneof`_ ``_cached_content``.",
                "type": "string"
              }
            },
            "required": [
              "model",
              "contents"
            ]
          }
        },
        "required": [
          "model"
        ]
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-ai-generativelanguage\\google\\ai\\generativelanguage_v1\\types\\model_service.py": [
    {
      "type": "function",
      "name": "GetModelRequest",
      "description": "Request for getting information about a specific Model.\n\nAttributes:\n    name (str):\n        Required. The resource name of the model.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the model.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListModelsRequest",
      "description": "Request for listing all Models.\n\nAttributes:\n    page_size (int):\n        The maximum number of ``Models`` to return (per page).\n\n        If unspecified, 50 models will be returned per page. This\n        method returns at most 1000 models per page, even if you\n        pass a larger page_size.\n    page_token (str):\n        A page token, received from a previous ``ListModels`` call.\n\n        Provide the ``page_token`` returned by one request as an\n        argument to the next request to retrieve the next page.\n\n        When paginating, all other parameters provided to\n        ``ListModels`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "page_size": {
            "description": "The maximum number of ``Models`` to return (per page).  If unspecified, 50 models will be returned per page. This method returns at most 1000 models per page, even if you pass a larger page_size.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListModels`` call.  Provide the ``page_token`` returned by one request as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to ``ListModels`` must match the call that provided the page token.",
            "type": "string"
          }
        }
      }
    }
  ]
}