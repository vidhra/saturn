{
  "WebSecurityScanner": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_scan_config",
          "description": "Creates a new ScanConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_create_scan_config():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.CreateScanConfigRequest(\n        )\n\n        # Make the request\n        response = await client.create_scan_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.websecurityscanner_v1.types.CreateScanConfigRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_scan_config",
          "description": "Deletes an existing ScanConfig and its child\nresources.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_delete_scan_config():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.DeleteScanConfigRequest(\n        )\n\n        # Make the request\n        await client.delete_scan_config(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.websecurityscanner_v1.types.DeleteScanConfigRequest, dict]]):\n        The request objec",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_scan_config",
          "description": "Gets a ScanConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_get_scan_config():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.GetScanConfigRequest(\n        )\n\n        # Make the request\n        response = await client.get_scan_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.websecurityscanner_v1.types.GetScanConfigRequest, dict]]):\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_scan_configs",
          "description": "Lists ScanConfigs under a given project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_list_scan_configs():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.ListScanConfigsRequest(\n        )\n\n        # Make the request\n        page_result = client.list_scan_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_scan_config",
          "description": "Updates a ScanConfig. This method support partial\nupdate of a ScanConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_update_scan_config():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.UpdateScanConfigRequest(\n        )\n\n        # Make the request\n        response = await client.update_scan_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.web",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_scan_run",
          "description": "Start a ScanRun according to the given ScanConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_start_scan_run():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.StartScanRunRequest(\n        )\n\n        # Make the request\n        response = await client.start_scan_run(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.websecurityscanner_v1.types.StartScanR",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_scan_run",
          "description": "Gets a ScanRun.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_get_scan_run():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.GetScanRunRequest(\n        )\n\n        # Make the request\n        response = await client.get_scan_run(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.websecurityscanner_v1.types.GetScanRunRequest, dict]]):\n        The request obj",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_scan_runs",
          "description": "Lists ScanRuns under a given ScanConfig, in\ndescending order of ScanRun stop time.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_list_scan_runs():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.ListScanRunsRequest(\n        )\n\n        # Make the request\n        page_result = client.list_scan_runs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "stop_scan_run",
          "description": "Stops a ScanRun. The stopped ScanRun is returned.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_stop_scan_run():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.StopScanRunRequest(\n        )\n\n        # Make the request\n        response = await client.stop_scan_run(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.websecurityscanner_v1.types.StopScanRunReq",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_crawled_urls",
          "description": "List CrawledUrls under a given ScanRun.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_list_crawled_urls():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.ListCrawledUrlsRequest(\n        )\n\n        # Make the request\n        page_result = client.list_crawled_urls(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_finding",
          "description": "Gets a Finding.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_get_finding():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.GetFindingRequest(\n        )\n\n        # Make the request\n        response = await client.get_finding(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.websecurityscanner_v1.types.GetFindingRequest, dict]]):\n        The request objec",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_findings",
          "description": "List Findings under a given ScanRun.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_list_findings():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.ListFindingsRequest(\n        )\n\n        # Make the request\n        page_result = client.list_findings(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.websecurit",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_finding_type_stats",
          "description": "List all FindingTypeStats under a given ScanRun.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import websecurityscanner_v1\n\n    async def sample_list_finding_type_stats():\n        # Create a client\n        client = websecurityscanner_v1.WebSecurityScannerAsyncClient()\n\n        # Initialize request argument(s)\n        request = websecurityscanner_v1.ListFindingTypeStatsRequest(\n        )\n\n        # Make the request\n        response = await client.list_finding_type_stats(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.websecuritysca",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}