{
  "BareMetalSolution": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_instances",
          "description": "List servers in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_list_instances():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ListInstancesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_instances(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListInstancesRequest.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.services.bare_metal_solution.pagers.ListInstancesAsyncPager: Response message for the list of servers. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_instance",
          "description": "Get details about a single server.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_get_instance():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.GetInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_instance(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.bare_metal_solution_v2.typ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.Instance: A server."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_instance",
          "description": "Update details of a single server.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_update_instance():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.UpdateInstanceRequest(\n        )\n\n        # Make the request\n        operation = client.update_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "instance": {
                "type": "google.cloud.bare_metal_solution_v2.types.Instance",
                "description": "Required. The server to update.  The ``name`` field is used to identify the instance to update. Format: projects/{project}/locations/{location}/instances/{instance}  This corresponds to the ``instance`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to update. The currently supported fields are: ``labels`` ``hyperthreading_enabled`` ``os_image``  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.Instance` A server."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "instance",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "rename_instance",
          "description": "RenameInstance sets a new name for an instance.\nUse with caution, previous names become immediately\ninvalidated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_rename_instance():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.RenameInstanceRequest(\n            name=\"name_value\",\n            new_instance_id=\"new_instance_id_value\",\n        )\n\n        # Make the request\n        response = await client.rename_instance(reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The ``name`` field is used to identify the instance. Format: projects/{project}/locations/{location}/instances/{instance}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "new_instance_id": {
                "type": "str",
                "description": "Required. The new ``id`` of the instance. This corresponds to the ``new_instance_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.Instance: A server."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "new_instance_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reset_instance",
          "description": "Perform an ungraceful, hard reset on a server.\nEquivalent to shutting the power off and then turning it\nback on.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_reset_instance():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ResetInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.reset_instance(request=request)\n\n        print(\"Waiting for operation to complete.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.ResetInstanceResponse` Response message from resetting a server."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_instance",
          "description": "Starts a server that was shutdown.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_start_instance():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.StartInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.start_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.StartInstanceResponse` Response message from starting a server."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "stop_instance",
          "description": "Stop a running server.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_stop_instance():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.StopInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.stop_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        pr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.StopInstanceResponse` Response message from stopping a server."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "enable_interactive_serial_console",
          "description": "Enable the interactive serial console feature on an\ninstance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_enable_interactive_serial_console():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.EnableInteractiveSerialConsoleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.enable_interactive_serial_console(request=request)\n\n        print(\"Waiting for operation to compl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.EnableInteractiveSerialConsoleResponse` Message for response of EnableInteractiveSerialConsole."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "disable_interactive_serial_console",
          "description": "Disable the interactive serial console feature on an\ninstance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_disable_interactive_serial_console():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.DisableInteractiveSerialConsoleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.disable_interactive_serial_console(request=request)\n\n        print(\"Waiting for operation to c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.DisableInteractiveSerialConsoleResponse` Message for response of DisableInteractiveSerialConsole."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "detach_lun",
          "description": "Detach LUN from Instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_detach_lun():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.DetachLunRequest(\n            instance=\"instance_value\",\n            lun=\"lun_value\",\n        )\n\n        # Make the request\n        operation = client.detach_lun(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        #",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "instance": {
                "type": "str",
                "description": "Required. Name of the instance. This corresponds to the ``instance`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "lun": {
                "type": "str",
                "description": "Required. Name of the Lun to detach. This corresponds to the ``lun`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.Instance` A server."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "instance",
              "lun",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_ssh_keys",
          "description": "Lists the public SSH keys registered for the\nspecified project. These SSH keys are used only for the\ninteractive serial console feature.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_list_ssh_keys():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ListSSHKeysRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_ssh_keys(request=request)\n\n        # Handle the re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent containing the SSH keys. Currently, the only valid value for the location is \"global\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.services.bare_metal_solution.pagers.ListSSHKeysAsyncPager: Message for response of ListSSHKeys.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_ssh_key",
          "description": "Register a public SSH key in the specified project\nfor use with the interactive serial console feature.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_create_ssh_key():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.CreateSSHKeyRequest(\n            parent=\"parent_value\",\n            ssh_key_id=\"ssh_key_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_ssh_key(request=request)\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent containing the SSH keys.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ssh_key": {
                "type": "google.cloud.bare_metal_solution_v2.types.SSHKey",
                "description": "Required. The SSH key to register. This corresponds to the ``ssh_key`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ssh_key_id": {
                "type": "str",
                "description": "Required. The ID to use for the key, which will become the final component of the key's resource name.  This value must match the regex: [a-zA-Z0-9@.-_]{1,64}  This corresponds to the ``ssh_key_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.SSHKey: An SSH key, used for authorizing with the interactive serial console feature."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "ssh_key",
              "ssh_key_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_ssh_key",
          "description": "Deletes a public SSH key registered in the specified\nproject.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_delete_ssh_key():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.DeleteSSHKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_ssh_key(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.bare_metal_solution_v2.types.DeleteSSHKeyRequest, dict]]):\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the SSH key to delete. Currently, the only valid value for the location is \"global\".  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_volumes",
          "description": "List storage volumes in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_list_volumes():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ListVolumesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_volumes(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListVolumesRequest.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.services.bare_metal_solution.pagers.ListVolumesAsyncPager: Response message containing the list of storage volumes. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_volume",
          "description": "Get details of a single storage volume.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_get_volume():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.GetVolumeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_volume(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.bare_metal_solution_v2.type",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.Volume: A storage volume."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_volume",
          "description": "Update details of a single storage volume.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_update_volume():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.UpdateVolumeRequest(\n        )\n\n        # Make the request\n        operation = client.update_volume(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "volume": {
                "type": "google.cloud.bare_metal_solution_v2.types.Volume",
                "description": "Required. The volume to update.  The ``name`` field is used to identify the volume to update. Format: projects/{project}/locations/{location}/volumes/{volume}  This corresponds to the ``volume`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to update. The only currently supported fields are:  'labels'  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.Volume` A storage volume."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "volume",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "rename_volume",
          "description": "RenameVolume sets a new name for a volume.\nUse with caution, previous names become immediately\ninvalidated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_rename_volume():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.RenameVolumeRequest(\n            name=\"name_value\",\n            new_volume_id=\"new_volume_id_value\",\n        )\n\n        # Make the request\n        response = await client.rename_volume(request=request)\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The ``name`` field is used to identify the volume. Format: projects/{project}/locations/{location}/volumes/{volume}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "new_volume_id": {
                "type": "str",
                "description": "Required. The new ``id`` of the volume. This corresponds to the ``new_volume_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.Volume: A storage volume."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "new_volume_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "evict_volume",
          "description": "Skips volume's cooloff and deletes it now.\nVolume must be in cooloff state.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_evict_volume():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.EvictVolumeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.evict_volume(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Volume. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "resize_volume",
          "description": "Emergency Volume resize.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_resize_volume():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ResizeVolumeRequest(\n            volume=\"volume_value\",\n        )\n\n        # Make the request\n        operation = client.resize_volume(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "volume": {
                "type": "str",
                "description": "Required. Volume to resize. This corresponds to the ``volume`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "size_gib": {
                "type": "int",
                "description": "New Volume size, in GiB. This corresponds to the ``size_gib`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.Volume` A storage volume."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "volume",
              "size_gib",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_networks",
          "description": "List network in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_list_networks():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ListNetworksRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_networks(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListNetworksRequest.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.services.bare_metal_solution.pagers.ListNetworksAsyncPager: Response message containing the list of networks. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_network_usage",
          "description": "List all Networks (and used IPs for each Network) in\nthe vendor account associated with the specified\nproject.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_list_network_usage():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ListNetworkUsageRequest(\n            location=\"location_value\",\n        )\n\n        # Make the request\n        response = await client.list_network_usage(request=request)\n\n        # Handle the respon",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "location": {
                "type": "str",
                "description": "Required. Parent value (project and location).  This corresponds to the ``location`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.ListNetworkUsageResponse: Response with Networks with IPs"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "location",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_network",
          "description": "Get details of a single network.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_get_network():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.GetNetworkRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_network(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.bare_metal_solution_v2.types.Ge",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.Network: A Network."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_network",
          "description": "Update details of a single network.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_update_network():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.UpdateNetworkRequest(\n        )\n\n        # Make the request\n        operation = client.update_network(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "network": {
                "type": "google.cloud.bare_metal_solution_v2.types.Network",
                "description": "Required. The network to update.  The ``name`` field is used to identify the instance to update. Format: projects/{project}/locations/{location}/networks/{network}  This corresponds to the ``network`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to update. The only currently supported fields are: ``labels``, ``reservations``, ``vrf.vlan_attachments``  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.Network` A Network."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "network",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_volume_snapshot",
          "description": "Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if\ncalled for a non-boot volume.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_create_volume_snapshot():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.CreateVolumeSnapshotRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_volume_snapshot(request=request)\n\n        # Handle the response\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The volume to snapshot. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "volume_snapshot": {
                "type": "google.cloud.bare_metal_solution_v2.types.VolumeSnapshot",
                "description": "Required. The snapshot to create. This corresponds to the ``volume_snapshot`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.VolumeSnapshot: A snapshot of a volume. Only boot volumes can have snapshots."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "volume_snapshot",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "restore_volume_snapshot",
          "description": "Uses the specified snapshot to restore its parent volume.\nReturns INVALID_ARGUMENT if called for a non-boot volume.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_restore_volume_snapshot():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.RestoreVolumeSnapshotRequest(\n            volume_snapshot=\"volume_snapshot_value\",\n        )\n\n        # Make the request\n        operation = client.restore_volume_snapshot(request=request)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "volume_snapshot": {
                "type": "str",
                "description": "Required. Name of the snapshot which will be used to restore its parent volume.  This corresponds to the ``volume_snapshot`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.VolumeSnapshot` A snapshot of a volume. Only boot volumes can have snapshots."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "volume_snapshot",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_volume_snapshot",
          "description": "Deletes a volume snapshot. Returns INVALID_ARGUMENT if called\nfor a non-boot volume.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_delete_volume_snapshot():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.DeleteVolumeSnapshotRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_volume_snapshot(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.bare_metal_so",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the snapshot to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_volume_snapshot",
          "description": "Returns the specified snapshot resource. Returns\nINVALID_ARGUMENT if called for a non-boot volume.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_get_volume_snapshot():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.GetVolumeSnapshotRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_volume_snapshot(request=request)\n\n        # Handle the response\n        print(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the snapshot. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.VolumeSnapshot: A snapshot of a volume. Only boot volumes can have snapshots."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_volume_snapshots",
          "description": "Retrieves the list of snapshots for the specified\nvolume. Returns a response with an empty list of\nsnapshots if called for a non-boot volume.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_list_volume_snapshots():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ListVolumeSnapshotsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_volume_snapshots(request=requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListVolumesRequest.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.services.bare_metal_solution.pagers.ListVolumeSnapshotsAsyncPager: Response message containing the list of volume snapshots. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_lun",
          "description": "Get details of a single storage logical unit\nnumber(LUN).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_get_lun():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.GetLunRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_lun(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.bare_metal_solutio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.Lun: A storage volume logical unit number (LUN)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_luns",
          "description": "List storage volume luns for given storage volume.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_list_luns():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ListLunsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_luns(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListLunsRequest.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.services.bare_metal_solution.pagers.ListLunsAsyncPager: Response message containing the list of storage volume luns. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "evict_lun",
          "description": "Skips lun's cooloff and deletes it now.\nLun must be in cooloff state.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_evict_lun():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.EvictLunRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.evict_lun(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the lun. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_nfs_share",
          "description": "Get details of a single NFS share.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_get_nfs_share():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.GetNfsShareRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_nfs_share(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.bare_metal_solution_v2.t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.NfsShare: An NFS share."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_nfs_shares",
          "description": "List NFS shares.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_list_nfs_shares():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ListNfsSharesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_nfs_shares(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[g",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListNfsSharesRequest.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.services.bare_metal_solution.pagers.ListNfsSharesAsyncPager: Response message containing the list of NFS shares. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_nfs_share",
          "description": "Update details of a single NFS share.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_update_nfs_share():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.UpdateNfsShareRequest(\n        )\n\n        # Make the request\n        operation = client.update_nfs_share(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "nfs_share": {
                "type": "google.cloud.bare_metal_solution_v2.types.NfsShare",
                "description": "Required. The NFS share to update.  The ``name`` field is used to identify the NFS share to update. Format: projects/{project}/locations/{location}/nfsShares/{nfs_share}  This corresponds to the ``nfs_share`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to update. The only currently supported fields are: ``labels`` ``allowed_clients``  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.NfsShare` An NFS share."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "nfs_share",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_nfs_share",
          "description": "Create an NFS share.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_create_nfs_share():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.CreateNfsShareRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_nfs_share(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent project and location.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "nfs_share": {
                "type": "google.cloud.bare_metal_solution_v2.types.NfsShare",
                "description": "Required. The NfsShare to create. This corresponds to the ``nfs_share`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.bare_metal_solution_v2.types.NfsShare` An NFS share."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "nfs_share",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "rename_nfs_share",
          "description": "RenameNfsShare sets a new name for an nfsshare.\nUse with caution, previous names become immediately\ninvalidated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_rename_nfs_share():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.RenameNfsShareRequest(\n            name=\"name_value\",\n            new_nfsshare_id=\"new_nfsshare_id_value\",\n        )\n\n        # Make the request\n        response = await client.rename_nfs_share(requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The ``name`` field is used to identify the nfsshare. Format: projects/{project}/locations/{location}/nfsshares/{nfsshare}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "new_nfsshare_id": {
                "type": "str",
                "description": "Required. The new ``id`` of the nfsshare. This corresponds to the ``new_nfsshare_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.NfsShare: An NFS share."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "new_nfsshare_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_nfs_share",
          "description": "Delete an NFS share. The underlying volume is\nautomatically deleted.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_delete_nfs_share():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.DeleteNfsShareRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_nfs_share(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operati",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the NFS share to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_provisioning_quotas",
          "description": "List the budget details to provision resources on a\ngiven project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_list_provisioning_quotas():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ListProvisioningQuotasRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_provisioning_quotas(request=request)\n\n        # Handle the response\n        async for response in ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListProvisioningQuotasRequest.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.services.bare_metal_solution.pagers.ListProvisioningQuotasAsyncPager: Response message for the list of provisioning quotas. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "submit_provisioning_config",
          "description": "Submit a provisiong configuration for a given\nproject.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_submit_provisioning_config():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.SubmitProvisioningConfigRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.submit_provisioning_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent project and location containing the ProvisioningConfig.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "provisioning_config": {
                "type": "google.cloud.bare_metal_solution_v2.types.ProvisioningConfig",
                "description": "Required. The ProvisioningConfig to create.  This corresponds to the ``provisioning_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.SubmitProvisioningConfigResponse: Response for SubmitProvisioningConfig."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "provisioning_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_provisioning_config",
          "description": "Get ProvisioningConfig by name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_get_provisioning_config():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.GetProvisioningConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_provisioning_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.clo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ProvisioningConfig.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.ProvisioningConfig: A provisioning configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_provisioning_config",
          "description": "Create new ProvisioningConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_create_provisioning_config():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.CreateProvisioningConfigRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_provisioning_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Unio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent project and location containing the ProvisioningConfig.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "provisioning_config": {
                "type": "google.cloud.bare_metal_solution_v2.types.ProvisioningConfig",
                "description": "Required. The ProvisioningConfig to create.  This corresponds to the ``provisioning_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.ProvisioningConfig: A provisioning configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "provisioning_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_provisioning_config",
          "description": "Update existing ProvisioningConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_update_provisioning_config():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.UpdateProvisioningConfigRequest(\n        )\n\n        # Make the request\n        response = await client.update_provisioning_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.bare_metal_solu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "provisioning_config": {
                "type": "google.cloud.bare_metal_solution_v2.types.ProvisioningConfig",
                "description": "Required. The ProvisioningConfig to update.  This corresponds to the ``provisioning_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to update.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.ProvisioningConfig: A provisioning configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "provisioning_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "rename_network",
          "description": "RenameNetwork sets a new name for a network.\nUse with caution, previous names become immediately\ninvalidated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_rename_network():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.RenameNetworkRequest(\n            name=\"name_value\",\n            new_network_id=\"new_network_id_value\",\n        )\n\n        # Make the request\n        response = await client.rename_network(request=reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The ``name`` field is used to identify the network. Format: projects/{project}/locations/{location}/networks/{network}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "new_network_id": {
                "type": "str",
                "description": "Required. The new ``id`` of the network. This corresponds to the ``new_network_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.types.Network: A Network."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "new_network_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_os_images",
          "description": "Retrieves the list of OS images which are currently\napproved.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bare_metal_solution_v2\n\n    async def sample_list_os_images():\n        # Create a client\n        client = bare_metal_solution_v2.BareMetalSolutionAsyncClient()\n\n        # Initialize request argument(s)\n        request = bare_metal_solution_v2.ListOSImagesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_os_images(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListProvisioningQuotasRequest.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bare_metal_solution_v2.services.bare_metal_solution.pagers.ListOSImagesAsyncPager: Request for getting all available OS images. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}