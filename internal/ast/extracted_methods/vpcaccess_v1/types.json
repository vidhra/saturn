{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-vpc-access\\google\\cloud\\vpcaccess_v1\\types\\vpc_access.py": [
    {
      "type": "request_class",
      "name": "Connector",
      "docstring": "Definition of a Serverless VPC Access connector.\n\nAttributes:\n    name (str):\n        The resource name in the format\n        ``projects/*/locations/*/connectors/*``.\n    network (str):\n        Name of a VPC network.\n    ip_cidr_range (str):\n        The range of internal addresses that follows RFC 4632\n        notation. Example: ``10.132.0.0/28``.\n    state (google.cloud.vpcaccess_v1.types.Connector.State):\n        Output only. State of the VPC access\n        connector.\n    min_throughput (int):\n        Minimum throughput of the connector in Mbps.\n        Default and min is 200.\n    max_throughput (int):\n        Maximum throughput of the connector in Mbps.\n        Default is 300, max is 1000.\n    connected_projects (MutableSequence[str]):\n        Output only. List of projects using the\n        connector.\n    subnet (google.cloud.vpcaccess_v1.types.Connector.Subnet):\n        The subnet in which to house the VPC Access\n        Connector.\n    machine_type (str):\n        Machine type of VM Instance underlying\n   ",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The resource name in the format ``projects/*/locations/*/connectors/*``."
        },
        "network": {
          "type": "str",
          "description": "Name of a VPC network."
        },
        "ip_cidr_range": {
          "type": "str",
          "description": "The range of internal addresses that follows RFC 4632 notation. Example: ``10.132.0.0/28``."
        },
        "state": {
          "type": "google.cloud.vpcaccess_v1.types.Connector.State",
          "description": "Output only. State of the VPC access connector."
        },
        "min_throughput": {
          "type": "int",
          "description": "Minimum throughput of the connector in Mbps. Default and min is 200."
        },
        "max_throughput": {
          "type": "int",
          "description": "Maximum throughput of the connector in Mbps. Default is 300, max is 1000."
        },
        "connected_projects": {
          "type": "MutableSequence[str]",
          "description": "Output only. List of projects using the connector."
        },
        "subnet": {
          "type": "google.cloud.vpcaccess_v1.types.Connector.Subnet",
          "description": "The subnet in which to house the VPC Access Connector."
        },
        "machine_type": {
          "type": "str",
          "description": "Machine type of VM Instance underlying connector. Default is e2-micro"
        },
        "min_instances": {
          "type": "int",
          "description": "Minimum value of instances in autoscaling group underlying the connector."
        },
        "max_instances": {
          "type": "int",
          "description": "Maximum value of instances in autoscaling group underlying the connector."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateConnectorRequest",
      "docstring": "Request for creating a Serverless VPC Access connector.\n\nAttributes:\n    parent (str):\n        Required. The project and location in which the\n        configuration should be created, specified in the format\n        ``projects/*/locations/*``.\n    connector_id (str):\n        Required. The ID to use for this connector.\n    connector (google.cloud.vpcaccess_v1.types.Connector):\n        Required. Resource to create.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project and location in which the configuration should be created, specified in the format ``projects/*/locations/*``."
        },
        "connector_id": {
          "type": "str",
          "description": "Required. The ID to use for this connector."
        },
        "connector": {
          "type": "google.cloud.vpcaccess_v1.types.Connector",
          "description": "Required. Resource to create."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetConnectorRequest",
      "docstring": "Request for getting a Serverless VPC Access connector.\n\nAttributes:\n    name (str):\n        Required. Name of a Serverless VPC Access\n        connector to get.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Name of a Serverless VPC Access connector to get."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListConnectorsRequest",
      "docstring": "Request for listing Serverless VPC Access connectors in a\nlocation.\n\nAttributes:\n    parent (str):\n        Required. The project and location from which\n        the routes should be listed.\n    page_size (int):\n        Maximum number of functions to return per\n        call.\n    page_token (str):\n        Continuation token.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project and location from which the routes should be listed."
        },
        "page_size": {
          "type": "int",
          "description": "Maximum number of functions to return per call."
        },
        "page_token": {
          "type": "str",
          "description": "Continuation token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListConnectorsResponse",
      "docstring": "Response for listing Serverless VPC Access connectors.\n\nAttributes:\n    connectors (MutableSequence[google.cloud.vpcaccess_v1.types.Connector]):\n        List of Serverless VPC Access connectors.\n    next_page_token (str):\n        Continuation token.",
      "attributes": {
        "connectors": {
          "type": "MutableSequence[google.cloud.vpcaccess_v1.types.Connector]",
          "description": "List of Serverless VPC Access connectors."
        },
        "next_page_token": {
          "type": "str",
          "description": "Continuation token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteConnectorRequest",
      "docstring": "Request for deleting a Serverless VPC Access connector.\n\nAttributes:\n    name (str):\n        Required. Name of a Serverless VPC Access\n        connector to delete.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Name of a Serverless VPC Access connector to delete."
        }
      }
    },
    {
      "type": "request_class",
      "name": "OperationMetadata",
      "docstring": "Metadata for google.longrunning.Operation.\n\nAttributes:\n    method (str):\n        Output only. Method that initiated the\n        operation e.g.\n        google.cloud.vpcaccess.v1.Connectors.CreateConnector.\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Time when the operation was\n        created.\n    end_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Time when the operation\n        completed.\n    target (str):\n        Output only. Name of the resource that this\n        operation is acting on e.g.\n        projects/my-project/locations/us-central1/connectors/v1.",
      "attributes": {
        "method": {
          "type": "str",
          "description": "Output only. Method that initiated the operation e.g. google.cloud.vpcaccess.v1.Connectors.CreateConnector."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Time when the operation was created."
        },
        "end_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Time when the operation completed."
        },
        "target": {
          "type": "str",
          "description": "Output only. Name of the resource that this operation is acting on e.g. projects/my-project/locations/us-central1/connectors/v1."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Subnet",
      "docstring": "The subnet in which to house the connector\n\nAttributes:\n    name (str):\n        Subnet name (relative, not fully qualified).\n        E.g. if the full subnet selfLink is\n        https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetName}\n        the correct input for this field would be\n        {subnetName}\n    project_id (str):\n        Project in which the subnet exists.\n        If not set, this project is assumed to be the\n        project for which the connector create request\n        was issued.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Subnet name (relative, not fully qualified). E.g. if the full subnet selfLink is https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetName} the correct input for this field would be {subnetName}"
        },
        "project_id": {
          "type": "str",
          "description": "Project in which the subnet exists. If not set, this project is assumed to be the project for which the connector create request was issued."
        }
      }
    }
  ]
}