{
  "FlexTemplatesService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "launch_flex_template",
          "description": "Launch a job with a FlexTemplate.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_launch_flex_template():\n        # Create a client\n        client = dataflow_v1beta3.FlexTemplatesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.LaunchFlexTemplateRequest(\n        )\n\n        # Make the request\n        response = await client.launch_flex_template(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataflow_v1beta3.types.LaunchFlexTemplateRequest, ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "templates.LaunchFlexTemplateRequest"
          ]
        }
      }
    ]
  },
  "JobsV1Beta3": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_job",
          "description": "Creates a Cloud Dataflow job.\n\nTo create a job, we recommend using\n``projects.locations.jobs.create`` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints).\nUsing ``projects.jobs.create`` is not recommended, as your job\nwill always start in ``us-central1``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_create_job():\n        # Create a client\n        client = dataflow_v1beta3.JobsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.CreateJobRequest(\n        )\n\n        # Ma",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "jobs.CreateJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_job",
          "description": "Gets the state of the specified Cloud Dataflow job.\n\nTo get the state of a job, we recommend using\n``projects.locations.jobs.get`` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints).\nUsing ``projects.jobs.get`` is not recommended, as you can only\nget the state of jobs that are running in ``us-central1``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_get_job():\n        # Create a client\n        client = dataflow_v1beta3.JobsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "jobs.GetJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_job",
          "description": "Updates the state of an existing Cloud Dataflow job.\n\nTo update the state of an existing job, we recommend using\n``projects.locations.jobs.update`` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints).\nUsing ``projects.jobs.update`` is not recommended, as you can\nonly update the state of jobs that are running in\n``us-central1``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_update_job():\n        # Create a client\n        client = dataflow_v1beta3.JobsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "jobs.UpdateJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_jobs",
          "description": "List the jobs of a project.\n\nTo list the jobs of a project in a region, we recommend using\n``projects.locations.jobs.list`` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints).\nTo list the all jobs across all regions, use\n``projects.jobs.aggregated``. Using ``projects.jobs.list`` is\nnot recommended, as you can only get the list of jobs that are\nrunning in ``us-central1``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_list_jobs():\n        # Create a client\n        client = dataflow_v1beta3.JobsV1Beta3AsyncClient()\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "jobs.ListJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "aggregated_list_jobs",
          "description": "List the jobs of a project across all regions.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_aggregated_list_jobs():\n        # Create a client\n        client = dataflow_v1beta3.JobsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.ListJobsRequest(\n        )\n\n        # Make the request\n        page_result = client.aggregated_list_jobs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataflow_v1b",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "jobs.ListJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "check_active_jobs",
          "description": "Check for existence of active jobs in the given\nproject across all regions.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_check_active_jobs():\n        # Create a client\n        client = dataflow_v1beta3.JobsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.CheckActiveJobsRequest(\n        )\n\n        # Make the request\n        response = await client.check_active_jobs(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataflow_v1beta3.types.Che",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "jobs.CheckActiveJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "snapshot_job",
          "description": "Snapshot the state of a streaming job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_snapshot_job():\n        # Create a client\n        client = dataflow_v1beta3.JobsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.SnapshotJobRequest(\n        )\n\n        # Make the request\n        response = await client.snapshot_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataflow_v1beta3.types.SnapshotJobRequest, dict]]):\n        The request objec",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "jobs.SnapshotJobRequest"
          ]
        }
      }
    ]
  },
  "MessagesV1Beta3": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_job_messages",
          "description": "Request the job status.\n\nTo request the status of a job, we recommend using\n``projects.locations.jobs.messages.list`` with a [regional\nendpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints).\nUsing ``projects.jobs.messages.list`` is not recommended, as you\ncan only request the status of jobs that are running in\n``us-central1``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_list_job_messages():\n        # Create a client\n        client = dataflow_v1beta3.MessagesV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "messages.ListJobMessagesRequest"
          ]
        }
      }
    ]
  },
  "MetricsV1Beta3": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_job_metrics",
          "description": "Request the job status.\n\nTo request the status of a job, we recommend using\n``projects.locations.jobs.getMetrics`` with a [regional\nendpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints).\nUsing ``projects.jobs.getMetrics`` is not recommended, as you\ncan only request the status of jobs that are running in\n``us-central1``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_get_job_metrics():\n        # Create a client\n        client = dataflow_v1beta3.MetricsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        request = dat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "metrics.GetJobMetricsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_job_execution_details",
          "description": "Request detailed information about the execution\nstatus of the job.\nEXPERIMENTAL.  This API is subject to change or removal\nwithout notice.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_get_job_execution_details():\n        # Create a client\n        client = dataflow_v1beta3.MetricsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.GetJobExecutionDetailsRequest(\n        )\n\n        # Make the request\n        page_result = client.get_job_execution_details(request=request)\n\n        # Handle the response\n        asy",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "metrics.GetJobExecutionDetailsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_stage_execution_details",
          "description": "Request detailed information about the execution\nstatus of a stage of the job.\n\nEXPERIMENTAL.  This API is subject to change or removal\nwithout notice.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_get_stage_execution_details():\n        # Create a client\n        client = dataflow_v1beta3.MetricsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.GetStageExecutionDetailsRequest(\n        )\n\n        # Make the request\n        page_result = client.get_stage_execution_details(request=request)\n\n        # Handle the re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "metrics.GetStageExecutionDetailsRequest"
          ]
        }
      }
    ]
  },
  "SnapshotsV1Beta3": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_snapshot",
          "description": "Gets information about a snapshot.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_get_snapshot():\n        # Create a client\n        client = dataflow_v1beta3.SnapshotsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.GetSnapshotRequest(\n        )\n\n        # Make the request\n        response = await client.get_snapshot(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataflow_v1beta3.types.GetSnapshotRequest, dict]]):\n        The request obje",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "snapshots.GetSnapshotRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_snapshot",
          "description": "Deletes a snapshot.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_delete_snapshot():\n        # Create a client\n        client = dataflow_v1beta3.SnapshotsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.DeleteSnapshotRequest(\n        )\n\n        # Make the request\n        response = await client.delete_snapshot(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataflow_v1beta3.types.DeleteSnapshotRequest, dict]]):\n        The request object.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "snapshots.DeleteSnapshotRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_snapshots",
          "description": "Lists snapshots.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_list_snapshots():\n        # Create a client\n        client = dataflow_v1beta3.SnapshotsV1Beta3AsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.ListSnapshotsRequest(\n        )\n\n        # Make the request\n        response = await client.list_snapshots(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataflow_v1beta3.types.ListSnapshotsRequest, dict]]):\n        The request object. Reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "snapshots.ListSnapshotsRequest"
          ]
        }
      }
    ]
  },
  "TemplatesService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_job_from_template",
          "description": "Creates a Cloud Dataflow job from a template.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_create_job_from_template():\n        # Create a client\n        client = dataflow_v1beta3.TemplatesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.CreateJobFromTemplateRequest(\n            gcs_path=\"gcs_path_value\",\n        )\n\n        # Make the request\n        response = await client.create_job_from_template(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[googl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "templates.CreateJobFromTemplateRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "launch_template",
          "description": "Launch a template.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_launch_template():\n        # Create a client\n        client = dataflow_v1beta3.TemplatesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.LaunchTemplateRequest(\n            gcs_path=\"gcs_path_value\",\n        )\n\n        # Make the request\n        response = await client.launch_template(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataflow_v1beta3.types.LaunchTemplateRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "templates.LaunchTemplateRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_template",
          "description": "Get the template associated with a template.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataflow_v1beta3\n\n    async def sample_get_template():\n        # Create a client\n        client = dataflow_v1beta3.TemplatesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataflow_v1beta3.GetTemplateRequest(\n            gcs_path=\"gcs_path_value\",\n        )\n\n        # Make the request\n        response = await client.get_template(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataflow_v1beta3.types.GetT",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "templates.GetTemplateRequest"
          ]
        }
      }
    ]
  }
}