{
  "TelcoAutomation": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_orchestration_clusters",
          "description": "Lists OrchestrationClusters in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_list_orchestration_clusters():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ListOrchestrationClustersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_orchestration_clusters(request=request)\n\n        # Handle the response\n        async for response in page_result",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListOrchestrationClustersRequest  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListOrchestrationClustersAsyncPager: Message for response to listing OrchestrationClusters. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListOrchestrationClustersAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_orchestration_cluster",
          "description": "Gets details of a single OrchestrationCluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_get_orchestration_cluster():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.GetOrchestrationClusterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_orchestration_cluster(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.OrchestrationCluster: Orchestration cluster represents a GKE cluster with config controller and TNA specific components installed on it."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.OrchestrationCluster"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_orchestration_cluster",
          "description": "Creates a new OrchestrationCluster in a given project\nand location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_create_orchestration_cluster():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.CreateOrchestrationClusterRequest(\n            parent=\"parent_value\",\n            orchestration_cluster_id=\"orchestration_cluster_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_orchestration_cluster(request=re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "orchestration_cluster": {
                "type": "google.cloud.telcoautomation_v1.types.OrchestrationCluster",
                "description": "Required. The resource being created This corresponds to the ``orchestration_cluster`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "orchestration_cluster_id": {
                "type": "str",
                "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and orchestration_cluster_id from the method_signature of Create RPC  This corresponds to the ``orchestration_cluster_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.telcoautomation_v1.types.OrchestrationCluster` Orchestration cluster represents a GKE cluster with config controller and TNA specific components installed on it."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "orchestration_cluster",
              "orchestration_cluster_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_orchestration_cluster",
          "description": "Deletes a single OrchestrationCluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_delete_orchestration_cluster():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.DeleteOrchestrationClusterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_orchestration_cluster(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).resu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_edge_slms",
          "description": "Lists EdgeSlms in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_list_edge_slms():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ListEdgeSlmsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_edge_slms(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListEdgeSlmsRequest  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListEdgeSlmsAsyncPager: Message for response to listing EdgeSlms. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListEdgeSlmsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_edge_slm",
          "description": "Gets details of a single EdgeSlm.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_get_edge_slm():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.GetEdgeSlmRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_edge_slm(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.telcoautomation_v1.types.GetEdgeSlmRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.EdgeSlm: EdgeSlm represents an SLM instance which manages the lifecycle of edge components installed on Workload clusters managed by an Orchestration Cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.EdgeSlm"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_edge_slm",
          "description": "Creates a new EdgeSlm in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_create_edge_slm():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.CreateEdgeSlmRequest(\n            parent=\"parent_value\",\n            edge_slm_id=\"edge_slm_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_edge_slm(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "edge_slm": {
                "type": "google.cloud.telcoautomation_v1.types.EdgeSlm",
                "description": "Required. The resource being created This corresponds to the ``edge_slm`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "edge_slm_id": {
                "type": "str",
                "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and edge_slm_id from the method_signature of Create RPC  This corresponds to the ``edge_slm_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.telcoautomation_v1.types.EdgeSlm` EdgeSlm represents an SLM instance which manages the lifecycle of edge components installed on Workload clusters managed by an Orchestration Cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "edge_slm",
              "edge_slm_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_edge_slm",
          "description": "Deletes a single EdgeSlm.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_delete_edge_slm():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.DeleteEdgeSlmRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_edge_slm(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_blueprint",
          "description": "Creates a blueprint.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_create_blueprint():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        blueprint = telcoautomation_v1.Blueprint()\n        blueprint.source_blueprint = \"source_blueprint_value\"\n\n        request = telcoautomation_v1.CreateBlueprintRequest(\n            parent=\"parent_value\",\n            blueprint=blueprint,\n        )\n\n        # Make the request\n        response = await client.create_blueprint(request=req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of parent resource. Format should be - \"projects/{project_id}/locations/{location_name}/orchestrationClusters/{orchestration_cluster}\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "blueprint": {
                "type": "google.cloud.telcoautomation_v1.types.Blueprint",
                "description": "Required. The ``Blueprint`` to create. This corresponds to the ``blueprint`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "blueprint_id": {
                "type": "str",
                "description": "Optional. The name of the blueprint. This corresponds to the ``blueprint_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.Blueprint: A Blueprint contains a collection of kubernetes resources in the form of YAML files. The file contents of a blueprint are collectively known as package. A blueprint can be a) imported from TNA's public catalog b) modified as per a user's need c) proposed and approved. On approval, a revision of blueprint is created which can be used to create a deployment on Orchestration or Workload Cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "blueprint",
              "blueprint_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.Blueprint"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_blueprint",
          "description": "Updates a blueprint.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_update_blueprint():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        blueprint = telcoautomation_v1.Blueprint()\n        blueprint.source_blueprint = \"source_blueprint_value\"\n\n        request = telcoautomation_v1.UpdateBlueprintRequest(\n            blueprint=blueprint,\n        )\n\n        # Make the request\n        response = await client.update_blueprint(request=request)\n\n        # Handle the respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "blueprint": {
                "type": "google.cloud.telcoautomation_v1.types.Blueprint",
                "description": "Required. The ``blueprint`` to update. This corresponds to the ``blueprint`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Update mask is used to specify the fields to be overwritten in the ``blueprint`` resource by the update.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.Blueprint: A Blueprint contains a collection of kubernetes resources in the form of YAML files. The file contents of a blueprint are collectively known as package. A blueprint can be a) imported from TNA's public catalog b) modified as per a user's need c) proposed and approved. On approval, a revision of blueprint is created which can be used to create a deployment on Orchestration or Workload Cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "blueprint",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.Blueprint"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_blueprint",
          "description": "Returns the requested blueprint.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_get_blueprint():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.GetBlueprintRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_blueprint(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.telcoautomation_v1.types.GetBlueprintRe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the blueprint. Case 1: If the name provided in the request is {blueprint_id}@{revision_id}, then the revision with revision_id will be returned. Case 2: If the name provided in the request is {blueprint}, then the current state of the blueprint is returned.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.Blueprint: A Blueprint contains a collection of kubernetes resources in the form of YAML files. The file contents of a blueprint are collectively known as package. A blueprint can be a) imported from TNA's public catalog b) modified as per a user's need c) proposed and approved. On approval, a revision of blueprint is created which can be used to create a deployment on Orchestration or Workload Cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.Blueprint"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_blueprint",
          "description": "Deletes a blueprint and all its revisions.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_delete_blueprint():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.DeleteBlueprintRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_blueprint(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.telcoautomation_v1.types.DeleteBlueprintRequest, dict]]):\n        The request object. ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of blueprint to delete. Blueprint name should be in the format {blueprint_id}, if {blueprint_id}@{revision_id} is passed then the API throws invalid argument.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_blueprints",
          "description": "List all blueprints.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_list_blueprints():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ListBlueprintsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_blueprints(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.clo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of parent orchestration cluster resource. Format should be - \"projects/{project_id}/locations/{location_name}/orchestrationClusters/{orchestration_cluster}\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListBlueprintsAsyncPager: Response object for ListBlueprints.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListBlueprintsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "approve_blueprint",
          "description": "Approves a blueprint and commits a new revision.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_approve_blueprint():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ApproveBlueprintRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.approve_blueprint(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.telcoautoma",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the blueprint to approve. The blueprint must be in Proposed state. A new revision is committed on approval.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.Blueprint: A Blueprint contains a collection of kubernetes resources in the form of YAML files. The file contents of a blueprint are collectively known as package. A blueprint can be a) imported from TNA's public catalog b) modified as per a user's need c) proposed and approved. On approval, a revision of blueprint is created which can be used to create a deployment on Orchestration or Workload Cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.Blueprint"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "propose_blueprint",
          "description": "Proposes a blueprint for approval of changes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_propose_blueprint():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ProposeBlueprintRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.propose_blueprint(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.telcoautomatio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the blueprint being proposed.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.Blueprint: A Blueprint contains a collection of kubernetes resources in the form of YAML files. The file contents of a blueprint are collectively known as package. A blueprint can be a) imported from TNA's public catalog b) modified as per a user's need c) proposed and approved. On approval, a revision of blueprint is created which can be used to create a deployment on Orchestration or Workload Cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.Blueprint"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reject_blueprint",
          "description": "Rejects a blueprint revision proposal and flips it\nback to Draft state.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_reject_blueprint():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.RejectBlueprintRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.reject_blueprint(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[goog",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the blueprint being rejected.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.Blueprint: A Blueprint contains a collection of kubernetes resources in the form of YAML files. The file contents of a blueprint are collectively known as package. A blueprint can be a) imported from TNA's public catalog b) modified as per a user's need c) proposed and approved. On approval, a revision of blueprint is created which can be used to create a deployment on Orchestration or Workload Cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.Blueprint"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_blueprint_revisions",
          "description": "List blueprint revisions of a given blueprint.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_list_blueprint_revisions():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ListBlueprintRevisionsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        page_result = client.list_blueprint_revisions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the blueprint to list revisions for.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListBlueprintRevisionsAsyncPager: Response object for ListBlueprintRevisions.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListBlueprintRevisionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_blueprint_revisions",
          "description": "Searches across blueprint revisions.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_search_blueprint_revisions():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.SearchBlueprintRevisionsRequest(\n            parent=\"parent_value\",\n            query=\"query_value\",\n        )\n\n        # Make the request\n        page_result = client.search_blueprint_revisions(request=request)\n\n        # Handle the response\n        async for response in page_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of parent orchestration cluster resource. Format should be - \"projects/{project_id}/locations/{location_name}/orchestrationClusters/{orchestration_cluster}\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query": {
                "type": "str",
                "description": "Required. Supported queries:  1. \"\"                       : Lists all revisions across all blueprints. 2. \"latest=true\"            : Lists latest revisions across all blueprints. 3. \"name={name}\"            : Lists all revisions of blueprint with name {name}. 4. \"name={name} latest=true\": Lists latest revision of blueprint with name {name}  This corresponds to the ``query`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.services.telco_automation.pagers.SearchBlueprintRevisionsAsyncPager: Response object for SearchBlueprintRevisions.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "query",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.services.telco_automation.pagers.SearchBlueprintRevisionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_deployment_revisions",
          "description": "Searches across deployment revisions.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_search_deployment_revisions():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.SearchDeploymentRevisionsRequest(\n            parent=\"parent_value\",\n            query=\"query_value\",\n        )\n\n        # Make the request\n        page_result = client.search_deployment_revisions(request=request)\n\n        # Handle the response\n        async for response in p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of parent orchestration cluster resource. Format should be - \"projects/{project_id}/locations/{location_name}/orchestrationClusters/{orchestration_cluster}\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query": {
                "type": "str",
                "description": "Required. Supported queries:  1. \"\"                       : Lists all revisions across all deployments. 2. \"latest=true\"            : Lists latest revisions across all deployments. 3. \"name={name}\"            : Lists all revisions of deployment with name {name}. 4. \"name={name} latest=true\": Lists latest revision of deployment with name {name}  This corresponds to the ``query`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.services.telco_automation.pagers.SearchDeploymentRevisionsAsyncPager: Response object for SearchDeploymentRevisions.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "query",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.services.telco_automation.pagers.SearchDeploymentRevisionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "discard_blueprint_changes",
          "description": "Discards the changes in a blueprint and reverts the\nblueprint to the last approved blueprint revision. No\nchanges take place if a blueprint does not have\nrevisions.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_discard_blueprint_changes():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.DiscardBlueprintChangesRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.discard_blueprint_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the blueprint of which changes are being discarded.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.DiscardBlueprintChangesResponse: Response object for DiscardBlueprintChanges."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.DiscardBlueprintChangesResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_public_blueprints",
          "description": "Lists the blueprints in TNA's public catalog. Default\npage size = 20, Max Page Size = 100.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_list_public_blueprints():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ListPublicBlueprintsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_public_blueprints(request=request)\n\n        # Handle the response\n        async for response",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value of public blueprint. Format should be - \"projects/{project_id}/locations/{location_name}\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListPublicBlueprintsAsyncPager: Response object for ListPublicBlueprints.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListPublicBlueprintsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_public_blueprint",
          "description": "Returns the requested public blueprint.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_get_public_blueprint():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.GetPublicBlueprintRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_public_blueprint(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.telcoautomat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the public blueprint.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.PublicBlueprint: A Blueprint contains a collection of kubernetes resources in the form of YAML files. The file contents of a blueprint are collectively known as package. Public blueprint is a TNA provided blueprint that in present in TNA's public catalog. A user can copy the public blueprint to their private catalog for further modifications."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.PublicBlueprint"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_deployment",
          "description": "Creates a deployment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_create_deployment():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        deployment = telcoautomation_v1.Deployment()\n        deployment.source_blueprint_revision = \"source_blueprint_revision_value\"\n\n        request = telcoautomation_v1.CreateDeploymentRequest(\n            parent=\"parent_value\",\n            deployment=deployment,\n        )\n\n        # Make the request\n        response = await client.cr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of parent resource. Format should be - \"projects/{project_id}/locations/{location_name}/orchestrationClusters/{orchestration_cluster}\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "deployment": {
                "type": "google.cloud.telcoautomation_v1.types.Deployment",
                "description": "Required. The ``Deployment`` to create. This corresponds to the ``deployment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "deployment_id": {
                "type": "str",
                "description": "Optional. The name of the deployment. This corresponds to the ``deployment_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.Deployment: Deployment contains a collection of YAML files (This collection is also known as package) that can to applied on an orchestration cluster (GKE cluster with TNA addons) or a workload cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "deployment",
              "deployment_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.Deployment"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_deployment",
          "description": "Updates a deployment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_update_deployment():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        deployment = telcoautomation_v1.Deployment()\n        deployment.source_blueprint_revision = \"source_blueprint_revision_value\"\n\n        request = telcoautomation_v1.UpdateDeploymentRequest(\n            deployment=deployment,\n        )\n\n        # Make the request\n        response = await client.update_deployment(request=request)\n\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "deployment": {
                "type": "google.cloud.telcoautomation_v1.types.Deployment",
                "description": "Required. The ``deployment`` to update. This corresponds to the ``deployment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Update mask is used to specify the fields to be overwritten in the ``deployment`` resource by the update.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.Deployment: Deployment contains a collection of YAML files (This collection is also known as package) that can to applied on an orchestration cluster (GKE cluster with TNA addons) or a workload cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "deployment",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.Deployment"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_deployment",
          "description": "Returns the requested deployment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_get_deployment():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.GetDeploymentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_deployment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.telcoautomation_v1.types.GetDeploym",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the deployment. Case 1: If the name provided in the request is {deployment_id}@{revision_id}, then the revision with revision_id will be returned. Case 2: If the name provided in the request is {deployment}, then the current state of the deployment is returned.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.Deployment: Deployment contains a collection of YAML files (This collection is also known as package) that can to applied on an orchestration cluster (GKE cluster with TNA addons) or a workload cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.Deployment"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "remove_deployment",
          "description": "Removes the deployment by marking it as DELETING.\nPost which deployment and it's revisions gets deleted.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_remove_deployment():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.RemoveDeploymentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.remove_deployment(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.telcoautomation_v1.ty",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of deployment to initiate delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_deployments",
          "description": "List all deployments.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_list_deployments():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ListDeploymentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_deployments(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of parent orchestration cluster resource. Format should be - \"projects/{project_id}/locations/{location_name}/orchestrationClusters/{orchestration_cluster}\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListDeploymentsAsyncPager: Response object for ListDeployments.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListDeploymentsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_deployment_revisions",
          "description": "List deployment revisions of a given deployment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_list_deployment_revisions():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ListDeploymentRevisionsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        page_result = client.list_deployment_revisions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the deployment to list revisions for.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListDeploymentRevisionsAsyncPager: List of deployment revisions for a given deployment. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListDeploymentRevisionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "discard_deployment_changes",
          "description": "Discards the changes in a deployment and reverts the\ndeployment to the last approved deployment revision. No\nchanges take place if a deployment does not have\nrevisions.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_discard_deployment_changes():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.DiscardDeploymentChangesRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.discard_depl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the deployment of which changes are being discarded.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.DiscardDeploymentChangesResponse: Response object for DiscardDeploymentChanges."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.DiscardDeploymentChangesResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "apply_deployment",
          "description": "Applies the deployment's YAML files to the parent\norchestration cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_apply_deployment():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ApplyDeploymentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.apply_deployment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the deployment to apply to orchestration cluster.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.Deployment: Deployment contains a collection of YAML files (This collection is also known as package) that can to applied on an orchestration cluster (GKE cluster with TNA addons) or a workload cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.Deployment"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "compute_deployment_status",
          "description": "Returns the requested deployment status.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_compute_deployment_status():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ComputeDeploymentStatusRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.compute_deployment_status(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the deployment without revisionID.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.ComputeDeploymentStatusResponse: Response object for ComputeDeploymentStatus."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.ComputeDeploymentStatusResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "rollback_deployment",
          "description": "Rollback the active deployment to the given past\napproved deployment revision.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_rollback_deployment():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.RollbackDeploymentRequest(\n            name=\"name_value\",\n            revision_id=\"revision_id_value\",\n        )\n\n        # Make the request\n        response = await client.rollback_deployment(request=request)\n\n        # Handle the response\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the deployment. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "revision_id": {
                "type": "str",
                "description": "Required. The revision id of deployment to roll back to.  This corresponds to the ``revision_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.Deployment: Deployment contains a collection of YAML files (This collection is also known as package) that can to applied on an orchestration cluster (GKE cluster with TNA addons) or a workload cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "revision_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.Deployment"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_hydrated_deployment",
          "description": "Returns the requested hydrated deployment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_get_hydrated_deployment():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.GetHydratedDeploymentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_hydrated_deployment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the hydrated deployment.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.HydratedDeployment: A collection of kubernetes yaml files which are deployed on a Workload Cluster. Hydrated Deployments are created by TNA intent based automation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.HydratedDeployment"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_hydrated_deployments",
          "description": "List all hydrated deployments present under a\ndeployment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_list_hydrated_deployments():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ListHydratedDeploymentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_hydrated_deployments(request=request)\n\n        # Handle the response\n        async for response in page_result:\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The deployment managing the hydrated deployments.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListHydratedDeploymentsAsyncPager: Response object for ListHydratedDeployments.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.services.telco_automation.pagers.ListHydratedDeploymentsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_hydrated_deployment",
          "description": "Updates a hydrated deployment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_update_hydrated_deployment():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.UpdateHydratedDeploymentRequest(\n        )\n\n        # Make the request\n        response = await client.update_hydrated_deployment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.telcoautomation_v1.types.UpdateHyd",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "hydrated_deployment": {
                "type": "google.cloud.telcoautomation_v1.types.HydratedDeployment",
                "description": "Required. The hydrated deployment to update.  This corresponds to the ``hydrated_deployment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to update. Update mask supports a special value ``*`` which fully replaces (equivalent to PUT) the resource provided.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.HydratedDeployment: A collection of kubernetes yaml files which are deployed on a Workload Cluster. Hydrated Deployments are created by TNA intent based automation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "hydrated_deployment",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.HydratedDeployment"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "apply_hydrated_deployment",
          "description": "Applies a hydrated deployment to a workload cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import telcoautomation_v1\n\n    async def sample_apply_hydrated_deployment():\n        # Create a client\n        client = telcoautomation_v1.TelcoAutomationAsyncClient()\n\n        # Initialize request argument(s)\n        request = telcoautomation_v1.ApplyHydratedDeploymentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.apply_hydrated_deployment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Uni",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the hydrated deployment to apply.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.telcoautomation_v1.types.HydratedDeployment: A collection of kubernetes yaml files which are deployed on a Workload Cluster. Hydrated Deployments are created by TNA intent based automation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.telcoautomation_v1.types.HydratedDeployment"
          ]
        }
      }
    ]
  }
}