{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-service-directory\\google\\cloud\\servicedirectory_v1\\types\\lookup_service.py": [
    {
      "type": "function",
      "name": "ResolveServiceRequest",
      "description": "The request message for\n[LookupService.ResolveService][google.cloud.servicedirectory.v1.LookupService.ResolveService].\nLooks up a service by its name, returns the service and its\nendpoints.\n\nAttributes:\n    name (str):\n        Required. The name of the service to resolve.\n    max_endpoints (int):\n        Optional. The maximum number of endpoints to\n        return. Defaults to 25. Maximum is 100. If a\n        value less than one is specified, the Default is\n        used. If a value greater than the Maximum is\n        specified, the Maximum is used.\n    endpoint_filter (str):\n        Optional. The filter applied to the endpoints of the\n        resolved service.\n\n        General ``filter`` string syntax:\n        ``<field> <operator> <value> (<logical connector>)``\n\n        -  ``<field>`` can be ``name``, ``address``, ``port``, or\n           ``annotations.<key>`` for map field\n        -  ``<operator>`` can be ``<``, ``>``, ``<=``, ``>=``,\n           ``!=``, ``=``, ``:``. Of which ``:`` means ``HAS``, and\n        ",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the service to resolve.",
            "type": "string"
          },
          "max_endpoints": {
            "description": "Optional. The maximum number of endpoints to return. Defaults to 25. Maximum is 100. If a value less than one is specified, the Default is used. If a value greater than the Maximum is specified, the Maximum is used.",
            "type": "integer"
          },
          "endpoint_filter": {
            "description": "Optional. The filter applied to the endpoints of the resolved service.  General ``filter`` string syntax: ``<field> <operator> <value> (<logical connector>)``  -  ``<field>`` can be ``name``, ``address``, ``port``, or ``annotations.<key>`` for map field -  ``<operator>`` can be ``<``, ``>``, ``<=``, ``>=``, ``!=``, ``=``, ``:``. Of which ``:`` means ``HAS``, and is roughly the same as ``=`` -  ``<value>`` must be the same data type as field -  ``<logical connector>`` can be ``AND``, ``OR``, ``NOT``  Examples of valid filters:  -  ``annotations.owner`` returns endpoints that have a annotation with the key ``owner``, this is the same as ``annotations:owner`` -  ``annotations.protocol=gRPC`` returns endpoints that have key/value ``protocol=gRPC`` -  ``address=192.108.1.105`` returns endpoints that have this address -  ``port>8080`` returns endpoints that have port number larger than 8080 -  ``name>projects/my-project/locations/us-east1/namespaces/my-namespace/services/my-service/endpoints/endpoint-c`` returns endpoints that have name that is alphabetically later than the string, so \"endpoint-e\" is returned but \"endpoint-a\" is not \\* ``name=projects/my-project/locations/us-central1/namespaces/my-namespace/services/my-service/endpoints/ep-1`` returns the endpoint that has an endpoint_id equal to ``ep-1``  -  ``annotations.owner!=sd AND annotations.foo=bar`` returns endpoints that have ``owner`` in annotation key but value is not ``sd`` AND have key/value ``foo=bar`` -  ``doesnotexist.foo=bar`` returns an empty list. Note that endpoint doesn't have a field called \"doesnotexist\". Since the filter does not match any endpoint, it returns no results  For more information about filtering, see `API Filtering <https://aip.dev/160>`__.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-service-directory\\google\\cloud\\servicedirectory_v1\\types\\registration_service.py": [
    {
      "type": "function",
      "name": "CreateNamespaceRequest",
      "description": "The request message for\n[RegistrationService.CreateNamespace][google.cloud.servicedirectory.v1.RegistrationService.CreateNamespace].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the project\n        and location the namespace will be created in.\n    namespace_id (str):\n        Required. The Resource ID must be 1-63 characters long, and\n        comply with RFC1035. Specifically, the name must be 1-63\n        characters long and match the regular expression\n        ``[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?`` which means the first\n        character must be a lowercase letter, and all following\n        characters must be a dash, lowercase letter, or digit,\n        except the last character, which cannot be a dash.\n    namespace (google.cloud.servicedirectory_v1.types.Namespace):\n        Required. A namespace with initial fields\n        set.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the project and location the namespace will be created in.",
            "type": "string"
          },
          "namespace_id": {
            "description": "Required. The Resource ID must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression ``[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?`` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "type": "string"
          },
          "namespace": {
            "description": "Required. A namespace with initial fields set.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Immutable. The resource name for the namespace in the format ``projects/*/locations/*/namespaces/*``.",
                "type": "string"
              },
              "labels": {
                "description": "Optional. Resource labels associated with this namespace. No more than 64 user labels can be associated with a given resource. Label keys and values can be no longer than 63 characters.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "create_time": {
                "description": "Output only. The timestamp when the namespace was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The timestamp when the namespace was last updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "uid": {
                "description": "Output only. A globally unique identifier (in UUID4 format) for this namespace.",
                "type": "string"
              }
            }
          }
        },
        "required": [
          "parent",
          "namespace_id",
          "namespace"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListNamespacesRequest",
      "description": "The request message for\n[RegistrationService.ListNamespaces][google.cloud.servicedirectory.v1.RegistrationService.ListNamespaces].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the project\n        and location whose namespaces you'd like to\n        list.\n    page_size (int):\n        Optional. The maximum number of items to\n        return.\n    page_token (str):\n        Optional. The next_page_token value returned from a previous\n        List request, if any.\n    filter (str):\n        Optional. The filter to list results by.\n\n        General ``filter`` string syntax:\n        ``<field> <operator> <value> (<logical connector>)``\n\n        -  ``<field>`` can be ``name`` or ``labels.<key>`` for map\n           field\n        -  ``<operator>`` can be ``<``, ``>``, ``<=``, ``>=``,\n           ``!=``, ``=``, ``:``. Of which ``:`` means ``HAS``, and\n           is roughly the same as ``=``\n        -  ``<value>`` must be the same data type as field\n        -  ``<logical connector>`` can be ``AND``, ``",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the project and location whose namespaces you'd like to list.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of items to return.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. The next_page_token value returned from a previous List request, if any.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. The filter to list results by.  General ``filter`` string syntax: ``<field> <operator> <value> (<logical connector>)``  -  ``<field>`` can be ``name`` or ``labels.<key>`` for map field -  ``<operator>`` can be ``<``, ``>``, ``<=``, ``>=``, ``!=``, ``=``, ``:``. Of which ``:`` means ``HAS``, and is roughly the same as ``=`` -  ``<value>`` must be the same data type as field -  ``<logical connector>`` can be ``AND``, ``OR``, ``NOT``  Examples of valid filters:  -  ``labels.owner`` returns namespaces that have a label with the key ``owner``, this is the same as ``labels:owner`` -  ``labels.owner=sd`` returns namespaces that have key/value ``owner=sd`` -  ``name>projects/my-project/locations/us-east1/namespaces/namespace-c`` returns namespaces that have name that is alphabetically later than the string, so \"namespace-e\" is returned but \"namespace-a\" is not -  ``labels.owner!=sd AND labels.foo=bar`` returns namespaces that have ``owner`` in label key but value is not ``sd`` AND have key/value ``foo=bar`` -  ``doesnotexist.foo=bar`` returns an empty list. Note that namespace doesn't have a field called \"doesnotexist\". Since the filter does not match any namespaces, it returns no results  For more information about filtering, see `API Filtering <https://aip.dev/160>`__.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. The order to list results by.  General ``order_by`` string syntax: ``<field> (<asc|desc>) (,)``  -  ``<field>`` allows value: ``name`` -  ``<asc|desc>`` ascending or descending order by ``<field>``. If this is left blank, ``asc`` is used  Note that an empty ``order_by`` string results in default order, which is order by ``name`` in ascending order.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetNamespaceRequest",
      "description": "The request message for\n[RegistrationService.GetNamespace][google.cloud.servicedirectory.v1.RegistrationService.GetNamespace].\n\nAttributes:\n    name (str):\n        Required. The name of the namespace to\n        retrieve.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the namespace to retrieve.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateNamespaceRequest",
      "description": "The request message for\n[RegistrationService.UpdateNamespace][google.cloud.servicedirectory.v1.RegistrationService.UpdateNamespace].\n\nAttributes:\n    namespace (google.cloud.servicedirectory_v1.types.Namespace):\n        Required. The updated namespace.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. List of fields to be updated in\n        this request.",
      "parameters": {
        "type": "object",
        "properties": {
          "namespace": {
            "description": "Required. The updated namespace.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Immutable. The resource name for the namespace in the format ``projects/*/locations/*/namespaces/*``.",
                "type": "string"
              },
              "labels": {
                "description": "Optional. Resource labels associated with this namespace. No more than 64 user labels can be associated with a given resource. Label keys and values can be no longer than 63 characters.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "create_time": {
                "description": "Output only. The timestamp when the namespace was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The timestamp when the namespace was last updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "uid": {
                "description": "Output only. A globally unique identifier (in UUID4 format) for this namespace.",
                "type": "string"
              }
            }
          },
          "update_mask": {
            "description": "Required. List of fields to be updated in this request.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "namespace",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteNamespaceRequest",
      "description": "The request message for\n[RegistrationService.DeleteNamespace][google.cloud.servicedirectory.v1.RegistrationService.DeleteNamespace].\n\nAttributes:\n    name (str):\n        Required. The name of the namespace to\n        delete.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the namespace to delete.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateServiceRequest",
      "description": "The request message for\n[RegistrationService.CreateService][google.cloud.servicedirectory.v1.RegistrationService.CreateService].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the namespace\n        this service will belong to.\n    service_id (str):\n        Required. The Resource ID must be 1-63 characters long, and\n        comply with RFC1035. Specifically, the name must be 1-63\n        characters long and match the regular expression\n        ``[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?`` which means the first\n        character must be a lowercase letter, and all following\n        characters must be a dash, lowercase letter, or digit,\n        except the last character, which cannot be a dash.\n    service (google.cloud.servicedirectory_v1.types.Service):\n        Required. A service  with initial fields set.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the namespace this service will belong to.",
            "type": "string"
          },
          "service_id": {
            "description": "Required. The Resource ID must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression ``[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?`` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "type": "string"
          },
          "service": {
            "description": "Required. A service  with initial fields set.",
            "type": "object",
            "properties": {
              "service_name": {
                "description": "Required. Free-form name of the service. Must be unique within target account.  This field is a member of `oneof`_ ``_service_name``.",
                "type": "string"
              },
              "active": {
                "description": "Required. A boolean exposing the active status of the shipping service.  This field is a member of `oneof`_ ``_active``.",
                "type": "boolean"
              },
              "delivery_countries": {
                "description": "Required. The CLDR territory code of the countries to which the service applies.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "currency_code": {
                "description": "The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups.  This field is a member of `oneof`_ ``_currency_code``.",
                "type": "string"
              },
              "delivery_time": {
                "type": "object",
                "properties": {
                  "min_transit_days": {
                    "description": "Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Either ``min_transit_days``, ``max_transit_days`` or ``transit_time_table`` must be set, but not both.  This field is a member of `oneof`_ ``_min_transit_days``.",
                    "type": "integer"
                  },
                  "max_transit_days": {
                    "description": "Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to ``min_transit_days``.  This field is a member of `oneof`_ ``_max_transit_days``.",
                    "type": "integer"
                  },
                  "cutoff_time": {
                    "type": "object",
                    "properties": {
                      "hour": {
                        "description": "Required. Hour of the cutoff time until which an order has to be placed to be processed in the same day.  This field is a member of `oneof`_ ``_hour``.",
                        "type": "integer"
                      },
                      "minute": {
                        "description": "Required. Minute of the cutoff time until which an order has to be placed to be processed in the same day.  This field is a member of `oneof`_ ``_minute``.",
                        "type": "integer"
                      },
                      "time_zone": {
                        "description": "Required. `Timezone identifier <https://developers.google.com/adwords/api/docs/appendix/codes-formats#timezone-ids>`__ For example \"Europe/Zurich\".  This field is a member of `oneof`_ ``_time_zone``.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "hour",
                      "minute",
                      "time_zone"
                    ]
                  },
                  "min_handling_days": {
                    "description": "Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. 'min_handling_days' and 'max_handling_days' should be either set or not set at the same time.  This field is a member of `oneof`_ ``_min_handling_days``.",
                    "type": "integer"
                  },
                  "max_handling_days": {
                    "description": "Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to ``min_handling_days``. 'min_handling_days' and 'max_handling_days' should be either set or not set at the same time.  This field is a member of `oneof`_ ``_max_handling_days``.",
                    "type": "integer"
                  },
                  "transit_time_table": {
                    "type": "object",
                    "properties": {
                      "postal_code_group_names": {
                        "description": "Required. A list of region names [Region.name][google.shopping.merchant.accounts.v1beta.Region.name] . The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "transit_time_labels": {
                        "description": "Required. A list of transit time labels. The last value can be ``\"all other labels\"``. Example: ``[\"food\", \"electronics\", \"all other labels\"]``.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "rows": {
                        "description": "Required. If there's only one dimension set of ``postal_code_group_names`` or ``transit_time_labels``, there are multiple rows each with one value for that dimension. If there are two dimensions, each row corresponds to a ``postal_code_group_names``, and columns (values) to a ``transit_time_labels``.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "values": {
                              "description": "Required. Transit time range (min-max) in business days.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "min_transit_days": {
                                    "description": "Minimum transit time range in business days. 0 means same day delivery, 1 means next day delivery.  This field is a member of `oneof`_ ``_min_transit_days``.",
                                    "type": "integer"
                                  },
                                  "max_transit_days": {
                                    "description": "Must be greater than or equal to ``min_transit_days``.  This field is a member of `oneof`_ ``_max_transit_days``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "values"
                          ]
                        }
                      }
                    },
                    "required": [
                      "postal_code_group_names",
                      "transit_time_labels",
                      "rows"
                    ]
                  },
                  "handling_business_day_config": {
                    "type": "object",
                    "properties": {
                      "business_days": {
                        "description": "Required. Regular business days. May not be empty.",
                        "type": "array",
                        "items": {
                          "type": "enum",
                          "name": "Weekday",
                          "description": "Values:\n    WEEKDAY_UNSPECIFIED (0):\n        No description available.\n    MONDAY (1):\n        No description available.\n    TUESDAY (2):\n        No description available.\n    WEDNESDAY (3):\n        No description available.\n    THURSDAY (4):\n        No description available.\n    FRIDAY (5):\n        No description available.\n    SATURDAY (6):\n        No description available.\n    SUNDAY (7):\n        No description available.",
                          "values": {
                            "WEEKDAY_UNSPECIFIED": {
                              "value": 0
                            },
                            "MONDAY": {
                              "value": 1
                            },
                            "TUESDAY": {
                              "value": 2
                            },
                            "WEDNESDAY": {
                              "value": 3
                            },
                            "THURSDAY": {
                              "value": 4
                            },
                            "FRIDAY": {
                              "value": 5
                            },
                            "SATURDAY": {
                              "value": 6
                            },
                            "SUNDAY": {
                              "value": 7
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "business_days"
                    ]
                  },
                  "transit_business_day_config": {
                    "type": "object",
                    "properties": {
                      "business_days": {
                        "description": "Required. Regular business days. May not be empty.",
                        "type": "array",
                        "items": {
                          "type": "enum",
                          "name": "Weekday",
                          "description": "Values:\n    WEEKDAY_UNSPECIFIED (0):\n        No description available.\n    MONDAY (1):\n        No description available.\n    TUESDAY (2):\n        No description available.\n    WEDNESDAY (3):\n        No description available.\n    THURSDAY (4):\n        No description available.\n    FRIDAY (5):\n        No description available.\n    SATURDAY (6):\n        No description available.\n    SUNDAY (7):\n        No description available.",
                          "values": {
                            "WEEKDAY_UNSPECIFIED": {
                              "value": 0
                            },
                            "MONDAY": {
                              "value": 1
                            },
                            "TUESDAY": {
                              "value": 2
                            },
                            "WEDNESDAY": {
                              "value": 3
                            },
                            "THURSDAY": {
                              "value": 4
                            },
                            "FRIDAY": {
                              "value": 5
                            },
                            "SATURDAY": {
                              "value": 6
                            },
                            "SUNDAY": {
                              "value": 7
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "business_days"
                    ]
                  },
                  "warehouse_based_delivery_times": {
                    "description": "Optional. Indicates that the delivery time should be calculated per warehouse (shipping origin location) based on the settings of the selected carrier. When set, no other transit time related field in [delivery time][[google.shopping.content.bundles.ShippingSetting.DeliveryTime] should be set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "carrier": {
                          "description": "Required. Carrier, such as ``\"UPS\"`` or ``\"Fedex\"``.  This field is a member of `oneof`_ ``_carrier``.",
                          "type": "string"
                        },
                        "carrier_service": {
                          "description": "Required. Carrier service, such as ``\"ground\"`` or ``\"2 days\"``. The name of the service must be in the eddSupportedServices list.  This field is a member of `oneof`_ ``_carrier_service``.",
                          "type": "string"
                        },
                        "warehouse": {
                          "description": "Required. Warehouse name. This should match [warehouse][ShippingSetting.warehouses.name]  This field is a member of `oneof`_ ``_warehouse``.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "carrier",
                        "carrier_service",
                        "warehouse"
                      ]
                    }
                  }
                }
              },
              "rate_groups": {
                "description": "Optional. Shipping rate group definitions. Only the last one is allowed to have an empty ``applicable_shipping_labels``, which means \"everything else\". The other ``applicable_shipping_labels`` must not overlap.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "applicable_shipping_labels": {
                      "description": "Required. A list of `shipping labels <https://support.google.com/merchants/answer/6324504>`__ defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "single_value": {
                      "type": "object",
                      "properties": {
                        "no_shipping": {
                          "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                          "type": "boolean"
                        },
                        "flat_rate": {
                          "type": "object",
                          "properties": {
                            "amount_micros": {
                              "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                              "type": "integer"
                            },
                            "currency_code": {
                              "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                              "type": "string"
                            }
                          }
                        },
                        "price_percentage": {
                          "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                          "type": "string"
                        },
                        "carrier_rate": {
                          "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                          "type": "string"
                        },
                        "subtable": {
                          "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                          "type": "string"
                        }
                      }
                    },
                    "main_table": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the table. Required for subtables, ignored for the main table.  This field is a member of `oneof`_ ``_name``.",
                          "type": "string"
                        },
                        "row_headers": {
                          "type": "object",
                          "properties": {
                            "prices": {
                              "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount_micros": {
                                    "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                    "type": "integer"
                                  },
                                  "currency_code": {
                                    "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "weights": {
                              "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount_micros": {
                                    "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                                    "type": "integer"
                                  },
                                  "unit": {
                                    "type": "enum",
                                    "name": "WeightUnit",
                                    "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                                    "values": {
                                      "WEIGHT_UNIT_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "POUND": {
                                        "value": 1
                                      },
                                      "KILOGRAM": {
                                        "value": 2
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "amount_micros",
                                  "unit"
                                ]
                              }
                            },
                            "number_of_items": {
                              "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "postal_code_group_names": {
                              "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "locations": {
                              "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "location_ids": {
                                    "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "location_ids"
                                ]
                              }
                            }
                          },
                          "required": [
                            "prices",
                            "weights",
                            "number_of_items",
                            "postal_code_group_names",
                            "locations"
                          ]
                        },
                        "column_headers": {
                          "type": "object",
                          "properties": {
                            "prices": {
                              "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount_micros": {
                                    "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                    "type": "integer"
                                  },
                                  "currency_code": {
                                    "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "weights": {
                              "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount_micros": {
                                    "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                                    "type": "integer"
                                  },
                                  "unit": {
                                    "type": "enum",
                                    "name": "WeightUnit",
                                    "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                                    "values": {
                                      "WEIGHT_UNIT_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "POUND": {
                                        "value": 1
                                      },
                                      "KILOGRAM": {
                                        "value": 2
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "amount_micros",
                                  "unit"
                                ]
                              }
                            },
                            "number_of_items": {
                              "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "postal_code_group_names": {
                              "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "locations": {
                              "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "location_ids": {
                                    "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "location_ids"
                                ]
                              }
                            }
                          },
                          "required": [
                            "prices",
                            "weights",
                            "number_of_items",
                            "postal_code_group_names",
                            "locations"
                          ]
                        },
                        "rows": {
                          "description": "Required. The list of rows that constitute the table. Must have the same length as ``row_headers``.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cells": {
                                "description": "Required. The list of cells that constitute the row. Must have the same length as ``columnHeaders`` for two-dimensional tables, a length of 1 for one-dimensional tables.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "no_shipping": {
                                      "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                                      "type": "boolean"
                                    },
                                    "flat_rate": {
                                      "type": "object",
                                      "properties": {
                                        "amount_micros": {
                                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                          "type": "integer"
                                        },
                                        "currency_code": {
                                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "price_percentage": {
                                      "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                                      "type": "string"
                                    },
                                    "carrier_rate": {
                                      "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                                      "type": "string"
                                    },
                                    "subtable": {
                                      "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "cells"
                            ]
                          }
                        }
                      },
                      "required": [
                        "row_headers",
                        "rows"
                      ]
                    },
                    "subtables": {
                      "description": "Optional. A list of subtables referred to by ``main_table``. Can only be set if ``main_table`` is set.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the table. Required for subtables, ignored for the main table.  This field is a member of `oneof`_ ``_name``.",
                            "type": "string"
                          },
                          "row_headers": {
                            "type": "object",
                            "properties": {
                              "prices": {
                                "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "amount_micros": {
                                      "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                      "type": "integer"
                                    },
                                    "currency_code": {
                                      "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "weights": {
                                "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "amount_micros": {
                                      "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                                      "type": "integer"
                                    },
                                    "unit": {
                                      "type": "enum",
                                      "name": "WeightUnit",
                                      "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                                      "values": {
                                        "WEIGHT_UNIT_UNSPECIFIED": {
                                          "value": 0
                                        },
                                        "POUND": {
                                          "value": 1
                                        },
                                        "KILOGRAM": {
                                          "value": 2
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "amount_micros",
                                    "unit"
                                  ]
                                }
                              },
                              "number_of_items": {
                                "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "postal_code_group_names": {
                                "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "locations": {
                                "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "location_ids": {
                                      "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "location_ids"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "prices",
                              "weights",
                              "number_of_items",
                              "postal_code_group_names",
                              "locations"
                            ]
                          },
                          "column_headers": {
                            "type": "object",
                            "properties": {
                              "prices": {
                                "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "amount_micros": {
                                      "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                      "type": "integer"
                                    },
                                    "currency_code": {
                                      "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "weights": {
                                "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "amount_micros": {
                                      "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                                      "type": "integer"
                                    },
                                    "unit": {
                                      "type": "enum",
                                      "name": "WeightUnit",
                                      "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                                      "values": {
                                        "WEIGHT_UNIT_UNSPECIFIED": {
                                          "value": 0
                                        },
                                        "POUND": {
                                          "value": 1
                                        },
                                        "KILOGRAM": {
                                          "value": 2
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "amount_micros",
                                    "unit"
                                  ]
                                }
                              },
                              "number_of_items": {
                                "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "postal_code_group_names": {
                                "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "locations": {
                                "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "location_ids": {
                                      "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "location_ids"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "prices",
                              "weights",
                              "number_of_items",
                              "postal_code_group_names",
                              "locations"
                            ]
                          },
                          "rows": {
                            "description": "Required. The list of rows that constitute the table. Must have the same length as ``row_headers``.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cells": {
                                  "description": "Required. The list of cells that constitute the row. Must have the same length as ``columnHeaders`` for two-dimensional tables, a length of 1 for one-dimensional tables.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "no_shipping": {
                                        "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                                        "type": "boolean"
                                      },
                                      "flat_rate": {
                                        "type": "object",
                                        "properties": {
                                          "amount_micros": {
                                            "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                            "type": "integer"
                                          },
                                          "currency_code": {
                                            "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "price_percentage": {
                                        "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                                        "type": "string"
                                      },
                                      "carrier_rate": {
                                        "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                                        "type": "string"
                                      },
                                      "subtable": {
                                        "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "required": [
                                "cells"
                              ]
                            }
                          }
                        },
                        "required": [
                          "row_headers",
                          "rows"
                        ]
                      }
                    },
                    "carrier_rates": {
                      "description": "Optional. A list of carrier rates that can be referred to by ``main_table`` or ``single_value``.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Required. Name of the carrier rate. Must be unique per rate group.  This field is a member of `oneof`_ ``_name``.",
                            "type": "string"
                          },
                          "carrier": {
                            "description": "Required. Carrier service, such as ``\"UPS\"`` or ``\"Fedex\"``.  This field is a member of `oneof`_ ``_carrier``.",
                            "type": "string"
                          },
                          "carrier_service": {
                            "description": "Required. Carrier service, such as ``\"ground\"`` or ``\"2 days\"``.  This field is a member of `oneof`_ ``_carrier_service``.",
                            "type": "string"
                          },
                          "origin_postal_code": {
                            "description": "Required. Shipping origin for this carrier rate.  This field is a member of `oneof`_ ``_origin_postal_code``.",
                            "type": "string"
                          },
                          "percentage_adjustment": {
                            "description": "Optional. Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example ``\"5.4\"`` increases the rate by 5.4%, ``\"-3\"`` decreases the rate by 3%.  This field is a member of `oneof`_ ``_percentage_adjustment``.",
                            "type": "string"
                          },
                          "flat_adjustment": {
                            "type": "object",
                            "properties": {
                              "amount_micros": {
                                "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                "type": "integer"
                              },
                              "currency_code": {
                                "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "required": [
                          "name",
                          "carrier",
                          "carrier_service",
                          "origin_postal_code"
                        ]
                      }
                    },
                    "name": {
                      "description": "Optional. Name of the rate group. If set has to be unique within shipping service.  This field is a member of `oneof`_ ``_name``.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "applicable_shipping_labels"
                  ]
                }
              },
              "shipment_type": {
                "type": "enum",
                "name": "ShipmentType",
                "description": "Shipment type of shipping service.\n\nValues:\n    SHIPMENT_TYPE_UNSPECIFIED (0):\n        This service did not specify shipment type.\n    DELIVERY (1):\n        This service ships orders to an address\n        chosen by the customer.\n    LOCAL_DELIVERY (2):\n        This service ships orders to an address\n        chosen by the customer. The order is shipped\n        from a local store near by.\n    COLLECTION_POINT (3):\n        This service ships orders to an address\n        chosen by the customer. The order is shipped\n        from a collection point.",
                "values": {
                  "SHIPMENT_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "DELIVERY": {
                    "value": 1
                  },
                  "LOCAL_DELIVERY": {
                    "value": 2
                  },
                  "COLLECTION_POINT": {
                    "value": 3
                  }
                }
              },
              "minimum_order_value": {
                "type": "object",
                "properties": {
                  "amount_micros": {
                    "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                    "type": "integer"
                  },
                  "currency_code": {
                    "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                    "type": "string"
                  }
                }
              },
              "minimum_order_value_table": {
                "type": "object",
                "properties": {
                  "store_code_set_with_movs": {
                    "description": "Required. A list of store code sets sharing the same minimum order value (MOV). At least two sets are required and the last one must be empty, which signifies 'MOV for all other stores'. Each store code can only appear once across all the sets. All prices within a service must have the same currency.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "store_codes": {
                          "description": "Optional. A list of unique store codes or empty for the catch all.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "value": {
                          "type": "object",
                          "properties": {
                            "amount_micros": {
                              "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                              "type": "integer"
                            },
                            "currency_code": {
                              "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "store_code_set_with_movs"
                ]
              },
              "store_config": {
                "type": "object",
                "properties": {
                  "store_service_type": {
                    "type": "enum",
                    "name": "StoreServiceType",
                    "description": "Indicates whether all stores, or selected stores, listed by\nthe merchant provide local delivery.\n\nValues:\n    STORE_SERVICE_TYPE_UNSPECIFIED (0):\n        Did not specify store service type.\n    ALL_STORES (1):\n        Indicates whether all stores, current and\n        future, listed by this merchant provide local\n        delivery.\n    SELECTED_STORES (2):\n        Indicates that only the stores listed in ``store_codes`` are\n        eligible for local delivery.",
                    "values": {
                      "STORE_SERVICE_TYPE_UNSPECIFIED": {
                        "value": 0
                      },
                      "ALL_STORES": {
                        "value": 1
                      },
                      "SELECTED_STORES": {
                        "value": 2
                      }
                    }
                  },
                  "store_codes": {
                    "description": "Optional. A list of store codes that provide local delivery. If empty, then ``all_stores`` must be true.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "cutoff_config": {
                    "type": "object",
                    "properties": {
                      "local_cutoff_time": {
                        "type": "object",
                        "properties": {
                          "hour": {
                            "description": "Hour local delivery orders must be placed by to process the same day.  This field is a member of `oneof`_ ``_hour``.",
                            "type": "integer"
                          },
                          "minute": {
                            "description": "Minute local delivery orders must be placed by to process the same day.  This field is a member of `oneof`_ ``_minute``.",
                            "type": "integer"
                          }
                        }
                      },
                      "store_close_offset_hours": {
                        "description": "Only valid with local delivery fulfillment. Represents cutoff time as the number of hours before store closing. Mutually exclusive with ``local_cutoff_time``.  This field is a member of `oneof`_ ``_store_close_offset_hours``.",
                        "type": "integer"
                      },
                      "no_delivery_post_cutoff": {
                        "description": "Merchants can opt-out of showing n+1 day local delivery when they have a shipping service configured to n day local delivery. For example, if the shipping service defines same-day delivery, and it's past the cut-off, setting this field to ``true`` results in the calculated shipping service rate returning ``NO_DELIVERY_POST_CUTOFF``. In the same example, setting this field to ``false`` results in the calculated shipping time being one day. This is only for local delivery.  This field is a member of `oneof`_ ``_no_delivery_post_cutoff``.",
                        "type": "boolean"
                      }
                    }
                  },
                  "service_radius": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "description": "Integer value of distance.  This field is a member of `oneof`_ ``_value``.",
                        "type": "integer"
                      },
                      "unit": {
                        "type": "enum",
                        "name": "Unit",
                        "description": "Unit can differ based on country, it is parameterized to\ninclude miles and kilometers.\n\nValues:\n    UNIT_UNSPECIFIED (0):\n        Unit unspecified\n    MILES (1):\n        Unit in miles\n    KILOMETERS (2):\n        Unit in kilometers",
                        "values": {
                          "UNIT_UNSPECIFIED": {
                            "value": 0
                          },
                          "MILES": {
                            "value": 1
                          },
                          "KILOMETERS": {
                            "value": 2
                          }
                        }
                      }
                    }
                  }
                }
              },
              "loyalty_programs": {
                "description": "Optional. Loyalty programs that this shipping service is limited to.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "program_label": {
                      "description": "The label of the loyalty program. This is an internal label that uniquely identifies the relationship between a merchant entity and a loyalty program entity. The label must be provided so that the system can associate the assets below (for example, price and points) with a merchant. The corresponding program must be linked to the merchant account.  This field is a member of `oneof`_ ``_program_label``.",
                      "type": "string"
                    },
                    "tier_label": {
                      "description": "The label of the tier within the loyalty program. Must match one of the labels within the program.  This field is a member of `oneof`_ ``_tier_label``.",
                      "type": "string"
                    },
                    "price": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    },
                    "cashback_for_future_use": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    },
                    "loyalty_points": {
                      "description": "The amount of loyalty points earned on a purchase.  This field is a member of `oneof`_ ``_loyalty_points``.",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "required": [
              "service_name",
              "active",
              "delivery_countries",
              "delivery_time"
            ]
          }
        },
        "required": [
          "parent",
          "service_id",
          "service"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListServicesRequest",
      "description": "The request message for\n[RegistrationService.ListServices][google.cloud.servicedirectory.v1.RegistrationService.ListServices].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the namespace\n        whose services you'd like to list.\n    page_size (int):\n        Optional. The maximum number of items to\n        return.\n    page_token (str):\n        Optional. The next_page_token value returned from a previous\n        List request, if any.\n    filter (str):\n        Optional. The filter to list results by.\n\n        General ``filter`` string syntax:\n        ``<field> <operator> <value> (<logical connector>)``\n\n        -  ``<field>`` can be ``name`` or ``annotations.<key>`` for\n           map field\n        -  ``<operator>`` can be ``<``, ``>``, ``<=``, ``>=``,\n           ``!=``, ``=``, ``:``. Of which ``:`` means ``HAS``, and\n           is roughly the same as ``=``\n        -  ``<value>`` must be the same data type as field\n        -  ``<logical connector>`` can be ``AND``, ``OR``, ``NOT``\n\n     ",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the namespace whose services you'd like to list.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of items to return.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. The next_page_token value returned from a previous List request, if any.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. The filter to list results by.  General ``filter`` string syntax: ``<field> <operator> <value> (<logical connector>)``  -  ``<field>`` can be ``name`` or ``annotations.<key>`` for map field -  ``<operator>`` can be ``<``, ``>``, ``<=``, ``>=``, ``!=``, ``=``, ``:``. Of which ``:`` means ``HAS``, and is roughly the same as ``=`` -  ``<value>`` must be the same data type as field -  ``<logical connector>`` can be ``AND``, ``OR``, ``NOT``  Examples of valid filters:  -  ``annotations.owner`` returns services that have a annotation with the key ``owner``, this is the same as ``annotations:owner`` -  ``annotations.protocol=gRPC`` returns services that have key/value ``protocol=gRPC`` -  ``name>projects/my-project/locations/us-east1/namespaces/my-namespace/services/service-c`` returns services that have name that is alphabetically later than the string, so \"service-e\" is returned but \"service-a\" is not  -  ``annotations.owner!=sd AND annotations.foo=bar`` returns services that have ``owner`` in annotation key but value is not ``sd`` AND have key/value ``foo=bar`` -  ``doesnotexist.foo=bar`` returns an empty list. Note that service doesn't have a field called \"doesnotexist\". Since the filter does not match any services, it returns no results  For more information about filtering, see `API Filtering <https://aip.dev/160>`__.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. The order to list results by.  General ``order_by`` string syntax: ``<field> (<asc|desc>) (,)``  -  ``<field>`` allows value: ``name`` -  ``<asc|desc>`` ascending or descending order by ``<field>``. If this is left blank, ``asc`` is used  Note that an empty ``order_by`` string results in default order, which is order by ``name`` in ascending order.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetServiceRequest",
      "description": "The request message for\n[RegistrationService.GetService][google.cloud.servicedirectory.v1.RegistrationService.GetService].\nThis should not be used for looking up a service. Instead, use the\n``resolve`` method as it contains all endpoints and associated\nannotations.\n\nAttributes:\n    name (str):\n        Required. The name of the service to get.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the service to get.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateServiceRequest",
      "description": "The request message for\n[RegistrationService.UpdateService][google.cloud.servicedirectory.v1.RegistrationService.UpdateService].\n\nAttributes:\n    service (google.cloud.servicedirectory_v1.types.Service):\n        Required. The updated service.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. List of fields to be updated in\n        this request.",
      "parameters": {
        "type": "object",
        "properties": {
          "service": {
            "description": "Required. The updated service.",
            "type": "object",
            "properties": {
              "service_name": {
                "description": "Required. Free-form name of the service. Must be unique within target account.  This field is a member of `oneof`_ ``_service_name``.",
                "type": "string"
              },
              "active": {
                "description": "Required. A boolean exposing the active status of the shipping service.  This field is a member of `oneof`_ ``_active``.",
                "type": "boolean"
              },
              "delivery_countries": {
                "description": "Required. The CLDR territory code of the countries to which the service applies.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "currency_code": {
                "description": "The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups.  This field is a member of `oneof`_ ``_currency_code``.",
                "type": "string"
              },
              "delivery_time": {
                "type": "object",
                "properties": {
                  "min_transit_days": {
                    "description": "Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Either ``min_transit_days``, ``max_transit_days`` or ``transit_time_table`` must be set, but not both.  This field is a member of `oneof`_ ``_min_transit_days``.",
                    "type": "integer"
                  },
                  "max_transit_days": {
                    "description": "Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to ``min_transit_days``.  This field is a member of `oneof`_ ``_max_transit_days``.",
                    "type": "integer"
                  },
                  "cutoff_time": {
                    "type": "object",
                    "properties": {
                      "hour": {
                        "description": "Required. Hour of the cutoff time until which an order has to be placed to be processed in the same day.  This field is a member of `oneof`_ ``_hour``.",
                        "type": "integer"
                      },
                      "minute": {
                        "description": "Required. Minute of the cutoff time until which an order has to be placed to be processed in the same day.  This field is a member of `oneof`_ ``_minute``.",
                        "type": "integer"
                      },
                      "time_zone": {
                        "description": "Required. `Timezone identifier <https://developers.google.com/adwords/api/docs/appendix/codes-formats#timezone-ids>`__ For example \"Europe/Zurich\".  This field is a member of `oneof`_ ``_time_zone``.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "hour",
                      "minute",
                      "time_zone"
                    ]
                  },
                  "min_handling_days": {
                    "description": "Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. 'min_handling_days' and 'max_handling_days' should be either set or not set at the same time.  This field is a member of `oneof`_ ``_min_handling_days``.",
                    "type": "integer"
                  },
                  "max_handling_days": {
                    "description": "Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to ``min_handling_days``. 'min_handling_days' and 'max_handling_days' should be either set or not set at the same time.  This field is a member of `oneof`_ ``_max_handling_days``.",
                    "type": "integer"
                  },
                  "transit_time_table": {
                    "type": "object",
                    "properties": {
                      "postal_code_group_names": {
                        "description": "Required. A list of region names [Region.name][google.shopping.merchant.accounts.v1beta.Region.name] . The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "transit_time_labels": {
                        "description": "Required. A list of transit time labels. The last value can be ``\"all other labels\"``. Example: ``[\"food\", \"electronics\", \"all other labels\"]``.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "rows": {
                        "description": "Required. If there's only one dimension set of ``postal_code_group_names`` or ``transit_time_labels``, there are multiple rows each with one value for that dimension. If there are two dimensions, each row corresponds to a ``postal_code_group_names``, and columns (values) to a ``transit_time_labels``.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "values": {
                              "description": "Required. Transit time range (min-max) in business days.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "min_transit_days": {
                                    "description": "Minimum transit time range in business days. 0 means same day delivery, 1 means next day delivery.  This field is a member of `oneof`_ ``_min_transit_days``.",
                                    "type": "integer"
                                  },
                                  "max_transit_days": {
                                    "description": "Must be greater than or equal to ``min_transit_days``.  This field is a member of `oneof`_ ``_max_transit_days``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "values"
                          ]
                        }
                      }
                    },
                    "required": [
                      "postal_code_group_names",
                      "transit_time_labels",
                      "rows"
                    ]
                  },
                  "handling_business_day_config": {
                    "type": "object",
                    "properties": {
                      "business_days": {
                        "description": "Required. Regular business days. May not be empty.",
                        "type": "array",
                        "items": {
                          "type": "enum",
                          "name": "Weekday",
                          "description": "Values:\n    WEEKDAY_UNSPECIFIED (0):\n        No description available.\n    MONDAY (1):\n        No description available.\n    TUESDAY (2):\n        No description available.\n    WEDNESDAY (3):\n        No description available.\n    THURSDAY (4):\n        No description available.\n    FRIDAY (5):\n        No description available.\n    SATURDAY (6):\n        No description available.\n    SUNDAY (7):\n        No description available.",
                          "values": {
                            "WEEKDAY_UNSPECIFIED": {
                              "value": 0
                            },
                            "MONDAY": {
                              "value": 1
                            },
                            "TUESDAY": {
                              "value": 2
                            },
                            "WEDNESDAY": {
                              "value": 3
                            },
                            "THURSDAY": {
                              "value": 4
                            },
                            "FRIDAY": {
                              "value": 5
                            },
                            "SATURDAY": {
                              "value": 6
                            },
                            "SUNDAY": {
                              "value": 7
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "business_days"
                    ]
                  },
                  "transit_business_day_config": {
                    "type": "object",
                    "properties": {
                      "business_days": {
                        "description": "Required. Regular business days. May not be empty.",
                        "type": "array",
                        "items": {
                          "type": "enum",
                          "name": "Weekday",
                          "description": "Values:\n    WEEKDAY_UNSPECIFIED (0):\n        No description available.\n    MONDAY (1):\n        No description available.\n    TUESDAY (2):\n        No description available.\n    WEDNESDAY (3):\n        No description available.\n    THURSDAY (4):\n        No description available.\n    FRIDAY (5):\n        No description available.\n    SATURDAY (6):\n        No description available.\n    SUNDAY (7):\n        No description available.",
                          "values": {
                            "WEEKDAY_UNSPECIFIED": {
                              "value": 0
                            },
                            "MONDAY": {
                              "value": 1
                            },
                            "TUESDAY": {
                              "value": 2
                            },
                            "WEDNESDAY": {
                              "value": 3
                            },
                            "THURSDAY": {
                              "value": 4
                            },
                            "FRIDAY": {
                              "value": 5
                            },
                            "SATURDAY": {
                              "value": 6
                            },
                            "SUNDAY": {
                              "value": 7
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "business_days"
                    ]
                  },
                  "warehouse_based_delivery_times": {
                    "description": "Optional. Indicates that the delivery time should be calculated per warehouse (shipping origin location) based on the settings of the selected carrier. When set, no other transit time related field in [delivery time][[google.shopping.content.bundles.ShippingSetting.DeliveryTime] should be set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "carrier": {
                          "description": "Required. Carrier, such as ``\"UPS\"`` or ``\"Fedex\"``.  This field is a member of `oneof`_ ``_carrier``.",
                          "type": "string"
                        },
                        "carrier_service": {
                          "description": "Required. Carrier service, such as ``\"ground\"`` or ``\"2 days\"``. The name of the service must be in the eddSupportedServices list.  This field is a member of `oneof`_ ``_carrier_service``.",
                          "type": "string"
                        },
                        "warehouse": {
                          "description": "Required. Warehouse name. This should match [warehouse][ShippingSetting.warehouses.name]  This field is a member of `oneof`_ ``_warehouse``.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "carrier",
                        "carrier_service",
                        "warehouse"
                      ]
                    }
                  }
                }
              },
              "rate_groups": {
                "description": "Optional. Shipping rate group definitions. Only the last one is allowed to have an empty ``applicable_shipping_labels``, which means \"everything else\". The other ``applicable_shipping_labels`` must not overlap.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "applicable_shipping_labels": {
                      "description": "Required. A list of `shipping labels <https://support.google.com/merchants/answer/6324504>`__ defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "single_value": {
                      "type": "object",
                      "properties": {
                        "no_shipping": {
                          "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                          "type": "boolean"
                        },
                        "flat_rate": {
                          "type": "object",
                          "properties": {
                            "amount_micros": {
                              "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                              "type": "integer"
                            },
                            "currency_code": {
                              "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                              "type": "string"
                            }
                          }
                        },
                        "price_percentage": {
                          "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                          "type": "string"
                        },
                        "carrier_rate": {
                          "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                          "type": "string"
                        },
                        "subtable": {
                          "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                          "type": "string"
                        }
                      }
                    },
                    "main_table": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the table. Required for subtables, ignored for the main table.  This field is a member of `oneof`_ ``_name``.",
                          "type": "string"
                        },
                        "row_headers": {
                          "type": "object",
                          "properties": {
                            "prices": {
                              "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount_micros": {
                                    "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                    "type": "integer"
                                  },
                                  "currency_code": {
                                    "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "weights": {
                              "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount_micros": {
                                    "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                                    "type": "integer"
                                  },
                                  "unit": {
                                    "type": "enum",
                                    "name": "WeightUnit",
                                    "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                                    "values": {
                                      "WEIGHT_UNIT_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "POUND": {
                                        "value": 1
                                      },
                                      "KILOGRAM": {
                                        "value": 2
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "amount_micros",
                                  "unit"
                                ]
                              }
                            },
                            "number_of_items": {
                              "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "postal_code_group_names": {
                              "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "locations": {
                              "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "location_ids": {
                                    "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "location_ids"
                                ]
                              }
                            }
                          },
                          "required": [
                            "prices",
                            "weights",
                            "number_of_items",
                            "postal_code_group_names",
                            "locations"
                          ]
                        },
                        "column_headers": {
                          "type": "object",
                          "properties": {
                            "prices": {
                              "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount_micros": {
                                    "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                    "type": "integer"
                                  },
                                  "currency_code": {
                                    "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "weights": {
                              "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount_micros": {
                                    "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                                    "type": "integer"
                                  },
                                  "unit": {
                                    "type": "enum",
                                    "name": "WeightUnit",
                                    "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                                    "values": {
                                      "WEIGHT_UNIT_UNSPECIFIED": {
                                        "value": 0
                                      },
                                      "POUND": {
                                        "value": 1
                                      },
                                      "KILOGRAM": {
                                        "value": 2
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "amount_micros",
                                  "unit"
                                ]
                              }
                            },
                            "number_of_items": {
                              "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "postal_code_group_names": {
                              "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "locations": {
                              "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "location_ids": {
                                    "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "location_ids"
                                ]
                              }
                            }
                          },
                          "required": [
                            "prices",
                            "weights",
                            "number_of_items",
                            "postal_code_group_names",
                            "locations"
                          ]
                        },
                        "rows": {
                          "description": "Required. The list of rows that constitute the table. Must have the same length as ``row_headers``.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cells": {
                                "description": "Required. The list of cells that constitute the row. Must have the same length as ``columnHeaders`` for two-dimensional tables, a length of 1 for one-dimensional tables.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "no_shipping": {
                                      "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                                      "type": "boolean"
                                    },
                                    "flat_rate": {
                                      "type": "object",
                                      "properties": {
                                        "amount_micros": {
                                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                          "type": "integer"
                                        },
                                        "currency_code": {
                                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "price_percentage": {
                                      "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                                      "type": "string"
                                    },
                                    "carrier_rate": {
                                      "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                                      "type": "string"
                                    },
                                    "subtable": {
                                      "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "cells"
                            ]
                          }
                        }
                      },
                      "required": [
                        "row_headers",
                        "rows"
                      ]
                    },
                    "subtables": {
                      "description": "Optional. A list of subtables referred to by ``main_table``. Can only be set if ``main_table`` is set.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the table. Required for subtables, ignored for the main table.  This field is a member of `oneof`_ ``_name``.",
                            "type": "string"
                          },
                          "row_headers": {
                            "type": "object",
                            "properties": {
                              "prices": {
                                "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "amount_micros": {
                                      "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                      "type": "integer"
                                    },
                                    "currency_code": {
                                      "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "weights": {
                                "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "amount_micros": {
                                      "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                                      "type": "integer"
                                    },
                                    "unit": {
                                      "type": "enum",
                                      "name": "WeightUnit",
                                      "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                                      "values": {
                                        "WEIGHT_UNIT_UNSPECIFIED": {
                                          "value": 0
                                        },
                                        "POUND": {
                                          "value": 1
                                        },
                                        "KILOGRAM": {
                                          "value": 2
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "amount_micros",
                                    "unit"
                                  ]
                                }
                              },
                              "number_of_items": {
                                "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "postal_code_group_names": {
                                "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "locations": {
                                "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "location_ids": {
                                      "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "location_ids"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "prices",
                              "weights",
                              "number_of_items",
                              "postal_code_group_names",
                              "locations"
                            ]
                          },
                          "column_headers": {
                            "type": "object",
                            "properties": {
                              "prices": {
                                "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "amount_micros": {
                                      "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                      "type": "integer"
                                    },
                                    "currency_code": {
                                      "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "weights": {
                                "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "amount_micros": {
                                      "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                                      "type": "integer"
                                    },
                                    "unit": {
                                      "type": "enum",
                                      "name": "WeightUnit",
                                      "description": "The weight unit.\n\nValues:\n    WEIGHT_UNIT_UNSPECIFIED (0):\n        unit unspecified\n    POUND (1):\n        lb unit.\n    KILOGRAM (2):\n        kg unit.",
                                      "values": {
                                        "WEIGHT_UNIT_UNSPECIFIED": {
                                          "value": 0
                                        },
                                        "POUND": {
                                          "value": 1
                                        },
                                        "KILOGRAM": {
                                          "value": 2
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "amount_micros",
                                    "unit"
                                  ]
                                }
                              },
                              "number_of_items": {
                                "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "postal_code_group_names": {
                                "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "locations": {
                                "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "location_ids": {
                                      "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "location_ids"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "prices",
                              "weights",
                              "number_of_items",
                              "postal_code_group_names",
                              "locations"
                            ]
                          },
                          "rows": {
                            "description": "Required. The list of rows that constitute the table. Must have the same length as ``row_headers``.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cells": {
                                  "description": "Required. The list of cells that constitute the row. Must have the same length as ``columnHeaders`` for two-dimensional tables, a length of 1 for one-dimensional tables.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "no_shipping": {
                                        "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                                        "type": "boolean"
                                      },
                                      "flat_rate": {
                                        "type": "object",
                                        "properties": {
                                          "amount_micros": {
                                            "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                            "type": "integer"
                                          },
                                          "currency_code": {
                                            "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "price_percentage": {
                                        "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                                        "type": "string"
                                      },
                                      "carrier_rate": {
                                        "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                                        "type": "string"
                                      },
                                      "subtable": {
                                        "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "required": [
                                "cells"
                              ]
                            }
                          }
                        },
                        "required": [
                          "row_headers",
                          "rows"
                        ]
                      }
                    },
                    "carrier_rates": {
                      "description": "Optional. A list of carrier rates that can be referred to by ``main_table`` or ``single_value``.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Required. Name of the carrier rate. Must be unique per rate group.  This field is a member of `oneof`_ ``_name``.",
                            "type": "string"
                          },
                          "carrier": {
                            "description": "Required. Carrier service, such as ``\"UPS\"`` or ``\"Fedex\"``.  This field is a member of `oneof`_ ``_carrier``.",
                            "type": "string"
                          },
                          "carrier_service": {
                            "description": "Required. Carrier service, such as ``\"ground\"`` or ``\"2 days\"``.  This field is a member of `oneof`_ ``_carrier_service``.",
                            "type": "string"
                          },
                          "origin_postal_code": {
                            "description": "Required. Shipping origin for this carrier rate.  This field is a member of `oneof`_ ``_origin_postal_code``.",
                            "type": "string"
                          },
                          "percentage_adjustment": {
                            "description": "Optional. Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example ``\"5.4\"`` increases the rate by 5.4%, ``\"-3\"`` decreases the rate by 3%.  This field is a member of `oneof`_ ``_percentage_adjustment``.",
                            "type": "string"
                          },
                          "flat_adjustment": {
                            "type": "object",
                            "properties": {
                              "amount_micros": {
                                "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                "type": "integer"
                              },
                              "currency_code": {
                                "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "required": [
                          "name",
                          "carrier",
                          "carrier_service",
                          "origin_postal_code"
                        ]
                      }
                    },
                    "name": {
                      "description": "Optional. Name of the rate group. If set has to be unique within shipping service.  This field is a member of `oneof`_ ``_name``.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "applicable_shipping_labels"
                  ]
                }
              },
              "shipment_type": {
                "type": "enum",
                "name": "ShipmentType",
                "description": "Shipment type of shipping service.\n\nValues:\n    SHIPMENT_TYPE_UNSPECIFIED (0):\n        This service did not specify shipment type.\n    DELIVERY (1):\n        This service ships orders to an address\n        chosen by the customer.\n    LOCAL_DELIVERY (2):\n        This service ships orders to an address\n        chosen by the customer. The order is shipped\n        from a local store near by.\n    COLLECTION_POINT (3):\n        This service ships orders to an address\n        chosen by the customer. The order is shipped\n        from a collection point.",
                "values": {
                  "SHIPMENT_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "DELIVERY": {
                    "value": 1
                  },
                  "LOCAL_DELIVERY": {
                    "value": 2
                  },
                  "COLLECTION_POINT": {
                    "value": 3
                  }
                }
              },
              "minimum_order_value": {
                "type": "object",
                "properties": {
                  "amount_micros": {
                    "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                    "type": "integer"
                  },
                  "currency_code": {
                    "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                    "type": "string"
                  }
                }
              },
              "minimum_order_value_table": {
                "type": "object",
                "properties": {
                  "store_code_set_with_movs": {
                    "description": "Required. A list of store code sets sharing the same minimum order value (MOV). At least two sets are required and the last one must be empty, which signifies 'MOV for all other stores'. Each store code can only appear once across all the sets. All prices within a service must have the same currency.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "store_codes": {
                          "description": "Optional. A list of unique store codes or empty for the catch all.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "value": {
                          "type": "object",
                          "properties": {
                            "amount_micros": {
                              "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                              "type": "integer"
                            },
                            "currency_code": {
                              "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "store_code_set_with_movs"
                ]
              },
              "store_config": {
                "type": "object",
                "properties": {
                  "store_service_type": {
                    "type": "enum",
                    "name": "StoreServiceType",
                    "description": "Indicates whether all stores, or selected stores, listed by\nthe merchant provide local delivery.\n\nValues:\n    STORE_SERVICE_TYPE_UNSPECIFIED (0):\n        Did not specify store service type.\n    ALL_STORES (1):\n        Indicates whether all stores, current and\n        future, listed by this merchant provide local\n        delivery.\n    SELECTED_STORES (2):\n        Indicates that only the stores listed in ``store_codes`` are\n        eligible for local delivery.",
                    "values": {
                      "STORE_SERVICE_TYPE_UNSPECIFIED": {
                        "value": 0
                      },
                      "ALL_STORES": {
                        "value": 1
                      },
                      "SELECTED_STORES": {
                        "value": 2
                      }
                    }
                  },
                  "store_codes": {
                    "description": "Optional. A list of store codes that provide local delivery. If empty, then ``all_stores`` must be true.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "cutoff_config": {
                    "type": "object",
                    "properties": {
                      "local_cutoff_time": {
                        "type": "object",
                        "properties": {
                          "hour": {
                            "description": "Hour local delivery orders must be placed by to process the same day.  This field is a member of `oneof`_ ``_hour``.",
                            "type": "integer"
                          },
                          "minute": {
                            "description": "Minute local delivery orders must be placed by to process the same day.  This field is a member of `oneof`_ ``_minute``.",
                            "type": "integer"
                          }
                        }
                      },
                      "store_close_offset_hours": {
                        "description": "Only valid with local delivery fulfillment. Represents cutoff time as the number of hours before store closing. Mutually exclusive with ``local_cutoff_time``.  This field is a member of `oneof`_ ``_store_close_offset_hours``.",
                        "type": "integer"
                      },
                      "no_delivery_post_cutoff": {
                        "description": "Merchants can opt-out of showing n+1 day local delivery when they have a shipping service configured to n day local delivery. For example, if the shipping service defines same-day delivery, and it's past the cut-off, setting this field to ``true`` results in the calculated shipping service rate returning ``NO_DELIVERY_POST_CUTOFF``. In the same example, setting this field to ``false`` results in the calculated shipping time being one day. This is only for local delivery.  This field is a member of `oneof`_ ``_no_delivery_post_cutoff``.",
                        "type": "boolean"
                      }
                    }
                  },
                  "service_radius": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "description": "Integer value of distance.  This field is a member of `oneof`_ ``_value``.",
                        "type": "integer"
                      },
                      "unit": {
                        "type": "enum",
                        "name": "Unit",
                        "description": "Unit can differ based on country, it is parameterized to\ninclude miles and kilometers.\n\nValues:\n    UNIT_UNSPECIFIED (0):\n        Unit unspecified\n    MILES (1):\n        Unit in miles\n    KILOMETERS (2):\n        Unit in kilometers",
                        "values": {
                          "UNIT_UNSPECIFIED": {
                            "value": 0
                          },
                          "MILES": {
                            "value": 1
                          },
                          "KILOMETERS": {
                            "value": 2
                          }
                        }
                      }
                    }
                  }
                }
              },
              "loyalty_programs": {
                "description": "Optional. Loyalty programs that this shipping service is limited to.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "program_label": {
                      "description": "The label of the loyalty program. This is an internal label that uniquely identifies the relationship between a merchant entity and a loyalty program entity. The label must be provided so that the system can associate the assets below (for example, price and points) with a merchant. The corresponding program must be linked to the merchant account.  This field is a member of `oneof`_ ``_program_label``.",
                      "type": "string"
                    },
                    "tier_label": {
                      "description": "The label of the tier within the loyalty program. Must match one of the labels within the program.  This field is a member of `oneof`_ ``_tier_label``.",
                      "type": "string"
                    },
                    "price": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    },
                    "cashback_for_future_use": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    },
                    "loyalty_points": {
                      "description": "The amount of loyalty points earned on a purchase.  This field is a member of `oneof`_ ``_loyalty_points``.",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "required": [
              "service_name",
              "active",
              "delivery_countries",
              "delivery_time"
            ]
          },
          "update_mask": {
            "description": "Required. List of fields to be updated in this request.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "service",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteServiceRequest",
      "description": "The request message for\n[RegistrationService.DeleteService][google.cloud.servicedirectory.v1.RegistrationService.DeleteService].\n\nAttributes:\n    name (str):\n        Required. The name of the service to delete.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the service to delete.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateEndpointRequest",
      "description": "The request message for\n[RegistrationService.CreateEndpoint][google.cloud.servicedirectory.v1.RegistrationService.CreateEndpoint].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the service\n        that this endpoint provides.\n    endpoint_id (str):\n        Required. The Resource ID must be 1-63 characters long, and\n        comply with RFC1035. Specifically, the name must be 1-63\n        characters long and match the regular expression\n        ``[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?`` which means the first\n        character must be a lowercase letter, and all following\n        characters must be a dash, lowercase letter, or digit,\n        except the last character, which cannot be a dash.\n    endpoint (google.cloud.servicedirectory_v1.types.Endpoint):\n        Required. A endpoint with initial fields set.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the service that this endpoint provides.",
            "type": "string"
          },
          "endpoint_id": {
            "description": "Required. The Resource ID must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression ``[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?`` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "type": "string"
          },
          "endpoint": {
            "description": "Required. A endpoint with initial fields set.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Immutable. The resource name for the endpoint in the format ``projects/*/locations/*/namespaces/*/services/*/endpoints/*``.",
                "type": "string"
              },
              "address": {
                "description": "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like:  -  ``8.8.8`` -  ``8.8.8.8:53`` -  ``test:bad:address`` -  ``[::1]`` -  ``[::1]:8080``  Limited to 45 characters.",
                "type": "string"
              },
              "port": {
                "description": "Optional. Service Directory rejects values outside of ``[0, 65535]``.",
                "type": "integer"
              },
              "metadata": {
                "description": "Optional. Metadata for the endpoint. This data can be consumed by service clients.  Restrictions:  -  The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected -  Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected  Note: This field is equivalent to the ``annotations`` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "network": {
                "description": "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format ``projects/<project number>/locations/global/networks/*``.  The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. The timestamp when the endpoint was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The timestamp when the endpoint was last updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "uid": {
                "description": "Output only. A globally unique identifier (in UUID4 format) for this endpoint.",
                "type": "string"
              }
            }
          }
        },
        "required": [
          "parent",
          "endpoint_id",
          "endpoint"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListEndpointsRequest",
      "description": "The request message for\n[RegistrationService.ListEndpoints][google.cloud.servicedirectory.v1.RegistrationService.ListEndpoints].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the service\n        whose endpoints you'd like to list.\n    page_size (int):\n        Optional. The maximum number of items to\n        return.\n    page_token (str):\n        Optional. The next_page_token value returned from a previous\n        List request, if any.\n    filter (str):\n        Optional. The filter to list results by.\n\n        General ``filter`` string syntax:\n        ``<field> <operator> <value> (<logical connector>)``\n\n        -  ``<field>`` can be ``name``, ``address``, ``port``, or\n           ``annotations.<key>`` for map field\n        -  ``<operator>`` can be ``<``, ``>``, ``<=``, ``>=``,\n           ``!=``, ``=``, ``:``. Of which ``:`` means ``HAS``, and\n           is roughly the same as ``=``\n        -  ``<value>`` must be the same data type as field\n        -  ``<logical connector>`` can be ``AND`",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the service whose endpoints you'd like to list.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of items to return.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. The next_page_token value returned from a previous List request, if any.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. The filter to list results by.  General ``filter`` string syntax: ``<field> <operator> <value> (<logical connector>)``  -  ``<field>`` can be ``name``, ``address``, ``port``, or ``annotations.<key>`` for map field -  ``<operator>`` can be ``<``, ``>``, ``<=``, ``>=``, ``!=``, ``=``, ``:``. Of which ``:`` means ``HAS``, and is roughly the same as ``=`` -  ``<value>`` must be the same data type as field -  ``<logical connector>`` can be ``AND``, ``OR``, ``NOT``  Examples of valid filters:  -  ``annotations.owner`` returns endpoints that have a annotation with the key ``owner``, this is the same as ``annotations:owner`` -  ``annotations.protocol=gRPC`` returns endpoints that have key/value ``protocol=gRPC`` -  ``address=192.108.1.105`` returns endpoints that have this address -  ``port>8080`` returns endpoints that have port number larger than 8080 -  ``name>projects/my-project/locations/us-east1/namespaces/my-namespace/services/my-service/endpoints/endpoint-c`` returns endpoints that have name that is alphabetically later than the string, so \"endpoint-e\" is returned but \"endpoint-a\" is not  -  ``annotations.owner!=sd AND annotations.foo=bar`` returns endpoints that have ``owner`` in annotation key but value is not ``sd`` AND have key/value ``foo=bar`` -  ``doesnotexist.foo=bar`` returns an empty list. Note that endpoint doesn't have a field called \"doesnotexist\". Since the filter does not match any endpoints, it returns no results  For more information about filtering, see `API Filtering <https://aip.dev/160>`__.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. The order to list results by.  General ``order_by`` string syntax: ``<field> (<asc|desc>) (,)``  -  ``<field>`` allows values: ``name``, ``address``, ``port`` -  ``<asc|desc>`` ascending or descending order by ``<field>``. If this is left blank, ``asc`` is used  Note that an empty ``order_by`` string results in default order, which is order by ``name`` in ascending order.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetEndpointRequest",
      "description": "The request message for\n[RegistrationService.GetEndpoint][google.cloud.servicedirectory.v1.RegistrationService.GetEndpoint].\nThis should not be used to lookup endpoints at runtime. Instead, use\nthe ``resolve`` method.\n\nAttributes:\n    name (str):\n        Required. The name of the endpoint to get.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the endpoint to get.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateEndpointRequest",
      "description": "The request message for\n[RegistrationService.UpdateEndpoint][google.cloud.servicedirectory.v1.RegistrationService.UpdateEndpoint].\n\nAttributes:\n    endpoint (google.cloud.servicedirectory_v1.types.Endpoint):\n        Required. The updated endpoint.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. List of fields to be updated in\n        this request.",
      "parameters": {
        "type": "object",
        "properties": {
          "endpoint": {
            "description": "Required. The updated endpoint.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Immutable. The resource name for the endpoint in the format ``projects/*/locations/*/namespaces/*/services/*/endpoints/*``.",
                "type": "string"
              },
              "address": {
                "description": "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like:  -  ``8.8.8`` -  ``8.8.8.8:53`` -  ``test:bad:address`` -  ``[::1]`` -  ``[::1]:8080``  Limited to 45 characters.",
                "type": "string"
              },
              "port": {
                "description": "Optional. Service Directory rejects values outside of ``[0, 65535]``.",
                "type": "integer"
              },
              "metadata": {
                "description": "Optional. Metadata for the endpoint. This data can be consumed by service clients.  Restrictions:  -  The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected -  Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected  Note: This field is equivalent to the ``annotations`` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "network": {
                "description": "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format ``projects/<project number>/locations/global/networks/*``.  The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. The timestamp when the endpoint was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The timestamp when the endpoint was last updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "uid": {
                "description": "Output only. A globally unique identifier (in UUID4 format) for this endpoint.",
                "type": "string"
              }
            }
          },
          "update_mask": {
            "description": "Required. List of fields to be updated in this request.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "endpoint",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteEndpointRequest",
      "description": "The request message for\n[RegistrationService.DeleteEndpoint][google.cloud.servicedirectory.v1.RegistrationService.DeleteEndpoint].\n\nAttributes:\n    name (str):\n        Required. The name of the endpoint to delete.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the endpoint to delete.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}