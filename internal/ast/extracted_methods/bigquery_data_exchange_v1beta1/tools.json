{
  "AnalyticsHubService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_data_exchanges",
          "description": "Lists all data exchanges in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_list_data_exchanges():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_data_exchange_v1beta1.ListDataExchangesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_data_exchanges(request=request)\n\n        # Handle the response\n        async for response i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource path of the data exchanges. e.g. ``projects/myproject/locations/US``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_data_exchange_v1beta1.services.analytics_hub_service.pagers.ListDataExchangesAsyncPager: Message for response to the list of data exchanges. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.ListDataExchangesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_org_data_exchanges",
          "description": "Lists all data exchanges from projects in a given\norganization and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_list_org_data_exchanges():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_data_exchange_v1beta1.ListOrgDataExchangesRequest(\n            organization=\"organization_value\",\n        )\n\n        # Make the request\n        page_result = client.list_org_data_exchanges(request=request)\n\n        # Handle",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "organization": {
                "type": "str",
                "description": "Required. The organization resource path of the projects containing DataExchanges. e.g. ``organizations/myorg/locations/US``.  This corresponds to the ``organization`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_data_exchange_v1beta1.services.analytics_hub_service.pagers.ListOrgDataExchangesAsyncPager: Message for response to listing data exchanges in an organization and location.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "organization",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.ListOrgDataExchangesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_data_exchange",
          "description": "Gets the details of a data exchange.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_get_data_exchange():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_data_exchange_v1beta1.GetDataExchangeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_data_exchange(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Uni",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the data exchange. e.g. ``projects/myproject/locations/US/dataExchanges/123``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_data_exchange_v1beta1.types.DataExchange: A data exchange is a container that lets you share data. Along with the descriptive information about the data exchange, it contains listings that reference shared datasets."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.GetDataExchangeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_data_exchange",
          "description": "Creates a new data exchange.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_create_data_exchange():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        data_exchange = bigquery_data_exchange_v1beta1.DataExchange()\n        data_exchange.display_name = \"display_name_value\"\n\n        request = bigquery_data_exchange_v1beta1.CreateDataExchangeRequest(\n            parent=\"parent_value\",\n            data_exchange_id=\"data_exchange_id_value\",\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource path of the data exchange. e.g. ``projects/myproject/locations/US``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "data_exchange": {
                "type": "google.cloud.bigquery_data_exchange_v1beta1.types.DataExchange",
                "description": "Required. The data exchange to create.  This corresponds to the ``data_exchange`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_data_exchange_v1beta1.types.DataExchange: A data exchange is a container that lets you share data. Along with the descriptive information about the data exchange, it contains listings that reference shared datasets."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "data_exchange",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.CreateDataExchangeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_data_exchange",
          "description": "Updates an existing data exchange.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_update_data_exchange():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        data_exchange = bigquery_data_exchange_v1beta1.DataExchange()\n        data_exchange.display_name = \"display_name_value\"\n\n        request = bigquery_data_exchange_v1beta1.UpdateDataExchangeRequest(\n            data_exchange=data_exchange,\n        )\n\n        # Make the request\n        res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "data_exchange": {
                "type": "google.cloud.bigquery_data_exchange_v1beta1.types.DataExchange",
                "description": "Required. The data exchange to update.  This corresponds to the ``data_exchange`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask specifies the fields to update in the data exchange resource. The fields specified in the ``updateMask`` are relative to the resource and are not a full request.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_data_exchange_v1beta1.types.DataExchange: A data exchange is a container that lets you share data. Along with the descriptive information about the data exchange, it contains listings that reference shared datasets."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "data_exchange",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.UpdateDataExchangeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_data_exchange",
          "description": "Deletes an existing data exchange.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_delete_data_exchange():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_data_exchange_v1beta1.DeleteDataExchangeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_data_exchange(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.bigquery_data_exchange_v1beta1.types.Delete",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The full name of the data exchange resource that you want to delete. For example, ``projects/myproject/locations/US/dataExchanges/123``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.DeleteDataExchangeRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_listings",
          "description": "Lists all listings in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_list_listings():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_data_exchange_v1beta1.ListListingsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_listings(request=request)\n\n        # Handle the response\n        async for response in page_result:\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource path of the listing. e.g. ``projects/myproject/locations/US/dataExchanges/123``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_data_exchange_v1beta1.services.analytics_hub_service.pagers.ListListingsAsyncPager: Message for response to the list of Listings. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.ListListingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_listing",
          "description": "Gets the details of a listing.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_get_listing():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_data_exchange_v1beta1.GetListingRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_listing(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.bigquer",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the listing. e.g. ``projects/myproject/locations/US/dataExchanges/123/listings/456``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_data_exchange_v1beta1.types.Listing: A listing is what gets published into a data exchange that a subscriber can subscribe to. It contains a reference to the data source along with descriptive information that will help subscribers find and subscribe the data."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.GetListingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_listing",
          "description": "Creates a new listing.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_create_listing():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        listing = bigquery_data_exchange_v1beta1.Listing()\n        listing.display_name = \"display_name_value\"\n\n        request = bigquery_data_exchange_v1beta1.CreateListingRequest(\n            parent=\"parent_value\",\n            listing_id=\"listing_id_value\",\n            listing=listing,\n        )\n\n        # Ma",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource path of the listing. e.g. ``projects/myproject/locations/US/dataExchanges/123``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "listing": {
                "type": "google.cloud.bigquery_data_exchange_v1beta1.types.Listing",
                "description": "Required. The listing to create. This corresponds to the ``listing`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_data_exchange_v1beta1.types.Listing: A listing is what gets published into a data exchange that a subscriber can subscribe to. It contains a reference to the data source along with descriptive information that will help subscribers find and subscribe the data."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "listing",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.CreateListingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_listing",
          "description": "Updates an existing listing.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_update_listing():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        listing = bigquery_data_exchange_v1beta1.Listing()\n        listing.display_name = \"display_name_value\"\n\n        request = bigquery_data_exchange_v1beta1.UpdateListingRequest(\n            listing=listing,\n        )\n\n        # Make the request\n        response = await client.update_listing(request=re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "listing": {
                "type": "google.cloud.bigquery_data_exchange_v1beta1.types.Listing",
                "description": "Required. The listing to update. This corresponds to the ``listing`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask specifies the fields to update in the listing resource. The fields specified in the ``updateMask`` are relative to the resource and are not a full request.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_data_exchange_v1beta1.types.Listing: A listing is what gets published into a data exchange that a subscriber can subscribe to. It contains a reference to the data source along with descriptive information that will help subscribers find and subscribe the data."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "listing",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.UpdateListingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_listing",
          "description": "Deletes a listing.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_delete_listing():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = bigquery_data_exchange_v1beta1.DeleteListingRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_listing(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.bigquery_data_exchange_v1beta1.types.DeleteListingRequest, dict]]):\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the listing to delete. e.g. ``projects/myproject/locations/US/dataExchanges/123/listings/456``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.DeleteListingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "subscribe_listing",
          "description": "Subscribes to a listing.\n\nCurrently, with Analytics Hub, you can create listings\nthat reference only BigQuery datasets.\nUpon subscription to a listing for a BigQuery dataset,\nAnalytics Hub creates a linked dataset in the\nsubscriber's project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n\n    async def sample_subscribe_listing():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        destination_dataset = bigquery_data_exchange_v1beta1.DestinationDataset()\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the listing that you want to subscribe to. e.g. ``projects/myproject/locations/US/dataExchanges/123/listings/456``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.bigquery_data_exchange_v1beta1.types.SubscribeListingResponse: Message for response when you subscribe to a listing."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "dataexchange.SubscribeListingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_iam_policy",
          "description": "Gets the IAM policy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_get_iam_policy():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.GetIamPolicyRequest(\n            resource=\"resource_value\",\n        )\n\n        # Make the request\n        response = await client.get_iam_policy(request=request)\n\n        # Handle the response\n        print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.GetIamPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_iam_policy",
          "description": "Sets the IAM policy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_set_iam_policy():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.SetIamPolicyRequest(\n            resource=\"resource_value\",\n        )\n\n        # Make the request\n        response = await client.set_iam_policy(request=request)\n\n        # Handle the response\n        print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.SetIamPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "test_iam_permissions",
          "description": "Returns the permissions that a caller has.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import bigquery_data_exchange_v1beta1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_test_iam_permissions():\n        # Create a client\n        client = bigquery_data_exchange_v1beta1.AnalyticsHubServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.TestIamPermissionsRequest(\n            resource=\"resource_value\",\n            permissions=['permissions_value1', 'permissions_value2'],\n        )\n\n        # Make the request\n        response = ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.TestIamPermissionsRequest"
          ]
        }
      }
    ]
  }
}