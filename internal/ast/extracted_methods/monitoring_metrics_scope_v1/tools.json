{
  "MetricsScopes": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_metrics_scope",
          "description": "Returns a specific ``Metrics Scope``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import monitoring_metrics_scope_v1\n\n    async def sample_get_metrics_scope():\n        # Create a client\n        client = monitoring_metrics_scope_v1.MetricsScopesAsyncClient()\n\n        # Initialize request argument(s)\n        request = monitoring_metrics_scope_v1.GetMetricsScopeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_metrics_scope(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.clou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the ``Metrics Scope``. Example: ``locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.monitoring_metrics_scope_v1.types.MetricsScope: Represents a [Metrics Scope](\\ https://cloud.google.com/monitoring/settings#concept-scope) in Cloud Monitoring, which specifies one or more Google projects and zero or more AWS accounts to monitor together."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.monitoring_metrics_scope_v1.types.MetricsScope"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_metrics_scopes_by_monitored_project",
          "description": "Returns a list of every ``Metrics Scope`` that a specific\n``MonitoredProject`` has been added to. The metrics scope\nrepresenting the specified monitored project will always be the\nfirst entry in the response.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import monitoring_metrics_scope_v1\n\n    async def sample_list_metrics_scopes_by_monitored_project():\n        # Create a client\n        client = monitoring_metrics_scope_v1.MetricsScopesAsyncClient()\n\n        # Initialize request argument(s)\n        request = monitoring_metrics_scope_v1.ListMetricsScopesByMonitoredProjectRequest(\n            monitored_r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.monitoring_metrics_scope_v1.types.ListMetricsScopesByMonitoredProjectResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_monitored_project",
          "description": "Adds a ``MonitoredProject`` with the given project ID to the\nspecified ``Metrics Scope``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import monitoring_metrics_scope_v1\n\n    async def sample_create_monitored_project():\n        # Create a client\n        client = monitoring_metrics_scope_v1.MetricsScopesAsyncClient()\n\n        # Initialize request argument(s)\n        request = monitoring_metrics_scope_v1.CreateMonitoredProjectRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_monitored_project(request=request)\n\n        print(\"Waiting for o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the existing ``Metrics Scope`` that will monitor this project. Example: ``locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "monitored_project": {
                "type": "google.cloud.monitoring_metrics_scope_v1.types.MonitoredProject",
                "description": "Required. The initial ``MonitoredProject`` configuration. Specify only the ``monitored_project.name`` field. All other fields are ignored. The ``monitored_project.name`` must be in the format: ``locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}``  This corresponds to the ``monitored_project`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.monitoring_metrics_scope_v1.types.MonitoredProject` A [project being monitored](\\ https://cloud.google.com/monitoring/settings/multiple-projects#create-multi) by a Metrics Scope."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "monitored_project",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_monitored_project",
          "description": "Deletes a ``MonitoredProject`` from the specified\n``Metrics Scope``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import monitoring_metrics_scope_v1\n\n    async def sample_delete_monitored_project():\n        # Create a client\n        client = monitoring_metrics_scope_v1.MetricsScopesAsyncClient()\n\n        # Initialize request argument(s)\n        request = monitoring_metrics_scope_v1.DeleteMonitoredProjectRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_monitored_project(request=request)\n\n        print(\"Waiting for operation to complete...\")",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the ``MonitoredProject``. Example: ``locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}``  Authorization requires the following `Google IAM <https://cloud.google.com/iam>`__ permissions on both the ``Metrics Scope`` and on the ``MonitoredProject``: ``monitoring.metricsScopes.link``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      }
    ]
  }
}