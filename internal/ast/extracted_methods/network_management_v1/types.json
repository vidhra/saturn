{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-network-management\\google\\cloud\\network_management_v1\\types\\reachability.py": [
    {
      "type": "function",
      "name": "ListConnectivityTestsRequest",
      "description": "Request for the ``ListConnectivityTests`` method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource of the Connectivity Tests:\n        ``projects/{project_id}/locations/global``\n    page_size (int):\n        Number of ``ConnectivityTests`` to return.\n    page_token (str):\n        Page token from an earlier query, as returned in\n        ``next_page_token``.\n    filter (str):\n        Lists the ``ConnectivityTests`` that match the filter\n        expression. A filter expression filters the resources listed\n        in the response. The expression must be of the form\n        ``<field> <operator> <value>`` where operators: ``<``,\n        ``>``, ``<=``, ``>=``, ``!=``, ``=``, ``:`` are supported\n        (colon ``:`` represents a HAS operator which is roughly\n        synonymous with equality). can refer to a proto or JSON\n        field, or a synthetic field. Field names can be camelCase or\n        snake_case.\n\n        Examples:\n\n        -  Filter by name: name =\n           \"projects/proj-1/locations/",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource of the Connectivity Tests: ``projects/{project_id}/locations/global``",
            "type": "string"
          },
          "page_size": {
            "description": "Number of ``ConnectivityTests`` to return.",
            "type": "integer"
          },
          "page_token": {
            "description": "Page token from an earlier query, as returned in ``next_page_token``.",
            "type": "string"
          },
          "filter": {
            "description": "Lists the ``ConnectivityTests`` that match the filter expression. A filter expression filters the resources listed in the response. The expression must be of the form ``<field> <operator> <value>`` where operators: ``<``, ``>``, ``<=``, ``>=``, ``!=``, ``=``, ``:`` are supported (colon ``:`` represents a HAS operator which is roughly synonymous with equality). can refer to a proto or JSON field, or a synthetic field. Field names can be camelCase or snake_case.  Examples:  -  Filter by name: name = \"projects/proj-1/locations/global/connectivityTests/test-1  -  Filter by labels:  -  Resources that have a key called ``foo`` labels.foo:\\* -  Resources that have a key called ``foo`` whose value is ``bar`` labels.foo = bar",
            "type": "string"
          },
          "order_by": {
            "description": "Field to use to sort the list.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetConnectivityTestRequest",
      "description": "Request for the ``GetConnectivityTest`` method.\n\nAttributes:\n    name (str):\n        Required. ``ConnectivityTest`` resource name using the form:\n        ``projects/{project_id}/locations/global/connectivityTests/{test_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. ``ConnectivityTest`` resource name using the form: ``projects/{project_id}/locations/global/connectivityTests/{test_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateConnectivityTestRequest",
      "description": "Request for the ``CreateConnectivityTest`` method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource of the Connectivity Test to\n        create: ``projects/{project_id}/locations/global``\n    test_id (str):\n        Required. The logical name of the Connectivity Test in your\n        project with the following restrictions:\n\n        -  Must contain only lowercase letters, numbers, and\n           hyphens.\n        -  Must start with a letter.\n        -  Must be between 1-40 characters.\n        -  Must end with a number or a letter.\n        -  Must be unique within the customer project\n    resource (google.cloud.network_management_v1.types.ConnectivityTest):\n        Required. A ``ConnectivityTest`` resource",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource of the Connectivity Test to create: ``projects/{project_id}/locations/global``",
            "type": "string"
          },
          "test_id": {
            "description": "Required. The logical name of the Connectivity Test in your project with the following restrictions:  -  Must contain only lowercase letters, numbers, and hyphens. -  Must start with a letter. -  Must be between 1-40 characters. -  Must end with a number or a letter. -  Must be unique within the customer project",
            "type": "string"
          },
          "resource": {
            "description": "Required. A ``ConnectivityTest`` resource",
            "type": "object",
            "properties": {
              "name": {
                "description": "Identifier. Unique name of the resource using the form: ``projects/{project_id}/locations/global/connectivityTests/{test_id}``",
                "type": "string"
              },
              "description": {
                "description": "The user-supplied description of the Connectivity Test. Maximum of 512 characters.",
                "type": "string"
              },
              "source": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Immutable. The resource name for the endpoint in the format ``projects/*/locations/*/namespaces/*/services/*/endpoints/*``.",
                    "type": "string"
                  },
                  "address": {
                    "description": "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like:  -  ``8.8.8`` -  ``8.8.8.8:53`` -  ``test:bad:address`` -  ``[::1]`` -  ``[::1]:8080``  Limited to 45 characters.",
                    "type": "string"
                  },
                  "port": {
                    "description": "Optional. Service Directory rejects values outside of ``[0, 65535]``.",
                    "type": "integer"
                  },
                  "metadata": {
                    "description": "Optional. Metadata for the endpoint. This data can be consumed by service clients.  Restrictions:  -  The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected -  Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected  Note: This field is equivalent to the ``annotations`` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "network": {
                    "description": "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format ``projects/<project number>/locations/global/networks/*``.  The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                    "type": "string"
                  },
                  "create_time": {
                    "description": "Output only. The timestamp when the endpoint was created.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "update_time": {
                    "description": "Output only. The timestamp when the endpoint was last updated.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "uid": {
                    "description": "Output only. A globally unique identifier (in UUID4 format) for this endpoint.",
                    "type": "string"
                  }
                }
              },
              "destination": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Immutable. The resource name for the endpoint in the format ``projects/*/locations/*/namespaces/*/services/*/endpoints/*``.",
                    "type": "string"
                  },
                  "address": {
                    "description": "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like:  -  ``8.8.8`` -  ``8.8.8.8:53`` -  ``test:bad:address`` -  ``[::1]`` -  ``[::1]:8080``  Limited to 45 characters.",
                    "type": "string"
                  },
                  "port": {
                    "description": "Optional. Service Directory rejects values outside of ``[0, 65535]``.",
                    "type": "integer"
                  },
                  "metadata": {
                    "description": "Optional. Metadata for the endpoint. This data can be consumed by service clients.  Restrictions:  -  The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected -  Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected  Note: This field is equivalent to the ``annotations`` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "network": {
                    "description": "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format ``projects/<project number>/locations/global/networks/*``.  The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                    "type": "string"
                  },
                  "create_time": {
                    "description": "Output only. The timestamp when the endpoint was created.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "update_time": {
                    "description": "Output only. The timestamp when the endpoint was last updated.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "uid": {
                    "description": "Output only. A globally unique identifier (in UUID4 format) for this endpoint.",
                    "type": "string"
                  }
                }
              },
              "protocol": {
                "description": "IP Protocol of the test. When not provided, \"TCP\" is assumed.",
                "type": "string"
              },
              "related_projects": {
                "description": "Other projects that may be relevant for reachability analysis. This is applicable to scenarios where a test can cross project boundaries.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "display_name": {
                "description": "Output only. The display name of a Connectivity Test.",
                "type": "string"
              },
              "labels": {
                "description": "Resource labels to represent user-provided metadata.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "create_time": {
                "description": "Output only. The time the test was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The time the test's configuration was updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "reachability_details": {
                "type": "object",
                "properties": {
                  "result": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the product.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Token that identifies a product so that it can be referred to from other parts in the document. There is no predefined format as long as it uniquely identifies a group in the context of the current document.",
                            "type": "string"
                          },
                          "generic_uri": {
                            "description": "Contains a URI which is vendor-specific. Example: The artifact repository URL of an image.  This field is a member of `oneof`_ ``identifier``.",
                            "type": "string"
                          }
                        }
                      },
                      "score": {
                        "description": "A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).",
                        "type": "number"
                      },
                      "image": {
                        "description": "The resource name of the image from the product that is the closest match to the query.",
                        "type": "string"
                      }
                    }
                  },
                  "verify_time": {
                    "description": "The time of the configuration analysis.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "error": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "State enum for status.",
                        "type": "object",
                        "reference": "google.maps.mapsplatformdatasets_v1.types.Status.State"
                      },
                      "error_message": {
                        "description": "Error message indicating reason of failure. It is empty if the datasets is not in a failed state.",
                        "type": "string"
                      }
                    }
                  },
                  "traces": {
                    "description": "Result may contain a list of traces if a test has multiple possible paths in the network, such as when destination endpoint is a load balancer with multiple backends.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "project_id": {
                          "description": "Project ID of the Cloud project where the trace data is stored.",
                          "type": "string"
                        },
                        "trace_id": {
                          "description": "Globally unique identifier for the trace. This identifier is a 128-bit numeric value formatted as a 32-byte hex string. For example, ``382d4f4c6b7bb2f4a972559d9085001d``.",
                          "type": "string"
                        },
                        "spans": {
                          "description": "Collection of spans in the trace.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "span_id": {
                                "description": "Identifier for the span. Must be a 64-bit integer other than 0 and unique within a trace. For example, ``2205310701640571284``.",
                                "type": "integer"
                              },
                              "kind": {
                                "description": "Distinguishes between spans generated in a particular context. For example, two spans with the same name may be distinguished using ``RPC_CLIENT`` and ``RPC_SERVER`` to identify queueing latency associated with the span.",
                                "type": "object",
                                "reference": "google.cloud.trace_v1.types.TraceSpan.SpanKind"
                              },
                              "name": {
                                "description": "Name of the span. Must be less than 128 bytes. The span name is sanitized and displayed in the Stackdriver Trace tool in the Google Cloud Platform Console. The name may be a method name or some other per-call site name. For the same executable and the same call point, a best practice is to use a consistent name, which makes it easier to correlate cross-trace spans.",
                                "type": "string"
                              },
                              "start_time": {
                                "description": "Start time of the span in nanoseconds from the UNIX epoch.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "end_time": {
                                "description": "End time of the span in nanoseconds from the UNIX epoch.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "parent_span_id": {
                                "description": "Optional. ID of the parent span, if any.",
                                "type": "integer"
                              },
                              "labels": {
                                "description": "Collection of labels associated with the span. Label keys must be less than 128 bytes. Label values must be less than 16 kilobytes (10MB for ``/stacktrace`` values).  Some predefined label keys exist, or you may create your own. When creating your own, we recommend the following formats:  -  ``/category/product/key`` for agents of well-known products (e.g. ``/db/mongodb/read_size``). -  ``short_host/path/key`` for domain-specific keys (e.g. ``foo.com/myproduct/bar``)  Predefined labels include:  -  ``/agent`` -  ``/component`` -  ``/error/message`` -  ``/error/name`` -  ``/http/client_city`` -  ``/http/client_country`` -  ``/http/client_protocol`` -  ``/http/client_region`` -  ``/http/host`` -  ``/http/method`` -  ``/http/path`` -  ``/http/redirected_url`` -  ``/http/request/size`` -  ``/http/response/size`` -  ``/http/route`` -  ``/http/status_code`` -  ``/http/url`` -  ``/http/user_agent`` -  ``/pid`` -  ``/stacktrace`` -  ``/tid``",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "probing_details": {
                "type": "object",
                "properties": {
                  "result": {
                    "description": "The overall result of active probing.",
                    "type": "object",
                    "reference": "google.cloud.network_management_v1.types.ProbingDetails.ProbingResult"
                  },
                  "verify_time": {
                    "description": "The time that reachability was assessed through active probing.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "error": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "State enum for status.",
                        "type": "object",
                        "reference": "google.maps.mapsplatformdatasets_v1.types.Status.State"
                      },
                      "error_message": {
                        "description": "Error message indicating reason of failure. It is empty if the datasets is not in a failed state.",
                        "type": "string"
                      }
                    }
                  },
                  "abort_cause": {
                    "description": "The reason probing was aborted.",
                    "type": "object",
                    "reference": "google.cloud.network_management_v1.types.ProbingDetails.ProbingAbortCause"
                  },
                  "sent_probe_count": {
                    "description": "Number of probes sent.",
                    "type": "integer"
                  },
                  "successful_probe_count": {
                    "description": "Number of probes that reached the destination.",
                    "type": "integer"
                  },
                  "endpoint_info": {
                    "type": "object",
                    "properties": {
                      "source_ip": {
                        "description": "Source IP address.",
                        "type": "string"
                      },
                      "destination_ip": {
                        "description": "Destination IP address.",
                        "type": "string"
                      },
                      "protocol": {
                        "description": "IP protocol in string format, for example: \"TCP\", \"UDP\", \"ICMP\".",
                        "type": "string"
                      },
                      "source_port": {
                        "description": "Source port. Only valid when protocol is TCP or UDP.",
                        "type": "integer"
                      },
                      "destination_port": {
                        "description": "Destination port. Only valid when protocol is TCP or UDP.",
                        "type": "integer"
                      },
                      "source_network_uri": {
                        "description": "URI of the network where this packet originates from.",
                        "type": "string"
                      },
                      "destination_network_uri": {
                        "description": "URI of the network where this packet is sent to.",
                        "type": "string"
                      },
                      "source_agent_uri": {
                        "description": "URI of the source telemetry agent this packet originates from.",
                        "type": "string"
                      }
                    }
                  },
                  "probing_latency": {
                    "type": "object",
                    "properties": {
                      "latency_percentiles": {
                        "description": "Representative latency percentiles.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "percent": {
                              "description": "Percentage of samples this data point applies to.",
                              "type": "integer"
                            },
                            "latency_micros": {
                              "description": "percent-th percentile of latency observed, in microseconds. Fraction of percent/100 of samples have latency lower or equal to the value of this field.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "destination_egress_location": {
                    "type": "object",
                    "properties": {
                      "metropolitan_area": {
                        "description": "Name of the metropolitan area.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "round_trip": {
                "description": "Whether run analysis for the return path from destination to source. Default value is false.",
                "type": "boolean"
              },
              "return_reachability_details": {
                "type": "object",
                "properties": {
                  "result": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the product.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Token that identifies a product so that it can be referred to from other parts in the document. There is no predefined format as long as it uniquely identifies a group in the context of the current document.",
                            "type": "string"
                          },
                          "generic_uri": {
                            "description": "Contains a URI which is vendor-specific. Example: The artifact repository URL of an image.  This field is a member of `oneof`_ ``identifier``.",
                            "type": "string"
                          }
                        }
                      },
                      "score": {
                        "description": "A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).",
                        "type": "number"
                      },
                      "image": {
                        "description": "The resource name of the image from the product that is the closest match to the query.",
                        "type": "string"
                      }
                    }
                  },
                  "verify_time": {
                    "description": "The time of the configuration analysis.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "error": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "State enum for status.",
                        "type": "object",
                        "reference": "google.maps.mapsplatformdatasets_v1.types.Status.State"
                      },
                      "error_message": {
                        "description": "Error message indicating reason of failure. It is empty if the datasets is not in a failed state.",
                        "type": "string"
                      }
                    }
                  },
                  "traces": {
                    "description": "Result may contain a list of traces if a test has multiple possible paths in the network, such as when destination endpoint is a load balancer with multiple backends.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "project_id": {
                          "description": "Project ID of the Cloud project where the trace data is stored.",
                          "type": "string"
                        },
                        "trace_id": {
                          "description": "Globally unique identifier for the trace. This identifier is a 128-bit numeric value formatted as a 32-byte hex string. For example, ``382d4f4c6b7bb2f4a972559d9085001d``.",
                          "type": "string"
                        },
                        "spans": {
                          "description": "Collection of spans in the trace.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "span_id": {
                                "description": "Identifier for the span. Must be a 64-bit integer other than 0 and unique within a trace. For example, ``2205310701640571284``.",
                                "type": "integer"
                              },
                              "kind": {
                                "description": "Distinguishes between spans generated in a particular context. For example, two spans with the same name may be distinguished using ``RPC_CLIENT`` and ``RPC_SERVER`` to identify queueing latency associated with the span.",
                                "type": "object",
                                "reference": "google.cloud.trace_v1.types.TraceSpan.SpanKind"
                              },
                              "name": {
                                "description": "Name of the span. Must be less than 128 bytes. The span name is sanitized and displayed in the Stackdriver Trace tool in the Google Cloud Platform Console. The name may be a method name or some other per-call site name. For the same executable and the same call point, a best practice is to use a consistent name, which makes it easier to correlate cross-trace spans.",
                                "type": "string"
                              },
                              "start_time": {
                                "description": "Start time of the span in nanoseconds from the UNIX epoch.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "end_time": {
                                "description": "End time of the span in nanoseconds from the UNIX epoch.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "parent_span_id": {
                                "description": "Optional. ID of the parent span, if any.",
                                "type": "integer"
                              },
                              "labels": {
                                "description": "Collection of labels associated with the span. Label keys must be less than 128 bytes. Label values must be less than 16 kilobytes (10MB for ``/stacktrace`` values).  Some predefined label keys exist, or you may create your own. When creating your own, we recommend the following formats:  -  ``/category/product/key`` for agents of well-known products (e.g. ``/db/mongodb/read_size``). -  ``short_host/path/key`` for domain-specific keys (e.g. ``foo.com/myproduct/bar``)  Predefined labels include:  -  ``/agent`` -  ``/component`` -  ``/error/message`` -  ``/error/name`` -  ``/http/client_city`` -  ``/http/client_country`` -  ``/http/client_protocol`` -  ``/http/client_region`` -  ``/http/host`` -  ``/http/method`` -  ``/http/path`` -  ``/http/redirected_url`` -  ``/http/request/size`` -  ``/http/response/size`` -  ``/http/route`` -  ``/http/status_code`` -  ``/http/url`` -  ``/http/user_agent`` -  ``/pid`` -  ``/stacktrace`` -  ``/tid``",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "bypass_firewall_checks": {
                "description": "Whether the test should skip firewall checking. If not provided, we assume false.",
                "type": "boolean"
              }
            },
            "required": [
              "source",
              "destination"
            ]
          }
        },
        "required": [
          "parent",
          "test_id",
          "resource"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateConnectivityTestRequest",
      "description": "Request for the ``UpdateConnectivityTest`` method.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Mask of fields to update. At least\n        one path must be supplied in this field.\n    resource (google.cloud.network_management_v1.types.ConnectivityTest):\n        Required. Only fields specified in update_mask are updated.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Mask of fields to update. At least one path must be supplied in this field.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "resource": {
            "description": "Required. Only fields specified in update_mask are updated.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Identifier. Unique name of the resource using the form: ``projects/{project_id}/locations/global/connectivityTests/{test_id}``",
                "type": "string"
              },
              "description": {
                "description": "The user-supplied description of the Connectivity Test. Maximum of 512 characters.",
                "type": "string"
              },
              "source": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Immutable. The resource name for the endpoint in the format ``projects/*/locations/*/namespaces/*/services/*/endpoints/*``.",
                    "type": "string"
                  },
                  "address": {
                    "description": "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like:  -  ``8.8.8`` -  ``8.8.8.8:53`` -  ``test:bad:address`` -  ``[::1]`` -  ``[::1]:8080``  Limited to 45 characters.",
                    "type": "string"
                  },
                  "port": {
                    "description": "Optional. Service Directory rejects values outside of ``[0, 65535]``.",
                    "type": "integer"
                  },
                  "metadata": {
                    "description": "Optional. Metadata for the endpoint. This data can be consumed by service clients.  Restrictions:  -  The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected -  Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected  Note: This field is equivalent to the ``annotations`` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "network": {
                    "description": "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format ``projects/<project number>/locations/global/networks/*``.  The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                    "type": "string"
                  },
                  "create_time": {
                    "description": "Output only. The timestamp when the endpoint was created.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "update_time": {
                    "description": "Output only. The timestamp when the endpoint was last updated.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "uid": {
                    "description": "Output only. A globally unique identifier (in UUID4 format) for this endpoint.",
                    "type": "string"
                  }
                }
              },
              "destination": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Immutable. The resource name for the endpoint in the format ``projects/*/locations/*/namespaces/*/services/*/endpoints/*``.",
                    "type": "string"
                  },
                  "address": {
                    "description": "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like:  -  ``8.8.8`` -  ``8.8.8.8:53`` -  ``test:bad:address`` -  ``[::1]`` -  ``[::1]:8080``  Limited to 45 characters.",
                    "type": "string"
                  },
                  "port": {
                    "description": "Optional. Service Directory rejects values outside of ``[0, 65535]``.",
                    "type": "integer"
                  },
                  "metadata": {
                    "description": "Optional. Metadata for the endpoint. This data can be consumed by service clients.  Restrictions:  -  The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected -  Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected  Note: This field is equivalent to the ``annotations`` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "network": {
                    "description": "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format ``projects/<project number>/locations/global/networks/*``.  The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                    "type": "string"
                  },
                  "create_time": {
                    "description": "Output only. The timestamp when the endpoint was created.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "update_time": {
                    "description": "Output only. The timestamp when the endpoint was last updated.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "uid": {
                    "description": "Output only. A globally unique identifier (in UUID4 format) for this endpoint.",
                    "type": "string"
                  }
                }
              },
              "protocol": {
                "description": "IP Protocol of the test. When not provided, \"TCP\" is assumed.",
                "type": "string"
              },
              "related_projects": {
                "description": "Other projects that may be relevant for reachability analysis. This is applicable to scenarios where a test can cross project boundaries.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "display_name": {
                "description": "Output only. The display name of a Connectivity Test.",
                "type": "string"
              },
              "labels": {
                "description": "Resource labels to represent user-provided metadata.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "create_time": {
                "description": "Output only. The time the test was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The time the test's configuration was updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "reachability_details": {
                "type": "object",
                "properties": {
                  "result": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the product.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Token that identifies a product so that it can be referred to from other parts in the document. There is no predefined format as long as it uniquely identifies a group in the context of the current document.",
                            "type": "string"
                          },
                          "generic_uri": {
                            "description": "Contains a URI which is vendor-specific. Example: The artifact repository URL of an image.  This field is a member of `oneof`_ ``identifier``.",
                            "type": "string"
                          }
                        }
                      },
                      "score": {
                        "description": "A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).",
                        "type": "number"
                      },
                      "image": {
                        "description": "The resource name of the image from the product that is the closest match to the query.",
                        "type": "string"
                      }
                    }
                  },
                  "verify_time": {
                    "description": "The time of the configuration analysis.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "error": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "State enum for status.",
                        "type": "object",
                        "reference": "google.maps.mapsplatformdatasets_v1.types.Status.State"
                      },
                      "error_message": {
                        "description": "Error message indicating reason of failure. It is empty if the datasets is not in a failed state.",
                        "type": "string"
                      }
                    }
                  },
                  "traces": {
                    "description": "Result may contain a list of traces if a test has multiple possible paths in the network, such as when destination endpoint is a load balancer with multiple backends.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "project_id": {
                          "description": "Project ID of the Cloud project where the trace data is stored.",
                          "type": "string"
                        },
                        "trace_id": {
                          "description": "Globally unique identifier for the trace. This identifier is a 128-bit numeric value formatted as a 32-byte hex string. For example, ``382d4f4c6b7bb2f4a972559d9085001d``.",
                          "type": "string"
                        },
                        "spans": {
                          "description": "Collection of spans in the trace.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "span_id": {
                                "description": "Identifier for the span. Must be a 64-bit integer other than 0 and unique within a trace. For example, ``2205310701640571284``.",
                                "type": "integer"
                              },
                              "kind": {
                                "description": "Distinguishes between spans generated in a particular context. For example, two spans with the same name may be distinguished using ``RPC_CLIENT`` and ``RPC_SERVER`` to identify queueing latency associated with the span.",
                                "type": "object",
                                "reference": "google.cloud.trace_v1.types.TraceSpan.SpanKind"
                              },
                              "name": {
                                "description": "Name of the span. Must be less than 128 bytes. The span name is sanitized and displayed in the Stackdriver Trace tool in the Google Cloud Platform Console. The name may be a method name or some other per-call site name. For the same executable and the same call point, a best practice is to use a consistent name, which makes it easier to correlate cross-trace spans.",
                                "type": "string"
                              },
                              "start_time": {
                                "description": "Start time of the span in nanoseconds from the UNIX epoch.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "end_time": {
                                "description": "End time of the span in nanoseconds from the UNIX epoch.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "parent_span_id": {
                                "description": "Optional. ID of the parent span, if any.",
                                "type": "integer"
                              },
                              "labels": {
                                "description": "Collection of labels associated with the span. Label keys must be less than 128 bytes. Label values must be less than 16 kilobytes (10MB for ``/stacktrace`` values).  Some predefined label keys exist, or you may create your own. When creating your own, we recommend the following formats:  -  ``/category/product/key`` for agents of well-known products (e.g. ``/db/mongodb/read_size``). -  ``short_host/path/key`` for domain-specific keys (e.g. ``foo.com/myproduct/bar``)  Predefined labels include:  -  ``/agent`` -  ``/component`` -  ``/error/message`` -  ``/error/name`` -  ``/http/client_city`` -  ``/http/client_country`` -  ``/http/client_protocol`` -  ``/http/client_region`` -  ``/http/host`` -  ``/http/method`` -  ``/http/path`` -  ``/http/redirected_url`` -  ``/http/request/size`` -  ``/http/response/size`` -  ``/http/route`` -  ``/http/status_code`` -  ``/http/url`` -  ``/http/user_agent`` -  ``/pid`` -  ``/stacktrace`` -  ``/tid``",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "probing_details": {
                "type": "object",
                "properties": {
                  "result": {
                    "description": "The overall result of active probing.",
                    "type": "object",
                    "reference": "google.cloud.network_management_v1.types.ProbingDetails.ProbingResult"
                  },
                  "verify_time": {
                    "description": "The time that reachability was assessed through active probing.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "error": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "State enum for status.",
                        "type": "object",
                        "reference": "google.maps.mapsplatformdatasets_v1.types.Status.State"
                      },
                      "error_message": {
                        "description": "Error message indicating reason of failure. It is empty if the datasets is not in a failed state.",
                        "type": "string"
                      }
                    }
                  },
                  "abort_cause": {
                    "description": "The reason probing was aborted.",
                    "type": "object",
                    "reference": "google.cloud.network_management_v1.types.ProbingDetails.ProbingAbortCause"
                  },
                  "sent_probe_count": {
                    "description": "Number of probes sent.",
                    "type": "integer"
                  },
                  "successful_probe_count": {
                    "description": "Number of probes that reached the destination.",
                    "type": "integer"
                  },
                  "endpoint_info": {
                    "type": "object",
                    "properties": {
                      "source_ip": {
                        "description": "Source IP address.",
                        "type": "string"
                      },
                      "destination_ip": {
                        "description": "Destination IP address.",
                        "type": "string"
                      },
                      "protocol": {
                        "description": "IP protocol in string format, for example: \"TCP\", \"UDP\", \"ICMP\".",
                        "type": "string"
                      },
                      "source_port": {
                        "description": "Source port. Only valid when protocol is TCP or UDP.",
                        "type": "integer"
                      },
                      "destination_port": {
                        "description": "Destination port. Only valid when protocol is TCP or UDP.",
                        "type": "integer"
                      },
                      "source_network_uri": {
                        "description": "URI of the network where this packet originates from.",
                        "type": "string"
                      },
                      "destination_network_uri": {
                        "description": "URI of the network where this packet is sent to.",
                        "type": "string"
                      },
                      "source_agent_uri": {
                        "description": "URI of the source telemetry agent this packet originates from.",
                        "type": "string"
                      }
                    }
                  },
                  "probing_latency": {
                    "type": "object",
                    "properties": {
                      "latency_percentiles": {
                        "description": "Representative latency percentiles.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "percent": {
                              "description": "Percentage of samples this data point applies to.",
                              "type": "integer"
                            },
                            "latency_micros": {
                              "description": "percent-th percentile of latency observed, in microseconds. Fraction of percent/100 of samples have latency lower or equal to the value of this field.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "destination_egress_location": {
                    "type": "object",
                    "properties": {
                      "metropolitan_area": {
                        "description": "Name of the metropolitan area.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "round_trip": {
                "description": "Whether run analysis for the return path from destination to source. Default value is false.",
                "type": "boolean"
              },
              "return_reachability_details": {
                "type": "object",
                "properties": {
                  "result": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the product.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Token that identifies a product so that it can be referred to from other parts in the document. There is no predefined format as long as it uniquely identifies a group in the context of the current document.",
                            "type": "string"
                          },
                          "generic_uri": {
                            "description": "Contains a URI which is vendor-specific. Example: The artifact repository URL of an image.  This field is a member of `oneof`_ ``identifier``.",
                            "type": "string"
                          }
                        }
                      },
                      "score": {
                        "description": "A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).",
                        "type": "number"
                      },
                      "image": {
                        "description": "The resource name of the image from the product that is the closest match to the query.",
                        "type": "string"
                      }
                    }
                  },
                  "verify_time": {
                    "description": "The time of the configuration analysis.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "error": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "State enum for status.",
                        "type": "object",
                        "reference": "google.maps.mapsplatformdatasets_v1.types.Status.State"
                      },
                      "error_message": {
                        "description": "Error message indicating reason of failure. It is empty if the datasets is not in a failed state.",
                        "type": "string"
                      }
                    }
                  },
                  "traces": {
                    "description": "Result may contain a list of traces if a test has multiple possible paths in the network, such as when destination endpoint is a load balancer with multiple backends.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "project_id": {
                          "description": "Project ID of the Cloud project where the trace data is stored.",
                          "type": "string"
                        },
                        "trace_id": {
                          "description": "Globally unique identifier for the trace. This identifier is a 128-bit numeric value formatted as a 32-byte hex string. For example, ``382d4f4c6b7bb2f4a972559d9085001d``.",
                          "type": "string"
                        },
                        "spans": {
                          "description": "Collection of spans in the trace.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "span_id": {
                                "description": "Identifier for the span. Must be a 64-bit integer other than 0 and unique within a trace. For example, ``2205310701640571284``.",
                                "type": "integer"
                              },
                              "kind": {
                                "description": "Distinguishes between spans generated in a particular context. For example, two spans with the same name may be distinguished using ``RPC_CLIENT`` and ``RPC_SERVER`` to identify queueing latency associated with the span.",
                                "type": "object",
                                "reference": "google.cloud.trace_v1.types.TraceSpan.SpanKind"
                              },
                              "name": {
                                "description": "Name of the span. Must be less than 128 bytes. The span name is sanitized and displayed in the Stackdriver Trace tool in the Google Cloud Platform Console. The name may be a method name or some other per-call site name. For the same executable and the same call point, a best practice is to use a consistent name, which makes it easier to correlate cross-trace spans.",
                                "type": "string"
                              },
                              "start_time": {
                                "description": "Start time of the span in nanoseconds from the UNIX epoch.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "end_time": {
                                "description": "End time of the span in nanoseconds from the UNIX epoch.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "parent_span_id": {
                                "description": "Optional. ID of the parent span, if any.",
                                "type": "integer"
                              },
                              "labels": {
                                "description": "Collection of labels associated with the span. Label keys must be less than 128 bytes. Label values must be less than 16 kilobytes (10MB for ``/stacktrace`` values).  Some predefined label keys exist, or you may create your own. When creating your own, we recommend the following formats:  -  ``/category/product/key`` for agents of well-known products (e.g. ``/db/mongodb/read_size``). -  ``short_host/path/key`` for domain-specific keys (e.g. ``foo.com/myproduct/bar``)  Predefined labels include:  -  ``/agent`` -  ``/component`` -  ``/error/message`` -  ``/error/name`` -  ``/http/client_city`` -  ``/http/client_country`` -  ``/http/client_protocol`` -  ``/http/client_region`` -  ``/http/host`` -  ``/http/method`` -  ``/http/path`` -  ``/http/redirected_url`` -  ``/http/request/size`` -  ``/http/response/size`` -  ``/http/route`` -  ``/http/status_code`` -  ``/http/url`` -  ``/http/user_agent`` -  ``/pid`` -  ``/stacktrace`` -  ``/tid``",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "bypass_firewall_checks": {
                "description": "Whether the test should skip firewall checking. If not provided, we assume false.",
                "type": "boolean"
              }
            },
            "required": [
              "source",
              "destination"
            ]
          }
        },
        "required": [
          "update_mask",
          "resource"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteConnectivityTestRequest",
      "description": "Request for the ``DeleteConnectivityTest`` method.\n\nAttributes:\n    name (str):\n        Required. Connectivity Test resource name using the form:\n        ``projects/{project_id}/locations/global/connectivityTests/{test_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Connectivity Test resource name using the form: ``projects/{project_id}/locations/global/connectivityTests/{test_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "RerunConnectivityTestRequest",
      "description": "Request for the ``RerunConnectivityTest`` method.\n\nAttributes:\n    name (str):\n        Required. Connectivity Test resource name using the form:\n        ``projects/{project_id}/locations/global/connectivityTests/{test_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Connectivity Test resource name using the form: ``projects/{project_id}/locations/global/connectivityTests/{test_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}