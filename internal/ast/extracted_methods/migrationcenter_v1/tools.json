{
  "MigrationCenter": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_assets",
          "description": "Lists all the assets in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_list_assets():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.ListAssetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_assets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Opti",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ``ListAssetsRequest``. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.services.migration_center.pagers.ListAssetsAsyncPager: Response message for listing assets.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.ListAssetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_asset",
          "description": "Gets the details of an asset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_get_asset():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.GetAssetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_asset(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.types.GetAssetRequest, dict]]):\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.Asset: An asset represents a resource in your environment. Asset types include virtual machines and databases."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.GetAssetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_asset",
          "description": "Updates the parameters of an asset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_update_asset():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.UpdateAssetRequest(\n        )\n\n        # Make the request\n        response = await client.update_asset(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.types.UpdateAssetRequest, dict]]):\n        The requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "asset": {
                "type": "google.cloud.migrationcenter_v1.types.Asset",
                "description": "Required. The resource being updated. This corresponds to the ``asset`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``Asset`` resource by the update. The values specified in the ``update_mask`` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single \\* value in the mask lets you to overwrite all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.Asset: An asset represents a resource in your environment. Asset types include virtual machines and databases."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "asset",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.UpdateAssetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_update_assets",
          "description": "Updates the parameters of a list of assets.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_batch_update_assets():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.BatchUpdateAssetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.batch_update_assets(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrati",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for batch asset update.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "requests": {
                "type": "MutableSequence[google.cloud.migrationcenter_v1.types.UpdateAssetRequest]",
                "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.  This corresponds to the ``requests`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.BatchUpdateAssetsResponse: Response for updating a list of assets."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.BatchUpdateAssetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_asset",
          "description": "Deletes an asset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_delete_asset():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.DeleteAssetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_asset(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.types.DeleteAssetRequest, dict]]):\n        The request object. A request to delete an asset.\n    name (:",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.DeleteAssetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_delete_assets",
          "description": "Deletes list of Assets.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_batch_delete_assets():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.BatchDeleteAssetsRequest(\n            parent=\"parent_value\",\n            names=['names_value1', 'names_value2'],\n        )\n\n        # Make the request\n        await client.batch_delete_assets(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.types.BatchDeleteAsset",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for batch asset delete.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "names": {
                "type": "MutableSequence[str]",
                "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.  This corresponds to the ``names`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "names",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.BatchDeleteAssetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "report_asset_frames",
          "description": "Reports a set of frames.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_report_asset_frames():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.ReportAssetFramesRequest(\n            parent=\"parent_value\",\n            source=\"source_value\",\n        )\n\n        # Make the request\n        response = await client.report_asset_frames(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[goog",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.ReportAssetFramesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "aggregate_assets_values",
          "description": "Aggregates the requested fields based on provided\nfunction.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_aggregate_assets_values():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.AggregateAssetsValuesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.aggregate_assets_values(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optiona",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.AggregateAssetsValuesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_import_job",
          "description": "Creates an import job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_create_import_job():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        import_job = migrationcenter_v1.ImportJob()\n        import_job.asset_source = \"asset_source_value\"\n\n        request = migrationcenter_v1.CreateImportJobRequest(\n            parent=\"parent_value\",\n            import_job_id=\"import_job_id_value\",\n            import_job=import_job,\n        )\n\n        # Make the request\n        oper",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "import_job": {
                "type": "google.cloud.migrationcenter_v1.types.ImportJob",
                "description": "Required. The resource being created. This corresponds to the ``import_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "import_job_id": {
                "type": "str",
                "description": "Required. ID of the import job. This corresponds to the ``import_job_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.ImportJob` A resource that represents the background job that imports asset frames."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "import_job",
              "import_job_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.CreateImportJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_import_jobs",
          "description": "Lists all import jobs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_list_import_jobs():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.ListImportJobsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_import_jobs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ``ListImportJobsRequest``. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.services.migration_center.pagers.ListImportJobsAsyncPager: A response for listing import jobs.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.ListImportJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_import_job",
          "description": "Gets the details of an import job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_get_import_job():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.GetImportJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_import_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.types.GetImportJ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.ImportJob: A resource that represents the background job that imports asset frames."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.GetImportJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_import_job",
          "description": "Deletes an import job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_delete_import_job():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.DeleteImportJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_import_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.DeleteImportJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_import_job",
          "description": "Updates an import job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_update_import_job():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        import_job = migrationcenter_v1.ImportJob()\n        import_job.asset_source = \"asset_source_value\"\n\n        request = migrationcenter_v1.UpdateImportJobRequest(\n            import_job=import_job,\n        )\n\n        # Make the request\n        operation = client.update_import_job(request=request)\n\n        print(\"Waiting for operat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "import_job": {
                "type": "google.cloud.migrationcenter_v1.types.ImportJob",
                "description": "Required. The resource being updated This corresponds to the ``import_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``Asset`` resource by the update. The values specified in the ``update_mask`` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single \\* value in the mask lets you to overwrite all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.ImportJob` A resource that represents the background job that imports asset frames."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "import_job",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.UpdateImportJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "validate_import_job",
          "description": "Validates an import job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_validate_import_job():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.ValidateImportJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.validate_import_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the import job to validate.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.ValidateImportJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "run_import_job",
          "description": "Runs an import job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_run_import_job():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.RunImportJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.run_import_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the import job to run.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.RunImportJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_import_data_file",
          "description": "Gets an import data file.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_get_import_data_file():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.GetImportDataFileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_import_data_file(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.types.Ge",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ImportDataFile. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.ImportDataFile: A resource that represents a payload file in an import job."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.GetImportDataFileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_import_data_files",
          "description": "List import data files.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_list_import_data_files():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.ListImportDataFilesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_import_data_files(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Opt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the parent of the ``ImportDataFiles`` resource.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.services.migration_center.pagers.ListImportDataFilesAsyncPager: Response for listing payload files of an import job. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.ListImportDataFilesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_import_data_file",
          "description": "Creates an import data file.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_create_import_data_file():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        import_data_file = migrationcenter_v1.ImportDataFile()\n        import_data_file.format_ = \"IMPORT_JOB_FORMAT_STRATOZONE_CSV\"\n\n        request = migrationcenter_v1.CreateImportDataFileRequest(\n            parent=\"parent_value\",\n            import_data_file_id=\"import_data_file_id_value\",\n            import_data_file=i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the parent of the ImportDataFile.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "import_data_file": {
                "type": "google.cloud.migrationcenter_v1.types.ImportDataFile",
                "description": "Required. The resource being created. This corresponds to the ``import_data_file`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "import_data_file_id": {
                "type": "str",
                "description": "Required. The ID of the new data file.  This corresponds to the ``import_data_file_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.ImportDataFile` A resource that represents a payload file in an import job."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "import_data_file",
              "import_data_file_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.CreateImportDataFileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_import_data_file",
          "description": "Delete an import data file.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_delete_import_data_file():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.DeleteImportDataFileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_import_data_file(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ImportDataFile to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.DeleteImportDataFileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_groups",
          "description": "Lists all groups in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_list_groups():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.ListGroupsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_groups(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ``ListGroupsRequest``. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.services.migration_center.pagers.ListGroupsAsyncPager: A response for listing groups.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.ListGroupsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_group",
          "description": "Gets the details of a group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_get_group():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.GetGroupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_group(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.types.GetGroupRequest, dict]]):\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.Group: A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.GetGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_group",
          "description": "Creates a new group in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_create_group():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.CreateGroupRequest(\n            parent=\"parent_value\",\n            group_id=\"group_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_group(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await opera",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "group": {
                "type": "google.cloud.migrationcenter_v1.types.Group",
                "description": "Required. The group resource being created.  This corresponds to the ``group`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "group_id": {
                "type": "str",
                "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: ``[a-z]([a-z0-9-]{0,61}[a-z0-9])?``.  This corresponds to the ``group_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.Group` A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "group",
              "group_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.CreateGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_group",
          "description": "Updates the parameters of a group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_update_group():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.UpdateGroupRequest(\n        )\n\n        # Make the request\n        operation = client.update_group(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "group": {
                "type": "google.cloud.migrationcenter_v1.types.Group",
                "description": "Required. The group resource being updated.  This corresponds to the ``group`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``Group`` resource by the update. The values specified in the ``update_mask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single \\* value in the mask lets you to overwrite all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.Group` A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "group",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.UpdateGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_group",
          "description": "Deletes a group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_delete_group():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.DeleteGroupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_group(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the group resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.DeleteGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "add_assets_to_group",
          "description": "Adds assets to a group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_add_assets_to_group():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        assets = migrationcenter_v1.AssetList()\n        assets.asset_ids = ['asset_ids_value1', 'asset_ids_value2']\n\n        request = migrationcenter_v1.AddAssetsToGroupRequest(\n            group=\"group_value\",\n            assets=assets,\n        )\n\n        # Make the request\n        operation = client.add_assets_to_group(request=req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "group": {
                "type": "str",
                "description": "Required. Group reference. This corresponds to the ``group`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.Group` A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "group",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.AddAssetsToGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "remove_assets_from_group",
          "description": "Removes assets from a group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_remove_assets_from_group():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        assets = migrationcenter_v1.AssetList()\n        assets.asset_ids = ['asset_ids_value1', 'asset_ids_value2']\n\n        request = migrationcenter_v1.RemoveAssetsFromGroupRequest(\n            group=\"group_value\",\n            assets=assets,\n        )\n\n        # Make the request\n        operation = client.remove_assets_fr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "group": {
                "type": "str",
                "description": "Required. Group reference. This corresponds to the ``group`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.Group` A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "group",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.RemoveAssetsFromGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_error_frames",
          "description": "Lists all error frames in a given source and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_list_error_frames():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.ListErrorFramesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_error_frames(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value (the source) for ``ListErrorFramesRequest``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.services.migration_center.pagers.ListErrorFramesAsyncPager: A response for listing error frames.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.ListErrorFramesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_error_frame",
          "description": "Gets the details of an error frame.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_get_error_frame():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.GetErrorFrameRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_error_frame(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.types.GetErr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.ErrorFrame: Message representing a frame which failed to be processed due to an error."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.GetErrorFrameRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_sources",
          "description": "Lists all the sources in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_list_sources():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.ListSourcesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_sources(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ``ListSourcesRequest``. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.services.migration_center.pagers.ListSourcesAsyncPager: Response message for listing sources.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.ListSourcesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_source",
          "description": "Gets the details of a source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_get_source():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.GetSourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_source(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.types.GetSourceRequest, dict]]):",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.Source: Source represents an object from which asset information is streamed to Migration Center."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.GetSourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_source",
          "description": "Creates a new source in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_create_source():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.CreateSourceRequest(\n            parent=\"parent_value\",\n            source_id=\"source_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_source(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "source": {
                "type": "google.cloud.migrationcenter_v1.types.Source",
                "description": "Required. The resource being created. This corresponds to the ``source`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "source_id": {
                "type": "str",
                "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: ``[a-z]([a-z0-9-]{0,61}[a-z0-9])?``.  This corresponds to the ``source_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.Source` Source represents an object from which asset information is streamed to Migration Center."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "source",
              "source_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.CreateSourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_source",
          "description": "Updates the parameters of a source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_update_source():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.UpdateSourceRequest(\n        )\n\n        # Make the request\n        operation = client.update_source(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "source": {
                "type": "google.cloud.migrationcenter_v1.types.Source",
                "description": "Required. The resource being updated This corresponds to the ``source`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``Source`` resource by the update. The values specified in the ``update_mask`` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single \\* value in the mask lets you to overwrite all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.Source` Source represents an object from which asset information is streamed to Migration Center."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "source",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.UpdateSourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_source",
          "description": "Deletes a source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_delete_source():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.DeleteSourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_source(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.DeleteSourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_preference_sets",
          "description": "Lists all the preference sets in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_list_preference_sets():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.ListPreferenceSetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_preference_sets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ``ListPreferenceSetsRequest``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.services.migration_center.pagers.ListPreferenceSetsAsyncPager: Response message for listing preference sets. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.ListPreferenceSetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_preference_set",
          "description": "Gets the details of a preference set.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_get_preference_set():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.GetPreferenceSetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_preference_set(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.PreferenceSet: The preferences that apply to all assets in a given context."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.GetPreferenceSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_preference_set",
          "description": "Creates a new preference set in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_create_preference_set():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.CreatePreferenceSetRequest(\n            parent=\"parent_value\",\n            preference_set_id=\"preference_set_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_preference_set(request=request)\n\n        print(\"Waiting for operat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "preference_set": {
                "type": "google.cloud.migrationcenter_v1.types.PreferenceSet",
                "description": "Required. The preference set resource being created.  This corresponds to the ``preference_set`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "preference_set_id": {
                "type": "str",
                "description": "Required. User specified ID for the preference set. It will become the last component of the preference set name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression ``[a-z]([a-z0-9-]{0,61}[a-z0-9])?``.  This corresponds to the ``preference_set_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.PreferenceSet` The preferences that apply to all assets in a given context."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "preference_set",
              "preference_set_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.CreatePreferenceSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_preference_set",
          "description": "Updates the parameters of a preference set.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_update_preference_set():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.UpdatePreferenceSetRequest(\n        )\n\n        # Make the request\n        operation = client.update_preference_set(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        pri",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "preference_set": {
                "type": "google.cloud.migrationcenter_v1.types.PreferenceSet",
                "description": "Required. The preference set resource being updated.  This corresponds to the ``preference_set`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``PreferenceSet`` resource by the update. The values specified in the ``update_mask`` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single \\* value in the mask lets you to overwrite all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.PreferenceSet` The preferences that apply to all assets in a given context."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "preference_set",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.UpdatePreferenceSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_preference_set",
          "description": "Deletes a preference set.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_delete_preference_set():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.DeletePreferenceSetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_preference_set(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the group resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.DeletePreferenceSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_settings",
          "description": "Gets the details of regional settings.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_get_settings():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.GetSettingsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.types.GetSettings",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.Settings: Describes the Migration Center settings related to the project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.GetSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_settings",
          "description": "Updates the regional-level project settings.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_update_settings():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.UpdateSettingsRequest(\n        )\n\n        # Make the request\n        operation = client.update_settings(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nAr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "settings": {
                "type": "google.cloud.migrationcenter_v1.types.Settings",
                "description": "Required. The project settings resource being updated.  This corresponds to the ``settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``Settings`` resource by the update. The values specified in the ``update_mask`` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single \\* value in the mask lets you to overwrite all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.Settings` Describes the Migration Center settings related to the project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.UpdateSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_report_config",
          "description": "Creates a report configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_create_report_config():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        report_config = migrationcenter_v1.ReportConfig()\n        report_config.group_preferenceset_assignments.group = \"group_value\"\n        report_config.group_preferenceset_assignments.preference_set = \"preference_set_value\"\n\n        request = migrationcenter_v1.CreateReportConfigRequest(\n            parent=\"parent_value\"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "report_config": {
                "type": "google.cloud.migrationcenter_v1.types.ReportConfig",
                "description": "Required. The report config set resource being created.  This corresponds to the ``report_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "report_config_id": {
                "type": "str",
                "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `a-z <[a-z0-9-]{0,61}[a-z0-9]>`__?.  This corresponds to the ``report_config_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.ReportConfig` The groups and associated preference sets on which we can generate reports."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "report_config",
              "report_config_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.CreateReportConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_report_config",
          "description": "Gets details of a single ReportConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_get_report_config():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.GetReportConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_report_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.typ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.ReportConfig: The groups and associated preference sets on which we can generate reports."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.GetReportConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_report_configs",
          "description": "Lists ReportConfigs in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_list_report_configs():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.ListReportConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_report_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nA",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ``ListReportConfigsRequest``. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.services.migration_center.pagers.ListReportConfigsAsyncPager: Response message for listing report configs. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.ListReportConfigsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_report_config",
          "description": "Deletes a ReportConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_delete_report_config():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.DeleteReportConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_report_config(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.DeleteReportConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_report",
          "description": "Creates a report.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_create_report():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.CreateReportRequest(\n            parent=\"parent_value\",\n            report_id=\"report_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_report(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Hand",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "report": {
                "type": "google.cloud.migrationcenter_v1.types.Report",
                "description": "Required. The report resource being created.  This corresponds to the ``report`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "report_id": {
                "type": "str",
                "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: `a-z <[a-z0-9-]{0,61}[a-z0-9]>`__?.  This corresponds to the ``report_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.migrationcenter_v1.types.Report` Report represents a point-in-time rendering of the ReportConfig results."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "report",
              "report_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.CreateReportRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_report",
          "description": "Gets details of a single Report.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_get_report():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.GetReportRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_report(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.migrationcenter_v1.types.GetReportRequest, dict]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.types.Report: Report represents a point-in-time rendering of the ReportConfig results."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.GetReportRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_reports",
          "description": "Lists Reports in a given ReportConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_list_reports():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.ListReportsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_reports(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[g",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ``ListReportsRequest``. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.migrationcenter_v1.services.migration_center.pagers.ListReportsAsyncPager: Response message for listing Reports.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.ListReportsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_report",
          "description": "Deletes a Report.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import migrationcenter_v1\n\n    async def sample_delete_report():\n        # Create a client\n        client = migrationcenter_v1.MigrationCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = migrationcenter_v1.DeleteReportRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_report(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "migrationcenter.DeleteReportRequest"
          ]
        }
      }
    ]
  }
}