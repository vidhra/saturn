{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-memcache\\google\\cloud\\memcache_v1\\types\\cloud_memcache.py": [
    {
      "type": "request_class",
      "name": "Instance",
      "docstring": "A Memorystore for Memcached instance\n\nAttributes:\n    name (str):\n        Required. Unique name of the resource in this scope\n        including project and location using the form:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n\n        Note: Memcached instances are managed and addressed at the\n        regional level so ``location_id`` here refers to a Google\n        Cloud region; however, users may choose which zones\n        Memcached nodes should be provisioned in within an instance.\n        Refer to [zones][google.cloud.memcache.v1.Instance.zones]\n        field for more details.\n    display_name (str):\n        User provided name for the instance, which is\n        only used for display purposes. Cannot be more\n        than 80 characters.\n    labels (MutableMapping[str, str]):\n        Resource labels to represent user-provided\n        metadata. Refer to cloud documentation on labels\n        for more details.\n        https://cloud.google.com/compute/docs/labeling-resources\n ",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Unique name of the resource in this scope including project and location using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``  Note: Memcached instances are managed and addressed at the regional level so ``location_id`` here refers to a Google Cloud region; however, users may choose which zones Memcached nodes should be provisioned in within an instance. Refer to [zones][google.cloud.memcache.v1.Instance.zones] field for more details."
        },
        "display_name": {
          "type": "str",
          "description": "User provided name for the instance, which is only used for display purposes. Cannot be more than 80 characters."
        },
        "labels": {
          "type": "MutableMapping[str, str]",
          "description": "Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "authorized_network": {
          "type": "str",
          "description": "The full name of the Google Compute Engine `network </compute/docs/networks-and-firewalls#networks>`__ to which the instance is connected. If left unspecified, the ``default`` network will be used."
        },
        "zones": {
          "type": "MutableSequence[str]",
          "description": "Zones in which Memcached nodes should be provisioned. Memcached nodes will be equally distributed across these zones. If not provided, the service will by default create nodes in all zones in the region for the instance."
        },
        "node_count": {
          "type": "int",
          "description": "Required. Number of nodes in the Memcached instance."
        },
        "node_config": {
          "type": "google.cloud.memcache_v1.types.Instance.NodeConfig",
          "description": "Required. Configuration for Memcached nodes."
        },
        "memcache_version": {
          "type": "google.cloud.memcache_v1.types.MemcacheVersion",
          "description": "The major version of Memcached software. If not provided, latest supported version will be used. Currently the latest supported major version is ``MEMCACHE_1_5``. The minor version will be automatically determined by our system based on the latest supported minor version."
        },
        "parameters": {
          "type": "google.cloud.memcache_v1.types.MemcacheParameters",
          "description": "User defined parameters to apply to the memcached process on each node."
        },
        "memcache_nodes": {
          "type": "MutableSequence[google.cloud.memcache_v1.types.Instance.Node]",
          "description": "Output only. List of Memcached nodes. Refer to [Node][google.cloud.memcache.v1.Instance.Node] message for more details."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time the instance was created."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time the instance was updated."
        },
        "state": {
          "type": "google.cloud.memcache_v1.types.Instance.State",
          "description": "Output only. The state of this Memcached instance."
        },
        "memcache_full_version": {
          "type": "str",
          "description": "Output only. The full version of memcached server running on this instance. System automatically determines the full memcached version for an instance based on the input MemcacheVersion. The full version format will be \"memcached-1.5.16\"."
        },
        "instance_messages": {
          "type": "MutableSequence[google.cloud.memcache_v1.types.Instance.InstanceMessage]",
          "description": "List of messages that describe the current state of the Memcached instance."
        },
        "discovery_endpoint": {
          "type": "str",
          "description": "Output only. Endpoint for the Discovery API."
        },
        "maintenance_policy": {
          "type": "google.cloud.memcache_v1.types.MaintenancePolicy",
          "description": "The maintenance policy for the instance. If not provided, the maintenance event will be performed based on Memorystore internal rollout schedule."
        },
        "maintenance_schedule": {
          "type": "google.cloud.memcache_v1.types.MaintenanceSchedule",
          "description": "Output only. Published maintenance schedule."
        }
      }
    },
    {
      "type": "request_class",
      "name": "MaintenancePolicy",
      "docstring": "Maintenance policy per instance.\n\nAttributes:\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The time when the policy was\n        created.\n    update_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The time when the policy was\n        updated.\n    description (str):\n        Description of what this policy is for. Create/Update\n        methods return INVALID_ARGUMENT if the length is greater\n        than 512.\n    weekly_maintenance_window (MutableSequence[google.cloud.memcache_v1.types.WeeklyMaintenanceWindow]):\n        Required. Maintenance window that is applied to resources\n        covered by this policy. Minimum 1. For the current version,\n        the maximum number of weekly_maintenance_windows is expected\n        to be one.",
      "attributes": {
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time when the policy was created."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time when the policy was updated."
        },
        "description": {
          "type": "str",
          "description": "Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512."
        },
        "weekly_maintenance_window": {
          "type": "MutableSequence[google.cloud.memcache_v1.types.WeeklyMaintenanceWindow]",
          "description": "Required. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_maintenance_windows is expected to be one."
        }
      }
    },
    {
      "type": "request_class",
      "name": "WeeklyMaintenanceWindow",
      "docstring": "Time window specified for weekly operations.\n\nAttributes:\n    day (google.type.dayofweek_pb2.DayOfWeek):\n        Required. Allows to define schedule that runs\n        specified day of the week.\n    start_time (google.type.timeofday_pb2.TimeOfDay):\n        Required. Start time of the window in UTC.\n    duration (google.protobuf.duration_pb2.Duration):\n        Required. Duration of the time window.",
      "attributes": {
        "day": {
          "type": "google.type.dayofweek_pb2.DayOfWeek",
          "description": "Required. Allows to define schedule that runs specified day of the week."
        },
        "start_time": {
          "type": "google.type.timeofday_pb2.TimeOfDay",
          "description": "Required. Start time of the window in UTC."
        },
        "duration": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Required. Duration of the time window."
        }
      }
    },
    {
      "type": "request_class",
      "name": "MaintenanceSchedule",
      "docstring": "Upcoming maintenance schedule.\n\nAttributes:\n    start_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The start time of any upcoming\n        scheduled maintenance for this instance.\n    end_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The end time of any upcoming\n        scheduled maintenance for this instance.\n    schedule_deadline_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The deadline that the\n        maintenance schedule start time can not go\n        beyond, including reschedule.",
      "attributes": {
        "start_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The start time of any upcoming scheduled maintenance for this instance."
        },
        "end_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The end time of any upcoming scheduled maintenance for this instance."
        },
        "schedule_deadline_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The deadline that the maintenance schedule start time can not go beyond, including reschedule."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RescheduleMaintenanceRequest",
      "docstring": "Request for\n[RescheduleMaintenance][google.cloud.memcache.v1.CloudMemcache.RescheduleMaintenance].\n\nAttributes:\n    instance (str):\n        Required. Memcache instance resource name using the form:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region.\n    reschedule_type (google.cloud.memcache_v1.types.RescheduleMaintenanceRequest.RescheduleType):\n        Required. If reschedule type is SPECIFIC_TIME, must set up\n        schedule_time as well.\n    schedule_time (google.protobuf.timestamp_pb2.Timestamp):\n        Timestamp when the maintenance shall be rescheduled to if\n        reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for\n        example ``2012-11-15T16:19:00.094Z``.",
      "attributes": {
        "instance": {
          "type": "str",
          "description": "Required. Memcache instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region."
        },
        "reschedule_type": {
          "type": "google.cloud.memcache_v1.types.RescheduleMaintenanceRequest.RescheduleType",
          "description": "Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well."
        },
        "schedule_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example ``2012-11-15T16:19:00.094Z``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListInstancesRequest",
      "docstring": "Request for\n[ListInstances][google.cloud.memcache.v1.CloudMemcache.ListInstances].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the instance location using\n        the form: ``projects/{project_id}/locations/{location_id}``\n        where ``location_id`` refers to a GCP region\n    page_size (int):\n        The maximum number of items to return.\n\n        If not specified, a default value of 1000 will be used by\n        the service. Regardless of the ``page_size`` value, the\n        response may include a partial list and a caller should only\n        rely on response's\n        [``next_page_token``][google.cloud.memcache.v1.ListInstancesResponse.next_page_token]\n        to determine if there are more instances left to be queried.\n    page_token (str):\n        The ``next_page_token`` value returned from a previous List\n        request, if any.\n    filter (str):\n        List filter. For example, exclude all Memcached instances\n        with name as my-instance by specifying\n        ``\"name !=",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The resource name of the instance location using the form: ``projects/{project_id}/locations/{location_id}`` where ``location_id`` refers to a GCP region"
        },
        "page_size": {
          "type": "int",
          "description": "The maximum number of items to return.  If not specified, a default value of 1000 will be used by the service. Regardless of the ``page_size`` value, the response may include a partial list and a caller should only rely on response's [``next_page_token``][google.cloud.memcache.v1.ListInstancesResponse.next_page_token] to determine if there are more instances left to be queried."
        },
        "page_token": {
          "type": "str",
          "description": "The ``next_page_token`` value returned from a previous List request, if any."
        },
        "filter": {
          "type": "str",
          "description": "List filter. For example, exclude all Memcached instances with name as my-instance by specifying ``\"name != my-instance\"``."
        },
        "order_by": {
          "type": "str",
          "description": "Sort results. Supported values are \"name\", \"name desc\" or \"\" (unsorted)."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListInstancesResponse",
      "docstring": "Response for\n[ListInstances][google.cloud.memcache.v1.CloudMemcache.ListInstances].\n\nAttributes:\n    instances (MutableSequence[google.cloud.memcache_v1.types.Instance]):\n        A list of Memcached instances in the project in the\n        specified location, or across all locations.\n\n        If the ``location_id`` in the parent field of the request is\n        \"-\", all regions available to the project are queried, and\n        the results aggregated.\n    next_page_token (str):\n        Token to retrieve the next page of results,\n        or empty if there are no more results in the\n        list.\n    unreachable (MutableSequence[str]):\n        Locations that could not be reached.",
      "attributes": {
        "instances": {
          "type": "MutableSequence[google.cloud.memcache_v1.types.Instance]",
          "description": "A list of Memcached instances in the project in the specified location, or across all locations.  If the ``location_id`` in the parent field of the request is \"-\", all regions available to the project are queried, and the results aggregated."
        },
        "next_page_token": {
          "type": "str",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Locations that could not be reached."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetInstanceRequest",
      "docstring": "Request for\n[GetInstance][google.cloud.memcache.v1.CloudMemcache.GetInstance].\n\nAttributes:\n    name (str):\n        Required. Memcached instance resource name in the format:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Memcached instance resource name in the format: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateInstanceRequest",
      "docstring": "Request for\n[CreateInstance][google.cloud.memcache.v1.CloudMemcache.CreateInstance].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the instance location using\n        the form: ``projects/{project_id}/locations/{location_id}``\n        where ``location_id`` refers to a GCP region\n    instance_id (str):\n        Required. The logical name of the Memcached instance in the\n        user project with the following restrictions:\n\n        -  Must contain only lowercase letters, numbers, and\n           hyphens.\n        -  Must start with a letter.\n        -  Must be between 1-40 characters.\n        -  Must end with a number or a letter.\n        -  Must be unique within the user project / location.\n\n        If any of the above are not met, the API raises an invalid\n        argument error.\n    instance (google.cloud.memcache_v1.types.Instance):\n        Required. A Memcached Instance",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The resource name of the instance location using the form: ``projects/{project_id}/locations/{location_id}`` where ``location_id`` refers to a GCP region"
        },
        "instance_id": {
          "type": "str",
          "description": "Required. The logical name of the Memcached instance in the user project with the following restrictions:  -  Must contain only lowercase letters, numbers, and hyphens. -  Must start with a letter. -  Must be between 1-40 characters. -  Must end with a number or a letter. -  Must be unique within the user project / location.  If any of the above are not met, the API raises an invalid argument error."
        },
        "instance": {
          "type": "google.cloud.memcache_v1.types.Instance",
          "description": "Required. A Memcached Instance"
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateInstanceRequest",
      "docstring": "Request for\n[UpdateInstance][google.cloud.memcache.v1.CloudMemcache.UpdateInstance].\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Mask of fields to update.\n\n        -  ``displayName``\n    instance (google.cloud.memcache_v1.types.Instance):\n        Required. A Memcached Instance. Only fields specified in\n        update_mask are updated.",
      "attributes": {
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "Required. Mask of fields to update.  -  ``displayName``"
        },
        "instance": {
          "type": "google.cloud.memcache_v1.types.Instance",
          "description": "Required. A Memcached Instance. Only fields specified in update_mask are updated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteInstanceRequest",
      "docstring": "Request for\n[DeleteInstance][google.cloud.memcache.v1.CloudMemcache.DeleteInstance].\n\nAttributes:\n    name (str):\n        Required. Memcached instance resource name in the format:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Memcached instance resource name in the format: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ApplyParametersRequest",
      "docstring": "Request for\n[ApplyParameters][google.cloud.memcache.v1.CloudMemcache.ApplyParameters].\n\nAttributes:\n    name (str):\n        Required. Resource name of the Memcached\n        instance for which parameter group updates\n        should be applied.\n    node_ids (MutableSequence[str]):\n        Nodes to which the instance-level parameter\n        group is applied.\n    apply_all (bool):\n        Whether to apply instance-level parameter group to all\n        nodes. If set to true, users are restricted from specifying\n        individual nodes, and ``ApplyParameters`` updates all nodes\n        within the instance.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Resource name of the Memcached instance for which parameter group updates should be applied."
        },
        "node_ids": {
          "type": "MutableSequence[str]",
          "description": "Nodes to which the instance-level parameter group is applied."
        },
        "apply_all": {
          "type": "bool",
          "description": "Whether to apply instance-level parameter group to all nodes. If set to true, users are restricted from specifying individual nodes, and ``ApplyParameters`` updates all nodes within the instance."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateParametersRequest",
      "docstring": "Request for\n[UpdateParameters][google.cloud.memcache.v1.CloudMemcache.UpdateParameters].\n\nAttributes:\n    name (str):\n        Required. Resource name of the Memcached\n        instance for which the parameters should be\n        updated.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Mask of fields to update.\n    parameters (google.cloud.memcache_v1.types.MemcacheParameters):\n        The parameters to apply to the instance.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Resource name of the Memcached instance for which the parameters should be updated."
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "Required. Mask of fields to update."
        },
        "parameters": {
          "type": "google.cloud.memcache_v1.types.MemcacheParameters",
          "description": "The parameters to apply to the instance."
        }
      }
    },
    {
      "type": "request_class",
      "name": "MemcacheParameters",
      "docstring": "Attributes:\n    id (str):\n        Output only. The unique ID associated with\n        this set of parameters. Users can use this id to\n        determine if the parameters associated with the\n        instance differ from the parameters associated\n        with the nodes. A discrepancy between parameter\n        ids can inform users that they may need to take\n        action to apply parameters on nodes.\n    params (MutableMapping[str, str]):\n        User defined set of parameters to use in the\n        memcached process.",
      "attributes": {
        "id": {
          "type": "str",
          "description": "Output only. The unique ID associated with this set of parameters. Users can use this id to determine if the parameters associated with the instance differ from the parameters associated with the nodes. A discrepancy between parameter ids can inform users that they may need to take action to apply parameters on nodes."
        },
        "params": {
          "type": "MutableMapping[str, str]",
          "description": "User defined set of parameters to use in the memcached process."
        }
      }
    },
    {
      "type": "request_class",
      "name": "OperationMetadata",
      "docstring": "Represents the metadata of a long-running operation.\n\nAttributes:\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Time when the operation was\n        created.\n    end_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Time when the operation finished\n        running.\n    target (str):\n        Output only. Server-defined resource path for\n        the target of the operation.\n    verb (str):\n        Output only. Name of the verb executed by the\n        operation.\n    status_detail (str):\n        Output only. Human-readable status of the\n        operation, if any.\n    cancel_requested (bool):\n        Output only. Identifies whether the user has requested\n        cancellation of the operation. Operations that have\n        successfully been cancelled have [Operation.error][] value\n        with a [google.rpc.Status.code][google.rpc.Status.code] of\n        1, corresponding to ``Code.CANCELLED``.\n    api_version (str):\n        Output only. API version used to start th",
      "attributes": {
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Time when the operation was created."
        },
        "end_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Time when the operation finished running."
        },
        "target": {
          "type": "str",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "verb": {
          "type": "str",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "status_detail": {
          "type": "str",
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "cancel_requested": {
          "type": "bool",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to ``Code.CANCELLED``."
        },
        "api_version": {
          "type": "str",
          "description": "Output only. API version used to start the operation."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LocationMetadata",
      "docstring": "Metadata for the given\n[google.cloud.location.Location][google.cloud.location.Location].\n\nAttributes:\n    available_zones (MutableMapping[str, google.cloud.memcache_v1.types.ZoneMetadata]):\n        Output only. The set of available zones in the location. The\n        map is keyed by the lowercase ID of each zone, as defined by\n        GCE. These keys can be specified in the ``zones`` field when\n        creating a Memcached instance.",
      "attributes": {
        "available_zones": {
          "type": "MutableMapping[str, google.cloud.memcache_v1.types.ZoneMetadata]",
          "description": "Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by GCE. These keys can be specified in the ``zones`` field when creating a Memcached instance."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ZoneMetadata",
      "docstring": "",
      "attributes": {}
    },
    {
      "type": "request_class",
      "name": "NodeConfig",
      "docstring": "Configuration for a Memcached Node.\n\nAttributes:\n    cpu_count (int):\n        Required. Number of cpus per Memcached node.\n    memory_size_mb (int):\n        Required. Memory size in MiB for each\n        Memcached node.",
      "attributes": {
        "cpu_count": {
          "type": "int",
          "description": "Required. Number of cpus per Memcached node."
        },
        "memory_size_mb": {
          "type": "int",
          "description": "Required. Memory size in MiB for each Memcached node."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Node",
      "docstring": "Attributes:\n    node_id (str):\n        Output only. Identifier of the Memcached\n        node. The node id does not include project or\n        location like the Memcached instance name.\n    zone (str):\n        Output only. Location (GCP Zone) for the\n        Memcached node.\n    state (google.cloud.memcache_v1.types.Instance.Node.State):\n        Output only. Current state of the Memcached\n        node.\n    host (str):\n        Output only. Hostname or IP address of the\n        Memcached node used by the clients to connect to\n        the Memcached server on this node.\n    port (int):\n        Output only. The port number of the Memcached\n        server on this node.\n    parameters (google.cloud.memcache_v1.types.MemcacheParameters):\n        User defined parameters currently applied to\n        the node.",
      "attributes": {
        "node_id": {
          "type": "str",
          "description": "Output only. Identifier of the Memcached node. The node id does not include project or location like the Memcached instance name."
        },
        "zone": {
          "type": "str",
          "description": "Output only. Location (GCP Zone) for the Memcached node."
        },
        "state": {
          "type": "google.cloud.memcache_v1.types.Instance.Node.State",
          "description": "Output only. Current state of the Memcached node."
        },
        "host": {
          "type": "str",
          "description": "Output only. Hostname or IP address of the Memcached node used by the clients to connect to the Memcached server on this node."
        },
        "port": {
          "type": "int",
          "description": "Output only. The port number of the Memcached server on this node."
        },
        "parameters": {
          "type": "google.cloud.memcache_v1.types.MemcacheParameters",
          "description": "User defined parameters currently applied to the node."
        }
      }
    },
    {
      "type": "request_class",
      "name": "InstanceMessage",
      "docstring": "Attributes:\n    code (google.cloud.memcache_v1.types.Instance.InstanceMessage.Code):\n        A code that correspond to one type of\n        user-facing message.\n    message (str):\n        Message on memcached instance which will be\n        exposed to users.",
      "attributes": {
        "code": {
          "type": "google.cloud.memcache_v1.types.Instance.InstanceMessage.Code",
          "description": "A code that correspond to one type of user-facing message."
        },
        "message": {
          "type": "str",
          "description": "Message on memcached instance which will be exposed to users."
        }
      }
    }
  ]
}