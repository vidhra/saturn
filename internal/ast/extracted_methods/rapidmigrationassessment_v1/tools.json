{
  "RapidMigrationAssessment": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_collector",
          "description": "Create a Collector to manage the on-prem appliance\nwhich collects information about Customer assets.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import rapidmigrationassessment_v1\n\n    async def sample_create_collector():\n        # Create a client\n        client = rapidmigrationassessment_v1.RapidMigrationAssessmentAsyncClient()\n\n        # Initialize request argument(s)\n        request = rapidmigrationassessment_v1.CreateCollectorRequest(\n            parent=\"parent_value\",\n            collector_id=\"collector_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_collector(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the parent (project+location).  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "collector": {
                "type": "google.cloud.rapidmigrationassessment_v1.types.Collector",
                "description": "Required. The resource being created. This corresponds to the ``collector`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "collector_id": {
                "type": "str",
                "description": "Required. Id of the requesting object.  This corresponds to the ``collector_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.rapidmigrationassessment_v1.types.Collector` Message describing Collector object."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "collector",
              "collector_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_annotation",
          "description": "Creates an Annotation\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import rapidmigrationassessment_v1\n\n    async def sample_create_annotation():\n        # Create a client\n        client = rapidmigrationassessment_v1.RapidMigrationAssessmentAsyncClient()\n\n        # Initialize request argument(s)\n        request = rapidmigrationassessment_v1.CreateAnnotationRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_annotation(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the parent (project+location).  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "annotation": {
                "type": "google.cloud.rapidmigrationassessment_v1.types.Annotation",
                "description": "Required. The resource being created. This corresponds to the ``annotation`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.rapidmigrationassessment_v1.types.Annotation` Message describing an Annotation"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "annotation",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_annotation",
          "description": "Gets details of a single Annotation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import rapidmigrationassessment_v1\n\n    async def sample_get_annotation():\n        # Create a client\n        client = rapidmigrationassessment_v1.RapidMigrationAssessmentAsyncClient()\n\n        # Initialize request argument(s)\n        request = rapidmigrationassessment_v1.GetAnnotationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_annotation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.rapidmigrationassessment_v1.types.Annotation: Message describing an Annotation"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_collectors",
          "description": "Lists Collectors in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import rapidmigrationassessment_v1\n\n    async def sample_list_collectors():\n        # Create a client\n        client = rapidmigrationassessment_v1.RapidMigrationAssessmentAsyncClient()\n\n        # Initialize request argument(s)\n        request = rapidmigrationassessment_v1.ListCollectorsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_collectors(request=request)\n\n        # Handle the response\n        async for response in page_result:\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListCollectorsRequest.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.rapidmigrationassessment_v1.services.rapid_migration_assessment.pagers.ListCollectorsAsyncPager: Message for response to listing Collectors. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_collector",
          "description": "Gets details of a single Collector.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import rapidmigrationassessment_v1\n\n    async def sample_get_collector():\n        # Create a client\n        client = rapidmigrationassessment_v1.RapidMigrationAssessmentAsyncClient()\n\n        # Initialize request argument(s)\n        request = rapidmigrationassessment_v1.GetCollectorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_collector(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.rapidmigrationassessment_v1.types.Collector: Message describing Collector object."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_collector",
          "description": "Updates the parameters of a single Collector.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import rapidmigrationassessment_v1\n\n    async def sample_update_collector():\n        # Create a client\n        client = rapidmigrationassessment_v1.RapidMigrationAssessmentAsyncClient()\n\n        # Initialize request argument(s)\n        request = rapidmigrationassessment_v1.UpdateCollectorRequest(\n        )\n\n        # Make the request\n        operation = client.update_collector(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "collector": {
                "type": "google.cloud.rapidmigrationassessment_v1.types.Collector",
                "description": "Required. The resource being updated. This corresponds to the ``collector`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the Collector resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.rapidmigrationassessment_v1.types.Collector` Message describing Collector object."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "collector",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_collector",
          "description": "Deletes a single Collector - changes state of\ncollector to \"Deleting\". Background jobs does final\ndeletion thorugh producer api.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import rapidmigrationassessment_v1\n\n    async def sample_delete_collector():\n        # Create a client\n        client = rapidmigrationassessment_v1.RapidMigrationAssessmentAsyncClient()\n\n        # Initialize request argument(s)\n        request = rapidmigrationassessment_v1.DeleteCollectorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_collector(request=request)\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.rapidmigrationassessment_v1.types.Collector` Message describing Collector object."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "resume_collector",
          "description": "Resumes the given collector.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import rapidmigrationassessment_v1\n\n    async def sample_resume_collector():\n        # Create a client\n        client = rapidmigrationassessment_v1.RapidMigrationAssessmentAsyncClient()\n\n        # Initialize request argument(s)\n        request = rapidmigrationassessment_v1.ResumeCollectorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.resume_collector(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.rapidmigrationassessment_v1.types.Collector` Message describing Collector object."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "register_collector",
          "description": "Registers the given collector.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import rapidmigrationassessment_v1\n\n    async def sample_register_collector():\n        # Create a client\n        client = rapidmigrationassessment_v1.RapidMigrationAssessmentAsyncClient()\n\n        # Initialize request argument(s)\n        request = rapidmigrationassessment_v1.RegisterCollectorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.register_collector(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).resul",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.rapidmigrationassessment_v1.types.Collector` Message describing Collector object."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "pause_collector",
          "description": "Pauses the given collector.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import rapidmigrationassessment_v1\n\n    async def sample_pause_collector():\n        # Create a client\n        client = rapidmigrationassessment_v1.RapidMigrationAssessmentAsyncClient()\n\n        # Initialize request argument(s)\n        request = rapidmigrationassessment_v1.PauseCollectorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.pause_collector(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.rapidmigrationassessment_v1.types.Collector` Message describing Collector object."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}