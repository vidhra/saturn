{
  "BatchService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_job",
          "description": "Create a Job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import batch_v1\n\n    async def sample_create_job():\n        # Create a client\n        client = batch_v1.BatchServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = batch_v1.CreateJobRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.batch_v1.types.CreateJobRequest, dict]]):\n        The request object. CreateJob Request.\n    par",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name where the Job will be created. Pattern: \"projects/{project}/locations/{location}\"  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "job": {
                "type": "google.cloud.batch_v1.types.Job",
                "description": "Required. The Job to create. This corresponds to the ``job`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "job_id": {
                "type": "str",
                "description": "ID used to uniquely identify the Job within its parent scope. This field should contain at most 63 characters and must start with lowercase characters. Only lowercase characters, numbers and '-' are accepted. The '-' character cannot be the first or the last one. A system generated ID will be used if the field is not set.  The job.name field in the request will be ignored and the created resource name of the Job will be \"{parent}/jobs/{job_id}\".  This corresponds to the ``job_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.batch_v1.types.Job: The Cloud Batch Job description."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "job",
              "job_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "batch.CreateJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_job",
          "description": "Get a Job specified by its resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import batch_v1\n\n    async def sample_get_job():\n        # Create a client\n        client = batch_v1.BatchServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = batch_v1.GetJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.batch_v1.types.GetJobRequest, dict]]):\n        The request object. GetJob Request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Job name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.batch_v1.types.Job: The Cloud Batch Job description."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "batch.GetJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_job",
          "description": "Delete a Job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import batch_v1\n\n    async def sample_delete_job():\n        # Create a client\n        client = batch_v1.BatchServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = batch_v1.DeleteJobRequest(\n        )\n\n        # Make the request\n        operation = client.delete_job(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.batch_v1.types.DeleteJobRequest, d",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Job name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "batch.DeleteJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_jobs",
          "description": "List all Jobs for a project within a region.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import batch_v1\n\n    async def sample_list_jobs():\n        # Create a client\n        client = batch_v1.BatchServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = batch_v1.ListJobsRequest(\n        )\n\n        # Make the request\n        page_result = client.list_jobs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.batch_v1.types.ListJobsRequest, dict]]):\n        The reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Parent path. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.batch_v1.services.batch_service.pagers.ListJobsAsyncPager: ListJob Response.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "batch.ListJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_task",
          "description": "Return a single Task.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import batch_v1\n\n    async def sample_get_task():\n        # Create a client\n        client = batch_v1.BatchServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = batch_v1.GetTaskRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_task(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.batch_v1.types.GetTaskRequest, dict]]):\n        The request object. Request for a single Task by n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Task name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.batch_v1.types.Task: A Cloud Batch task."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "batch.GetTaskRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_tasks",
          "description": "List Tasks associated with a job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import batch_v1\n\n    async def sample_list_tasks():\n        # Create a client\n        client = batch_v1.BatchServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = batch_v1.ListTasksRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_tasks(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.batch_v1.types.ListTasksRequest,",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of a TaskGroup from which Tasks are being requested. Pattern: \"projects/{project}/locations/{location}/jobs/{job}/taskGroups/{task_group}\"  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.batch_v1.services.batch_service.pagers.ListTasksAsyncPager: ListTasks Response.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "batch.ListTasksRequest"
          ]
        }
      }
    ]
  }
}