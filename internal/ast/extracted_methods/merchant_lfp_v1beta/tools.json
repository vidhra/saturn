{
  "LfpInventoryService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "insert_lfp_inventory",
          "description": "Inserts a ``LfpInventory`` resource for the given target\nmerchant account. If the resource already exists, it will be\nreplaced. The inventory automatically expires after 30 days.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_lfp_v1beta\n\n    async def sample_insert_lfp_inventory():\n        # Create a client\n        client = merchant_lfp_v1beta.LfpInventoryServiceAsyncClient()\n\n        # Initialize request argument(s)\n        lfp_inventory = merchant_lfp_v1beta.LfpInventory()\n        lfp_inventory.target_account = 1491\n        lfp_inventory.store_code = \"store_code_value\"\n        lfp_i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lfpinventory.InsertLfpInventoryRequest"
          ]
        }
      }
    ]
  },
  "LfpSaleService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "insert_lfp_sale",
          "description": "Inserts a ``LfpSale`` for the given merchant.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_lfp_v1beta\n\n    async def sample_insert_lfp_sale():\n        # Create a client\n        client = merchant_lfp_v1beta.LfpSaleServiceAsyncClient()\n\n        # Initialize request argument(s)\n        lfp_sale = merchant_lfp_v1beta.LfpSale()\n        lfp_sale.target_account = 1491\n        lfp_sale.store_code = \"store_code_value\"\n        lfp_sale.offer_id = \"offer_id_value\"\n        lfp_sale.region_code = \"region_code_value\"\n        lfp_sale.content_language = \"content_language_value\"\n        lfp_sale.gt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lfpsale.InsertLfpSaleRequest"
          ]
        }
      }
    ]
  },
  "LfpStoreService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_lfp_store",
          "description": "Retrieves information about a store.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_lfp_v1beta\n\n    async def sample_get_lfp_store():\n        # Create a client\n        client = merchant_lfp_v1beta.LfpStoreServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_lfp_v1beta.GetLfpStoreRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_lfp_store(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shopping.merchant_lfp_v1beta.types.G",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the store to retrieve. Format: ``accounts/{account}/lfpStores/{target_merchant}~{store_code}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_lfp_v1beta.types.LfpStore: A store for the merchant. This will be used to match to a store under the Google Business Profile of the target merchant. If a matching store can't be found, the inventories or sales submitted with the store code will not be used."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lfpstore.GetLfpStoreRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "insert_lfp_store",
          "description": "Inserts a store for the target merchant. If the store\nwith the same store code already exists, it will be\nreplaced.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_lfp_v1beta\n\n    async def sample_insert_lfp_store():\n        # Create a client\n        client = merchant_lfp_v1beta.LfpStoreServiceAsyncClient()\n\n        # Initialize request argument(s)\n        lfp_store = merchant_lfp_v1beta.LfpStore()\n        lfp_store.target_account = 1491\n        lfp_store.store_code = \"store_code_value\"\n        lfp_store.store_address = \"store_address_value\"\n\n        request = merchant_lfp_v1beta.Inser",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The LFP provider account Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "lfp_store": {
                "type": "google.shopping.merchant_lfp_v1beta.types.LfpStore",
                "description": "Required. The store to insert. This corresponds to the ``lfp_store`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_lfp_v1beta.types.LfpStore: A store for the merchant. This will be used to match to a store under the Google Business Profile of the target merchant. If a matching store can't be found, the inventories or sales submitted with the store code will not be used."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "lfp_store",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lfpstore.InsertLfpStoreRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_lfp_store",
          "description": "Deletes a store for a target merchant.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_lfp_v1beta\n\n    async def sample_delete_lfp_store():\n        # Create a client\n        client = merchant_lfp_v1beta.LfpStoreServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_lfp_v1beta.DeleteLfpStoreRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_lfp_store(request=request)\n\nArgs:\n    request (Optional[Union[google.shopping.merchant_lfp_v1beta.types.DeleteLfpStoreRequest, dict]]):\n        The request obje",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the store to delete for the target merchant account. Format: ``accounts/{account}/lfpStores/{target_merchant}~{store_code}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lfpstore.DeleteLfpStoreRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_lfp_stores",
          "description": "Lists the stores of the target merchant, specified by the filter\nin ``ListLfpStoresRequest``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_lfp_v1beta\n\n    async def sample_list_lfp_stores():\n        # Create a client\n        client = merchant_lfp_v1beta.LfpStoreServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_lfp_v1beta.ListLfpStoresRequest(\n            parent=\"parent_value\",\n            target_account=1491,\n        )\n\n        # Make the request\n        page_result = client.list_lfp_stores(request=request)\n\n        # Handle the response\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The LFP partner. Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_lfp_v1beta.services.lfp_store_service.pagers.ListLfpStoresAsyncPager: Response message for the ListLfpStores method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lfpstore.ListLfpStoresRequest"
          ]
        }
      }
    ]
  }
}