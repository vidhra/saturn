{
  "IDS": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_endpoints",
          "description": "Lists Endpoints in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import ids_v1\n\n    async def sample_list_endpoints():\n        # Create a client\n        client = ids_v1.IDSAsyncClient()\n\n        # Initialize request argument(s)\n        request = ids_v1.ListEndpointsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_endpoints(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.ids_v1.types.ListEnd",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of endpoints.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.ids_v1.services.ids.pagers.ListEndpointsAsyncPager: Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "ids.ListEndpointsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_endpoint",
          "description": "Gets details of a single Endpoint.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import ids_v1\n\n    async def sample_get_endpoint():\n        # Create a client\n        client = ids_v1.IDSAsyncClient()\n\n        # Initialize request argument(s)\n        request = ids_v1.GetEndpointRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_endpoint(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.ids_v1.types.GetEndpointRequest, dict]]):\n        The request object.\n    name (:class:`",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the endpoint to retrieve. Format: ``projects/{project}/locations/{location}/endpoints/{endpoint}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.ids_v1.types.Endpoint: Endpoint describes a single IDS endpoint. It defines a forwarding rule to which packets can be sent for IDS inspection."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "ids.GetEndpointRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_endpoint",
          "description": "Creates a new Endpoint in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import ids_v1\n\n    async def sample_create_endpoint():\n        # Create a client\n        client = ids_v1.IDSAsyncClient()\n\n        # Initialize request argument(s)\n        endpoint = ids_v1.Endpoint()\n        endpoint.network = \"network_value\"\n        endpoint.severity = \"CRITICAL\"\n\n        request = ids_v1.CreateEndpointRequest(\n            parent=\"parent_value\",\n            endpoint_id=\"endpoint_id_value\",\n            endpoint=endpoint,\n        )\n\n        # Make the request\n        operation = client",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The endpoint's parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "endpoint": {
                "type": "google.cloud.ids_v1.types.Endpoint",
                "description": "Required. The endpoint to create. This corresponds to the ``endpoint`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "endpoint_id": {
                "type": "str",
                "description": "Required. The endpoint identifier. This will be part of the endpoint's resource name. This value must start with a lowercase letter followed by up to 62 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. Values that do not match this pattern will trigger an INVALID_ARGUMENT error.  This corresponds to the ``endpoint_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.ids_v1.types.Endpoint` Endpoint describes a single IDS endpoint. It defines a forwarding rule to which packets can be sent for IDS inspection."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "endpoint",
              "endpoint_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "ids.CreateEndpointRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_endpoint",
          "description": "Deletes a single Endpoint.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import ids_v1\n\n    async def sample_delete_endpoint():\n        # Create a client\n        client = ids_v1.IDSAsyncClient()\n\n        # Initialize request argument(s)\n        request = ids_v1.DeleteEndpointRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_endpoint(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the endpoint to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "ids.DeleteEndpointRequest"
          ]
        }
      }
    ]
  }
}