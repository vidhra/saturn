{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-ids\\google\\cloud\\ids_v1\\types\\ids.py": [
    {
      "type": "function",
      "name": "ListEndpointsRequest",
      "description": "Attributes:\n    parent (str):\n        Required. The parent, which owns this\n        collection of endpoints.\n    page_size (int):\n        Optional. The maximum number of endpoints to\n        return. The service may return fewer than this\n        value.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListEndpoints`` call. Provide this to retrieve the\n        subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListEndpoints`` must match the call that provided the page\n        token.\n    filter (str):\n        Optional. The filter expression, following\n        the syntax outlined in\n        https://google.aip.dev/160.\n    order_by (str):\n        Optional. One or more fields to compare and\n        use to sort the output. See\n        https://google.aip.dev/132#ordering.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of endpoints.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of endpoints to return. The service may return fewer than this value.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListEndpoints`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListEndpoints`` must match the call that provided the page token.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. The filter expression, following the syntax outlined in https://google.aip.dev/160.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetEndpointRequest",
      "description": "Attributes:\n    name (str):\n        Required. The name of the endpoint to retrieve. Format:\n        ``projects/{project}/locations/{location}/endpoints/{endpoint}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the endpoint to retrieve. Format: ``projects/{project}/locations/{location}/endpoints/{endpoint}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateEndpointRequest",
      "description": "Attributes:\n    parent (str):\n        Required. The endpoint's parent.\n    endpoint_id (str):\n        Required. The endpoint identifier. This will be part of the\n        endpoint's resource name. This value must start with a\n        lowercase letter followed by up to 62 lowercase letters,\n        numbers, or hyphens, and cannot end with a hyphen. Values\n        that do not match this pattern will trigger an\n        INVALID_ARGUMENT error.\n    endpoint (google.cloud.ids_v1.types.Endpoint):\n        Required. The endpoint to create.\n    request_id (str):\n        An optional request ID to identify requests.\n        Specify a unique request ID so that if you must\n        retry your request, the server will know to\n        ignore the request if it has already been\n        completed. The server will guarantee that for at\n        least 60 minutes since the first request.\n\n        For example, consider a situation where you make\n        an initial request and t he request times out.\n        If you make the request aga",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The endpoint's parent.",
            "type": "string"
          },
          "endpoint_id": {
            "description": "Required. The endpoint identifier. This will be part of the endpoint's resource name. This value must start with a lowercase letter followed by up to 62 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. Values that do not match this pattern will trigger an INVALID_ARGUMENT error.",
            "type": "string"
          },
          "endpoint": {
            "description": "Required. The endpoint to create.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Immutable. The resource name for the endpoint in the format ``projects/*/locations/*/namespaces/*/services/*/endpoints/*``.",
                "type": "string"
              },
              "address": {
                "description": "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like:  -  ``8.8.8`` -  ``8.8.8.8:53`` -  ``test:bad:address`` -  ``[::1]`` -  ``[::1]:8080``  Limited to 45 characters.",
                "type": "string"
              },
              "port": {
                "description": "Optional. Service Directory rejects values outside of ``[0, 65535]``.",
                "type": "integer"
              },
              "metadata": {
                "description": "Optional. Metadata for the endpoint. This data can be consumed by service clients.  Restrictions:  -  The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected -  Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected  Note: This field is equivalent to the ``annotations`` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "network": {
                "description": "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format ``projects/<project number>/locations/global/networks/*``.  The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. The timestamp when the endpoint was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The timestamp when the endpoint was last updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "uid": {
                "description": "Output only. A globally unique identifier (in UUID4 format) for this endpoint.",
                "type": "string"
              }
            }
          },
          "request_id": {
            "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "endpoint_id",
          "endpoint"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteEndpointRequest",
      "description": "Attributes:\n    name (str):\n        Required. The name of the endpoint to delete.\n    request_id (str):\n        An optional request ID to identify requests.\n        Specify a unique request ID so that if you must\n        retry your request, the server will know to\n        ignore the request if it has already been\n        completed. The server will guarantee that for at\n        least 60 minutes after the first request.\n\n        For example, consider a situation where you make\n        an initial request and t he request times out.\n        If you make the request again with the same\n        request ID, the server can check if original\n        operation with the same request ID was received,\n        and if so, will ignore the second request. This\n        prevents clients from accidentally creating\n        duplicate commitments.\n\n        The request ID must be a valid UUID with the\n        exception that zero UUID is not supported\n        (00000000-0000-0000-0000-000000000000).",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the endpoint to delete.",
            "type": "string"
          },
          "request_id": {
            "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request.  For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}