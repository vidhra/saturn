{
  "EssentialContactsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_contact",
          "description": "Adds a new contact for a resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import essential_contacts_v1\n\n    async def sample_create_contact():\n        # Create a client\n        client = essential_contacts_v1.EssentialContactsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        contact = essential_contacts_v1.Contact()\n        contact.email = \"email_value\"\n        contact.notification_category_subscriptions = ['TECHNICAL_INCIDENTS']\n        contact.language_tag = \"language_tag_value\"\n\n        request = essential_contacts_v1.CreateContactRequest(\n            parent=\"parent_value\"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "contact": {
                "type": "google.cloud.essential_contacts_v1.types.Contact",
                "description": "Required. The contact to create. Must specify an email address and language tag.  This corresponds to the ``contact`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.essential_contacts_v1.types.Contact: A contact that will receive notifications from Google Cloud."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "contact",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.essential_contacts_v1.types.Contact"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_contact",
          "description": "Updates a contact.\nNote: A contact's email address cannot be changed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import essential_contacts_v1\n\n    async def sample_update_contact():\n        # Create a client\n        client = essential_contacts_v1.EssentialContactsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        contact = essential_contacts_v1.Contact()\n        contact.email = \"email_value\"\n        contact.notification_category_subscriptions = ['TECHNICAL_INCIDENTS']\n        contact.language_tag = \"language_tag_value\"\n\n        request = essential_contacts_v1.UpdateContactRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "contact": {
                "type": "google.cloud.essential_contacts_v1.types.Contact",
                "description": "Required. The contact resource to replace the existing saved contact. Note: the email address of the contact cannot be modified.  This corresponds to the ``contact`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. The update mask applied to the resource. For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.essential_contacts_v1.types.Contact: A contact that will receive notifications from Google Cloud."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "contact",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.essential_contacts_v1.types.Contact"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_contacts",
          "description": "Lists the contacts that have been set on a resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import essential_contacts_v1\n\n    async def sample_list_contacts():\n        # Create a client\n        client = essential_contacts_v1.EssentialContactsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = essential_contacts_v1.ListContactsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_contacts(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.essential_contacts_v1.services.essential_contacts_service.pagers.ListContactsAsyncPager: Response message for the ListContacts method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.essential_contacts_v1.services.essential_contacts_service.pagers.ListContactsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_contact",
          "description": "Gets a single contact.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import essential_contacts_v1\n\n    async def sample_get_contact():\n        # Create a client\n        client = essential_contacts_v1.EssentialContactsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = essential_contacts_v1.GetContactRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_contact(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.essential_contacts_v1.types.GetContac",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the contact to retrieve. Format: organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.essential_contacts_v1.types.Contact: A contact that will receive notifications from Google Cloud."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.essential_contacts_v1.types.Contact"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_contact",
          "description": "Deletes a contact.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import essential_contacts_v1\n\n    async def sample_delete_contact():\n        # Create a client\n        client = essential_contacts_v1.EssentialContactsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = essential_contacts_v1.DeleteContactRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_contact(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.essential_contacts_v1.types.DeleteContactRequest, dict]]):\n        The request object. Request mes",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the contact to delete. Format: organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "compute_contacts",
          "description": "Lists all contacts for the resource that are\nsubscribed to the specified notification categories,\nincluding contacts inherited from any parent resources.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import essential_contacts_v1\n\n    async def sample_compute_contacts():\n        # Create a client\n        client = essential_contacts_v1.EssentialContactsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = essential_contacts_v1.ComputeContactsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.compute_contacts(request=re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.essential_contacts_v1.services.essential_contacts_service.pagers.ComputeContactsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "send_test_message",
          "description": "Allows a contact admin to send a test message to\ncontact to verify that it has been configured correctly.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import essential_contacts_v1\n\n    async def sample_send_test_message():\n        # Create a client\n        client = essential_contacts_v1.EssentialContactsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = essential_contacts_v1.SendTestMessageRequest(\n            contacts=['contacts_value1', 'contacts_value2'],\n            resource=\"resource_value\",\n            notification_category=\"TECHNICAL_INCIDENTS\",\n        )\n\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      }
    ]
  }
}