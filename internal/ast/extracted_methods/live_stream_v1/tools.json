{
  "LivestreamService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_channel",
          "description": "Creates a channel with the provided unique ID in the\nspecified region.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_create_channel():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.CreateChannelRequest(\n            parent=\"parent_value\",\n            channel_id=\"channel_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_channel(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent location for the resource, in the form of: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "channel": {
                "type": "google.cloud.video.live_stream_v1.types.Channel",
                "description": "Required. The channel resource to be created.  This corresponds to the ``channel`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "channel_id": {
                "type": "str",
                "description": "Required. The ID of the channel resource to be created. This value must be 1-63 characters, begin and end with ``[a-z0-9]``, could contain dashes (-) in between.  This corresponds to the ``channel_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.video.live_stream_v1.types.Channel` Channel resource represents the processor that does a user-defined \"streaming\" operation, which includes getting an input stream through an input, transcoding it to multiple renditions, and publishing output live streams in certain formats (for example, HLS or DASH) to the specified location."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "channel",
              "channel_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateChannelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_channels",
          "description": "Returns a list of all channels in the specified\nregion.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_list_channels():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.ListChannelsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_channels(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent location for the resource, in the form of: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.services.livestream_service.pagers.ListChannelsAsyncPager: Response message for \"LivestreamService.ListChannels\". Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListChannelsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_channel",
          "description": "Returns the specified channel.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_get_channel():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.GetChannelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_channel(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.video.live_stream_v1.types.GetChannelRequest, dict]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the channel resource, in the form of: ``projects/{project}/locations/{location}/channels/{channelId}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.types.Channel: Channel resource represents the processor that does a user-defined \"streaming\" operation, which includes getting an input stream through an input, transcoding it to multiple renditions, and publishing output live streams in certain formats (for example, HLS or DASH) to the specified location."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetChannelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_channel",
          "description": "Deletes the specified channel.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_delete_channel():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.DeleteChannelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_channel(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the channel resource, in the form of: ``projects/{project}/locations/{location}/channels/{channelId}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteChannelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_channel",
          "description": "Updates the specified channel.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_update_channel():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.UpdateChannelRequest(\n        )\n\n        # Make the request\n        operation = client.update_channel(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Opti",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "channel": {
                "type": "google.cloud.video.live_stream_v1.types.Channel",
                "description": "Required. The channel resource to be updated.  This corresponds to the ``channel`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Field mask is used to specify the fields to be overwritten in the Channel resource by the update. You can only update the following fields:  -  ```inputAttachments`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#inputattachment>`__ -  ```inputConfig`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#inputconfig>`__ -  ```output`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#output>`__ -  ```elementaryStreams`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#elementarystream>`__ -  ```muxStreams`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#muxstream>`__ -  ```manifests`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#manifest>`__ -  ```spriteSheets`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#spritesheet>`__ -  ```logConfig`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#logconfig>`__ -  ```timecodeConfig`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#timecodeconfig>`__ -  ```encryptions`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#encryption>`__  The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask.  If the mask is not present, then each field from the list above is updated if the field appears in the request payload. To unset a field, add the field to the update mask and remove it from the request payload.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.video.live_stream_v1.types.Channel` Channel resource represents the processor that does a user-defined \"streaming\" operation, which includes getting an input stream through an input, transcoding it to multiple renditions, and publishing output live streams in certain formats (for example, HLS or DASH) to the specified location."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "channel",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateChannelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_channel",
          "description": "Starts the specified channel. Part of the video\npipeline will be created only when the StartChannel\nrequest is received by the server.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_start_channel():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.StartChannelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.start_channel(request=request)\n\n        print(\"Waiting for operation to complete",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the channel resource, in the form of: ``projects/{project}/locations/{location}/channels/{channelId}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.video.live_stream_v1.types.ChannelOperationResponse` Response message for Start/Stop Channel long-running operations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.StartChannelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "stop_channel",
          "description": "Stops the specified channel. Part of the video\npipeline will be released when the StopChannel request\nis received by the server.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_stop_channel():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.StopChannelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.stop_channel(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the channel resource, in the form of: ``projects/{project}/locations/{location}/channels/{channelId}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.video.live_stream_v1.types.ChannelOperationResponse` Response message for Start/Stop Channel long-running operations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.StopChannelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_input",
          "description": "Creates an input with the provided unique ID in the\nspecified region.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_create_input():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.CreateInputRequest(\n            parent=\"parent_value\",\n            input_id=\"input_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_input(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response =",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent location for the resource, in the form of: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input": {
                "type": "google.cloud.video.live_stream_v1.types.Input",
                "description": "Required. The input resource to be created.  This corresponds to the ``input`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input_id": {
                "type": "str",
                "description": "Required. The ID of the input resource to be created. This value must be 1-63 characters, begin and end with ``[a-z0-9]``, could contain dashes (-) in between.  This corresponds to the ``input_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.video.live_stream_v1.types.Input` Input resource represents the endpoint from which the channel ingests the input stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "input",
              "input_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateInputRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_inputs",
          "description": "Returns a list of all inputs in the specified region.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_list_inputs():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.ListInputsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_inputs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent location for the resource, in the form of: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.services.livestream_service.pagers.ListInputsAsyncPager: Response message for \"LivestreamService.ListInputs\". Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListInputsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_input",
          "description": "Returns the specified input.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_get_input():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.GetInputRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_input(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.video.live_stream_v1.types.GetInputRequest, dict]]):\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the input resource, in the form of: ``projects/{project}/locations/{location}/inputs/{inputId}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.types.Input: Input resource represents the endpoint from which the channel ingests the input stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetInputRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_input",
          "description": "Deletes the specified input.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_delete_input():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.DeleteInputRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_input(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the input resource, in the form of: ``projects/{project}/locations/{location}/inputs/{inputId}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteInputRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_input",
          "description": "Updates the specified input.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_update_input():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.UpdateInputRequest(\n        )\n\n        # Make the request\n        operation = client.update_input(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Uni",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "input": {
                "type": "google.cloud.video.live_stream_v1.types.Input",
                "description": "Required. The input resource to be updated.  This corresponds to the ``input`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Field mask is used to specify the fields to be overwritten in the Input resource by the update. You can only update the following fields:  -  ```preprocessingConfig`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.inputs#PreprocessingConfig>`__ -  ```securityRules`` <https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.inputs#SecurityRule>`__  The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask.  If the mask is not present, then each field from the list above is updated if the field appears in the request payload. To unset a field, add the field to the update mask and remove it from the request payload.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.video.live_stream_v1.types.Input` Input resource represents the endpoint from which the channel ingests the input stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "input",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateInputRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_event",
          "description": "Creates an event with the provided unique ID in the\nspecified channel.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_create_event():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.CreateEventRequest(\n            parent=\"parent_value\",\n            event_id=\"event_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_event(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent channel for the resource, in the form of: ``projects/{project}/locations/{location}/channels/{channelId}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "event": {
                "type": "google.cloud.video.live_stream_v1.types.Event",
                "description": "Required. The event resource to be created.  This corresponds to the ``event`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "event_id": {
                "type": "str",
                "description": "Required. The ID of the event resource to be created. This value must be 1-63 characters, begin and end with ``[a-z0-9]``, could contain dashes (-) in between.  This corresponds to the ``event_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.types.Event: Event is a sub-resource of a channel, which can be scheduled by the user to execute operations on a channel resource without having to stop the channel."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "event",
              "event_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_events",
          "description": "Returns a list of all events in the specified\nchannel.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_list_events():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.ListEventsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_events(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optiona",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent channel for the resource, in the form of: ``projects/{project}/locations/{location}/channels/{channelId}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.services.livestream_service.pagers.ListEventsAsyncPager: Response message for \"LivestreamService.ListEvents\". Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListEventsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_event",
          "description": "Returns the specified event.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_get_event():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.GetEventRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_event(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.video.live_stream_v1.types.GetEventRequest, dict]]):\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the event resource, in the form of: ``projects/{project}/locations/{location}/channels/{channelId}/events/{eventId}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.types.Event: Event is a sub-resource of a channel, which can be scheduled by the user to execute operations on a channel resource without having to stop the channel."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_event",
          "description": "Deletes the specified event.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_delete_event():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.DeleteEventRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_event(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.video.live_stream_v1.types.DeleteEventRequest, dict]]):\n        The request object. Request message for\n        \"Liv",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the event resource, in the form of: ``projects/{project}/locations/{location}/channels/{channelId}/events/{eventId}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_clips",
          "description": "Returns a list of all clips in the specified channel.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_list_clips():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.ListClipsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_clips(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Un",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListClipsRequest  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.services.livestream_service.pagers.ListClipsAsyncPager: Response message for \"LivestreamService.ListClips\". Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListClipsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_clip",
          "description": "Returns the specified clip.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_get_clip():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.GetClipRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_clip(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.video.live_stream_v1.types.GetClipRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource, in the following form: ``projects/{project}/locations/{location}/channels/{channel}/clips/{clip}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.types.Clip: Clip is a sub-resource under channel. Each clip represents a clipping operation that generates a VOD playlist from its channel given a set of timestamp ranges."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetClipRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_clip",
          "description": "Creates a clip with the provided clip ID in the\nspecified channel.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_create_clip():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        clip = live_stream_v1.Clip()\n        clip.clip_manifests.manifest_key = \"manifest_key_value\"\n\n        request = live_stream_v1.CreateClipRequest(\n            parent=\"parent_value\",\n            clip_id=\"clip_id_value\",\n            clip=clip,\n        )\n\n        # Make the request\n        opera",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource name, in the following form: ``projects/{project}/locations/{location}/channels/{channel}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "clip": {
                "type": "google.cloud.video.live_stream_v1.types.Clip",
                "description": "Required. The resource being created This corresponds to the ``clip`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "clip_id": {
                "type": "str",
                "description": "Required. Id of the requesting object in the following form:  1. 1 character minimum, 63 characters maximum 2. Only contains letters, digits, underscores, and hyphens  This corresponds to the ``clip_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.video.live_stream_v1.types.Clip` Clip is a sub-resource under channel. Each clip represents a clipping operation that generates a VOD playlist from its channel given a set of timestamp ranges."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "clip",
              "clip_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateClipRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_clip",
          "description": "Deletes the specified clip job resource. This method\nonly deletes the clip job and does not delete the VOD\nclip stored in the GCS.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_delete_clip():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.DeleteClipRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_clip(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the clip resource, in the form of: ``projects/{project}/locations/{location}/channels/{channelId}/clips/{clipId}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteClipRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_asset",
          "description": "Creates a Asset with the provided unique ID in the\nspecified region.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_create_asset():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.CreateAssetRequest(\n            parent=\"parent_value\",\n            asset_id=\"asset_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_asset(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent location for the resource, in the form of: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "asset": {
                "type": "google.cloud.video.live_stream_v1.types.Asset",
                "description": "Required. The asset resource to be created.  This corresponds to the ``asset`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "asset_id": {
                "type": "str",
                "description": "Required. The ID of the asset resource to be created. This value must be 1-63 characters, begin and end with ``[a-z0-9]``, could contain dashes (-) in between.  This corresponds to the ``asset_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.video.live_stream_v1.types.Asset` An asset represents a video or an image."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "asset",
              "asset_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateAssetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_asset",
          "description": "Deletes the specified asset if it is not used.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_delete_asset():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.DeleteAssetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_asset(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the asset resource, in the form of: ``projects/{project}/locations/{location}/assets/{assetId}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteAssetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_asset",
          "description": "Returns the specified asset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_get_asset():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.GetAssetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_asset(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.video.live_stream_v1.types.GetAssetRequest, dict]]):\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource, in the following form: ``projects/{project}/locations/{location}/assets/{asset}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.types.Asset: An asset represents a video or an image."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetAssetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_assets",
          "description": "Returns a list of all assets in the specified region.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_list_assets():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.ListAssetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_assets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent location for the resource, in the form of: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.services.livestream_service.pagers.ListAssetsAsyncPager: Response message for \"LivestreamService.ListAssets\". Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListAssetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_pool",
          "description": "Returns the specified pool.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_get_pool():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.GetPoolRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_pool(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.video.live_stream_v1.types.GetPoolRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the pool resource, in the form of: ``projects/{project}/locations/{location}/pools/{poolId}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.video.live_stream_v1.types.Pool: Pool resource defines the configuration of Live Stream pools for a specific location. Currently we support only one pool resource per project per location. After the creation of the first input, a default pool is created automatically at \"projects/{project}/locations/{location}/pools/default\"."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetPoolRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_pool",
          "description": "Updates the specified pool.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.video import live_stream_v1\n\n    async def sample_update_pool():\n        # Create a client\n        client = live_stream_v1.LivestreamServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = live_stream_v1.UpdatePoolRequest(\n        )\n\n        # Make the request\n        operation = client.update_pool(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[g",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "pool": {
                "type": "google.cloud.video.live_stream_v1.types.Pool",
                "description": "Required. The pool resource to be updated.  This corresponds to the ``pool`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Field mask is used to specify the fields to be overwritten in the Pool resource by the update. You can only update the following fields:  -  ``networkConfig``  The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.video.live_stream_v1.types.Pool` Pool resource defines the configuration of Live Stream pools for a specific location. Currently we support only one pool resource per project per location. After the creation of the first input, a default pool is created automatically at \"projects/{project}/locations/{location}/pools/default\"."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "pool",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdatePoolRequest"
          ]
        }
      }
    ]
  }
}