{
  "AnalyticsAdminService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_account",
          "description": "Lookup for a single Account.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetAccountRequest, dict]]):\n        The request object. Request message for GetAccount RPC.\n    name (:class:`str`):\n        Required. The name of the account to\n        lookup. Format: accounts/{account}\n        Example: \"accounts/100\"\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.Account:\n        A resource message representing a\n        Google Analytics account.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the account to lookup. Format: accounts/{account} Example: \"accounts/100\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.Account: A resource message representing a Google Analytics account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetAccountRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_accounts",
          "description": "Returns all accounts accessible by the caller.\n\nNote that these accounts might not currently have GA4\nproperties. Soft-deleted (ie: \"trashed\") accounts are\nexcluded by default. Returns an empty list if no\nrelevant accounts are found.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListAccountsRequest, dict]]):\n        The request object. Request message for ListAccounts RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListAccountsAsyncPager:\n        Request message for ListAccounts RPC.\n\n        Iterating over this object will yield\n        results and resolve additional pages\n        automatically.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListAccountsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_account",
          "description": "Marks target Account as soft-deleted (ie: \"trashed\")\nand returns it.\nThis API does not have a method to restore soft-deleted\naccounts. However, they can be restored using the Trash\nCan UI.\n\nIf the accounts are not restored before the expiration\ntime, the account and all child resources (eg:\nProperties, GoogleAdsLinks, Streams, AccessBindings)\nwill be permanently purged.\nhttps://support.google.com/analytics/answer/6154772\n\nReturns an error if the target is not found.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteAccountRequest, dict]]):\n        The request object. Request message for DeleteAccount\n        RPC.\n    name (:class:`str`):\n        Required. The name of the Account to\n        soft-delete. Format: accounts/{account}\n        Example: \"accounts/100\"\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Account to soft-delete. Format: accounts/{account} Example: \"accounts/100\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteAccountRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_account",
          "description": "Updates an account.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateAccountRequest, dict]]):\n        The request object. Request message for UpdateAccount\n        RPC.\n    account (:class:`google.analytics.admin_v1alpha.types.Account`):\n        Required. The account to update. The account's ``name``\n        field is used to identify the account.\n\n        This corresponds to the ``account`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (for example, \"field_to_update\").\n        Omitted fields will not be updated. To replace the\n        entire entity, use one path with the string \"*\" to match\n        all fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "account": {
                "type": "google.analytics.admin_v1alpha.types.Account",
                "description": "Required. The account to update. The account's ``name`` field is used to identify the account.  This corresponds to the ``account`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (for example, \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.Account: A resource message representing a Google Analytics account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "account",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateAccountRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "provision_account_ticket",
          "description": "Requests a ticket for creating an account.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ProvisionAccountTicketRequest, dict]]):\n        The request object. Request message for\n        ProvisionAccountTicket RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.ProvisionAccountTicketResponse:\n        Response message for\n        ProvisionAccountTicket RPC.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ProvisionAccountTicketRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_account_summaries",
          "description": "Returns summaries of all accounts accessible by the\ncaller.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListAccountSummariesRequest, dict]]):\n        The request object. Request message for\n        ListAccountSummaries RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListAccountSummariesAsyncPager:\n        Response message for\n        ListAccountSummaries RPC.\n        Iterating over this object will yield\n        results and resolve additional pages\n        automatically.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListAccountSummariesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_property",
          "description": "Lookup for a single \"GA4\" Property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetPropertyRequest, dict]]):\n        The request object. Request message for GetProperty RPC.\n    name (:class:`str`):\n        Required. The name of the property to lookup. Format:\n        properties/{property_id} Example: \"properties/1000\"\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.Property:\n        A resource message representing a\n        Google Analytics GA4 property.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the property to lookup. Format: properties/{property_id} Example: \"properties/1000\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.Property: A resource message representing a Google Analytics GA4 property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetPropertyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_properties",
          "description": "Returns child Properties under the specified parent\nAccount.\nOnly \"GA4\" properties will be returned.\nProperties will be excluded if the caller does not have\naccess. Soft-deleted (ie: \"trashed\") properties are\nexcluded by default. Returns an empty list if no\nrelevant properties are found.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListPropertiesRequest, dict]]):\n        The request object. Request message for ListProperties\n        RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListPropertiesAsyncPager:\n        Response message for ListProperties\n        RPC.\n        Iterating over this object will yield\n        results and resolve additional pages\n        automat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListPropertiesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_property",
          "description": "Creates an \"GA4\" property with the specified location\nand attributes.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreatePropertyRequest, dict]]):\n        The request object. Request message for CreateProperty\n        RPC.\n    property (:class:`google.analytics.admin_v1alpha.types.Property`):\n        Required. The property to create.\n        Note: the supplied property must specify\n        its parent.\n\n        This corresponds to the ``property`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.Property:\n        A resource message representing a\n        Google Analytics GA4 property.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "property": {
                "type": "google.analytics.admin_v1alpha.types.Property",
                "description": "Required. The property to create. Note: the supplied property must specify its parent.  This corresponds to the ``property`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.Property: A resource message representing a Google Analytics GA4 property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "property",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreatePropertyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_property",
          "description": "Marks target Property as soft-deleted (ie: \"trashed\")\nand returns it.\nThis API does not have a method to restore soft-deleted\nproperties. However, they can be restored using the\nTrash Can UI.\n\nIf the properties are not restored before the expiration\ntime, the Property and all child resources (eg:\nGoogleAdsLinks, Streams, AccessBindings) will be\npermanently purged.\nhttps://support.google.com/analytics/answer/6154772\n\nReturns an error if the target is not found, or is not a\nGA4 Property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeletePropertyRequest, dict]]):\n        The request object. Request message for DeleteProperty\n        RPC.\n    name (:class:`str`):\n        Required. The name of the Property to soft-delete.\n        Format: properties/{property_id} Example:\n        \"properties/1000\"\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Property to soft-delete. Format: properties/{property_id} Example: \"properties/1000\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.Property: A resource message representing a Google Analytics GA4 property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeletePropertyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_property",
          "description": "Updates a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdatePropertyRequest, dict]]):\n        The request object. Request message for UpdateProperty\n        RPC.\n    property (:class:`google.analytics.admin_v1alpha.types.Property`):\n        Required. The property to update. The property's\n        ``name`` field is used to identify the property to be\n        updated.\n\n        This corresponds to the ``property`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        s",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "property": {
                "type": "google.analytics.admin_v1alpha.types.Property",
                "description": "Required. The property to update. The property's ``name`` field is used to identify the property to be updated.  This corresponds to the ``property`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.Property: A resource message representing a Google Analytics GA4 property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "property",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdatePropertyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_firebase_link",
          "description": "Creates a FirebaseLink.\n\nProperties can have at most one FirebaseLink.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateFirebaseLinkRequest, dict]]):\n        The request object. Request message for\n        CreateFirebaseLink RPC\n    parent (:class:`str`):\n        Required. Format: properties/{property_id}\n\n        Example: ``properties/1234``\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    firebase_link (:class:`google.analytics.admin_v1alpha.types.FirebaseLink`):\n        Required. The Firebase link to\n        create.\n\n        This corresponds to the ``firebase_link`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): String",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: properties/{property_id}  Example: ``properties/1234``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "firebase_link": {
                "type": "google.analytics.admin_v1alpha.types.FirebaseLink",
                "description": "Required. The Firebase link to create.  This corresponds to the ``firebase_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.FirebaseLink: A link between a GA4 property and a Firebase project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "firebase_link",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateFirebaseLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_firebase_link",
          "description": "Deletes a FirebaseLink on a property\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteFirebaseLinkRequest, dict]]):\n        The request object. Request message for\n        DeleteFirebaseLink RPC\n    name (:class:`str`):\n        Required. Format:\n        properties/{property_id}/firebaseLinks/{firebase_link_id}\n\n        Example: ``properties/1234/firebaseLinks/5678``\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id}  Example: ``properties/1234/firebaseLinks/5678``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteFirebaseLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_firebase_links",
          "description": "Lists FirebaseLinks on a property.\nProperties can have at most one FirebaseLink.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListFirebaseLinksRequest, dict]]):\n        The request object. Request message for ListFirebaseLinks\n        RPC\n    parent (:class:`str`):\n        Required. Format: properties/{property_id}\n\n        Example: ``properties/1234``\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListFirebaseLinksAsyncPager:\n        Response message for\n        ListFirebaseLinks RPC\n        Iterating over this object will y",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: properties/{property_id}  Example: ``properties/1234``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListFirebaseLinksAsyncPager: Response message for ListFirebaseLinks RPC Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListFirebaseLinksRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_global_site_tag",
          "description": "Returns the Site Tag for the specified web stream.\nSite Tags are immutable singletons.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetGlobalSiteTagRequest, dict]]):\n        The request object. Request message for GetGlobalSiteTag\n        RPC.\n    name (:class:`str`):\n        Required. The name of the site tag to lookup. Note that\n        site tags are singletons and do not have unique IDs.\n        Format:\n        properties/{property_id}/dataStreams/{stream_id}/globalSiteTag\n\n        Example:\n        ``properties/123/dataStreams/456/globalSiteTag``\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    g",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the site tag to lookup. Note that site tags are singletons and do not have unique IDs. Format: properties/{property_id}/dataStreams/{stream_id}/globalSiteTag  Example: ``properties/123/dataStreams/456/globalSiteTag``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.GlobalSiteTag: Read-only resource with the tag for sending data from a website to a DataStream. Only present for web DataStream resources."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetGlobalSiteTagRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_google_ads_link",
          "description": "Creates a GoogleAdsLink.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateGoogleAdsLinkRequest, dict]]):\n        The request object. Request message for\n        CreateGoogleAdsLink RPC\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    google_ads_link (:class:`google.analytics.admin_v1alpha.types.GoogleAdsLink`):\n        Required. The GoogleAdsLink to\n        create.\n\n        This corresponds to the ``google_ads_link`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nRe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "google_ads_link": {
                "type": "google.analytics.admin_v1alpha.types.GoogleAdsLink",
                "description": "Required. The GoogleAdsLink to create.  This corresponds to the ``google_ads_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.GoogleAdsLink: A link between a GA4 property and a Google Ads account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "google_ads_link",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateGoogleAdsLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_google_ads_link",
          "description": "Updates a GoogleAdsLink on a property\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateGoogleAdsLinkRequest, dict]]):\n        The request object. Request message for\n        UpdateGoogleAdsLink RPC\n    google_ads_link (:class:`google.analytics.admin_v1alpha.types.GoogleAdsLink`):\n        The GoogleAdsLink to update\n        This corresponds to the ``google_ads_link`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_asyn",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "google_ads_link": {
                "type": "google.analytics.admin_v1alpha.types.GoogleAdsLink",
                "description": "The GoogleAdsLink to update This corresponds to the ``google_ads_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.GoogleAdsLink: A link between a GA4 property and a Google Ads account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "google_ads_link",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateGoogleAdsLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_google_ads_link",
          "description": "Deletes a GoogleAdsLink on a property\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteGoogleAdsLinkRequest, dict]]):\n        The request object. Request message for\n        DeleteGoogleAdsLink RPC.\n    name (:class:`str`):\n        Required. Example format:\n        properties/1234/googleAdsLinks/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Example format: properties/1234/googleAdsLinks/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteGoogleAdsLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_google_ads_links",
          "description": "Lists GoogleAdsLinks on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListGoogleAdsLinksRequest, dict]]):\n        The request object. Request message for\n        ListGoogleAdsLinks RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListGoogleAdsLinksAsyncPager:\n        Response message for\n        ListGoogleAdsLinks RPC.\n        Iterating over this object will yield\n        results and resolve additional pages\n        automaticall",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListGoogleAdsLinksAsyncPager: Response message for ListGoogleAdsLinks RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListGoogleAdsLinksRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_data_sharing_settings",
          "description": "Get data sharing settings on an account.\nData sharing settings are singletons.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetDataSharingSettingsRequest, dict]]):\n        The request object. Request message for\n        GetDataSharingSettings RPC.\n    name (:class:`str`):\n        Required. The name of the settings to lookup. Format:\n        accounts/{account}/dataSharingSettings\n\n        Example: ``accounts/1000/dataSharingSettings``\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.DataSharingSettings:\n        A resource message representing data\n        sharing ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the settings to lookup. Format: accounts/{account}/dataSharingSettings  Example: ``accounts/1000/dataSharingSettings``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DataSharingSettings: A resource message representing data sharing settings of a Google Analytics account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetDataSharingSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_measurement_protocol_secret",
          "description": "Lookup for a single \"GA4\" MeasurementProtocolSecret.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetMeasurementProtocolSecretRequest, dict]]):\n        The request object. Request message for\n        GetMeasurementProtocolSecret RPC.\n    name (:class:`str`):\n        Required. The name of the measurement\n        protocol secret to lookup. Format:\n\n        properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.MeasurementProtocolSecret:\n        A secret value used for se",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the measurement protocol secret to lookup. Format:  properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.MeasurementProtocolSecret: A secret value used for sending hits to Measurement Protocol."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetMeasurementProtocolSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_measurement_protocol_secrets",
          "description": "Returns child MeasurementProtocolSecrets under the\nspecified parent Property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListMeasurementProtocolSecretsRequest, dict]]):\n        The request object. Request message for\n        ListMeasurementProtocolSecret RPC\n    parent (:class:`str`):\n        Required. The resource name of the\n        parent stream. Format:\n\n        properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListMeasurementProtocolSecretsAsyncPage",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the parent stream. Format:  properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListMeasurementProtocolSecretsAsyncPager: Response message for ListMeasurementProtocolSecret RPC Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListMeasurementProtocolSecretsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_measurement_protocol_secret",
          "description": "Creates a measurement protocol secret.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateMeasurementProtocolSecretRequest, dict]]):\n        The request object. Request message for\n        CreateMeasurementProtocolSecret RPC\n    parent (:class:`str`):\n        Required. The parent resource where\n        this secret will be created. Format:\n        properties/{property}/dataStreams/{dataStream}\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    measurement_protocol_secret (:class:`google.analytics.admin_v1alpha.types.MeasurementProtocolSecret`):\n        Required. The measurement protocol\n        secret to create.\n\n        This corresponds to the ``measurement_protocol_secret`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource where this secret will be created. Format: properties/{property}/dataStreams/{dataStream}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "measurement_protocol_secret": {
                "type": "google.analytics.admin_v1alpha.types.MeasurementProtocolSecret",
                "description": "Required. The measurement protocol secret to create.  This corresponds to the ``measurement_protocol_secret`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.MeasurementProtocolSecret: A secret value used for sending hits to Measurement Protocol."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "measurement_protocol_secret",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateMeasurementProtocolSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_measurement_protocol_secret",
          "description": "Deletes target MeasurementProtocolSecret.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteMeasurementProtocolSecretRequest, dict]]):\n        The request object. Request message for\n        DeleteMeasurementProtocolSecret RPC\n    name (:class:`str`):\n        Required. The name of the\n        MeasurementProtocolSecret to delete.\n        Format:\n\n        properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the MeasurementProtocolSecret to delete. Format:  properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteMeasurementProtocolSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_measurement_protocol_secret",
          "description": "Updates a measurement protocol secret.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateMeasurementProtocolSecretRequest, dict]]):\n        The request object. Request message for\n        UpdateMeasurementProtocolSecret RPC\n    measurement_protocol_secret (:class:`google.analytics.admin_v1alpha.types.MeasurementProtocolSecret`):\n        Required. The measurement protocol\n        secret to update.\n\n        This corresponds to the ``measurement_protocol_secret`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be\n        updated. Omitted fields will not be\n        updated.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "measurement_protocol_secret": {
                "type": "google.analytics.admin_v1alpha.types.MeasurementProtocolSecret",
                "description": "Required. The measurement protocol secret to update.  This corresponds to the ``measurement_protocol_secret`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.MeasurementProtocolSecret: A secret value used for sending hits to Measurement Protocol."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "measurement_protocol_secret",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateMeasurementProtocolSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "acknowledge_user_data_collection",
          "description": "Acknowledges the terms of user data collection for\nthe specified property.\nThis acknowledgement must be completed (either in the\nGoogle Analytics UI or through this API) before\nMeasurementProtocolSecret resources may be created.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.AcknowledgeUserDataCollectionRequest, dict]]):\n        The request object. Request message for\n        AcknowledgeUserDataCollection RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.AcknowledgeUserDataCollectionResponse:\n        Response message for\n        AcknowledgeUserDataCollection RPC.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.AcknowledgeUserDataCollectionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_sk_ad_network_conversion_value_schema",
          "description": "Looks up a single SKAdNetworkConversionValueSchema.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetSKAdNetworkConversionValueSchemaRequest, dict]]):\n        The request object. Request message for\n        GetSKAdNetworkConversionValueSchema RPC.\n    name (:class:`str`):\n        Required. The resource name of SKAdNetwork conversion\n        value schema to look up. Format:\n        properties/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_conversion_value_schema}\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.SKAdNetworkConversi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of SKAdNetwork conversion value schema to look up. Format: properties/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_conversion_value_schema}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.SKAdNetworkConversionValueSchema: SKAdNetwork conversion value schema of an iOS stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetSKAdNetworkConversionValueSchemaRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_sk_ad_network_conversion_value_schema",
          "description": "Creates a SKAdNetworkConversionValueSchema.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateSKAdNetworkConversionValueSchemaRequest, dict]]):\n        The request object. Request message for\n        CreateSKAdNetworkConversionValueSchema\n        RPC.\n    parent (:class:`str`):\n        Required. The parent resource where\n        this schema will be created. Format:\n        properties/{property}/dataStreams/{dataStream}\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    skadnetwork_conversion_value_schema (:class:`google.analytics.admin_v1alpha.types.SKAdNetworkConversionValueSchema`):\n        Required. SKAdNetwork conversion\n        value schema to create.\n\n        This corresponds to the ``skadnetwork_conversion_value_schema`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Des",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource where this schema will be created. Format: properties/{property}/dataStreams/{dataStream}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "skadnetwork_conversion_value_schema": {
                "type": "google.analytics.admin_v1alpha.types.SKAdNetworkConversionValueSchema",
                "description": "Required. SKAdNetwork conversion value schema to create.  This corresponds to the ``skadnetwork_conversion_value_schema`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.SKAdNetworkConversionValueSchema: SKAdNetwork conversion value schema of an iOS stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "skadnetwork_conversion_value_schema",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateSKAdNetworkConversionValueSchemaRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_sk_ad_network_conversion_value_schema",
          "description": "Deletes target SKAdNetworkConversionValueSchema.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteSKAdNetworkConversionValueSchemaRequest, dict]]):\n        The request object. Request message for\n        DeleteSKAdNetworkConversionValueSchema\n        RPC.\n    name (:class:`str`):\n        Required. The name of the\n        SKAdNetworkConversionValueSchema to delete. Format:\n        properties/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_conversion_value_schema}\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the SKAdNetworkConversionValueSchema to delete. Format: properties/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_conversion_value_schema}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteSKAdNetworkConversionValueSchemaRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_sk_ad_network_conversion_value_schema",
          "description": "Updates a SKAdNetworkConversionValueSchema.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateSKAdNetworkConversionValueSchemaRequest, dict]]):\n        The request object. Request message for\n        UpdateSKAdNetworkConversionValueSchema\n        RPC.\n    skadnetwork_conversion_value_schema (:class:`google.analytics.admin_v1alpha.types.SKAdNetworkConversionValueSchema`):\n        Required. SKAdNetwork conversion\n        value schema to update.\n\n        This corresponds to the ``skadnetwork_conversion_value_schema`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be\n        updated. Omitted fields will not be\n        updated.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "skadnetwork_conversion_value_schema": {
                "type": "google.analytics.admin_v1alpha.types.SKAdNetworkConversionValueSchema",
                "description": "Required. SKAdNetwork conversion value schema to update.  This corresponds to the ``skadnetwork_conversion_value_schema`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.SKAdNetworkConversionValueSchema: SKAdNetwork conversion value schema of an iOS stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "skadnetwork_conversion_value_schema",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateSKAdNetworkConversionValueSchemaRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_sk_ad_network_conversion_value_schemas",
          "description": "Lists SKAdNetworkConversionValueSchema on a stream.\nProperties can have at most one\nSKAdNetworkConversionValueSchema.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListSKAdNetworkConversionValueSchemasRequest, dict]]):\n        The request object. Request message for\n        ListSKAdNetworkConversionValueSchemas\n        RPC\n    parent (:class:`str`):\n        Required. The DataStream resource to list schemas for.\n        Format:\n        properties/{property_id}/dataStreams/{dataStream}\n        Example: properties/1234/dataStreams/5678\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The DataStream resource to list schemas for. Format: properties/{property_id}/dataStreams/{dataStream} Example: properties/1234/dataStreams/5678  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListSKAdNetworkConversionValueSchemasAsyncPager: Response message for ListSKAdNetworkConversionValueSchemas RPC  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListSKAdNetworkConversionValueSchemasRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_change_history_events",
          "description": "Searches through all changes to an account or its\nchildren given the specified set of filters.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.SearchChangeHistoryEventsRequest, dict]]):\n        The request object. Request message for\n        SearchChangeHistoryEvents RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.SearchChangeHistoryEventsAsyncPager:\n        Response message for SearchAccounts\n        RPC.\n        Iterating over this object will yield\n        results and resolve additional pages\n        automatically.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.SearchChangeHistoryEventsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_google_signals_settings",
          "description": "Lookup for Google Signals settings for a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetGoogleSignalsSettingsRequest, dict]]):\n        The request object. Request message for\n        GetGoogleSignalsSettings RPC\n    name (:class:`str`):\n        Required. The name of the google\n        signals settings to retrieve. Format:\n        properties/{property}/googleSignalsSettings\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.GoogleSignalsSettings:\n        Settings values for Google Signals.\n        This is a singleton resource.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the google signals settings to retrieve. Format: properties/{property}/googleSignalsSettings  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.GoogleSignalsSettings: Settings values for Google Signals. This is a singleton resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetGoogleSignalsSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_google_signals_settings",
          "description": "Updates Google Signals settings for a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateGoogleSignalsSettingsRequest, dict]]):\n        The request object. Request message for\n        UpdateGoogleSignalsSettings RPC\n    google_signals_settings (:class:`google.analytics.admin_v1alpha.types.GoogleSignalsSettings`):\n        Required. The settings to update. The ``name`` field is\n        used to identify the settings to be updated.\n\n        This corresponds to the ``google_signals_settings`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "google_signals_settings": {
                "type": "google.analytics.admin_v1alpha.types.GoogleSignalsSettings",
                "description": "Required. The settings to update. The ``name`` field is used to identify the settings to be updated.  This corresponds to the ``google_signals_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.GoogleSignalsSettings: Settings values for Google Signals. This is a singleton resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "google_signals_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateGoogleSignalsSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_conversion_event",
          "description": "Deprecated: Use ``CreateKeyEvent`` instead. Creates a conversion\nevent with the specified attributes.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateConversionEventRequest, dict]]):\n        The request object. Request message for\n        CreateConversionEvent RPC\n    parent (:class:`str`):\n        Required. The resource name of the\n        parent property where this conversion\n        event will be created. Format:\n        properties/123\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    conversion_event (:class:`google.analytics.admin_v1alpha.types.ConversionEvent`):\n        Required. The conversion event to\n        create.\n\n        This corresponds to the ``conversion_event`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the parent property where this conversion event will be created. Format: properties/123  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "conversion_event": {
                "type": "google.analytics.admin_v1alpha.types.ConversionEvent",
                "description": "Required. The conversion event to create.  This corresponds to the ``conversion_event`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.ConversionEvent: A conversion event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "conversion_event",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateConversionEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_conversion_event",
          "description": "Deprecated: Use ``UpdateKeyEvent`` instead. Updates a conversion\nevent with the specified attributes.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateConversionEventRequest, dict]]):\n        The request object. Request message for\n        UpdateConversionEvent RPC\n    conversion_event (:class:`google.analytics.admin_v1alpha.types.ConversionEvent`):\n        Required. The conversion event to update. The ``name``\n        field is used to identify the settings to be updated.\n\n        This corresponds to the ``conversion_event`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "conversion_event": {
                "type": "google.analytics.admin_v1alpha.types.ConversionEvent",
                "description": "Required. The conversion event to update. The ``name`` field is used to identify the settings to be updated.  This corresponds to the ``conversion_event`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.ConversionEvent: A conversion event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "conversion_event",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateConversionEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_conversion_event",
          "description": "Deprecated: Use ``GetKeyEvent`` instead. Retrieve a single\nconversion event.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetConversionEventRequest, dict]]):\n        The request object. Request message for\n        GetConversionEvent RPC\n    name (:class:`str`):\n        Required. The resource name of the conversion event to\n        retrieve. Format:\n        properties/{property}/conversionEvents/{conversion_event}\n        Example: \"properties/123/conversionEvents/456\"\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.ConversionEvent:\n        A conversion event in a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the conversion event to retrieve. Format: properties/{property}/conversionEvents/{conversion_event} Example: \"properties/123/conversionEvents/456\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.ConversionEvent: A conversion event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetConversionEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_conversion_event",
          "description": "Deprecated: Use ``DeleteKeyEvent`` instead. Deletes a conversion\nevent in a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteConversionEventRequest, dict]]):\n        The request object. Request message for\n        DeleteConversionEvent RPC\n    name (:class:`str`):\n        Required. The resource name of the conversion event to\n        delete. Format:\n        properties/{property}/conversionEvents/{conversion_event}\n        Example: \"properties/123/conversionEvents/456\"\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the conversion event to delete. Format: properties/{property}/conversionEvents/{conversion_event} Example: \"properties/123/conversionEvents/456\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteConversionEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_conversion_events",
          "description": "Deprecated: Use ``ListKeyEvents`` instead. Returns a list of\nconversion events in the specified parent property.\n\nReturns an empty list if no conversion events are found.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListConversionEventsRequest, dict]]):\n        The request object. Request message for\n        ListConversionEvents RPC\n    parent (:class:`str`):\n        Required. The resource name of the\n        parent property. Example:\n        'properties/123'\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListConversionEvents",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the parent property. Example: 'properties/123'  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListConversionEventsAsyncPager: Response message for ListConversionEvents RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListConversionEventsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_key_event",
          "description": "Creates a Key Event.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateKeyEventRequest, dict]]):\n        The request object. Request message for CreateKeyEvent\n        RPC\n    parent (:class:`str`):\n        Required. The resource name of the\n        parent property where this Key Event\n        will be created. Format: properties/123\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    key_event (:class:`google.analytics.admin_v1alpha.types.KeyEvent`):\n        Required. The Key Event to create.\n        This corresponds to the ``key_event`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the parent property where this Key Event will be created. Format: properties/123  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "key_event": {
                "type": "google.analytics.admin_v1alpha.types.KeyEvent",
                "description": "Required. The Key Event to create. This corresponds to the ``key_event`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.KeyEvent: A key event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "key_event",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateKeyEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_key_event",
          "description": "Updates a Key Event.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateKeyEventRequest, dict]]):\n        The request object. Request message for UpdateKeyEvent\n        RPC\n    key_event (:class:`google.analytics.admin_v1alpha.types.KeyEvent`):\n        Required. The Key Event to update. The ``name`` field is\n        used to identify the settings to be updated.\n\n        This corresponds to the ``key_event`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "key_event": {
                "type": "google.analytics.admin_v1alpha.types.KeyEvent",
                "description": "Required. The Key Event to update. The ``name`` field is used to identify the settings to be updated.  This corresponds to the ``key_event`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.KeyEvent: A key event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "key_event",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateKeyEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_key_event",
          "description": "Retrieve a single Key Event.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetKeyEventRequest, dict]]):\n        The request object. Request message for GetKeyEvent RPC\n    name (:class:`str`):\n        Required. The resource name of the Key Event to\n        retrieve. Format:\n        properties/{property}/keyEvents/{key_event} Example:\n        \"properties/123/keyEvents/456\"\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.KeyEvent:\n        A key event in a Google Analytics\n        property.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the Key Event to retrieve. Format: properties/{property}/keyEvents/{key_event} Example: \"properties/123/keyEvents/456\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.KeyEvent: A key event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetKeyEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_key_event",
          "description": "Deletes a Key Event.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteKeyEventRequest, dict]]):\n        The request object. Request message for DeleteKeyEvent\n        RPC\n    name (:class:`str`):\n        Required. The resource name of the Key Event to delete.\n        Format: properties/{property}/keyEvents/{key_event}\n        Example: \"properties/123/keyEvents/456\"\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the Key Event to delete. Format: properties/{property}/keyEvents/{key_event} Example: \"properties/123/keyEvents/456\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteKeyEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_key_events",
          "description": "Returns a list of Key Events in the specified parent\nproperty. Returns an empty list if no Key Events are\nfound.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListKeyEventsRequest, dict]]):\n        The request object. Request message for ListKeyEvents RPC\n    parent (:class:`str`):\n        Required. The resource name of the\n        parent property. Example:\n        'properties/123'\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListKeyEventsAsyncPager:\n        Response message for ListKeyEvents\n        RPC.\n        Iterating o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the parent property. Example: 'properties/123'  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListKeyEventsAsyncPager: Response message for ListKeyEvents RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListKeyEventsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_display_video360_advertiser_link",
          "description": "Look up a single DisplayVideo360AdvertiserLink\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetDisplayVideo360AdvertiserLinkRequest, dict]]):\n        The request object. Request message for\n        GetDisplayVideo360AdvertiserLink RPC.\n    name (:class:`str`):\n        Required. The name of the\n        DisplayVideo360AdvertiserLink to get.\n        Example format:\n        properties/1234/displayVideo360AdvertiserLink/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLink:\n        A link between a GA4 property and a\n        Display & Vid",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the DisplayVideo360AdvertiserLink to get. Example format: properties/1234/displayVideo360AdvertiserLink/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLink: A link between a GA4 property and a Display & Video 360 advertiser."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetDisplayVideo360AdvertiserLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_display_video360_advertiser_links",
          "description": "Lists all DisplayVideo360AdvertiserLinks on a\nproperty.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListDisplayVideo360AdvertiserLinksRequest, dict]]):\n        The request object. Request message for\n        ListDisplayVideo360AdvertiserLinks RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListDisplayVideo360AdvertiserLinksAsyncPager:\n        Response message for\n        ListDisplayVideo360AdvertiserLinks RPC.\n        Iterating over this",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListDisplayVideo360AdvertiserLinksAsyncPager: Response message for ListDisplayVideo360AdvertiserLinks RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListDisplayVideo360AdvertiserLinksRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_display_video360_advertiser_link",
          "description": "Creates a DisplayVideo360AdvertiserLink.\nThis can only be utilized by users who have proper\nauthorization both on the Google Analytics property and\non the Display & Video 360 advertiser. Users who do not\nhave access to the Display & Video 360 advertiser should\ninstead seek to create a DisplayVideo360LinkProposal.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateDisplayVideo360AdvertiserLinkRequest, dict]]):\n        The request object. Request message for\n        CreateDisplayVideo360AdvertiserLink RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    display_video_360_advertiser_link (:class:`google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLink`):\n        Required. The\n        DisplayVideo360AdvertiserLink to create.\n\n        This corresponds to the ``display_video_360_advertiser_lin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "display_video_360_advertiser_link": {
                "type": "google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLink",
                "description": "Required. The DisplayVideo360AdvertiserLink to create.  This corresponds to the ``display_video_360_advertiser_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLink: A link between a GA4 property and a Display & Video 360 advertiser."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "display_video_360_advertiser_link",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateDisplayVideo360AdvertiserLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_display_video360_advertiser_link",
          "description": "Deletes a DisplayVideo360AdvertiserLink on a\nproperty.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteDisplayVideo360AdvertiserLinkRequest, dict]]):\n        The request object. Request message for\n        DeleteDisplayVideo360AdvertiserLink RPC.\n    name (:class:`str`):\n        Required. The name of the\n        DisplayVideo360AdvertiserLink to delete.\n        Example format:\n        properties/1234/displayVideo360AdvertiserLinks/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the DisplayVideo360AdvertiserLink to delete. Example format: properties/1234/displayVideo360AdvertiserLinks/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteDisplayVideo360AdvertiserLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_display_video360_advertiser_link",
          "description": "Updates a DisplayVideo360AdvertiserLink on a\nproperty.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateDisplayVideo360AdvertiserLinkRequest, dict]]):\n        The request object. Request message for\n        UpdateDisplayVideo360AdvertiserLink RPC.\n    display_video_360_advertiser_link (:class:`google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLink`):\n        The DisplayVideo360AdvertiserLink to\n        update\n\n        This corresponds to the ``display_video_360_advertiser_link`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "display_video_360_advertiser_link": {
                "type": "google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLink",
                "description": "The DisplayVideo360AdvertiserLink to update  This corresponds to the ``display_video_360_advertiser_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLink: A link between a GA4 property and a Display & Video 360 advertiser."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "display_video_360_advertiser_link",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateDisplayVideo360AdvertiserLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_display_video360_advertiser_link_proposal",
          "description": "Lookup for a single\nDisplayVideo360AdvertiserLinkProposal.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetDisplayVideo360AdvertiserLinkProposalRequest, dict]]):\n        The request object. Request message for\n        GetDisplayVideo360AdvertiserLinkProposal\n        RPC.\n    name (:class:`str`):\n        Required. The name of the\n        DisplayVideo360AdvertiserLinkProposal to\n        get. Example format:\n        properties/1234/displayVideo360AdvertiserLinkProposals/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLinkProposal:\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the DisplayVideo360AdvertiserLinkProposal to get. Example format: properties/1234/displayVideo360AdvertiserLinkProposals/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLinkProposal: A proposal for a link between a GA4 property and a Display & Video 360 advertiser.  A proposal is converted to a DisplayVideo360AdvertiserLink once approved. Google Analytics admins approve inbound proposals while Display & Video 360 admins approve outbound proposals."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetDisplayVideo360AdvertiserLinkProposalRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_display_video360_advertiser_link_proposals",
          "description": "Lists DisplayVideo360AdvertiserLinkProposals on a\nproperty.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListDisplayVideo360AdvertiserLinkProposalsRequest, dict]]):\n        The request object. Request message for\n        ListDisplayVideo360AdvertiserLinkProposals\n        RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListDisplayVideo360AdvertiserLinkProposalsAsyncPager:\n        Response message for\n        ListDisplayVideo360AdvertiserLi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListDisplayVideo360AdvertiserLinkProposalsAsyncPager: Response message for ListDisplayVideo360AdvertiserLinkProposals RPC.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListDisplayVideo360AdvertiserLinkProposalsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_display_video360_advertiser_link_proposal",
          "description": "Creates a DisplayVideo360AdvertiserLinkProposal.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateDisplayVideo360AdvertiserLinkProposalRequest, dict]]):\n        The request object. Request message for\n        CreateDisplayVideo360AdvertiserLinkProposal\n        RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    display_video_360_advertiser_link_proposal (:class:`google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLinkProposal`):\n        Required. The\n        DisplayVideo360AdvertiserLinkProposal to\n        create.\n\n        This corresponds to the ``display_video_360_advertiser_link_proposal`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "display_video_360_advertiser_link_proposal": {
                "type": "google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLinkProposal",
                "description": "Required. The DisplayVideo360AdvertiserLinkProposal to create.  This corresponds to the ``display_video_360_advertiser_link_proposal`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLinkProposal: A proposal for a link between a GA4 property and a Display & Video 360 advertiser.  A proposal is converted to a DisplayVideo360AdvertiserLink once approved. Google Analytics admins approve inbound proposals while Display & Video 360 admins approve outbound proposals."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "display_video_360_advertiser_link_proposal",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateDisplayVideo360AdvertiserLinkProposalRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_display_video360_advertiser_link_proposal",
          "description": "Deletes a DisplayVideo360AdvertiserLinkProposal on a\nproperty. This can only be used on cancelled proposals.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteDisplayVideo360AdvertiserLinkProposalRequest, dict]]):\n        The request object. Request message for\n        DeleteDisplayVideo360AdvertiserLinkProposal\n        RPC.\n    name (:class:`str`):\n        Required. The name of the\n        DisplayVideo360AdvertiserLinkProposal to\n        delete. Example format:\n        properties/1234/displayVideo360AdvertiserLinkProposals/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the DisplayVideo360AdvertiserLinkProposal to delete. Example format: properties/1234/displayVideo360AdvertiserLinkProposals/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteDisplayVideo360AdvertiserLinkProposalRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "approve_display_video360_advertiser_link_proposal",
          "description": "Approves a DisplayVideo360AdvertiserLinkProposal.\nThe DisplayVideo360AdvertiserLinkProposal will be\ndeleted and a new DisplayVideo360AdvertiserLink will be\ncreated.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ApproveDisplayVideo360AdvertiserLinkProposalRequest, dict]]):\n        The request object. Request message for\n        ApproveDisplayVideo360AdvertiserLinkProposal\n        RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.ApproveDisplayVideo360AdvertiserLinkProposalResponse:\n        Response message for\n        ApproveDisplayVideo360AdvertiserLinkProposal\n        RPC.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ApproveDisplayVideo360AdvertiserLinkProposalRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_display_video360_advertiser_link_proposal",
          "description": "Cancels a DisplayVideo360AdvertiserLinkProposal.\nCancelling can mean either:\n\n- Declining a proposal initiated from Display & Video\n  360\n- Withdrawing a proposal initiated from Google Analytics\n  After being cancelled, a proposal will eventually be\n  deleted automatically.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CancelDisplayVideo360AdvertiserLinkProposalRequest, dict]]):\n        The request object. Request message for\n        CancelDisplayVideo360AdvertiserLinkProposal\n        RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.DisplayVideo360AdvertiserLinkProposal:\n        A proposal for a link between a GA4\n        property and a Display & Video 360\n        advertiser.\n\n        A proposal is co",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CancelDisplayVideo360AdvertiserLinkProposalRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_custom_dimension",
          "description": "Creates a CustomDimension.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateCustomDimensionRequest, dict]]):\n        The request object. Request message for\n        CreateCustomDimension RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    custom_dimension (:class:`google.analytics.admin_v1alpha.types.CustomDimension`):\n        Required. The CustomDimension to\n        create.\n\n        This corresponds to the ``custom_dimension`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "custom_dimension": {
                "type": "google.analytics.admin_v1alpha.types.CustomDimension",
                "description": "Required. The CustomDimension to create.  This corresponds to the ``custom_dimension`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.CustomDimension: A definition for a CustomDimension."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "custom_dimension",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateCustomDimensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_custom_dimension",
          "description": "Updates a CustomDimension on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateCustomDimensionRequest, dict]]):\n        The request object. Request message for\n        UpdateCustomDimension RPC.\n    custom_dimension (:class:`google.analytics.admin_v1alpha.types.CustomDimension`):\n        The CustomDimension to update\n        This corresponds to the ``custom_dimension`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "custom_dimension": {
                "type": "google.analytics.admin_v1alpha.types.CustomDimension",
                "description": "The CustomDimension to update This corresponds to the ``custom_dimension`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.CustomDimension: A definition for a CustomDimension."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "custom_dimension",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateCustomDimensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_custom_dimensions",
          "description": "Lists CustomDimensions on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListCustomDimensionsRequest, dict]]):\n        The request object. Request message for\n        ListCustomDimensions RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListCustomDimensionsAsyncPager:\n        Response message for\n        ListCustomDimensions RPC.\n        Iterating over this object will yield\n        results and resolve additional pages\n        au",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListCustomDimensionsAsyncPager: Response message for ListCustomDimensions RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListCustomDimensionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "archive_custom_dimension",
          "description": "Archives a CustomDimension on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ArchiveCustomDimensionRequest, dict]]):\n        The request object. Request message for\n        ArchiveCustomDimension RPC.\n    name (:class:`str`):\n        Required. The name of the\n        CustomDimension to archive. Example\n        format:\n        properties/1234/customDimensions/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CustomDimension to archive. Example format: properties/1234/customDimensions/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ArchiveCustomDimensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_custom_dimension",
          "description": "Lookup for a single CustomDimension.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetCustomDimensionRequest, dict]]):\n        The request object. Request message for\n        GetCustomDimension RPC.\n    name (:class:`str`):\n        Required. The name of the\n        CustomDimension to get. Example format:\n        properties/1234/customDimensions/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.CustomDimension:\n        A definition for a CustomDimension.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CustomDimension to get. Example format: properties/1234/customDimensions/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.CustomDimension: A definition for a CustomDimension."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetCustomDimensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_custom_metric",
          "description": "Creates a CustomMetric.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateCustomMetricRequest, dict]]):\n        The request object. Request message for\n        CreateCustomMetric RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    custom_metric (:class:`google.analytics.admin_v1alpha.types.CustomMetric`):\n        Required. The CustomMetric to create.\n        This corresponds to the ``custom_metric`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "custom_metric": {
                "type": "google.analytics.admin_v1alpha.types.CustomMetric",
                "description": "Required. The CustomMetric to create. This corresponds to the ``custom_metric`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.CustomMetric: A definition for a custom metric."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "custom_metric",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateCustomMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_custom_metric",
          "description": "Updates a CustomMetric on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateCustomMetricRequest, dict]]):\n        The request object. Request message for\n        UpdateCustomMetric RPC.\n    custom_metric (:class:`google.analytics.admin_v1alpha.types.CustomMetric`):\n        The CustomMetric to update\n        This corresponds to the ``custom_metric`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "custom_metric": {
                "type": "google.analytics.admin_v1alpha.types.CustomMetric",
                "description": "The CustomMetric to update This corresponds to the ``custom_metric`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.CustomMetric: A definition for a custom metric."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "custom_metric",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateCustomMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_custom_metrics",
          "description": "Lists CustomMetrics on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListCustomMetricsRequest, dict]]):\n        The request object. Request message for ListCustomMetrics\n        RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListCustomMetricsAsyncPager:\n        Response message for\n        ListCustomMetrics RPC.\n        Iterating over this object will yield\n        results and resolve additional pages\n        automatically.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListCustomMetricsAsyncPager: Response message for ListCustomMetrics RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListCustomMetricsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "archive_custom_metric",
          "description": "Archives a CustomMetric on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ArchiveCustomMetricRequest, dict]]):\n        The request object. Request message for\n        ArchiveCustomMetric RPC.\n    name (:class:`str`):\n        Required. The name of the\n        CustomMetric to archive. Example format:\n        properties/1234/customMetrics/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CustomMetric to archive. Example format: properties/1234/customMetrics/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ArchiveCustomMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_custom_metric",
          "description": "Lookup for a single CustomMetric.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetCustomMetricRequest, dict]]):\n        The request object. Request message for GetCustomMetric\n        RPC.\n    name (:class:`str`):\n        Required. The name of the\n        CustomMetric to get. Example format:\n        properties/1234/customMetrics/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.CustomMetric:\n        A definition for a custom metric.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CustomMetric to get. Example format: properties/1234/customMetrics/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.CustomMetric: A definition for a custom metric."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetCustomMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_data_retention_settings",
          "description": "Returns the singleton data retention settings for\nthis property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetDataRetentionSettingsRequest, dict]]):\n        The request object. Request message for\n        GetDataRetentionSettings RPC.\n    name (:class:`str`):\n        Required. The name of the settings to\n        lookup. Format:\n\n        properties/{property}/dataRetentionSettings\n        Example:\n        \"properties/1000/dataRetentionSettings\"\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.DataRetentionSettings:\n        Settings values for data retention.\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the settings to lookup. Format:  properties/{property}/dataRetentionSettings Example: \"properties/1000/dataRetentionSettings\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DataRetentionSettings: Settings values for data retention. This is a singleton resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetDataRetentionSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_data_retention_settings",
          "description": "Updates the singleton data retention settings for\nthis property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateDataRetentionSettingsRequest, dict]]):\n        The request object. Request message for\n        UpdateDataRetentionSettings RPC.\n    data_retention_settings (:class:`google.analytics.admin_v1alpha.types.DataRetentionSettings`):\n        Required. The settings to update. The ``name`` field is\n        used to identify the settings to be updated.\n\n        This corresponds to the ``data_retention_settings`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``upda",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "data_retention_settings": {
                "type": "google.analytics.admin_v1alpha.types.DataRetentionSettings",
                "description": "Required. The settings to update. The ``name`` field is used to identify the settings to be updated.  This corresponds to the ``data_retention_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DataRetentionSettings: Settings values for data retention. This is a singleton resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "data_retention_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateDataRetentionSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_data_stream",
          "description": "Creates a DataStream.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateDataStreamRequest, dict]]):\n        The request object. Request message for CreateDataStream\n        RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    data_stream (:class:`google.analytics.admin_v1alpha.types.DataStream`):\n        Required. The DataStream to create.\n        This corresponds to the ``data_stream`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.adm",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "data_stream": {
                "type": "google.analytics.admin_v1alpha.types.DataStream",
                "description": "Required. The DataStream to create. This corresponds to the ``data_stream`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DataStream: A resource message representing a data stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "data_stream",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateDataStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_data_stream",
          "description": "Deletes a DataStream on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteDataStreamRequest, dict]]):\n        The request object. Request message for DeleteDataStream\n        RPC.\n    name (:class:`str`):\n        Required. The name of the DataStream\n        to delete. Example format:\n        properties/1234/dataStreams/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the DataStream to delete. Example format: properties/1234/dataStreams/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteDataStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_data_stream",
          "description": "Updates a DataStream on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateDataStreamRequest, dict]]):\n        The request object. Request message for UpdateDataStream\n        RPC.\n    data_stream (:class:`google.analytics.admin_v1alpha.types.DataStream`):\n        The DataStream to update\n        This corresponds to the ``data_stream`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "data_stream": {
                "type": "google.analytics.admin_v1alpha.types.DataStream",
                "description": "The DataStream to update This corresponds to the ``data_stream`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DataStream: A resource message representing a data stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "data_stream",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateDataStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_data_streams",
          "description": "Lists DataStreams on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListDataStreamsRequest, dict]]):\n        The request object. Request message for ListDataStreams\n        RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListDataStreamsAsyncPager:\n        Response message for ListDataStreams\n        RPC.\n        Iterating over this object will yield\n        results and resolve additional pages\n        automatically.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListDataStreamsAsyncPager: Response message for ListDataStreams RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListDataStreamsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_data_stream",
          "description": "Lookup for a single DataStream.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetDataStreamRequest, dict]]):\n        The request object. Request message for GetDataStream\n        RPC.\n    name (:class:`str`):\n        Required. The name of the DataStream\n        to get. Example format:\n        properties/1234/dataStreams/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.DataStream:\n        A resource message representing a\n        data stream.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the DataStream to get. Example format: properties/1234/dataStreams/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DataStream: A resource message representing a data stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetDataStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_audience",
          "description": "Lookup for a single Audience.\nAudiences created before 2020 may not be supported.\nDefault audiences will not show filter definitions.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetAudienceRequest, dict]]):\n        The request object. Request message for GetAudience RPC.\n    name (:class:`str`):\n        Required. The name of the Audience to\n        get. Example format:\n        properties/1234/audiences/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.Audience:\n        A resource message representing a GA4\n        Audience.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Audience to get. Example format: properties/1234/audiences/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.Audience: A resource message representing a GA4 Audience."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetAudienceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_audiences",
          "description": "Lists Audiences on a property.\nAudiences created before 2020 may not be supported.\nDefault audiences will not show filter definitions.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListAudiencesRequest, dict]]):\n        The request object. Request message for ListAudiences\n        RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListAudiencesAsyncPager:\n        Response message for ListAudiences\n        RPC.\n        Iterating over this obje",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListAudiencesAsyncPager: Response message for ListAudiences RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListAudiencesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_audience",
          "description": "Creates an Audience.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateAudienceRequest, dict]]):\n        The request object. Request message for CreateAudience\n        RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    audience (:class:`google.analytics.admin_v1alpha.types.Audience`):\n        Required. The audience to create.\n        This corresponds to the ``audience`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.type",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "audience": {
                "type": "google.analytics.admin_v1alpha.types.Audience",
                "description": "Required. The audience to create. This corresponds to the ``audience`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.Audience: A resource message representing a GA4 Audience."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "audience",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateAudienceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_audience",
          "description": "Updates an Audience on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateAudienceRequest, dict]]):\n        The request object. Request message for UpdateAudience\n        RPC.\n    audience (:class:`google.analytics.admin_v1alpha.types.Audience`):\n        Required. The audience to update. The audience's\n        ``name`` field is used to identify the audience to be\n        updated.\n\n        This corresponds to the ``audience`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided,",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "audience": {
                "type": "google.analytics.admin_v1alpha.types.Audience",
                "description": "Required. The audience to update. The audience's ``name`` field is used to identify the audience to be updated.  This corresponds to the ``audience`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.Audience: A resource message representing a GA4 Audience."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "audience",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateAudienceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "archive_audience",
          "description": "Archives an Audience on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ArchiveAudienceRequest, dict]]):\n        The request object. Request message for ArchiveAudience\n        RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ArchiveAudienceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_search_ads360_link",
          "description": "Look up a single SearchAds360Link\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetSearchAds360LinkRequest, dict]]):\n        The request object. Request message for\n        GetSearchAds360Link RPC.\n    name (:class:`str`):\n        Required. The name of the\n        SearchAds360Link to get. Example format:\n        properties/1234/SearchAds360Link/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.SearchAds360Link:\n        A link between a GA4 property and a\n        Search Ads 360 entity.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the SearchAds360Link to get. Example format: properties/1234/SearchAds360Link/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.SearchAds360Link: A link between a GA4 property and a Search Ads 360 entity."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetSearchAds360LinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_search_ads360_links",
          "description": "Lists all SearchAds360Links on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListSearchAds360LinksRequest, dict]]):\n        The request object. Request message for\n        ListSearchAds360Links RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListSearchAds360LinksAsyncPager:\n        Response message for\n        ListSearchAds360Links RPC.\n        Iterating over this object will yield\n        results and resolve additional pages\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListSearchAds360LinksAsyncPager: Response message for ListSearchAds360Links RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListSearchAds360LinksRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_search_ads360_link",
          "description": "Creates a SearchAds360Link.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateSearchAds360LinkRequest, dict]]):\n        The request object. Request message for\n        CreateSearchAds360Link RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    search_ads_360_link (:class:`google.analytics.admin_v1alpha.types.SearchAds360Link`):\n        Required. The SearchAds360Link to\n        create.\n\n        This corresponds to the ``search_ads_360_link`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "search_ads_360_link": {
                "type": "google.analytics.admin_v1alpha.types.SearchAds360Link",
                "description": "Required. The SearchAds360Link to create.  This corresponds to the ``search_ads_360_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.SearchAds360Link: A link between a GA4 property and a Search Ads 360 entity."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "search_ads_360_link",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateSearchAds360LinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_search_ads360_link",
          "description": "Deletes a SearchAds360Link on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteSearchAds360LinkRequest, dict]]):\n        The request object. Request message for\n        DeleteSearchAds360Link RPC.\n    name (:class:`str`):\n        Required. The name of the\n        SearchAds360Link to delete. Example\n        format:\n        properties/1234/SearchAds360Links/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the SearchAds360Link to delete. Example format: properties/1234/SearchAds360Links/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteSearchAds360LinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_search_ads360_link",
          "description": "Updates a SearchAds360Link on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateSearchAds360LinkRequest, dict]]):\n        The request object. Request message for\n        UpdateSearchAds360Link RPC.\n    search_ads_360_link (:class:`google.analytics.admin_v1alpha.types.SearchAds360Link`):\n        The SearchAds360Link to update\n        This corresponds to the ``search_ads_360_link`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "search_ads_360_link": {
                "type": "google.analytics.admin_v1alpha.types.SearchAds360Link",
                "description": "The SearchAds360Link to update This corresponds to the ``search_ads_360_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.SearchAds360Link: A link between a GA4 property and a Search Ads 360 entity."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "search_ads_360_link",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateSearchAds360LinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_attribution_settings",
          "description": "Lookup for a AttributionSettings singleton.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetAttributionSettingsRequest, dict]]):\n        The request object. Request message for\n        GetAttributionSettings RPC.\n    name (:class:`str`):\n        Required. The name of the attribution\n        settings to retrieve. Format:\n        properties/{property}/attributionSettings\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.AttributionSettings:\n        The attribution settings used for a\n        given property. This is a singleton\n        resource.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the attribution settings to retrieve. Format: properties/{property}/attributionSettings  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.AttributionSettings: The attribution settings used for a given property. This is a singleton resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetAttributionSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_attribution_settings",
          "description": "Updates attribution settings on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateAttributionSettingsRequest, dict]]):\n        The request object. Request message for\n        UpdateAttributionSettings RPC\n    attribution_settings (:class:`google.analytics.admin_v1alpha.types.AttributionSettings`):\n        Required. The attribution settings to update. The\n        ``name`` field is used to identify the settings to be\n        updated.\n\n        This corresponds to the ``attribution_settings`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` fiel",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "attribution_settings": {
                "type": "google.analytics.admin_v1alpha.types.AttributionSettings",
                "description": "Required. The attribution settings to update. The ``name`` field is used to identify the settings to be updated.  This corresponds to the ``attribution_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.AttributionSettings: The attribution settings used for a given property. This is a singleton resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "attribution_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateAttributionSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "run_access_report",
          "description": "Returns a customized report of data access records. The report\nprovides records of each time a user reads Google Analytics\nreporting data. Access records are retained for up to 2 years.\n\nData Access Reports can be requested for a property. Reports may\nbe requested for any property, but dimensions that aren't\nrelated to quota can only be requested on Google Analytics 360\nproperties. This method is only available to Administrators.\n\nThese data access records include GA4 UI Reporting, GA4 UI\nExplorations, GA4 Data API, and other products like Firebase &\nAdmob that can retrieve data from Google Analytics through a\nlinkage. These records don't include property configuration\nchanges like adding a stream or changing a property's time zone.\nFor configuration change history, see\n`searchChangeHistoryEvents <https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents>`__.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.RunAccessReportRequest, ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.RunAccessReportRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_access_binding",
          "description": "Creates an access binding on an account or property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateAccessBindingRequest, dict]]):\n        The request object. Request message for\n        CreateAccessBinding RPC.\n    parent (:class:`str`):\n        Required. Formats:\n\n        - accounts/{account}\n        - properties/{property}\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    access_binding (:class:`google.analytics.admin_v1alpha.types.AccessBinding`):\n        Required. The access binding to\n        create.\n\n        This corresponds to the ``access_binding`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which sho",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Formats:  - accounts/{account} - properties/{property}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "access_binding": {
                "type": "google.analytics.admin_v1alpha.types.AccessBinding",
                "description": "Required. The access binding to create.  This corresponds to the ``access_binding`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.AccessBinding: A binding of a user to a set of roles."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "access_binding",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateAccessBindingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_access_binding",
          "description": "Gets information about an access binding.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetAccessBindingRequest, dict]]):\n        The request object. Request message for GetAccessBinding\n        RPC.\n    name (:class:`str`):\n        Required. The name of the access\n        binding to retrieve. Formats:\n\n        -\n          accounts/{account}/accessBindings/{accessBinding}\n        -\n          properties/{property}/accessBindings/{accessBinding}\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.AccessBinding:\n        A binding of a user to a set of\n        roles.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the access binding to retrieve. Formats:  - accounts/{account}/accessBindings/{accessBinding} - properties/{property}/accessBindings/{accessBinding}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.AccessBinding: A binding of a user to a set of roles."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetAccessBindingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_access_binding",
          "description": "Updates an access binding on an account or property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateAccessBindingRequest, dict]]):\n        The request object. Request message for\n        UpdateAccessBinding RPC.\n    access_binding (:class:`google.analytics.admin_v1alpha.types.AccessBinding`):\n        Required. The access binding to\n        update.\n\n        This corresponds to the ``access_binding`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.AccessBinding:\n        A binding of a user to a set of\n        roles.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "access_binding": {
                "type": "google.analytics.admin_v1alpha.types.AccessBinding",
                "description": "Required. The access binding to update.  This corresponds to the ``access_binding`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.AccessBinding: A binding of a user to a set of roles."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "access_binding",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateAccessBindingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_access_binding",
          "description": "Deletes an access binding on an account or property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteAccessBindingRequest, dict]]):\n        The request object. Request message for\n        DeleteAccessBinding RPC.\n    name (:class:`str`):\n        Required. Formats:\n\n        -\n          accounts/{account}/accessBindings/{accessBinding}\n        -\n          properties/{property}/accessBindings/{accessBinding}\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Formats:  - accounts/{account}/accessBindings/{accessBinding} - properties/{property}/accessBindings/{accessBinding}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteAccessBindingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_access_bindings",
          "description": "Lists all access bindings on an account or property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListAccessBindingsRequest, dict]]):\n        The request object. Request message for\n        ListAccessBindings RPC.\n    parent (:class:`str`):\n        Required. Formats:\n\n        - accounts/{account}\n        - properties/{property}\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListAccessBindingsAsyncPager:\n        Response message for\n        ListAccessBindings RPC.\n        Iterating over this object will yield\n        results a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Formats:  - accounts/{account} - properties/{property}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListAccessBindingsAsyncPager: Response message for ListAccessBindings RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListAccessBindingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_create_access_bindings",
          "description": "Creates information about multiple access bindings to\nan account or property.\n\nThis method is transactional. If any AccessBinding\ncannot be created, none of the AccessBindings will be\ncreated.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.BatchCreateAccessBindingsRequest, dict]]):\n        The request object. Request message for\n        BatchCreateAccessBindings RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.BatchCreateAccessBindingsResponse:\n        Response message for\n        BatchCreateAccessBindings RPC.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.BatchCreateAccessBindingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_get_access_bindings",
          "description": "Gets information about multiple access bindings to an\naccount or property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.BatchGetAccessBindingsRequest, dict]]):\n        The request object. Request message for\n        BatchGetAccessBindings RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.BatchGetAccessBindingsResponse:\n        Response message for\n        BatchGetAccessBindings RPC.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.BatchGetAccessBindingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_update_access_bindings",
          "description": "Updates information about multiple access bindings to\nan account or property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.BatchUpdateAccessBindingsRequest, dict]]):\n        The request object. Request message for\n        BatchUpdateAccessBindings RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.BatchUpdateAccessBindingsResponse:\n        Response message for\n        BatchUpdateAccessBindings RPC.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.BatchUpdateAccessBindingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_delete_access_bindings",
          "description": "Deletes information about multiple users' links to an\naccount or property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.BatchDeleteAccessBindingsRequest, dict]]):\n        The request object. Request message for\n        BatchDeleteAccessBindings RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.BatchDeleteAccessBindingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_expanded_data_set",
          "description": "Lookup for a single ExpandedDataSet.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetExpandedDataSetRequest, dict]]):\n        The request object. Request message for\n        GetExpandedDataSet RPC.\n    name (:class:`str`):\n        Required. The name of the\n        ExpandedDataSet to get. Example format:\n        properties/1234/expandedDataSets/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.ExpandedDataSet:\n        A resource message representing a GA4\n        ExpandedDataSet.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ExpandedDataSet to get. Example format: properties/1234/expandedDataSets/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.ExpandedDataSet: A resource message representing a GA4 ExpandedDataSet."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetExpandedDataSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_expanded_data_sets",
          "description": "Lists ExpandedDataSets on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListExpandedDataSetsRequest, dict]]):\n        The request object. Request message for\n        ListExpandedDataSets RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListExpandedDataSetsAsyncPager:\n        Response message for\n        ListExpandedDataSets RPC.\n        Iterating over this object will yield\n        results and resolve additional pages\n        au",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListExpandedDataSetsAsyncPager: Response message for ListExpandedDataSets RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListExpandedDataSetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_expanded_data_set",
          "description": "Creates a ExpandedDataSet.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateExpandedDataSetRequest, dict]]):\n        The request object. Request message for\n        CreateExpandedDataSet RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    expanded_data_set (:class:`google.analytics.admin_v1alpha.types.ExpandedDataSet`):\n        Required. The ExpandedDataSet to\n        create.\n\n        This corresponds to the ``expanded_data_set`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "expanded_data_set": {
                "type": "google.analytics.admin_v1alpha.types.ExpandedDataSet",
                "description": "Required. The ExpandedDataSet to create.  This corresponds to the ``expanded_data_set`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.ExpandedDataSet: A resource message representing a GA4 ExpandedDataSet."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "expanded_data_set",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateExpandedDataSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_expanded_data_set",
          "description": "Updates a ExpandedDataSet on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateExpandedDataSetRequest, dict]]):\n        The request object. Request message for\n        UpdateExpandedDataSet RPC.\n    expanded_data_set (:class:`google.analytics.admin_v1alpha.types.ExpandedDataSet`):\n        Required. The ExpandedDataSet to update. The resource's\n        ``name`` field is used to identify the ExpandedDataSet\n        to be updated.\n\n        This corresponds to the ``expanded_data_set`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "expanded_data_set": {
                "type": "google.analytics.admin_v1alpha.types.ExpandedDataSet",
                "description": "Required. The ExpandedDataSet to update. The resource's ``name`` field is used to identify the ExpandedDataSet to be updated.  This corresponds to the ``expanded_data_set`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.ExpandedDataSet: A resource message representing a GA4 ExpandedDataSet."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "expanded_data_set",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateExpandedDataSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_expanded_data_set",
          "description": "Deletes a ExpandedDataSet on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteExpandedDataSetRequest, dict]]):\n        The request object. Request message for\n        DeleteExpandedDataSet RPC.\n    name (:class:`str`):\n        Required. Example format:\n        properties/1234/expandedDataSets/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Example format: properties/1234/expandedDataSets/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteExpandedDataSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_channel_group",
          "description": "Lookup for a single ChannelGroup.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetChannelGroupRequest, dict]]):\n        The request object. Request message for GetChannelGroup\n        RPC.\n    name (:class:`str`):\n        Required. The ChannelGroup to get.\n        Example format:\n        properties/1234/channelGroups/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.ChannelGroup:\n        A resource message representing a\n        Channel Group.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The ChannelGroup to get. Example format: properties/1234/channelGroups/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.ChannelGroup: A resource message representing a Channel Group."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetChannelGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_channel_groups",
          "description": "Lists ChannelGroups on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListChannelGroupsRequest, dict]]):\n        The request object. Request message for ListChannelGroups\n        RPC.\n    parent (:class:`str`):\n        Required. The property for which to\n        list ChannelGroups. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListChannelGroupsAsyncPager:\n        Response message for\n        ListChannelGroups RPC.\n        Iterating over this object will yield\n        results ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The property for which to list ChannelGroups. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListChannelGroupsAsyncPager: Response message for ListChannelGroups RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListChannelGroupsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_channel_group",
          "description": "Creates a ChannelGroup.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateChannelGroupRequest, dict]]):\n        The request object. Request message for\n        CreateChannelGroup RPC.\n    parent (:class:`str`):\n        Required. The property for which to\n        create a ChannelGroup. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    channel_group (:class:`google.analytics.admin_v1alpha.types.ChannelGroup`):\n        Required. The ChannelGroup to create.\n        This corresponds to the ``channel_group`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The property for which to create a ChannelGroup. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "channel_group": {
                "type": "google.analytics.admin_v1alpha.types.ChannelGroup",
                "description": "Required. The ChannelGroup to create. This corresponds to the ``channel_group`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.ChannelGroup: A resource message representing a Channel Group."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "channel_group",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateChannelGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_channel_group",
          "description": "Updates a ChannelGroup.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateChannelGroupRequest, dict]]):\n        The request object. Request message for\n        UpdateChannelGroup RPC.\n    channel_group (:class:`google.analytics.admin_v1alpha.types.ChannelGroup`):\n        Required. The ChannelGroup to update. The resource's\n        ``name`` field is used to identify the ChannelGroup to\n        be updated.\n\n        This corresponds to the ``channel_group`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "channel_group": {
                "type": "google.analytics.admin_v1alpha.types.ChannelGroup",
                "description": "Required. The ChannelGroup to update. The resource's ``name`` field is used to identify the ChannelGroup to be updated.  This corresponds to the ``channel_group`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.ChannelGroup: A resource message representing a Channel Group."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "channel_group",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateChannelGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_channel_group",
          "description": "Deletes a ChannelGroup on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteChannelGroupRequest, dict]]):\n        The request object. Request message for\n        DeleteChannelGroup RPC.\n    name (:class:`str`):\n        Required. The ChannelGroup to delete.\n        Example format:\n        properties/1234/channelGroups/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The ChannelGroup to delete. Example format: properties/1234/channelGroups/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteChannelGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_automated_ga4_configuration_opt_out",
          "description": "Sets the opt out status for the automated GA4 setup\nprocess for a UA property.\nNote: this has no effect on GA4 property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.SetAutomatedGa4ConfigurationOptOutRequest, dict]]):\n        The request object. Request for setting the opt out\n        status for the automated GA4 setup\n        process.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.SetAutomatedGa4ConfigurationOptOutResponse:\n        Response message for setting the opt\n        out status for the automated GA4 setup\n        process.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.SetAutomatedGa4ConfigurationOptOutRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_automated_ga4_configuration_opt_out",
          "description": "Fetches the opt out status for the automated GA4\nsetup process for a UA property.\nNote: this has no effect on GA4 property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.FetchAutomatedGa4ConfigurationOptOutRequest, dict]]):\n        The request object. Request for fetching the opt out\n        status for the automated GA4 setup\n        process.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.FetchAutomatedGa4ConfigurationOptOutResponse:\n        Response message for fetching the opt\n        out status for the automated GA4 setup\n        process.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.FetchAutomatedGa4ConfigurationOptOutRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_big_query_link",
          "description": "Creates a BigQueryLink.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateBigQueryLinkRequest, dict]]):\n        The request object. Request message for\n        CreateBigQueryLink RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    bigquery_link (:class:`google.analytics.admin_v1alpha.types.BigQueryLink`):\n        Required. The BigQueryLink to create.\n        This corresponds to the ``bigquery_link`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "bigquery_link": {
                "type": "google.analytics.admin_v1alpha.types.BigQueryLink",
                "description": "Required. The BigQueryLink to create. This corresponds to the ``bigquery_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.BigQueryLink: A link between a GA4 Property and BigQuery project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "bigquery_link",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateBigQueryLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_big_query_link",
          "description": "Lookup for a single BigQuery Link.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetBigQueryLinkRequest, dict]]):\n        The request object. Request message for GetBigQueryLink\n        RPC.\n    name (:class:`str`):\n        Required. The name of the BigQuery link to lookup.\n        Format:\n        properties/{property_id}/bigQueryLinks/{bigquery_link_id}\n        Example: properties/123/bigQueryLinks/456\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.BigQueryLink:\n        A link between a GA4 Property and\n        BigQuery project.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the BigQuery link to lookup. Format: properties/{property_id}/bigQueryLinks/{bigquery_link_id} Example: properties/123/bigQueryLinks/456  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.BigQueryLink: A link between a GA4 Property and BigQuery project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetBigQueryLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_big_query_links",
          "description": "Lists BigQuery Links on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListBigQueryLinksRequest, dict]]):\n        The request object. Request message for ListBigQueryLinks\n        RPC.\n    parent (:class:`str`):\n        Required. The name of the property to list BigQuery\n        links under. Format: properties/{property_id} Example:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListBigQueryLinksAsyncPager:\n        Response message for\n        ListBigQueryLinks RPC\n        Iterating over this",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the property to list BigQuery links under. Format: properties/{property_id} Example: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListBigQueryLinksAsyncPager: Response message for ListBigQueryLinks RPC Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListBigQueryLinksRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_big_query_link",
          "description": "Deletes a BigQueryLink on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteBigQueryLinkRequest, dict]]):\n        The request object. Request message for\n        DeleteBigQueryLink RPC.\n    name (:class:`str`):\n        Required. The BigQueryLink to delete.\n        Example format:\n        properties/1234/bigQueryLinks/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The BigQueryLink to delete. Example format: properties/1234/bigQueryLinks/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteBigQueryLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_big_query_link",
          "description": "Updates a BigQueryLink.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateBigQueryLinkRequest, dict]]):\n        The request object. Request message for\n        UpdateBigQueryLink RPC.\n    bigquery_link (:class:`google.analytics.admin_v1alpha.types.BigQueryLink`):\n        Required. The settings to update. The ``name`` field is\n        used to identify the settings to be updated.\n\n        This corresponds to the ``bigquery_link`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "bigquery_link": {
                "type": "google.analytics.admin_v1alpha.types.BigQueryLink",
                "description": "Required. The settings to update. The ``name`` field is used to identify the settings to be updated.  This corresponds to the ``bigquery_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.BigQueryLink: A link between a GA4 Property and BigQuery project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "bigquery_link",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateBigQueryLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_enhanced_measurement_settings",
          "description": "Returns the enhanced measurement settings for this\ndata stream. Note that the stream must enable enhanced\nmeasurement for these settings to take effect.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetEnhancedMeasurementSettingsRequest, dict]]):\n        The request object. Request message for\n        GetEnhancedMeasurementSettings RPC.\n    name (:class:`str`):\n        Required. The name of the settings to lookup. Format:\n        properties/{property}/dataStreams/{data_stream}/enhancedMeasurementSettings\n        Example:\n        \"properties/1000/dataStreams/2000/enhancedMeasurementSettings\"\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the settings to lookup. Format: properties/{property}/dataStreams/{data_stream}/enhancedMeasurementSettings Example: \"properties/1000/dataStreams/2000/enhancedMeasurementSettings\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.EnhancedMeasurementSettings: Singleton resource under a web DataStream, configuring measurement of additional site interactions and content."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetEnhancedMeasurementSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_enhanced_measurement_settings",
          "description": "Updates the enhanced measurement settings for this\ndata stream. Note that the stream must enable enhanced\nmeasurement for these settings to take effect.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateEnhancedMeasurementSettingsRequest, dict]]):\n        The request object. Request message for\n        UpdateEnhancedMeasurementSettings RPC.\n    enhanced_measurement_settings (:class:`google.analytics.admin_v1alpha.types.EnhancedMeasurementSettings`):\n        Required. The settings to update. The ``name`` field is\n        used to identify the settings to be updated.\n\n        This corresponds to the ``enhanced_measurement_settings`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "enhanced_measurement_settings": {
                "type": "google.analytics.admin_v1alpha.types.EnhancedMeasurementSettings",
                "description": "Required. The settings to update. The ``name`` field is used to identify the settings to be updated.  This corresponds to the ``enhanced_measurement_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.EnhancedMeasurementSettings: Singleton resource under a web DataStream, configuring measurement of additional site interactions and content."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "enhanced_measurement_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateEnhancedMeasurementSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_connected_site_tag",
          "description": "Creates a connected site tag for a Universal\nAnalytics property. You can create a maximum of 20\nconnected site tags per property. Note: This API cannot\nbe used on GA4 properties.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateConnectedSiteTagRequest, dict]]):\n        The request object. Request message for\n        CreateConnectedSiteTag RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.CreateConnectedSiteTagResponse:\n        Response message for\n        CreateConnectedSiteTag RPC.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateConnectedSiteTagRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_connected_site_tag",
          "description": "Deletes a connected site tag for a Universal\nAnalytics property. Note: this has no effect on GA4\nproperties.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteConnectedSiteTagRequest, dict]]):\n        The request object. Request message for\n        DeleteConnectedSiteTag RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteConnectedSiteTagRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_connected_site_tags",
          "description": "Lists the connected site tags for a Universal\nAnalytics property. A maximum of 20 connected site tags\nwill be returned. Note: this has no effect on GA4\nproperty.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListConnectedSiteTagsRequest, dict]]):\n        The request object. Request message for\n        ListConnectedSiteTags RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.ListConnectedSiteTagsResponse:\n        Response message for\n        ListConnectedSiteTags RPC.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListConnectedSiteTagsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_connected_ga4_property",
          "description": "Given a specified UA property, looks up the GA4\nproperty connected to it. Note: this cannot be used with\nGA4 properties.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.FetchConnectedGa4PropertyRequest, dict]]):\n        The request object. Request for looking up GA4 property\n        connected to a UA property.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.FetchConnectedGa4PropertyResponse:\n        Response for looking up GA4 property\n        connected to a UA property.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.FetchConnectedGa4PropertyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_ad_sense_link",
          "description": "Looks up a single AdSenseLink.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetAdSenseLinkRequest, dict]]):\n        The request object. Request message to be passed to\n        GetAdSenseLink method.\n    name (:class:`str`):\n        Required. Unique identifier for the\n        AdSense Link requested. Format:\n        properties/{propertyId}/adSenseLinks/{linkId}\n        Example:\n        properties/1234/adSenseLinks/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.AdSenseLink:\n        A link between a GA4 Property and an\n        AdSense for Content ad client.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Unique identifier for the AdSense Link requested. Format: properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.AdSenseLink: A link between a GA4 Property and an AdSense for Content ad client."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetAdSenseLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_ad_sense_link",
          "description": "Creates an AdSenseLink.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateAdSenseLinkRequest, dict]]):\n        The request object. Request message to be passed to\n        CreateAdSenseLink method.\n    parent (:class:`str`):\n        Required. The property for which to\n        create an AdSense Link. Format:\n        properties/{propertyId} Example:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    adsense_link (:class:`google.analytics.admin_v1alpha.types.AdSenseLink`):\n        Required. The AdSense Link to create\n        This corresponds to the ``adsense_link`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, s",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The property for which to create an AdSense Link. Format: properties/{propertyId} Example: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "adsense_link": {
                "type": "google.analytics.admin_v1alpha.types.AdSenseLink",
                "description": "Required. The AdSense Link to create This corresponds to the ``adsense_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.AdSenseLink: A link between a GA4 Property and an AdSense for Content ad client."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "adsense_link",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateAdSenseLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_ad_sense_link",
          "description": "Deletes an AdSenseLink.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteAdSenseLinkRequest, dict]]):\n        The request object. Request message to be passed to\n        DeleteAdSenseLink method.\n    name (:class:`str`):\n        Required. Unique identifier for the\n        AdSense Link to be deleted. Format:\n        properties/{propertyId}/adSenseLinks/{linkId}\n        Example:\n        properties/1234/adSenseLinks/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Unique identifier for the AdSense Link to be deleted. Format: properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteAdSenseLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_ad_sense_links",
          "description": "Lists AdSenseLinks on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListAdSenseLinksRequest, dict]]):\n        The request object. Request message to be passed to\n        ListAdSenseLinks method.\n    parent (:class:`str`):\n        Required. Resource name of the parent\n        property. Format:\n        properties/{propertyId}\n        Example: properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListAdSenseLinksAsyncPager:\n        Response message for ListAdSenseLinks\n        method.\n        Iterating over t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the parent property. Format: properties/{propertyId} Example: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListAdSenseLinksAsyncPager: Response message for ListAdSenseLinks method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListAdSenseLinksRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_event_create_rule",
          "description": "Lookup for a single EventCreateRule.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetEventCreateRuleRequest, dict]]):\n        The request object. Request message for\n        GetEventCreateRule RPC.\n    name (:class:`str`):\n        Required. The name of the\n        EventCreateRule to get. Example format:\n        properties/123/dataStreams/456/eventCreateRules/789\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.EventCreateRule:\n        An Event Create Rule defines\n        conditions that will trigger the\n        creation of an entirely new event based\n        upon",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the EventCreateRule to get. Example format: properties/123/dataStreams/456/eventCreateRules/789  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.EventCreateRule: An Event Create Rule defines conditions that will trigger the creation of an entirely new event based upon matched criteria of a source event. Additional mutations of the parameters from the source event can be defined.  Unlike Event Edit rules, Event Creation Rules have no defined order.  They will all be run independently.  Event Edit and Event Create rules can't be used to modify an event created from an Event Create rule."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetEventCreateRuleRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_event_create_rules",
          "description": "Lists EventCreateRules on a web data stream.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListEventCreateRulesRequest, dict]]):\n        The request object. Request message for\n        ListEventCreateRules RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/123/dataStreams/456\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListEventCreateRulesAsyncPager:\n        Response message for\n        ListEventCreateRules RPC.\n        Iterating over this object will yield\n        results and resolve addit",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/123/dataStreams/456  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListEventCreateRulesAsyncPager: Response message for ListEventCreateRules RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListEventCreateRulesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_event_create_rule",
          "description": "Creates an EventCreateRule.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateEventCreateRuleRequest, dict]]):\n        The request object. Request message for\n        CreateEventCreateRule RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/123/dataStreams/456\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    event_create_rule (:class:`google.analytics.admin_v1alpha.types.EventCreateRule`):\n        Required. The EventCreateRule to\n        create.\n\n        This corresponds to the ``event_create_rule`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along wi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/123/dataStreams/456  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "event_create_rule": {
                "type": "google.analytics.admin_v1alpha.types.EventCreateRule",
                "description": "Required. The EventCreateRule to create.  This corresponds to the ``event_create_rule`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.EventCreateRule: An Event Create Rule defines conditions that will trigger the creation of an entirely new event based upon matched criteria of a source event. Additional mutations of the parameters from the source event can be defined.  Unlike Event Edit rules, Event Creation Rules have no defined order.  They will all be run independently.  Event Edit and Event Create rules can't be used to modify an event created from an Event Create rule."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "event_create_rule",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateEventCreateRuleRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_event_create_rule",
          "description": "Updates an EventCreateRule.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateEventCreateRuleRequest, dict]]):\n        The request object. Request message for\n        UpdateEventCreateRule RPC.\n    event_create_rule (:class:`google.analytics.admin_v1alpha.types.EventCreateRule`):\n        Required. The EventCreateRule to update. The resource's\n        ``name`` field is used to identify the EventCreateRule\n        to be updated.\n\n        This corresponds to the ``event_create_rule`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "event_create_rule": {
                "type": "google.analytics.admin_v1alpha.types.EventCreateRule",
                "description": "Required. The EventCreateRule to update. The resource's ``name`` field is used to identify the EventCreateRule to be updated.  This corresponds to the ``event_create_rule`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.EventCreateRule: An Event Create Rule defines conditions that will trigger the creation of an entirely new event based upon matched criteria of a source event. Additional mutations of the parameters from the source event can be defined.  Unlike Event Edit rules, Event Creation Rules have no defined order.  They will all be run independently.  Event Edit and Event Create rules can't be used to modify an event created from an Event Create rule."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "event_create_rule",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateEventCreateRuleRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_event_create_rule",
          "description": "Deletes an EventCreateRule.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteEventCreateRuleRequest, dict]]):\n        The request object. Request message for\n        DeleteEventCreateRule RPC.\n    name (:class:`str`):\n        Required. Example format:\n\n        properties/123/dataStreams/456/eventCreateRules/789\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Example format:  properties/123/dataStreams/456/eventCreateRules/789  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteEventCreateRuleRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_event_edit_rule",
          "description": "Lookup for a single EventEditRule.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetEventEditRuleRequest, dict]]):\n        The request object. Request message for GetEventEditRule\n        RPC.\n    name (:class:`str`):\n        Required. The name of the\n        EventEditRule to get. Example format:\n        properties/123/dataStreams/456/eventEditRules/789\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.EventEditRule:\n        An Event Edit Rule defines conditions\n        that will trigger the creation of an\n        entirely new event based upon matched\n        crite",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the EventEditRule to get. Example format: properties/123/dataStreams/456/eventEditRules/789  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.EventEditRule: An Event Edit Rule defines conditions that will trigger the creation of an entirely new event based upon matched criteria of a source event. Additional mutations of the parameters from the source event can be defined.  Unlike Event Create rules, Event Edit Rules are applied in their defined order.  Event Edit rules can't be used to modify an event created from an Event Create rule."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetEventEditRuleRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_event_edit_rules",
          "description": "Lists EventEditRules on a web data stream.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListEventEditRulesRequest, dict]]):\n        The request object. Request message for\n        ListEventEditRules RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/123/dataStreams/456\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListEventEditRulesAsyncPager:\n        Response message for\n        ListEventEditRules RPC.\n        Iterating over this object will yield\n        results and resolve additional page",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/123/dataStreams/456  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListEventEditRulesAsyncPager: Response message for ListEventEditRules RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListEventEditRulesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_event_edit_rule",
          "description": "Creates an EventEditRule.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateEventEditRuleRequest, dict]]):\n        The request object. Request message for\n        CreateEventEditRule RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/123/dataStreams/456\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    event_edit_rule (:class:`google.analytics.admin_v1alpha.types.EventEditRule`):\n        Required. The EventEditRule to\n        create.\n\n        This corresponds to the ``event_edit_rule`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/123/dataStreams/456  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "event_edit_rule": {
                "type": "google.analytics.admin_v1alpha.types.EventEditRule",
                "description": "Required. The EventEditRule to create.  This corresponds to the ``event_edit_rule`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.EventEditRule: An Event Edit Rule defines conditions that will trigger the creation of an entirely new event based upon matched criteria of a source event. Additional mutations of the parameters from the source event can be defined.  Unlike Event Create rules, Event Edit Rules are applied in their defined order.  Event Edit rules can't be used to modify an event created from an Event Create rule."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "event_edit_rule",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateEventEditRuleRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_event_edit_rule",
          "description": "Updates an EventEditRule.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateEventEditRuleRequest, dict]]):\n        The request object. Request message for\n        UpdateEventEditRule RPC.\n    event_edit_rule (:class:`google.analytics.admin_v1alpha.types.EventEditRule`):\n        Required. The EventEditRule to update. The resource's\n        ``name`` field is used to identify the EventEditRule to\n        be updated.\n\n        This corresponds to the ``event_edit_rule`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instanc",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "event_edit_rule": {
                "type": "google.analytics.admin_v1alpha.types.EventEditRule",
                "description": "Required. The EventEditRule to update. The resource's ``name`` field is used to identify the EventEditRule to be updated.  This corresponds to the ``event_edit_rule`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.EventEditRule: An Event Edit Rule defines conditions that will trigger the creation of an entirely new event based upon matched criteria of a source event. Additional mutations of the parameters from the source event can be defined.  Unlike Event Create rules, Event Edit Rules are applied in their defined order.  Event Edit rules can't be used to modify an event created from an Event Create rule."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "event_edit_rule",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateEventEditRuleRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_event_edit_rule",
          "description": "Deletes an EventEditRule.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteEventEditRuleRequest, dict]]):\n        The request object. Request message for\n        DeleteEventEditRule RPC.\n    name (:class:`str`):\n        Required. Example format:\n        properties/123/dataStreams/456/eventEditRules/789\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Example format: properties/123/dataStreams/456/eventEditRules/789  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteEventEditRuleRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reorder_event_edit_rules",
          "description": "Changes the processing order of event edit rules on\nthe specified stream.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ReorderEventEditRulesRequest, dict]]):\n        The request object. Request message for\n        ReorderEventEditRules RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ReorderEventEditRulesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_data_redaction_settings",
          "description": "Updates a DataRedactionSettings on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateDataRedactionSettingsRequest, dict]]):\n        The request object. Request message for\n        UpdateDataRedactionSettings RPC.\n    data_redaction_settings (:class:`google.analytics.admin_v1alpha.types.DataRedactionSettings`):\n        Required. The settings to update. The ``name`` field is\n        used to identify the settings to be updated.\n\n        This corresponds to the ``data_redaction_settings`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Field names\n        must be in snake case (e.g., \"field_to_update\"). Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "data_redaction_settings": {
                "type": "google.analytics.admin_v1alpha.types.DataRedactionSettings",
                "description": "Required. The settings to update. The ``name`` field is used to identify the settings to be updated.  This corresponds to the ``data_redaction_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DataRedactionSettings: Settings for client-side data redaction. Singleton resource under a Web Stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "data_redaction_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateDataRedactionSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_data_redaction_settings",
          "description": "Lookup for a single DataRedactionSettings.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetDataRedactionSettingsRequest, dict]]):\n        The request object. Request message for\n        GetDataRedactionSettings RPC.\n    name (:class:`str`):\n        Required. The name of the settings to lookup. Format:\n        properties/{property}/dataStreams/{data_stream}/dataRedactionSettings\n        Example:\n        \"properties/1000/dataStreams/2000/dataRedactionSettings\"\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.DataRedactionSettings:\n        Settings for client-side d",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the settings to lookup. Format: properties/{property}/dataStreams/{data_stream}/dataRedactionSettings Example: \"properties/1000/dataStreams/2000/dataRedactionSettings\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.DataRedactionSettings: Settings for client-side data redaction. Singleton resource under a Web Stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetDataRedactionSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_calculated_metric",
          "description": "Lookup for a single CalculatedMetric.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetCalculatedMetricRequest, dict]]):\n        The request object. Request message for\n        GetCalculatedMetric RPC.\n    name (:class:`str`):\n        Required. The name of the CalculatedMetric to get.\n        Format:\n        properties/{property_id}/calculatedMetrics/{calculated_metric_id}\n        Example: properties/1234/calculatedMetrics/Metric01\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.CalculatedMetric:\n        A definition for a calculated metric.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CalculatedMetric to get. Format: properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example: properties/1234/calculatedMetrics/Metric01  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.CalculatedMetric: A definition for a calculated metric."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetCalculatedMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_calculated_metric",
          "description": "Creates a CalculatedMetric.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateCalculatedMetricRequest, dict]]):\n        The request object. Request message for\n        CreateCalculatedMetric RPC.\n    parent (:class:`str`):\n        Required. Format: properties/{property_id} Example:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    calculated_metric (:class:`google.analytics.admin_v1alpha.types.CalculatedMetric`):\n        Required. The CalculatedMetric to\n        create.\n\n        This corresponds to the ``calculated_metric`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    calculated_metric_id (:class:`str`):\n        Required. The ID to use for the calculated metric which\n        will become the final component of the calculated\n        metric's resource name.\n\n        This value should be 1-80 characte",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: properties/{property_id} Example: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "calculated_metric": {
                "type": "google.analytics.admin_v1alpha.types.CalculatedMetric",
                "description": "Required. The CalculatedMetric to create.  This corresponds to the ``calculated_metric`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "calculated_metric_id": {
                "type": "str",
                "description": "Required. The ID to use for the calculated metric which will become the final component of the calculated metric's resource name.  This value should be 1-80 characters and valid characters are `[a-zA-Z0-9_]`, no spaces allowed. calculated_metric_id must be unique between all calculated metrics under a property. The calculated_metric_id is used when referencing this calculated metric from external APIs, for example, \"calcMetric:{calculated_metric_id}\".  This corresponds to the ``calculated_metric_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.CalculatedMetric: A definition for a calculated metric."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "calculated_metric",
              "calculated_metric_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateCalculatedMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_calculated_metrics",
          "description": "Lists CalculatedMetrics on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListCalculatedMetricsRequest, dict]]):\n        The request object. Request message for\n        ListCalculatedMetrics RPC.\n    parent (:class:`str`):\n        Required. Example format:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListCalculatedMetricsAsyncPager:\n        Response message for\n        ListCalculatedMetrics RPC.\n        Iterating over this object will yield\n        results and resolve additional pages\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListCalculatedMetricsAsyncPager: Response message for ListCalculatedMetrics RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListCalculatedMetricsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_calculated_metric",
          "description": "Updates a CalculatedMetric on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateCalculatedMetricRequest, dict]]):\n        The request object. Request message for\n        UpdateCalculatedMetric RPC.\n    calculated_metric (:class:`google.analytics.admin_v1alpha.types.CalculatedMetric`):\n        Required. The CalculatedMetric to\n        update\n\n        This corresponds to the ``calculated_metric`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to be updated. Omitted\n        fields will not be updated. To replace the entire\n        entity, use one path with the string \"*\" to match all\n        fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "calculated_metric": {
                "type": "google.analytics.admin_v1alpha.types.CalculatedMetric",
                "description": "Required. The CalculatedMetric to update  This corresponds to the ``calculated_metric`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.CalculatedMetric: A definition for a calculated metric."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "calculated_metric",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateCalculatedMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_calculated_metric",
          "description": "Deletes a CalculatedMetric on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteCalculatedMetricRequest, dict]]):\n        The request object. Request message for\n        DeleteCalculatedMetric RPC.\n    name (:class:`str`):\n        Required. The name of the CalculatedMetric to delete.\n        Format:\n        properties/{property_id}/calculatedMetrics/{calculated_metric_id}\n        Example: properties/1234/calculatedMetrics/Metric01\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CalculatedMetric to delete. Format: properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example: properties/1234/calculatedMetrics/Metric01  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteCalculatedMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_rollup_property",
          "description": "Create a roll-up property and all roll-up property\nsource links.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateRollupPropertyRequest, dict]]):\n        The request object. Request message for\n        CreateRollupProperty RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.CreateRollupPropertyResponse:\n        Response message for\n        CreateRollupProperty RPC.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateRollupPropertyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_rollup_property_source_link",
          "description": "Lookup for a single roll-up property source Link.\nOnly roll-up properties can have source links, so this\nmethod will throw an error if used on other types of\nproperties.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetRollupPropertySourceLinkRequest, dict]]):\n        The request object. Request message for\n        GetRollupPropertySourceLink RPC.\n    name (:class:`str`):\n        Required. The name of the roll-up property source link\n        to lookup. Format:\n        properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id}\n        Example: properties/123/rollupPropertySourceLinks/456\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the roll-up property source link to lookup. Format: properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id} Example: properties/123/rollupPropertySourceLinks/456  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.RollupPropertySourceLink: A link that references a source property under the parent rollup property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetRollupPropertySourceLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_rollup_property_source_links",
          "description": "Lists roll-up property source Links on a property.\nOnly roll-up properties can have source links, so this\nmethod will throw an error if used on other types of\nproperties.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListRollupPropertySourceLinksRequest, dict]]):\n        The request object. Request message for\n        ListRollupPropertySourceLinks RPC.\n    parent (:class:`str`):\n        Required. The name of the roll-up property to list\n        roll-up property source links under. Format:\n        properties/{property_id} Example: properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    goog",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the roll-up property to list roll-up property source links under. Format: properties/{property_id} Example: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListRollupPropertySourceLinksAsyncPager: Response message for ListRollupPropertySourceLinks RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListRollupPropertySourceLinksRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_rollup_property_source_link",
          "description": "Creates a roll-up property source link.\nOnly roll-up properties can have source links, so this\nmethod will throw an error if used on other types of\nproperties.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateRollupPropertySourceLinkRequest, dict]]):\n        The request object. Request message for\n        CreateRollupPropertySourceLink RPC.\n    parent (:class:`str`):\n        Required. Format: properties/{property_id} Example:\n        properties/1234\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    rollup_property_source_link (:class:`google.analytics.admin_v1alpha.types.RollupPropertySourceLink`):\n        Required. The roll-up property source\n        link to create.\n\n        This corresponds to the ``rollup_property_source_link`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: properties/{property_id} Example: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "rollup_property_source_link": {
                "type": "google.analytics.admin_v1alpha.types.RollupPropertySourceLink",
                "description": "Required. The roll-up property source link to create.  This corresponds to the ``rollup_property_source_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.RollupPropertySourceLink: A link that references a source property under the parent rollup property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "rollup_property_source_link",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateRollupPropertySourceLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_rollup_property_source_link",
          "description": "Deletes a roll-up property source link.\nOnly roll-up properties can have source links, so this\nmethod will throw an error if used on other types of\nproperties.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteRollupPropertySourceLinkRequest, dict]]):\n        The request object. Request message for\n        DeleteRollupPropertySourceLink RPC.\n    name (:class:`str`):\n        Required. Format:\n        properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id}\n        Example: properties/1234/rollupPropertySourceLinks/5678\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id} Example: properties/1234/rollupPropertySourceLinks/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteRollupPropertySourceLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "provision_subproperty",
          "description": "Create a subproperty and a subproperty event filter\nthat applies to the created subproperty.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ProvisionSubpropertyRequest, dict]]):\n        The request object. Request message for CreateSubproperty\n        RPC.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.ProvisionSubpropertyResponse:\n        Response message for\n        ProvisionSubproperty RPC.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ProvisionSubpropertyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_subproperty_event_filter",
          "description": "Creates a subproperty Event Filter.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.CreateSubpropertyEventFilterRequest, dict]]):\n        The request object. Request message for\n        CreateSubpropertyEventFilter RPC.\n    parent (:class:`str`):\n        Required. The ordinary property for which to create a\n        subproperty event filter. Format: properties/property_id\n        Example: properties/123\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    subproperty_event_filter (:class:`google.analytics.admin_v1alpha.types.SubpropertyEventFilter`):\n        Required. The subproperty event\n        filter to create.\n\n        This corresponds to the ``subproperty_event_filter`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The ordinary property for which to create a subproperty event filter. Format: properties/property_id Example: properties/123  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "subproperty_event_filter": {
                "type": "google.analytics.admin_v1alpha.types.SubpropertyEventFilter",
                "description": "Required. The subproperty event filter to create.  This corresponds to the ``subproperty_event_filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.SubpropertyEventFilter: A resource message representing a GA4 Subproperty event filter."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "subproperty_event_filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateSubpropertyEventFilterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_subproperty_event_filter",
          "description": "Lookup for a single subproperty Event Filter.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.GetSubpropertyEventFilterRequest, dict]]):\n        The request object. Request message for\n        GetSubpropertyEventFilter RPC.\n    name (:class:`str`):\n        Required. Resource name of the subproperty event filter\n        to lookup. Format:\n        properties/property_id/subpropertyEventFilters/subproperty_event_filter\n        Example: properties/123/subpropertyEventFilters/456\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.types.SubpropertyEventFilter:\n        A resource ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the subproperty event filter to lookup. Format: properties/property_id/subpropertyEventFilters/subproperty_event_filter Example: properties/123/subpropertyEventFilters/456  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.SubpropertyEventFilter: A resource message representing a GA4 Subproperty event filter."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetSubpropertyEventFilterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_subproperty_event_filters",
          "description": "List all subproperty Event Filters on a property.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.ListSubpropertyEventFiltersRequest, dict]]):\n        The request object. Request message for\n        ListSubpropertyEventFilters RPC.\n    parent (:class:`str`):\n        Required. Resource name of the ordinary property.\n        Format: properties/property_id Example: properties/123\n\n        This corresponds to the ``parent`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.\n\nReturns:\n    google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListSubpropertyEventFiltersAsyncPager:\n        Response message for\n        ListSubpropertyEventFilter RPC.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the ordinary property. Format: properties/property_id Example: properties/123  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.services.analytics_admin_service.pagers.ListSubpropertyEventFiltersAsyncPager: Response message for ListSubpropertyEventFilter RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListSubpropertyEventFiltersRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_subproperty_event_filter",
          "description": "Updates a subproperty Event Filter.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.UpdateSubpropertyEventFilterRequest, dict]]):\n        The request object. Request message for\n        UpdateSubpropertyEventFilter RPC.\n    subproperty_event_filter (:class:`google.analytics.admin_v1alpha.types.SubpropertyEventFilter`):\n        Required. The subproperty event\n        filter to update.\n\n        This corresponds to the ``subproperty_event_filter`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`):\n        Required. The list of fields to update. Field names must\n        be in snake case (for example, \"field_to_update\").\n        Omitted fields will not be updated. To replace the\n        entire entity, use one path with the string \"*\" to match\n        all fields.\n\n        This corresponds to the ``update_mask`` field\n        on the ``request`` instance; if ``request`` is p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "subproperty_event_filter": {
                "type": "google.analytics.admin_v1alpha.types.SubpropertyEventFilter",
                "description": "Required. The subproperty event filter to update.  This corresponds to the ``subproperty_event_filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to update. Field names must be in snake case (for example, \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1alpha.types.SubpropertyEventFilter: A resource message representing a GA4 Subproperty event filter."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "subproperty_event_filter",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateSubpropertyEventFilterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_subproperty_event_filter",
          "description": "Deletes a subproperty event filter.\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1alpha.types.DeleteSubpropertyEventFilterRequest, dict]]):\n        The request object. Request message for\n        DeleteSubpropertyEventFilter RPC.\n    name (:class:`str`):\n        Required. Resource name of the subproperty event filter\n        to delete. Format:\n        properties/property_id/subpropertyEventFilters/subproperty_event_filter\n        Example: properties/123/subpropertyEventFilters/456\n\n        This corresponds to the ``name`` field\n        on the ``request`` instance; if ``request`` is provided, this\n        should not be set.\n    retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any,\n        should be retried.\n    timeout (float): The timeout for this request.\n    metadata (Sequence[Tuple[str, str]]): Strings which should be\n        sent along with the request as metadata.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the subproperty event filter to delete. Format: properties/property_id/subpropertyEventFilters/subproperty_event_filter Example: properties/123/subpropertyEventFilters/456  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteSubpropertyEventFilterRequest"
          ]
        }
      }
    ]
  }
}