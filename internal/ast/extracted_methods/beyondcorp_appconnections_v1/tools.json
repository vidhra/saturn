{
  "AppConnectionsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_app_connections",
          "description": "Lists AppConnections in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnections_v1\n\n    async def sample_list_app_connections():\n        # Create a client\n        client = beyondcorp_appconnections_v1.AppConnectionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = beyondcorp_appconnections_v1.ListAppConnectionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_app_connections(request=request)\n\n        # Handle the response\n        async for response in pag",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the AppConnection location using the form: ``projects/{project_id}/locations/{location_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.beyondcorp_appconnections_v1.services.app_connections_service.pagers.ListAppConnectionsAsyncPager: Response message for BeyondCorp.ListAppConnections. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_app_connection",
          "description": "Gets details of a single AppConnection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnections_v1\n\n    async def sample_get_app_connection():\n        # Create a client\n        client = beyondcorp_appconnections_v1.AppConnectionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = beyondcorp_appconnections_v1.GetAppConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_app_connection(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[U",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. BeyondCorp AppConnection name using the form: ``projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.beyondcorp_appconnections_v1.types.AppConnection: A BeyondCorp AppConnection resource represents a BeyondCorp protected AppConnection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppConnection. Multiple connectors can be authorised for a single AppConnection."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_app_connection",
          "description": "Creates a new AppConnection in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnections_v1\n\n    async def sample_create_app_connection():\n        # Create a client\n        client = beyondcorp_appconnections_v1.AppConnectionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        app_connection = beyondcorp_appconnections_v1.AppConnection()\n        app_connection.name = \"name_value\"\n        app_connection.type_ = \"TCP_PROXY\"\n        app_connection.application_endpoint.host = \"host_value\"\n        app_connection.application_endpoint.port =",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource project name of the AppConnection location using the form: ``projects/{project_id}/locations/{location_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "app_connection": {
                "type": "google.cloud.beyondcorp_appconnections_v1.types.AppConnection",
                "description": "Required. A BeyondCorp AppConnection resource.  This corresponds to the ``app_connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "app_connection_id": {
                "type": "str",
                "description": "Optional. User-settable AppConnection resource ID.  -  Must start with a letter. -  Must contain between 4-63 characters from ``/[a-z][0-9]-/``. -  Must end with a number or a letter.  This corresponds to the ``app_connection_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.beyondcorp_appconnections_v1.types.AppConnection` A BeyondCorp AppConnection resource represents a BeyondCorp protected AppConnection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppConnection. Multiple connectors can be authorised for a single AppConnection."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "app_connection",
              "app_connection_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_app_connection",
          "description": "Updates the parameters of a single AppConnection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnections_v1\n\n    async def sample_update_app_connection():\n        # Create a client\n        client = beyondcorp_appconnections_v1.AppConnectionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        app_connection = beyondcorp_appconnections_v1.AppConnection()\n        app_connection.name = \"name_value\"\n        app_connection.type_ = \"TCP_PROXY\"\n        app_connection.application_endpoint.host = \"host_value\"\n        app_connection.application_endpoint.port = 453\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "app_connection": {
                "type": "google.cloud.beyondcorp_appconnections_v1.types.AppConnection",
                "description": "Required. AppConnection message with updated fields. Only supported fields specified in update_mask are updated.  This corresponds to the ``app_connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [BeyondCorp.AppConnection]:  -  ``labels`` -  ``display_name`` -  ``application_endpoint`` -  ``connectors``  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.beyondcorp_appconnections_v1.types.AppConnection` A BeyondCorp AppConnection resource represents a BeyondCorp protected AppConnection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppConnection. Multiple connectors can be authorised for a single AppConnection."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "app_connection",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_app_connection",
          "description": "Deletes a single AppConnection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnections_v1\n\n    async def sample_delete_app_connection():\n        # Create a client\n        client = beyondcorp_appconnections_v1.AppConnectionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = beyondcorp_appconnections_v1.DeleteAppConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_app_connection(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operati",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. BeyondCorp Connector name using the form: ``projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "resolve_app_connections",
          "description": "Resolves AppConnections details for a given\nAppConnector. An internal method called by a connector\nto find AppConnections to connect to.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import beyondcorp_appconnections_v1\n\n    async def sample_resolve_app_connections():\n        # Create a client\n        client = beyondcorp_appconnections_v1.AppConnectionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = beyondcorp_appconnections_v1.ResolveAppConnectionsRequest(\n            parent=\"parent_value\",\n            app_connector_id=\"app_connector_id_value\",\n        )\n\n        # Make",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the AppConnection location using the form: ``projects/{project_id}/locations/{location_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.beyondcorp_appconnections_v1.services.app_connections_service.pagers.ResolveAppConnectionsAsyncPager: Response message for BeyondCorp.ResolveAppConnections. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}