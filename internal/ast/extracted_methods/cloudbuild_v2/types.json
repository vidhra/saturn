{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-build\\google\\cloud\\devtools\\cloudbuild_v2\\types\\cloudbuild.py": [
    {
      "type": "request_class",
      "name": "OperationMetadata",
      "docstring": "Represents the metadata of the long-running operation.\n\nAttributes:\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The time the operation was\n        created.\n    end_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The time the operation finished\n        running.\n    target (str):\n        Output only. Server-defined resource path for\n        the target of the operation.\n    verb (str):\n        Output only. Name of the verb executed by the\n        operation.\n    status_message (str):\n        Output only. Human-readable status of the\n        operation, if any.\n    requested_cancellation (bool):\n        Output only. Identifies whether the user has requested\n        cancellation of the operation. Operations that have\n        successfully been cancelled have [Operation.error][] value\n        with a [google.rpc.Status.code][google.rpc.Status.code] of\n        1, corresponding to ``Code.CANCELLED``.\n    api_version (str):\n        Output only. API version used to s",
      "attributes": {
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time the operation was created."
        },
        "end_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time the operation finished running."
        },
        "target": {
          "type": "str",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "verb": {
          "type": "str",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "status_message": {
          "type": "str",
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "requested_cancellation": {
          "type": "bool",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to ``Code.CANCELLED``."
        },
        "api_version": {
          "type": "str",
          "description": "Output only. API version used to start the operation."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RunWorkflowCustomOperationMetadata",
      "docstring": "Represents the custom metadata of the RunWorkflow\nlong-running operation.\n\nAttributes:\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The time the operation was\n        created.\n    end_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. The time the operation finished\n        running.\n    verb (str):\n        Output only. Name of the verb executed by the\n        operation.\n    requested_cancellation (bool):\n        Output only. Identifies whether the user has requested\n        cancellation of the operation. Operations that have\n        successfully been cancelled have [Operation.error][] value\n        with a [google.rpc.Status.code][google.rpc.Status.code] of\n        1, corresponding to ``Code.CANCELLED``.\n    api_version (str):\n        Output only. API version used to start the\n        operation.\n    target (str):\n        Output only. Server-defined resource path for\n        the target of the operation.\n    pipeline_run_id (str):\n        Output only. ID of th",
      "attributes": {
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time the operation was created."
        },
        "end_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time the operation finished running."
        },
        "verb": {
          "type": "str",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "requested_cancellation": {
          "type": "bool",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to ``Code.CANCELLED``."
        },
        "api_version": {
          "type": "str",
          "description": "Output only. API version used to start the operation."
        },
        "target": {
          "type": "str",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "pipeline_run_id": {
          "type": "str",
          "description": "Output only. ID of the pipeline run created by RunWorkflow."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-build\\google\\cloud\\devtools\\cloudbuild_v2\\types\\repositories.py": [
    {
      "type": "request_class",
      "name": "Connection",
      "docstring": "A connection to a SCM like GitHub, GitHub Enterprise,\nBitbucket Data Center, Bitbucket Cloud or GitLab.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Immutable. The resource name of the connection, in the\n        format\n        ``projects/{project}/locations/{location}/connections/{connection_id}``.\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Server assigned timestamp for\n        when the connection was created.\n    update_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Server assigned timestamp for\n        when the connection was updated.\n    github_config (google.cloud.devtools.cloudbuild_v2.types.GitHubConfig):\n        Configuration for connections to ",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Immutable. The resource name of the connection, in the format ``projects/{project}/locations/{location}/connections/{connection_id}``."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Server assigned timestamp for when the connection was created."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Server assigned timestamp for when the connection was updated."
        },
        "github_config": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.GitHubConfig",
          "description": "Configuration for connections to github.com.  This field is a member of `oneof`_ ``connection_config``."
        },
        "github_enterprise_config": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.GitHubEnterpriseConfig",
          "description": "Configuration for connections to an instance of GitHub Enterprise.  This field is a member of `oneof`_ ``connection_config``."
        },
        "gitlab_config": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.GitLabConfig",
          "description": "Configuration for connections to gitlab.com or an instance of GitLab Enterprise.  This field is a member of `oneof`_ ``connection_config``."
        },
        "bitbucket_data_center_config": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.BitbucketDataCenterConfig",
          "description": "Configuration for connections to Bitbucket Data Center.  This field is a member of `oneof`_ ``connection_config``."
        },
        "bitbucket_cloud_config": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.BitbucketCloudConfig",
          "description": "Configuration for connections to Bitbucket Cloud.  This field is a member of `oneof`_ ``connection_config``."
        },
        "installation_state": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.InstallationState",
          "description": "Output only. Installation state of the Connection."
        },
        "disabled": {
          "type": "bool",
          "description": "If disabled is set to true, functionality is disabled for this connection. Repository based API methods and webhooks processing for repositories in this connection will be disabled."
        },
        "reconciling": {
          "type": "bool",
          "description": "Output only. Set to true when the connection is being set up or updated in the background."
        },
        "annotations": {
          "type": "MutableMapping[str, str]",
          "description": "Allows clients to store small amounts of arbitrary data."
        },
        "etag": {
          "type": "str",
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
        }
      }
    },
    {
      "type": "request_class",
      "name": "InstallationState",
      "docstring": "Describes stage and necessary actions to be taken by the\nuser to complete the installation. Used for GitHub and GitHub\nEnterprise based connections.\n\nAttributes:\n    stage (google.cloud.devtools.cloudbuild_v2.types.InstallationState.Stage):\n        Output only. Current step of the installation\n        process.\n    message (str):\n        Output only. Message of what the user should\n        do next to continue the installation. Empty\n        string if the installation is already complete.\n    action_uri (str):\n        Output only. Link to follow for next action.\n        Empty string if the installation is already\n        complete.",
      "attributes": {
        "stage": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.InstallationState.Stage",
          "description": "Output only. Current step of the installation process."
        },
        "message": {
          "type": "str",
          "description": "Output only. Message of what the user should do next to continue the installation. Empty string if the installation is already complete."
        },
        "action_uri": {
          "type": "str",
          "description": "Output only. Link to follow for next action. Empty string if the installation is already complete."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FetchLinkableRepositoriesRequest",
      "docstring": "Request message for FetchLinkableRepositories.\n\nAttributes:\n    connection (str):\n        Required. The name of the Connection. Format:\n        ``projects/*/locations/*/connections/*``.\n    page_size (int):\n        Number of results to return in the list.\n        Default to 20.\n    page_token (str):\n        Page start.",
      "attributes": {
        "connection": {
          "type": "str",
          "description": "Required. The name of the Connection. Format: ``projects/*/locations/*/connections/*``."
        },
        "page_size": {
          "type": "int",
          "description": "Number of results to return in the list. Default to 20."
        },
        "page_token": {
          "type": "str",
          "description": "Page start."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FetchLinkableRepositoriesResponse",
      "docstring": "Response message for FetchLinkableRepositories.\n\nAttributes:\n    repositories (MutableSequence[google.cloud.devtools.cloudbuild_v2.types.Repository]):\n        repositories ready to be created.\n    next_page_token (str):\n        A token identifying a page of results the\n        server should return.",
      "attributes": {
        "repositories": {
          "type": "MutableSequence[google.cloud.devtools.cloudbuild_v2.types.Repository]",
          "description": "repositories ready to be created."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token identifying a page of results the server should return."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GitHubConfig",
      "docstring": "Configuration for connections to github.com.\n\nAttributes:\n    authorizer_credential (google.cloud.devtools.cloudbuild_v2.types.OAuthCredential):\n        OAuth credential of the account that\n        authorized the Cloud Build GitHub App. It is\n        recommended to use a robot account instead of a\n        human user account. The OAuth token must be tied\n        to the Cloud Build GitHub App.\n    app_installation_id (int):\n        GitHub App installation id.",
      "attributes": {
        "authorizer_credential": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.OAuthCredential",
          "description": "OAuth credential of the account that authorized the Cloud Build GitHub App. It is recommended to use a robot account instead of a human user account. The OAuth token must be tied to the Cloud Build GitHub App."
        },
        "app_installation_id": {
          "type": "int",
          "description": "GitHub App installation id."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GitHubEnterpriseConfig",
      "docstring": "Configuration for connections to an instance of GitHub\nEnterprise.\n\nAttributes:\n    host_uri (str):\n        Required. The URI of the GitHub Enterprise\n        host this connection is for.\n    api_key (str):\n        Required. API Key used for authentication of\n        webhook events.\n    app_id (int):\n        Id of the GitHub App created from the\n        manifest.\n    app_slug (str):\n        The URL-friendly name of the GitHub App.\n    private_key_secret_version (str):\n        SecretManager resource containing the private key of the\n        GitHub App, formatted as\n        ``projects/*/secrets/*/versions/*``.\n    webhook_secret_secret_version (str):\n        SecretManager resource containing the webhook secret of the\n        GitHub App, formatted as\n        ``projects/*/secrets/*/versions/*``.\n    app_installation_id (int):\n        ID of the installation of the GitHub App.\n    service_directory_config (google.cloud.devtools.cloudbuild_v2.types.ServiceDirectoryConfig):\n        Configuration for using Service Dir",
      "attributes": {
        "host_uri": {
          "type": "str",
          "description": "Required. The URI of the GitHub Enterprise host this connection is for."
        },
        "api_key": {
          "type": "str",
          "description": "Required. API Key used for authentication of webhook events."
        },
        "app_id": {
          "type": "int",
          "description": "Id of the GitHub App created from the manifest."
        },
        "app_slug": {
          "type": "str",
          "description": "The URL-friendly name of the GitHub App."
        },
        "private_key_secret_version": {
          "type": "str",
          "description": "SecretManager resource containing the private key of the GitHub App, formatted as ``projects/*/secrets/*/versions/*``."
        },
        "webhook_secret_secret_version": {
          "type": "str",
          "description": "SecretManager resource containing the webhook secret of the GitHub App, formatted as ``projects/*/secrets/*/versions/*``."
        },
        "app_installation_id": {
          "type": "int",
          "description": "ID of the installation of the GitHub App."
        },
        "service_directory_config": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.ServiceDirectoryConfig",
          "description": "Configuration for using Service Directory to privately connect to a GitHub Enterprise server. This should only be set if the GitHub Enterprise server is hosted on-premises and not reachable by public internet. If this field is left empty, calls to the GitHub Enterprise server will be made over the public internet."
        },
        "ssl_ca": {
          "type": "str",
          "description": "SSL certificate to use for requests to GitHub Enterprise."
        },
        "server_version": {
          "type": "str",
          "description": "Output only. GitHub Enterprise version installed at the host_uri."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GitLabConfig",
      "docstring": "Configuration for connections to gitlab.com or an instance of\nGitLab Enterprise.\n\nAttributes:\n    host_uri (str):\n        The URI of the GitLab Enterprise host this\n        connection is for. If not specified, the default\n        value is https://gitlab.com.\n    webhook_secret_secret_version (str):\n        Required. Immutable. SecretManager resource containing the\n        webhook secret of a GitLab Enterprise project, formatted as\n        ``projects/*/secrets/*/versions/*``.\n    read_authorizer_credential (google.cloud.devtools.cloudbuild_v2.types.UserCredential):\n        Required. A GitLab personal access token with the minimum\n        ``read_api`` scope access.\n    authorizer_credential (google.cloud.devtools.cloudbuild_v2.types.UserCredential):\n        Required. A GitLab personal access token with the ``api``\n        scope access.\n    service_directory_config (google.cloud.devtools.cloudbuild_v2.types.ServiceDirectoryConfig):\n        Configuration for using Service Directory to\n        privately connect to",
      "attributes": {
        "host_uri": {
          "type": "str",
          "description": "The URI of the GitLab Enterprise host this connection is for. If not specified, the default value is https://gitlab.com."
        },
        "webhook_secret_secret_version": {
          "type": "str",
          "description": "Required. Immutable. SecretManager resource containing the webhook secret of a GitLab Enterprise project, formatted as ``projects/*/secrets/*/versions/*``."
        },
        "read_authorizer_credential": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.UserCredential",
          "description": "Required. A GitLab personal access token with the minimum ``read_api`` scope access."
        },
        "authorizer_credential": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.UserCredential",
          "description": "Required. A GitLab personal access token with the ``api`` scope access."
        },
        "service_directory_config": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.ServiceDirectoryConfig",
          "description": "Configuration for using Service Directory to privately connect to a GitLab Enterprise server. This should only be set if the GitLab Enterprise server is hosted on-premises and not reachable by public internet. If this field is left empty, calls to the GitLab Enterprise server will be made over the public internet."
        },
        "ssl_ca": {
          "type": "str",
          "description": "SSL certificate to use for requests to GitLab Enterprise."
        },
        "server_version": {
          "type": "str",
          "description": "Output only. Version of the GitLab Enterprise server running on the ``host_uri``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BitbucketDataCenterConfig",
      "docstring": "Configuration for connections to Bitbucket Data Center.\n\nAttributes:\n    host_uri (str):\n        Required. The URI of the Bitbucket Data\n        Center instance or cluster this connection is\n        for.\n    webhook_secret_secret_version (str):\n        Required. Immutable. SecretManager resource containing the\n        webhook secret used to verify webhook events, formatted as\n        ``projects/*/secrets/*/versions/*``.\n    read_authorizer_credential (google.cloud.devtools.cloudbuild_v2.types.UserCredential):\n        Required. A http access token with the ``REPO_READ`` access.\n    authorizer_credential (google.cloud.devtools.cloudbuild_v2.types.UserCredential):\n        Required. A http access token with the ``REPO_ADMIN`` scope\n        access.\n    service_directory_config (google.cloud.devtools.cloudbuild_v2.types.ServiceDirectoryConfig):\n        Optional. Configuration for using Service\n        Directory to privately connect to a Bitbucket\n        Data Center. This should only be set if the\n        Bitbucket",
      "attributes": {
        "host_uri": {
          "type": "str",
          "description": "Required. The URI of the Bitbucket Data Center instance or cluster this connection is for."
        },
        "webhook_secret_secret_version": {
          "type": "str",
          "description": "Required. Immutable. SecretManager resource containing the webhook secret used to verify webhook events, formatted as ``projects/*/secrets/*/versions/*``."
        },
        "read_authorizer_credential": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.UserCredential",
          "description": "Required. A http access token with the ``REPO_READ`` access."
        },
        "authorizer_credential": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.UserCredential",
          "description": "Required. A http access token with the ``REPO_ADMIN`` scope access."
        },
        "service_directory_config": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.ServiceDirectoryConfig",
          "description": "Optional. Configuration for using Service Directory to privately connect to a Bitbucket Data Center. This should only be set if the Bitbucket Data Center is hosted on-premises and not reachable by public internet. If this field is left empty, calls to the Bitbucket Data Center will be made over the public internet."
        },
        "ssl_ca": {
          "type": "str",
          "description": "Optional. SSL certificate to use for requests to the Bitbucket Data Center."
        },
        "server_version": {
          "type": "str",
          "description": "Output only. Version of the Bitbucket Data Center running on the ``host_uri``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BitbucketCloudConfig",
      "docstring": "Configuration for connections to Bitbucket Cloud.\n\nAttributes:\n    workspace (str):\n        Required. The Bitbucket Cloud Workspace ID to\n        be connected to Google Cloud Platform.\n    webhook_secret_secret_version (str):\n        Required. SecretManager resource containing the webhook\n        secret used to verify webhook events, formatted as\n        ``projects/*/secrets/*/versions/*``.\n    read_authorizer_credential (google.cloud.devtools.cloudbuild_v2.types.UserCredential):\n        Required. An access token with the ``repository`` access. It\n        can be either a workspace, project or repository access\n        token. It's recommended to use a system account to generate\n        the credentials.\n    authorizer_credential (google.cloud.devtools.cloudbuild_v2.types.UserCredential):\n        Required. An access token with the ``webhook``,\n        ``repository``, ``repository:admin`` and ``pullrequest``\n        scope access. It can be either a workspace, project or\n        repository access token. It's recom",
      "attributes": {
        "workspace": {
          "type": "str",
          "description": "Required. The Bitbucket Cloud Workspace ID to be connected to Google Cloud Platform."
        },
        "webhook_secret_secret_version": {
          "type": "str",
          "description": "Required. SecretManager resource containing the webhook secret used to verify webhook events, formatted as ``projects/*/secrets/*/versions/*``."
        },
        "read_authorizer_credential": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.UserCredential",
          "description": "Required. An access token with the ``repository`` access. It can be either a workspace, project or repository access token. It's recommended to use a system account to generate the credentials."
        },
        "authorizer_credential": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.UserCredential",
          "description": "Required. An access token with the ``webhook``, ``repository``, ``repository:admin`` and ``pullrequest`` scope access. It can be either a workspace, project or repository access token. It's recommended to use a system account to generate these credentials."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ServiceDirectoryConfig",
      "docstring": "ServiceDirectoryConfig represents Service Directory\nconfiguration for a connection.\n\nAttributes:\n    service (str):\n        Required. The Service Directory service name.\n        Format:\n\n        projects/{project}/locations/{location}/namespaces/{namespace}/services/{service}.",
      "attributes": {
        "service": {
          "type": "str",
          "description": "Required. The Service Directory service name. Format:  projects/{project}/locations/{location}/namespaces/{namespace}/services/{service}."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Repository",
      "docstring": "A repository associated to a parent connection.\n\nAttributes:\n    name (str):\n        Immutable. Resource name of the repository, in the format\n        ``projects/*/locations/*/connections/*/repositories/*``.\n    remote_uri (str):\n        Required. Git Clone HTTPS URI.\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Server assigned timestamp for\n        when the connection was created.\n    update_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Server assigned timestamp for\n        when the connection was updated.\n    annotations (MutableMapping[str, str]):\n        Allows clients to store small amounts of\n        arbitrary data.\n    etag (str):\n        This checksum is computed by the server based\n        on the value of other fields, and may be sent on\n        update and delete requests to ensure the client\n        has an up-to-date value before proceeding.\n    webhook_id (str):\n        Output only. External ID of the webhook\n        created for the reposito",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Immutable. Resource name of the repository, in the format ``projects/*/locations/*/connections/*/repositories/*``."
        },
        "remote_uri": {
          "type": "str",
          "description": "Required. Git Clone HTTPS URI."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Server assigned timestamp for when the connection was created."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Server assigned timestamp for when the connection was updated."
        },
        "annotations": {
          "type": "MutableMapping[str, str]",
          "description": "Allows clients to store small amounts of arbitrary data."
        },
        "etag": {
          "type": "str",
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
        },
        "webhook_id": {
          "type": "str",
          "description": "Output only. External ID of the webhook created for the repository."
        }
      }
    },
    {
      "type": "request_class",
      "name": "OAuthCredential",
      "docstring": "Represents an OAuth token of the account that authorized the\nConnection, and associated metadata.\n\nAttributes:\n    oauth_token_secret_version (str):\n        A SecretManager resource containing the OAuth token that\n        authorizes the Cloud Build connection. Format:\n        ``projects/*/secrets/*/versions/*``.\n    username (str):\n        Output only. The username associated to this\n        token.",
      "attributes": {
        "oauth_token_secret_version": {
          "type": "str",
          "description": "A SecretManager resource containing the OAuth token that authorizes the Cloud Build connection. Format: ``projects/*/secrets/*/versions/*``."
        },
        "username": {
          "type": "str",
          "description": "Output only. The username associated to this token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UserCredential",
      "docstring": "Represents a personal access token that authorized the\nConnection, and associated metadata.\n\nAttributes:\n    user_token_secret_version (str):\n        Required. A SecretManager resource containing the user token\n        that authorizes the Cloud Build connection. Format:\n        ``projects/*/secrets/*/versions/*``.\n    username (str):\n        Output only. The username associated to this\n        token.",
      "attributes": {
        "user_token_secret_version": {
          "type": "str",
          "description": "Required. A SecretManager resource containing the user token that authorizes the Cloud Build connection. Format: ``projects/*/secrets/*/versions/*``."
        },
        "username": {
          "type": "str",
          "description": "Output only. The username associated to this token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateConnectionRequest",
      "docstring": "Message for creating a Connection\n\nAttributes:\n    parent (str):\n        Required. Project and location where the connection will be\n        created. Format: ``projects/*/locations/*``.\n    connection (google.cloud.devtools.cloudbuild_v2.types.Connection):\n        Required. The Connection to create.\n    connection_id (str):\n        Required. The ID to use for the Connection, which will\n        become the final component of the Connection's resource\n        name. Names must be unique per-project per-location. Allows\n        alphanumeric characters and any of -._~%!$&'()*+,;=@.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Project and location where the connection will be created. Format: ``projects/*/locations/*``."
        },
        "connection": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.Connection",
          "description": "Required. The Connection to create."
        },
        "connection_id": {
          "type": "str",
          "description": "Required. The ID to use for the Connection, which will become the final component of the Connection's resource name. Names must be unique per-project per-location. Allows alphanumeric characters and any of -._~%!$&'()*+,;=@."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetConnectionRequest",
      "docstring": "Message for getting the details of a Connection.\n\nAttributes:\n    name (str):\n        Required. The name of the Connection to retrieve. Format:\n        ``projects/*/locations/*/connections/*``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the Connection to retrieve. Format: ``projects/*/locations/*/connections/*``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListConnectionsRequest",
      "docstring": "Message for requesting list of Connections.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of\n        Connections. Format: ``projects/*/locations/*``.\n    page_size (int):\n        Number of results to return in the list.\n    page_token (str):\n        Page start.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent, which owns this collection of Connections. Format: ``projects/*/locations/*``."
        },
        "page_size": {
          "type": "int",
          "description": "Number of results to return in the list."
        },
        "page_token": {
          "type": "str",
          "description": "Page start."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListConnectionsResponse",
      "docstring": "Message for response to listing Connections.\n\nAttributes:\n    connections (MutableSequence[google.cloud.devtools.cloudbuild_v2.types.Connection]):\n        The list of Connections.\n    next_page_token (str):\n        A token identifying a page of results the\n        server should return.",
      "attributes": {
        "connections": {
          "type": "MutableSequence[google.cloud.devtools.cloudbuild_v2.types.Connection]",
          "description": "The list of Connections."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token identifying a page of results the server should return."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateConnectionRequest",
      "docstring": "Message for updating a Connection.\n\nAttributes:\n    connection (google.cloud.devtools.cloudbuild_v2.types.Connection):\n        Required. The Connection to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to be updated.\n    allow_missing (bool):\n        If set to true, and the connection is not found a new\n        connection will be created. In this situation\n        ``update_mask`` is ignored. The creation will succeed only\n        if the input connection has all the necessary information\n        (e.g a github_config with both user_oauth_token and\n        installation_id properties).\n    etag (str):\n        The current etag of the connection.\n        If an etag is provided and does not match the\n        current etag of the connection, update will be\n        blocked and an ABORTED error will be returned.",
      "attributes": {
        "connection": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.Connection",
          "description": "Required. The Connection to update."
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "The list of fields to be updated."
        },
        "allow_missing": {
          "type": "bool",
          "description": "If set to true, and the connection is not found a new connection will be created. In this situation ``update_mask`` is ignored. The creation will succeed only if the input connection has all the necessary information (e.g a github_config with both user_oauth_token and installation_id properties)."
        },
        "etag": {
          "type": "str",
          "description": "The current etag of the connection. If an etag is provided and does not match the current etag of the connection, update will be blocked and an ABORTED error will be returned."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteConnectionRequest",
      "docstring": "Message for deleting a Connection.\n\nAttributes:\n    name (str):\n        Required. The name of the Connection to delete. Format:\n        ``projects/*/locations/*/connections/*``.\n    etag (str):\n        The current etag of the connection.\n        If an etag is provided and does not match the\n        current etag of the connection, deletion will be\n        blocked and an ABORTED error will be returned.\n    validate_only (bool):\n        If set, validate the request, but do not\n        actually post it.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the Connection to delete. Format: ``projects/*/locations/*/connections/*``."
        },
        "etag": {
          "type": "str",
          "description": "The current etag of the connection. If an etag is provided and does not match the current etag of the connection, deletion will be blocked and an ABORTED error will be returned."
        },
        "validate_only": {
          "type": "bool",
          "description": "If set, validate the request, but do not actually post it."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateRepositoryRequest",
      "docstring": "Message for creating a Repository.\n\nAttributes:\n    parent (str):\n        Required. The connection to contain the\n        repository. If the request is part of a\n        BatchCreateRepositoriesRequest, this field\n        should be empty or match the parent specified\n        there.\n    repository (google.cloud.devtools.cloudbuild_v2.types.Repository):\n        Required. The repository to create.\n    repository_id (str):\n        Required. The ID to use for the repository, which will\n        become the final component of the repository's resource\n        name. This ID should be unique in the connection. Allows\n        alphanumeric characters and any of -._~%!$&'()*+,;=@.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The connection to contain the repository. If the request is part of a BatchCreateRepositoriesRequest, this field should be empty or match the parent specified there."
        },
        "repository": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.Repository",
          "description": "Required. The repository to create."
        },
        "repository_id": {
          "type": "str",
          "description": "Required. The ID to use for the repository, which will become the final component of the repository's resource name. This ID should be unique in the connection. Allows alphanumeric characters and any of -._~%!$&'()*+,;=@."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BatchCreateRepositoriesRequest",
      "docstring": "Message for creating repositoritories in batch.\n\nAttributes:\n    parent (str):\n        Required. The connection to contain all the repositories\n        being created. Format:\n        projects/\\ */locations/*/connections/\\* The parent field in\n        the CreateRepositoryRequest messages must either be empty or\n        match this field.\n    requests (MutableSequence[google.cloud.devtools.cloudbuild_v2.types.CreateRepositoryRequest]):\n        Required. The request messages specifying the\n        repositories to create.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The connection to contain all the repositories being created. Format: projects/\\ */locations/*/connections/\\* The parent field in the CreateRepositoryRequest messages must either be empty or match this field."
        },
        "requests": {
          "type": "MutableSequence[google.cloud.devtools.cloudbuild_v2.types.CreateRepositoryRequest]",
          "description": "Required. The request messages specifying the repositories to create."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BatchCreateRepositoriesResponse",
      "docstring": "Message for response of creating repositories in batch.\n\nAttributes:\n    repositories (MutableSequence[google.cloud.devtools.cloudbuild_v2.types.Repository]):\n        Repository resources created.",
      "attributes": {
        "repositories": {
          "type": "MutableSequence[google.cloud.devtools.cloudbuild_v2.types.Repository]",
          "description": "Repository resources created."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetRepositoryRequest",
      "docstring": "Message for getting the details of a Repository.\n\nAttributes:\n    name (str):\n        Required. The name of the Repository to retrieve. Format:\n        ``projects/*/locations/*/connections/*/repositories/*``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the Repository to retrieve. Format: ``projects/*/locations/*/connections/*/repositories/*``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListRepositoriesRequest",
      "docstring": "Message for requesting list of Repositories.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of\n        Repositories. Format:\n        ``projects/*/locations/*/connections/*``.\n    page_size (int):\n        Number of results to return in the list.\n    page_token (str):\n        Page start.\n    filter (str):\n        A filter expression that filters resources listed in the\n        response. Expressions must follow API improvement proposal\n        `AIP-160 <https://google.aip.dev/160>`__. e.g.\n        ``remote_uri:\"https://github.com*\"``.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent, which owns this collection of Repositories. Format: ``projects/*/locations/*/connections/*``."
        },
        "page_size": {
          "type": "int",
          "description": "Number of results to return in the list."
        },
        "page_token": {
          "type": "str",
          "description": "Page start."
        },
        "filter": {
          "type": "str",
          "description": "A filter expression that filters resources listed in the response. Expressions must follow API improvement proposal `AIP-160 <https://google.aip.dev/160>`__. e.g. ``remote_uri:\"https://github.com*\"``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListRepositoriesResponse",
      "docstring": "Message for response to listing Repositories.\n\nAttributes:\n    repositories (MutableSequence[google.cloud.devtools.cloudbuild_v2.types.Repository]):\n        The list of Repositories.\n    next_page_token (str):\n        A token identifying a page of results the\n        server should return.",
      "attributes": {
        "repositories": {
          "type": "MutableSequence[google.cloud.devtools.cloudbuild_v2.types.Repository]",
          "description": "The list of Repositories."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token identifying a page of results the server should return."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteRepositoryRequest",
      "docstring": "Message for deleting a Repository.\n\nAttributes:\n    name (str):\n        Required. The name of the Repository to delete. Format:\n        ``projects/*/locations/*/connections/*/repositories/*``.\n    etag (str):\n        The current etag of the repository.\n        If an etag is provided and does not match the\n        current etag of the repository, deletion will be\n        blocked and an ABORTED error will be returned.\n    validate_only (bool):\n        If set, validate the request, but do not\n        actually post it.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the Repository to delete. Format: ``projects/*/locations/*/connections/*/repositories/*``."
        },
        "etag": {
          "type": "str",
          "description": "The current etag of the repository. If an etag is provided and does not match the current etag of the repository, deletion will be blocked and an ABORTED error will be returned."
        },
        "validate_only": {
          "type": "bool",
          "description": "If set, validate the request, but do not actually post it."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FetchReadWriteTokenRequest",
      "docstring": "Message for fetching SCM read/write token.\n\nAttributes:\n    repository (str):\n        Required. The resource name of the repository in the format\n        ``projects/*/locations/*/connections/*/repositories/*``.",
      "attributes": {
        "repository": {
          "type": "str",
          "description": "Required. The resource name of the repository in the format ``projects/*/locations/*/connections/*/repositories/*``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FetchReadTokenRequest",
      "docstring": "Message for fetching SCM read token.\n\nAttributes:\n    repository (str):\n        Required. The resource name of the repository in the format\n        ``projects/*/locations/*/connections/*/repositories/*``.",
      "attributes": {
        "repository": {
          "type": "str",
          "description": "Required. The resource name of the repository in the format ``projects/*/locations/*/connections/*/repositories/*``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FetchReadTokenResponse",
      "docstring": "Message for responding to get read token.\n\nAttributes:\n    token (str):\n        The token content.\n    expiration_time (google.protobuf.timestamp_pb2.Timestamp):\n        Expiration timestamp. Can be empty if unknown\n        or non-expiring.",
      "attributes": {
        "token": {
          "type": "str",
          "description": "The token content."
        },
        "expiration_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Expiration timestamp. Can be empty if unknown or non-expiring."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FetchReadWriteTokenResponse",
      "docstring": "Message for responding to get read/write token.\n\nAttributes:\n    token (str):\n        The token content.\n    expiration_time (google.protobuf.timestamp_pb2.Timestamp):\n        Expiration timestamp. Can be empty if unknown\n        or non-expiring.",
      "attributes": {
        "token": {
          "type": "str",
          "description": "The token content."
        },
        "expiration_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Expiration timestamp. Can be empty if unknown or non-expiring."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ProcessWebhookRequest",
      "docstring": "RPC request object accepted by the ProcessWebhook RPC method.\n\nAttributes:\n    parent (str):\n        Required. Project and location where the webhook will be\n        received. Format: ``projects/*/locations/*``.\n    body (google.api.httpbody_pb2.HttpBody):\n        HTTP request body.\n    webhook_key (str):\n        Arbitrary additional key to find the maching\n        repository for a webhook event if needed.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Project and location where the webhook will be received. Format: ``projects/*/locations/*``."
        },
        "body": {
          "type": "google.api.httpbody_pb2.HttpBody",
          "description": "HTTP request body."
        },
        "webhook_key": {
          "type": "str",
          "description": "Arbitrary additional key to find the maching repository for a webhook event if needed."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FetchGitRefsRequest",
      "docstring": "Request for fetching git refs\n\nAttributes:\n    repository (str):\n        Required. The resource name of the repository in the format\n        ``projects/*/locations/*/connections/*/repositories/*``.\n    ref_type (google.cloud.devtools.cloudbuild_v2.types.FetchGitRefsRequest.RefType):\n        Type of refs to fetch",
      "attributes": {
        "repository": {
          "type": "str",
          "description": "Required. The resource name of the repository in the format ``projects/*/locations/*/connections/*/repositories/*``."
        },
        "ref_type": {
          "type": "google.cloud.devtools.cloudbuild_v2.types.FetchGitRefsRequest.RefType",
          "description": "Type of refs to fetch"
        }
      }
    },
    {
      "type": "request_class",
      "name": "FetchGitRefsResponse",
      "docstring": "Response for fetching git refs\n\nAttributes:\n    ref_names (MutableSequence[str]):\n        Name of the refs fetched.",
      "attributes": {
        "ref_names": {
          "type": "MutableSequence[str]",
          "description": "Name of the refs fetched."
        }
      }
    }
  ]
}