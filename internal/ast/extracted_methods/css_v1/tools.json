{
  "AccountLabelsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_account_labels",
          "description": "Lists the labels assigned to an account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import css_v1\n\n    async def sample_list_account_labels():\n        # Create a client\n        client = css_v1.AccountLabelsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = css_v1.ListAccountLabelsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_account_labels(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent account. Format: accounts/{account}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.css_v1.services.account_labels_service.pagers.ListAccountLabelsAsyncPager: Response message for the ListAccountLabels method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "accounts_labels.ListAccountLabelsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_account_label",
          "description": "Creates a new label, not assigned to any account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import css_v1\n\n    async def sample_create_account_label():\n        # Create a client\n        client = css_v1.AccountLabelsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = css_v1.CreateAccountLabelRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_account_label(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shopping.css_v1.types.CreateAcco",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent account. Format: accounts/{account}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "account_label": {
                "type": "google.shopping.css_v1.types.AccountLabel",
                "description": "Required. The label to create. This corresponds to the ``account_label`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.css_v1.types.AccountLabel: Label assigned by CSS domain or CSS group to one of its sub-accounts."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "account_label",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "accounts_labels.CreateAccountLabelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_account_label",
          "description": "Updates a label.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import css_v1\n\n    async def sample_update_account_label():\n        # Create a client\n        client = css_v1.AccountLabelsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = css_v1.UpdateAccountLabelRequest(\n        )\n\n        # Make the request\n        response = await client.update_account_label(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shopping.css_v1.types.UpdateAccountLabelRequest, dict]]):\n        The request object. Request messag",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "account_label": {
                "type": "google.shopping.css_v1.types.AccountLabel",
                "description": "Required. The updated label. All fields must be provided.  This corresponds to the ``account_label`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.css_v1.types.AccountLabel: Label assigned by CSS domain or CSS group to one of its sub-accounts."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "account_label",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "accounts_labels.UpdateAccountLabelRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_account_label",
          "description": "Deletes a label and removes it from all accounts to\nwhich it was assigned.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import css_v1\n\n    async def sample_delete_account_label():\n        # Create a client\n        client = css_v1.AccountLabelsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = css_v1.DeleteAccountLabelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_account_label(request=request)\n\nArgs:\n    request (Optional[Union[google.shopping.css_v1.types.DeleteAccountLabelRequest, dict]]):\n        The request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the label to delete. Format: accounts/{account}/labels/{label}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "accounts_labels.DeleteAccountLabelRequest"
          ]
        }
      }
    ]
  },
  "AccountsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_child_accounts",
          "description": "Lists all the accounts under the specified CSS\naccount ID, and optionally filters by label ID and\naccount name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import css_v1\n\n    async def sample_list_child_accounts():\n        # Create a client\n        client = css_v1.AccountsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = css_v1.ListChildAccountsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_child_accounts(request=request)\n\n        # Handle the response\n        async for response in page_result:\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent account. Must be a CSS group or domain. Format: accounts/{account}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.css_v1.services.accounts_service.pagers.ListChildAccountsAsyncPager: Response message for the ListChildAccounts method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "accounts.ListChildAccountsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_account",
          "description": "Retrieves a single CSS/MC account by ID.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import css_v1\n\n    async def sample_get_account():\n        # Create a client\n        client = css_v1.AccountsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = css_v1.GetAccountRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_account(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shopping.css_v1.types.GetAccountRequest, dict]]):\n        The request object",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the managed CSS/MC account. Format: accounts/{account}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.css_v1.types.Account: Information about CSS/MC account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "accounts.GetAccountRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_labels",
          "description": "Updates labels assigned to CSS/MC accounts by a CSS\ndomain.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import css_v1\n\n    async def sample_update_labels():\n        # Create a client\n        client = css_v1.AccountsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = css_v1.UpdateAccountLabelsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.update_labels(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shopping.css_v1.types.UpdateAccountLabelsReq",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The label resource name. Format: accounts/{account}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.css_v1.types.Account: Information about CSS/MC account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "accounts.UpdateAccountLabelsRequest"
          ]
        }
      }
    ]
  },
  "CssProductInputsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "insert_css_product_input",
          "description": "Uploads a CssProductInput to your CSS Center account.\nIf an input with the same contentLanguage, identity,\nfeedLabel and feedId already exists, this method\nreplaces that entry.\n\nAfter inserting, updating, or deleting a CSS Product\ninput, it may take several minutes before the processed\nCSS Product can be retrieved.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import css_v1\n\n    async def sample_insert_css_product_input():\n        # Create a client\n        client = css_v1.CssProductInputsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        css_product_input = css_v1.CssProductInput",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "css_product_inputs.InsertCssProductInputRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_css_product_input",
          "description": "Deletes a CSS Product input from your CSS Center\naccount.\nAfter a delete it may take several minutes until the\ninput is no longer available.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import css_v1\n\n    async def sample_delete_css_product_input():\n        # Create a client\n        client = css_v1.CssProductInputsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = css_v1.DeleteCssProductInputRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_css_product_input(request=request)\n\nArgs:\n    request (Optional[Union[goog",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CSS product input resource to delete. Format: accounts/{account}/cssProductInputs/{css_product_input}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "css_product_inputs.DeleteCssProductInputRequest"
          ]
        }
      }
    ]
  },
  "CssProductsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_css_product",
          "description": "Retrieves the processed CSS Product from your CSS\nCenter account. After inserting, updating, or deleting a\nproduct input, it may take several minutes before the\nupdated final product can be retrieved.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import css_v1\n\n    async def sample_get_css_product():\n        # Create a client\n        client = css_v1.CssProductsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = css_v1.GetCssProductRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_css_product(request=request)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CSS product to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.css_v1.types.CssProduct: The processed CSS Product(a.k.a Aggregate Offer internally)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "css_products.GetCssProductRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_css_products",
          "description": "Lists the processed CSS Products in your CSS Center\naccount. The response might contain fewer items than\nspecified by pageSize. Rely on pageToken to determine if\nthere are more items to be requested.\n\nAfter inserting, updating, or deleting a CSS product\ninput, it may take several minutes before the updated\nprocessed CSS product can be retrieved.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import css_v1\n\n    async def sample_list_css_products():\n        # Create a client\n        client = css_v1.CssProductsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = css_v1.ListCs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The account/domain to list processed CSS Products for. Format: accounts/{account}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.css_v1.services.css_products_service.pagers.ListCssProductsAsyncPager: Response message for the ListCssProducts method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "css_products.ListCssProductsRequest"
          ]
        }
      }
    ]
  }
}