{
  "TraceService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_traces",
          "description": "Returns of a list of traces that match the specified\nfilter conditions.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import trace_v1\n\n    async def sample_list_traces():\n        # Create a client\n        client = trace_v1.TraceServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = trace_v1.ListTracesRequest(\n            project_id=\"project_id_value\",\n        )\n\n        # Make the request\n        page_result = client.list_traces(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Un",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the Cloud project where the trace data is stored.  This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.trace_v1.services.trace_service.pagers.ListTracesAsyncPager: The response message for the ListTraces method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_trace",
          "description": "Gets a single trace by its ID.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import trace_v1\n\n    async def sample_get_trace():\n        # Create a client\n        client = trace_v1.TraceServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = trace_v1.GetTraceRequest(\n            project_id=\"project_id_value\",\n            trace_id=\"trace_id_value\",\n        )\n\n        # Make the request\n        response = await client.get_trace(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.trace_v1.types.GetTraceRequest, dic",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the Cloud project where the trace data is stored.  This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "trace_id": {
                "type": "str",
                "description": "Required. ID of the trace to return. This corresponds to the ``trace_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.trace_v1.types.Trace: A trace describes how long it takes for an application to perform an operation. It consists of a set of spans, each of which represent a single timed event within the operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "trace_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "patch_traces",
          "description": "Sends new traces to Stackdriver Trace or updates\nexisting traces. If the ID of a trace that you send\nmatches that of an existing trace, any fields in the\nexisting trace and its spans are overwritten by the\nprovided values, and any new fields provided are merged\nwith the existing trace data. If the ID does not match,\na new trace is created.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import trace_v1\n\n    async def sample_patch_traces():\n        # Create a client\n        client = trace_v1.TraceServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = trace_v1.PatchTracesRequest(\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "project_id": {
                "type": "str",
                "description": "Required. ID of the Cloud project where the trace data is stored.  This corresponds to the ``project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "traces": {
                "type": "google.cloud.trace_v1.types.Traces",
                "description": "Required. The body of the message. This corresponds to the ``traces`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "project_id",
              "traces",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}