{
  "Dataform": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_repositories",
          "description": "Lists Repositories in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_list_repositories():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.ListRepositoriesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_repositories(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (O",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location in which to list repositories. Must be in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.services.dataform.pagers.ListRepositoriesAsyncPager: ListRepositories response message.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_repository",
          "description": "Fetches a single Repository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_get_repository():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.GetRepositoryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_repository(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.GetRepositoryRequest, dict]]):",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The repository's name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.Repository: Represents a Dataform Git repository."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_repository",
          "description": "Creates a new Repository in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_create_repository():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.CreateRepositoryRequest(\n            parent=\"parent_value\",\n            repository_id=\"repository_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_repository(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location in which to create the repository. Must be in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "repository": {
                "type": "google.cloud.dataform_v1beta1.types.Repository",
                "description": "Required. The repository to create. This corresponds to the ``repository`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "repository_id": {
                "type": "str",
                "description": "Required. The ID to use for the repository, which will become the final component of the repository's resource name.  This corresponds to the ``repository_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.Repository: Represents a Dataform Git repository."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "repository",
              "repository_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_repository",
          "description": "Updates a single Repository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_update_repository():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.UpdateRepositoryRequest(\n        )\n\n        # Make the request\n        response = await client.update_repository(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.UpdateRepositoryRequest, dict]]):\n        The reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "repository": {
                "type": "google.cloud.dataform_v1beta1.types.Repository",
                "description": "Required. The repository to update. This corresponds to the ``repository`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Specifies the fields to be updated in the repository. If left unset, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.Repository: Represents a Dataform Git repository."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "repository",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_repository",
          "description": "Deletes a single Repository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_delete_repository():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.DeleteRepositoryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_repository(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.DeleteRepositoryRequest, dict]]):\n        The request object. ``DeleteRepository`` requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The repository's name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "commit_repository_changes",
          "description": "Applies a Git commit to a Repository. The Repository must not\nhave a value for ``git_remote_settings.url``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_commit_repository_changes():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        commit_metadata = dataform_v1beta1.CommitMetadata()\n        commit_metadata.author.name = \"name_value\"\n        commit_metadata.author.email_address = \"email_address_value\"\n\n        request = dataform_v1beta1.CommitRepositoryChangesRequest(\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "read_repository_file",
          "description": "Returns the contents of a file (inside a Repository). The\nRepository must not have a value for\n``git_remote_settings.url``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_read_repository_file():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.ReadRepositoryFileRequest(\n            name=\"name_value\",\n            path=\"path_value\",\n        )\n\n        # Make the request\n        response = await client.read_repository_file(request=request)\n\n        # Ha",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "query_repository_directory_contents",
          "description": "Returns the contents of a given Repository directory. The\nRepository must not have a value for\n``git_remote_settings.url``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_query_repository_directory_contents():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.QueryRepositoryDirectoryContentsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        page_result = client.query_repository_directory_contents(request=request)\n\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_repository_history",
          "description": "Fetches a Repository's history of commits. The Repository must\nnot have a value for ``git_remote_settings.url``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_fetch_repository_history():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.FetchRepositoryHistoryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        page_result = client.fetch_repository_history(request=request)\n\n        # Handle the response\n        async f",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "compute_repository_access_token_status",
          "description": "Computes a Repository's Git access token status.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_compute_repository_access_token_status():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.ComputeRepositoryAccessTokenStatusRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.compute_repository_access_token_status(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_remote_branches",
          "description": "Fetches a Repository's remote branches.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_fetch_remote_branches():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.FetchRemoteBranchesRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.fetch_remote_branches(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_workspaces",
          "description": "Lists Workspaces in a given Repository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_list_workspaces():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.ListWorkspacesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_workspaces(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[goog",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The repository in which to list workspaces. Must be in the format ``projects/*/locations/*/repositories/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.services.dataform.pagers.ListWorkspacesAsyncPager: ListWorkspaces response message.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_workspace",
          "description": "Fetches a single Workspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_get_workspace():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.GetWorkspaceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_workspace(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.GetWorkspaceRequest, dict]]):\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The workspace's name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.Workspace: Represents a Dataform Git workspace."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_workspace",
          "description": "Creates a new Workspace in a given Repository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_create_workspace():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.CreateWorkspaceRequest(\n            parent=\"parent_value\",\n            workspace_id=\"workspace_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_workspace(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Option",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The repository in which to create the workspace. Must be in the format ``projects/*/locations/*/repositories/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workspace": {
                "type": "google.cloud.dataform_v1beta1.types.Workspace",
                "description": "Required. The workspace to create. This corresponds to the ``workspace`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workspace_id": {
                "type": "str",
                "description": "Required. The ID to use for the workspace, which will become the final component of the workspace's resource name.  This corresponds to the ``workspace_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.Workspace: Represents a Dataform Git workspace."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "workspace",
              "workspace_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_workspace",
          "description": "Deletes a single Workspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_delete_workspace():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.DeleteWorkspaceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_workspace(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.DeleteWorkspaceRequest, dict]]):\n        The request object. ``DeleteWorkspace`` request me",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The workspace resource's name.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "install_npm_packages",
          "description": "Installs dependency NPM packages (inside a\nWorkspace).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_install_npm_packages():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.InstallNpmPackagesRequest(\n            workspace=\"workspace_value\",\n        )\n\n        # Make the request\n        response = await client.install_npm_packages(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "pull_git_commits",
          "description": "Pulls Git commits from the Repository's remote into a\nWorkspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_pull_git_commits():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        author = dataform_v1beta1.CommitAuthor()\n        author.name = \"name_value\"\n        author.email_address = \"email_address_value\"\n\n        request = dataform_v1beta1.PullGitCommitsRequest(\n            name=\"name_value\",\n            author=author,\n        )\n\n        # Make the request\n        await cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "push_git_commits",
          "description": "Pushes Git commits from a Workspace to the\nRepository's remote.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_push_git_commits():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.PushGitCommitsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.push_git_commits(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.PushGitCommitsRequest, dict]]):\n        The request obje",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_file_git_statuses",
          "description": "Fetches Git statuses for the files in a Workspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_fetch_file_git_statuses():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.FetchFileGitStatusesRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.fetch_file_git_statuses(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datafo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_git_ahead_behind",
          "description": "Fetches Git ahead/behind against a remote branch.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_fetch_git_ahead_behind():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.FetchGitAheadBehindRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.fetch_git_ahead_behind(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "commit_workspace_changes",
          "description": "Applies a Git commit for uncommitted files in a\nWorkspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_commit_workspace_changes():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        author = dataform_v1beta1.CommitAuthor()\n        author.name = \"name_value\"\n        author.email_address = \"email_address_value\"\n\n        request = dataform_v1beta1.CommitWorkspaceChangesRequest(\n            name=\"name_value\",\n            author=author,\n        )\n\n        # Make the request\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reset_workspace_changes",
          "description": "Performs a Git reset for uncommitted files in a\nWorkspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_reset_workspace_changes():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.ResetWorkspaceChangesRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.reset_workspace_changes(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.ResetWorkspaceChangesRequest, dict]]):\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_file_diff",
          "description": "Fetches Git diff for an uncommitted file in a\nWorkspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_fetch_file_diff():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.FetchFileDiffRequest(\n            workspace=\"workspace_value\",\n            path=\"path_value\",\n        )\n\n        # Make the request\n        response = await client.fetch_file_diff(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[U",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "query_directory_contents",
          "description": "Returns the contents of a given Workspace directory.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_query_directory_contents():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.QueryDirectoryContentsRequest(\n            workspace=\"workspace_value\",\n        )\n\n        # Make the request\n        page_result = client.query_directory_contents(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "make_directory",
          "description": "Creates a directory inside a Workspace.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_make_directory():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.MakeDirectoryRequest(\n            workspace=\"workspace_value\",\n            path=\"path_value\",\n        )\n\n        # Make the request\n        response = await client.make_directory(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.d",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "remove_directory",
          "description": "Deletes a directory (inside a Workspace) and all of\nits contents.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_remove_directory():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.RemoveDirectoryRequest(\n            workspace=\"workspace_value\",\n            path=\"path_value\",\n        )\n\n        # Make the request\n        await client.remove_directory(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.RemoveDirect",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "move_directory",
          "description": "Moves a directory (inside a Workspace), and all of\nits contents, to a new location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_move_directory():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.MoveDirectoryRequest(\n            workspace=\"workspace_value\",\n            path=\"path_value\",\n            new_path=\"new_path_value\",\n        )\n\n        # Make the request\n        response = await client.move_directory(request=request)\n\n        # Handle the",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "read_file",
          "description": "Returns the contents of a file (inside a Workspace).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_read_file():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.ReadFileRequest(\n            workspace=\"workspace_value\",\n            path=\"path_value\",\n        )\n\n        # Make the request\n        response = await client.read_file(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "remove_file",
          "description": "Deletes a file (inside a Workspace).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_remove_file():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.RemoveFileRequest(\n            workspace=\"workspace_value\",\n            path=\"path_value\",\n        )\n\n        # Make the request\n        await client.remove_file(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.RemoveFileRequest, dict]]):\n        The request object. ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "move_file",
          "description": "Moves a file (inside a Workspace) to a new location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_move_file():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.MoveFileRequest(\n            workspace=\"workspace_value\",\n            path=\"path_value\",\n            new_path=\"new_path_value\",\n        )\n\n        # Make the request\n        response = await client.move_file(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "write_file",
          "description": "Writes to a file (inside a Workspace).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_write_file():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.WriteFileRequest(\n            workspace=\"workspace_value\",\n            path=\"path_value\",\n            contents=b'contents_blob',\n        )\n\n        # Make the request\n        response = await client.write_file(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Opt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_release_configs",
          "description": "Lists ReleaseConfigs in a given Repository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_list_release_configs():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.ListReleaseConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_release_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (O",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The repository in which to list release configs. Must be in the format ``projects/*/locations/*/repositories/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.services.dataform.pagers.ListReleaseConfigsAsyncPager: ListReleaseConfigs response message.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_release_config",
          "description": "Fetches a single ReleaseConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_get_release_config():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.GetReleaseConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_release_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.GetReleaseConfig",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The release config's name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.ReleaseConfig: Represents a Dataform release configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_release_config",
          "description": "Creates a new ReleaseConfig in a given Repository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_create_release_config():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        release_config = dataform_v1beta1.ReleaseConfig()\n        release_config.git_commitish = \"git_commitish_value\"\n\n        request = dataform_v1beta1.CreateReleaseConfigRequest(\n            parent=\"parent_value\",\n            release_config=release_config,\n            release_config_id=\"release_config_id_value\",",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The repository in which to create the release config. Must be in the format ``projects/*/locations/*/repositories/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "release_config": {
                "type": "google.cloud.dataform_v1beta1.types.ReleaseConfig",
                "description": "Required. The release config to create.  This corresponds to the ``release_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "release_config_id": {
                "type": "str",
                "description": "Required. The ID to use for the release config, which will become the final component of the release config's resource name.  This corresponds to the ``release_config_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.ReleaseConfig: Represents a Dataform release configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "release_config",
              "release_config_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_release_config",
          "description": "Updates a single ReleaseConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_update_release_config():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        release_config = dataform_v1beta1.ReleaseConfig()\n        release_config.git_commitish = \"git_commitish_value\"\n\n        request = dataform_v1beta1.UpdateReleaseConfigRequest(\n            release_config=release_config,\n        )\n\n        # Make the request\n        response = await client.update_release_config(request=request)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "release_config": {
                "type": "google.cloud.dataform_v1beta1.types.ReleaseConfig",
                "description": "Required. The release config to update.  This corresponds to the ``release_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Specifies the fields to be updated in the release config. If left unset, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.ReleaseConfig: Represents a Dataform release configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "release_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_release_config",
          "description": "Deletes a single ReleaseConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_delete_release_config():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.DeleteReleaseConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_release_config(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.DeleteReleaseConfigRequest, dict]]):\n        The request object. ``Delete",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The release config's name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_compilation_results",
          "description": "Lists CompilationResults in a given Repository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_list_compilation_results():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.ListCompilationResultsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_compilation_results(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The repository in which to list compilation results. Must be in the format ``projects/*/locations/*/repositories/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.services.dataform.pagers.ListCompilationResultsAsyncPager: ListCompilationResults response message.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_compilation_result",
          "description": "Fetches a single CompilationResult.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_get_compilation_result():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.GetCompilationResultRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_compilation_result(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The compilation result's name.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.CompilationResult: Represents the result of compiling a Dataform project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_compilation_result",
          "description": "Creates a new CompilationResult in a given project\nand location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_create_compilation_result():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        compilation_result = dataform_v1beta1.CompilationResult()\n        compilation_result.git_commitish = \"git_commitish_value\"\n\n        request = dataform_v1beta1.CreateCompilationResultRequest(\n            parent=\"parent_value\",\n            compilation_result=compilation_result,\n        )\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The repository in which to create the compilation result. Must be in the format ``projects/*/locations/*/repositories/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "compilation_result": {
                "type": "google.cloud.dataform_v1beta1.types.CompilationResult",
                "description": "Required. The compilation result to create.  This corresponds to the ``compilation_result`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.CompilationResult: Represents the result of compiling a Dataform project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "compilation_result",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "query_compilation_result_actions",
          "description": "Returns CompilationResultActions in a given\nCompilationResult.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_query_compilation_result_actions():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.QueryCompilationResultActionsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        page_result = client.query_compilation_result_actions(request=request)\n\n        # Handle the response\n        async for response in page_result:",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_workflow_configs",
          "description": "Lists WorkflowConfigs in a given Repository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_list_workflow_configs():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.ListWorkflowConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_workflow_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The repository in which to list workflow configs. Must be in the format ``projects/*/locations/*/repositories/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.services.dataform.pagers.ListWorkflowConfigsAsyncPager: ListWorkflowConfigs response message.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_workflow_config",
          "description": "Fetches a single WorkflowConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_get_workflow_config():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.GetWorkflowConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_workflow_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.GetWorkflowC",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The workflow config's name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.WorkflowConfig: Represents a Dataform workflow configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_workflow_config",
          "description": "Creates a new WorkflowConfig in a given Repository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_create_workflow_config():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        workflow_config = dataform_v1beta1.WorkflowConfig()\n        workflow_config.release_config = \"release_config_value\"\n\n        request = dataform_v1beta1.CreateWorkflowConfigRequest(\n            parent=\"parent_value\",\n            workflow_config=workflow_config,\n            workflow_config_id=\"workflow_confi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The repository in which to create the workflow config. Must be in the format ``projects/*/locations/*/repositories/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workflow_config": {
                "type": "google.cloud.dataform_v1beta1.types.WorkflowConfig",
                "description": "Required. The workflow config to create.  This corresponds to the ``workflow_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workflow_config_id": {
                "type": "str",
                "description": "Required. The ID to use for the workflow config, which will become the final component of the workflow config's resource name.  This corresponds to the ``workflow_config_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.WorkflowConfig: Represents a Dataform workflow configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "workflow_config",
              "workflow_config_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_workflow_config",
          "description": "Updates a single WorkflowConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_update_workflow_config():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        workflow_config = dataform_v1beta1.WorkflowConfig()\n        workflow_config.release_config = \"release_config_value\"\n\n        request = dataform_v1beta1.UpdateWorkflowConfigRequest(\n            workflow_config=workflow_config,\n        )\n\n        # Make the request\n        response = await client.update_workflow_config(request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "workflow_config": {
                "type": "google.cloud.dataform_v1beta1.types.WorkflowConfig",
                "description": "Required. The workflow config to update.  This corresponds to the ``workflow_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Specifies the fields to be updated in the workflow config. If left unset, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.WorkflowConfig: Represents a Dataform workflow configuration."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "workflow_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_workflow_config",
          "description": "Deletes a single WorkflowConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_delete_workflow_config():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.DeleteWorkflowConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_workflow_config(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.DeleteWorkflowConfigRequest, dict]]):\n        The request object. ``D",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The workflow config's name. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_workflow_invocations",
          "description": "Lists WorkflowInvocations in a given Repository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_list_workflow_invocations():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.ListWorkflowInvocationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_workflow_invocations(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the WorkflowInvocation type. Must be in the format ``projects/*/locations/*/repositories/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.services.dataform.pagers.ListWorkflowInvocationsAsyncPager: ListWorkflowInvocations response message.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_workflow_invocation",
          "description": "Fetches a single WorkflowInvocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_get_workflow_invocation():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.GetWorkflowInvocationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_workflow_invocation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.ty",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The workflow invocation resource's name.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.WorkflowInvocation: Represents a single invocation of a compilation result."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_workflow_invocation",
          "description": "Creates a new WorkflowInvocation in a given\nRepository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_create_workflow_invocation():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        workflow_invocation = dataform_v1beta1.WorkflowInvocation()\n        workflow_invocation.compilation_result = \"compilation_result_value\"\n\n        request = dataform_v1beta1.CreateWorkflowInvocationRequest(\n            parent=\"parent_value\",\n            workflow_invocation=workflow_invocation,\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The repository in which to create the workflow invocation. Must be in the format ``projects/*/locations/*/repositories/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workflow_invocation": {
                "type": "google.cloud.dataform_v1beta1.types.WorkflowInvocation",
                "description": "Required. The workflow invocation resource to create.  This corresponds to the ``workflow_invocation`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dataform_v1beta1.types.WorkflowInvocation: Represents a single invocation of a compilation result."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "workflow_invocation",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_workflow_invocation",
          "description": "Deletes a single WorkflowInvocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_delete_workflow_invocation():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.DeleteWorkflowInvocationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_workflow_invocation(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.DeleteWorkflowInvocationRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The workflow invocation resource's name.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_workflow_invocation",
          "description": "Requests cancellation of a running\nWorkflowInvocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_cancel_workflow_invocation():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.CancelWorkflowInvocationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.cancel_workflow_invocation(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dataform_v1beta1.types.CancelWorkflowInvocationRequest, di",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "query_workflow_invocation_actions",
          "description": "Returns WorkflowInvocationActions in a given\nWorkflowInvocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dataform_v1beta1\n\n    async def sample_query_workflow_invocation_actions():\n        # Create a client\n        client = dataform_v1beta1.DataformAsyncClient()\n\n        # Initialize request argument(s)\n        request = dataform_v1beta1.QueryWorkflowInvocationActionsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        page_result = client.query_workflow_invocation_actions(request=request)\n\n        # Handle the response\n        async for response in page_re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}