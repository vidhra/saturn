{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-ai-generativelanguage/google/ai/generativelanguage_v1beta/types/file_service.py": [
    {
      "type": "function",
      "name": "CreateFileRequest",
      "description": "Request for ``CreateFile``.\n\nAttributes:\n    file (google.ai.generativelanguage_v1beta.types.File):\n        Optional. Metadata for the file to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "file": {
            "description": "Optional. Metadata for the file to create.",
            "reference": "google.ai.generativelanguage_v1beta.types.File",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "path": {
                  "description": "Required. Path of the file in package. e.g. ``gdce/v1/cluster.yaml``",
                  "type": "string"
                },
                "content": {
                  "description": "Optional. The contents of a file in string format.",
                  "type": "string"
                },
                "deleted": {
                  "description": "Optional. Signifies whether a file is marked for deletion.",
                  "type": "boolean"
                },
                "editable": {
                  "description": "Optional. Indicates whether changes are allowed to a file. If the field is not set, the file cannot be edited.",
                  "type": "boolean"
                }
              },
              "required": [
                "path"
              ]
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "ListFilesRequest",
      "description": "Request for ``ListFiles``.\n\nAttributes:\n    page_size (int):\n        Optional. Maximum number of ``File``\\ s to return per page.\n        If unspecified, defaults to 10. Maximum ``page_size`` is\n        100.\n    page_token (str):\n        Optional. A page token from a previous ``ListFiles`` call.",
      "parameters": {
        "type": "object",
        "properties": {
          "page_size": {
            "description": "Optional. Maximum number of ``File``\\ s to return per page. If unspecified, defaults to 10. Maximum ``page_size`` is 100.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token from a previous ``ListFiles`` call.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "GetFileRequest",
      "description": "Request for ``GetFile``.\n\nAttributes:\n    name (str):\n        Required. The name of the ``File`` to get. Example:\n        ``files/abc-123``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the ``File`` to get. Example: ``files/abc-123``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteFileRequest",
      "description": "Request for ``DeleteFile``.\n\nAttributes:\n    name (str):\n        Required. The name of the ``File`` to delete. Example:\n        ``files/abc-123``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the ``File`` to delete. Example: ``files/abc-123``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-ai-generativelanguage/google/ai/generativelanguage_v1beta/types/discuss_service.py": [
    {
      "type": "function",
      "name": "GenerateMessageRequest",
      "description": "Request to generate a message response from the model.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    model (str):\n        Required. The name of the model to use.\n\n        Format: ``name=models/{model}``.\n    prompt (google.ai.generativelanguage_v1beta.types.MessagePrompt):\n        Required. The structured textual input given\n        to the model as a prompt.\n        Given a\n        prompt, the model will return what it predicts\n        is the next message in the discussion.\n    temperature (float):\n        Optional. Controls the randomness of the output.\n\n        Values can range over ``[0.0,1.0]``, inclusive. A value\n        closer to ``1.0`` will produce responses that are more\n        varied, while a value closer to ``0.0`` will typically\n        result in less surprising responses from the model.\n\n        This field is a member of `oneof`_ ``_temperature``.\n    candidate_count (int):\n        Optional. The number of generated re",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The name of the model to use.  Format: ``name=models/{model}``.",
            "type": "string"
          },
          "prompt": {
            "description": "Required. The structured textual input given to the model as a prompt. Given a prompt, the model will return what it predicts is the next message in the discussion.",
            "reference": "google.ai.generativelanguage_v1beta.types.MessagePrompt",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "context": {
                  "description": "Optional. Text that should be provided to the model first to ground the response.  If not empty, this ``context`` will be given to the model first before the ``examples`` and ``messages``. When using a ``context`` be sure to provide it with every request to maintain continuity.  This field can be a description of your prompt to the model to help provide context and guide the responses. Examples: \"Translate the phrase from English to French.\" or \"Given a statement, classify the sentiment as happy, sad or neutral.\"  Anything included in this field will take precedence over message history if the total input size exceeds the model's ``input_token_limit`` and the input request is truncated.",
                  "type": "string"
                },
                "examples": {
                  "description": "Optional. Examples of what the model should generate.  This includes both user input and the response that the model should emulate.  These ``examples`` are treated identically to conversation messages except that they take precedence over the history in ``messages``: If the total input size exceeds the model's ``input_token_limit`` the input will be truncated. Items will be dropped from ``messages`` before ``examples``.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.Example",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The unique identifier of the playbook example. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/playbooks/<PlaybookID>/examples/<ExampleID>``.",
                          "type": "string"
                        },
                        "playbook_input": {
                          "description": "Optional. The input to the playbook in the example.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.PlaybookInput",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "preceding_conversation_summary": {
                                "description": "Optional. Summary string of the preceding conversation for the child playbook invocation.",
                                "type": "string"
                              },
                              "action_parameters": {
                                "description": "Optional. A list of input parameters for the action.",
                                "type": "object",
                                "reference": "google.protobuf.struct_pb2.Struct"
                              }
                            }
                          }
                        },
                        "playbook_output": {
                          "description": "Optional. The output of the playbook in the example.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.PlaybookOutput",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "execution_summary": {
                                "description": "Optional. Summary string of the execution result of the child playbook.",
                                "type": "string"
                              },
                              "action_parameters": {
                                "description": "Optional. A Struct object of output parameters for the action.",
                                "type": "object",
                                "reference": "google.protobuf.struct_pb2.Struct",
                                "output_only": true
                              }
                            }
                          }
                        },
                        "actions": {
                          "description": "Required. The ordered list of actions performed by the end user and the Dialogflow agent.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.dialogflowcx_v3beta1.types.Action",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "container_name": {
                                  "description": "An optional name for the container. The container hostname will be set to this name, making it useful for inter-container communication. The name must contain only upper and lowercase alphanumeric characters and hyphens and cannot start with a hyphen.",
                                  "type": "string"
                                },
                                "image_uri": {
                                  "description": "Required. The URI to pull the container image from. Note that all images referenced by actions in the pipeline are pulled before the first action runs. If multiple actions reference the same image, it is only pulled once, ensuring that the same image is used for all actions in a single pipeline.  The image URI can be either a complete host and image specification (e.g., quay.io/biocontainers/samtools), a library and image name (e.g., google/cloud-sdk) or a bare image name ('bash') to pull from the default library. No schema is required in any of these cases.  If the specified image is not public, the service account specified for the Virtual Machine must have access to pull the images from GCR, or appropriate credentials must be specified in the [google.cloud.lifesciences.v2beta.Action.credentials][google.cloud.lifesciences.v2beta.Action.credentials] field.",
                                  "type": "string"
                                },
                                "commands": {
                                  "description": "If specified, overrides the ``CMD`` specified in the container. If the container also has an ``ENTRYPOINT`` the values are used as entrypoint arguments. Otherwise, they are used as a command and arguments to run inside the container.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "entrypoint": {
                                  "description": "If specified, overrides the ``ENTRYPOINT`` specified in the container.",
                                  "type": "string"
                                },
                                "environment": {
                                  "description": "The environment to pass into the container. This environment is merged with values specified in the [google.cloud.lifesciences.v2beta.Pipeline][google.cloud.lifesciences.v2beta.Pipeline] message, overwriting any duplicate values.  In addition to the values passed here, a few other values are automatically injected into the environment. These cannot be hidden or overwritten.  ``GOOGLE_PIPELINE_FAILED`` will be set to \"1\" if the pipeline failed because an action has exited with a non-zero status (and did not have the ``IGNORE_EXIT_STATUS`` flag set). This can be used to determine if additional debug or logging actions should execute.  ``GOOGLE_LAST_EXIT_STATUS`` will be set to the exit status of the last non-background action that executed. This can be used by workflow engine authors to determine whether an individual action has succeeded or failed.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "encrypted_environment": {
                                  "description": "The encrypted environment to pass into the container. This environment is merged with values specified in the [google.cloud.lifesciences.v2beta.Pipeline][google.cloud.lifesciences.v2beta.Pipeline] message, overwriting any duplicate values.  The secret must decrypt to a JSON-encoded dictionary where key-value pairs serve as environment variable names and their values. The decoded environment variables can overwrite the values specified by the ``environment`` field.",
                                  "type": "object",
                                  "reference": "google.cloud.lifesciences_v2beta.types.Secret",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "key_name": {
                                        "description": "The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the ``decrypt`` method on the specified key.",
                                        "type": "string"
                                      },
                                      "cipher_text": {
                                        "description": "The value of the cipherText response from the ``encrypt`` method. This field is intentionally unaudited.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "pid_namespace": {
                                  "description": "An optional identifier for a PID namespace to run the action inside. Multiple actions should use the same string to share a namespace.  If unspecified, a separate isolated namespace is used.",
                                  "type": "string"
                                },
                                "port_mappings": {
                                  "description": "A map of containers to host port mappings for this container. If the container already specifies exposed ports, use the ``PUBLISH_EXPOSED_PORTS`` flag instead.  The host port number must be less than 65536. If it is zero, an unused random port is assigned. To determine the resulting port number, consult the ``ContainerStartedEvent`` in the operation metadata.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "integer"
                                  }
                                },
                                "mounts": {
                                  "description": "A list of mounts to make available to the action.  In addition to the values specified here, every action has a special virtual disk mounted under ``/google`` that contains log files and other operational components.  .. raw:: html  <ul> <li><code>/google/logs</code> All logs written during the pipeline execution.</li> <li><code>/google/logs/output</code> The combined standard output and standard error of all actions run as part of the pipeline execution.</li> <li><code>/google/logs/action/*/stdout</code> The complete contents of each individual action's standard output.</li> <li><code>/google/logs/action/*/stderr</code> The complete contents of each individual action's standard error output.</li> </ul>",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "reference": "google.cloud.lifesciences_v2beta.types.Mount",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "disk": {
                                          "description": "The name of the disk to mount, as specified in the resources section.",
                                          "type": "string"
                                        },
                                        "path": {
                                          "description": "The path to mount the disk inside the container.",
                                          "type": "string"
                                        },
                                        "read_only": {
                                          "description": "If true, the disk is mounted read-only inside the container.",
                                          "type": "boolean",
                                          "output_only": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "labels": {
                                  "description": "Labels to associate with the action. This field is provided to assist workflow engine authors in identifying actions (for example, to indicate what sort of action they perform, such as localization or debugging). They are returned in the operation metadata, but are otherwise ignored.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "credentials": {
                                  "description": "If the specified image is hosted on a private registry other than Google Container Registry, the credentials required to pull the image must be specified here as an encrypted secret.  The secret must decrypt to a JSON-encoded dictionary containing both ``username`` and ``password`` keys.",
                                  "type": "object",
                                  "reference": "google.cloud.lifesciences_v2beta.types.Secret",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "key_name": {
                                        "description": "The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the ``decrypt`` method on the specified key.",
                                        "type": "string"
                                      },
                                      "cipher_text": {
                                        "description": "The value of the cipherText response from the ``encrypt`` method. This field is intentionally unaudited.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "timeout": {
                                  "description": "The maximum amount of time to give the action to complete. If the action fails to complete before the timeout, it will be terminated and the exit status will be non-zero. The pipeline will continue or terminate based on the rules defined by the ``ALWAYS_RUN`` and ``IGNORE_EXIT_STATUS`` flags.",
                                  "type": "object",
                                  "reference": "google.protobuf.duration_pb2.Duration",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "nanos": {
                                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                        "type": "integer"
                                      },
                                      "seconds": {
                                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                "ignore_exit_status": {
                                  "description": "Normally, a non-zero exit status causes the pipeline to fail. This flag allows execution of other actions to continue instead.",
                                  "type": "boolean"
                                },
                                "run_in_background": {
                                  "description": "This flag allows an action to continue running in the background while executing subsequent actions. This is useful to provide services to other actions (or to provide debugging support tools like SSH servers).",
                                  "type": "boolean"
                                },
                                "always_run": {
                                  "description": "By default, after an action fails, no further actions are run. This flag indicates that this action must be run even if the pipeline has already failed. This is useful for actions that copy output files off of the VM or for debugging. Note that no actions will be run if image prefetching fails.",
                                  "type": "boolean"
                                },
                                "enable_fuse": {
                                  "description": "Enable access to the FUSE device for this action. Filesystems can then be mounted into disks shared with other actions. The other actions do not need the ``enable_fuse`` flag to access the mounted filesystem.  This has the effect of causing the container to be executed with ``CAP_SYS_ADMIN`` and exposes ``/dev/fuse`` to the container, so use it only for containers you trust.",
                                  "type": "boolean"
                                },
                                "publish_exposed_ports": {
                                  "description": "Exposes all ports specified by ``EXPOSE`` statements in the container. To discover the host side port numbers, consult the ``ACTION_STARTED`` event in the operation metadata.",
                                  "type": "boolean"
                                },
                                "disable_image_prefetch": {
                                  "description": "All container images are typically downloaded before any actions are executed. This helps prevent typos in URIs or issues like lack of disk space from wasting large amounts of compute resources.  If set, this flag prevents the worker from downloading the image until just before the action is executed.",
                                  "type": "boolean"
                                },
                                "disable_standard_error_capture": {
                                  "description": "A small portion of the container's standard error stream is typically captured and returned inside the ``ContainerStoppedEvent``. Setting this flag disables this functionality.",
                                  "type": "boolean"
                                },
                                "block_external_network": {
                                  "description": "Prevents the container from accessing the external network.",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "image_uri"
                              ]
                            }
                          }
                        },
                        "display_name": {
                          "description": "Required. The display name of the example.",
                          "type": "string"
                        },
                        "description": {
                          "description": "Optional. The high level concise description of the example. The max number of characters is 200.",
                          "type": "string"
                        },
                        "token_count": {
                          "description": "Output only. Estimated number of tokes current example takes when sent to the LLM.",
                          "type": "integer",
                          "output_only": true
                        },
                        "create_time": {
                          "description": "Output only. The timestamp of initial example creation.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "update_time": {
                          "description": "Output only. Last time the example was updated.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "conversation_state": {
                          "description": "Required. Example's output state.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.OutputState"
                        },
                        "language_code": {
                          "description": "Optional. The language code of the example. If not specified, the agent's default language is used. Note: languages must be enabled in the agent before they can be used. Note: example's language code is not currently used in dialogflow agents.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "actions",
                        "display_name",
                        "conversation_state"
                      ]
                    }
                  }
                },
                "messages": {
                  "description": "Required. A snapshot of the recent conversation history sorted chronologically.  Turns alternate between two authors.  If the total input size exceeds the model's ``input_token_limit`` the input will be truncated: The oldest items will be dropped from ``messages``.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.Message",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Optional. The unique identifier of the message. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>/messages/<Message ID>``.",
                          "type": "string"
                        },
                        "content": {
                          "description": "Required. The message content.",
                          "type": "string"
                        },
                        "language_code": {
                          "description": "Optional. The message language. This should be a `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language tag. Example: \"en-US\".",
                          "type": "string"
                        },
                        "participant": {
                          "description": "Output only. The participant that sends this message.",
                          "type": "string",
                          "output_only": true
                        },
                        "participant_role": {
                          "description": "Output only. The role of the participant.",
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.Participant.Role",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Identifier. The resource name of the ``Role``. Format: ``networks/{network_code}/roles/{role_id}``",
                                "type": "string"
                              },
                              "role_id": {
                                "description": "Output only. ``Role`` ID.",
                                "type": "integer",
                                "output_only": true
                              },
                              "display_name": {
                                "description": "Required. The display name of the ``Role``.",
                                "type": "string"
                              },
                              "description": {
                                "description": "Optional. The description of the ``Role``.",
                                "type": "string"
                              },
                              "built_in": {
                                "description": "Output only. Whether the ``Role`` is a built-in or custom user role.",
                                "type": "boolean",
                                "output_only": true
                              },
                              "status": {
                                "description": "Output only. The status of the ``Role``.",
                                "type": "object",
                                "reference": "google.ads.admanager_v1.types.RoleStatusEnum.RoleStatus",
                                "output_only": true
                              }
                            },
                            "required": [
                              "display_name"
                            ]
                          }
                        },
                        "create_time": {
                          "description": "Output only. The time when the message was created in Contact Center AI.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "send_time": {
                          "description": "Optional. The time when the message was sent.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp"
                        },
                        "message_annotation": {
                          "description": "Output only. The annotation for the message.",
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.MessageAnnotation",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "parts": {
                                "description": "The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "reference": "google.cloud.dialogflow_v2.types.AnnotatedMessagePart",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "text": {
                                        "description": "A part of a message possibly annotated with an entity.",
                                        "type": "string"
                                      },
                                      "entity_type": {
                                        "description": "The `Dialogflow system entity type <https://cloud.google.com/dialogflow/docs/reference/system-entities>`__ of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.",
                                        "type": "string"
                                      },
                                      "formatted_value": {
                                        "description": "The `Dialogflow system entity formatted value <https://cloud.google.com/dialogflow/docs/reference/system-entities>`__ of this message part. For example for a system entity of type ``@sys.unit-currency``, this may contain:  .. raw:: html  <pre> { \"amount\": 5, \"currency\": \"USD\" } </pre>",
                                        "type": "object",
                                        "reference": "google.protobuf.struct_pb2.Value",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "dropdown_value": {
                                              "description": "The custom_field_option_id, if the CustomFieldDataType is DROPDOWN.  This field is a member of `oneof`_ ``value``.",
                                              "type": "integer"
                                            },
                                            "string_value": {
                                              "description": "The value, if the CustomFieldDataType is STRING.  This field is a member of `oneof`_ ``value``.",
                                              "type": "string"
                                            },
                                            "number_value": {
                                              "description": "The value, if the CustomFieldDataType is NUMBER.  This field is a member of `oneof`_ ``value``.",
                                              "type": "number"
                                            },
                                            "toggle_value": {
                                              "description": "The value, if the CustomFieldDataType is TOGGLE.  This field is a member of `oneof`_ ``value``.",
                                              "type": "boolean"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "contain_entities": {
                                "description": "Indicates whether the text message contains entities.",
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "sentiment_analysis": {
                          "description": "Output only. The sentiment analysis result for the message.",
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.SentimentAnalysisResult",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_text_sentiment": {
                                "description": "The sentiment analysis result for ``query_text``.",
                                "type": "object",
                                "reference": "google.cloud.dialogflow_v2.types.Sentiment",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "score": {
                                      "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
                                      "type": "number"
                                    },
                                    "magnitude": {
                                      "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  }
                }
              },
              "required": [
                "messages"
              ]
            }
          },
          "temperature": {
            "description": "Optional. Controls the randomness of the output.  Values can range over ``[0.0,1.0]``, inclusive. A value closer to ``1.0`` will produce responses that are more varied, while a value closer to ``0.0`` will typically result in less surprising responses from the model.  This field is a member of `oneof`_ ``_temperature``.",
            "type": "number"
          },
          "candidate_count": {
            "description": "Optional. The number of generated response messages to return.  This value must be between ``[1, 8]``, inclusive. If unset, this will default to ``1``.  This field is a member of `oneof`_ ``_candidate_count``.",
            "type": "integer"
          },
          "top_p": {
            "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.  The model uses combined Top-k and nucleus sampling.  Nucleus sampling considers the smallest set of tokens whose probability sum is at least ``top_p``.  This field is a member of `oneof`_ ``_top_p``.",
            "type": "number"
          },
          "top_k": {
            "description": "Optional. The maximum number of tokens to consider when sampling.  The model uses combined Top-k and nucleus sampling.  Top-k sampling considers the set of ``top_k`` most probable tokens.  This field is a member of `oneof`_ ``_top_k``.",
            "type": "integer"
          }
        },
        "required": [
          "model",
          "prompt"
        ]
      }
    },
    {
      "type": "function",
      "name": "CountMessageTokensRequest",
      "description": "Counts the number of tokens in the ``prompt`` sent to a model.\n\nModels may tokenize text differently, so each model may return a\ndifferent ``token_count``.\n\nAttributes:\n    model (str):\n        Required. The model's resource name. This serves as an ID\n        for the Model to use.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``\n    prompt (google.ai.generativelanguage_v1beta.types.MessagePrompt):\n        Required. The prompt, whose token count is to\n        be returned.",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          },
          "prompt": {
            "description": "Required. The prompt, whose token count is to be returned.",
            "reference": "google.ai.generativelanguage_v1beta.types.MessagePrompt",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "context": {
                  "description": "Optional. Text that should be provided to the model first to ground the response.  If not empty, this ``context`` will be given to the model first before the ``examples`` and ``messages``. When using a ``context`` be sure to provide it with every request to maintain continuity.  This field can be a description of your prompt to the model to help provide context and guide the responses. Examples: \"Translate the phrase from English to French.\" or \"Given a statement, classify the sentiment as happy, sad or neutral.\"  Anything included in this field will take precedence over message history if the total input size exceeds the model's ``input_token_limit`` and the input request is truncated.",
                  "type": "string"
                },
                "examples": {
                  "description": "Optional. Examples of what the model should generate.  This includes both user input and the response that the model should emulate.  These ``examples`` are treated identically to conversation messages except that they take precedence over the history in ``messages``: If the total input size exceeds the model's ``input_token_limit`` the input will be truncated. Items will be dropped from ``messages`` before ``examples``.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.Example",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The unique identifier of the playbook example. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/playbooks/<PlaybookID>/examples/<ExampleID>``.",
                          "type": "string"
                        },
                        "playbook_input": {
                          "description": "Optional. The input to the playbook in the example.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.PlaybookInput",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "preceding_conversation_summary": {
                                "description": "Optional. Summary string of the preceding conversation for the child playbook invocation.",
                                "type": "string"
                              },
                              "action_parameters": {
                                "description": "Optional. A list of input parameters for the action.",
                                "type": "object",
                                "reference": "google.protobuf.struct_pb2.Struct"
                              }
                            }
                          }
                        },
                        "playbook_output": {
                          "description": "Optional. The output of the playbook in the example.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.PlaybookOutput",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "execution_summary": {
                                "description": "Optional. Summary string of the execution result of the child playbook.",
                                "type": "string"
                              },
                              "action_parameters": {
                                "description": "Optional. A Struct object of output parameters for the action.",
                                "type": "object",
                                "reference": "google.protobuf.struct_pb2.Struct",
                                "output_only": true
                              }
                            }
                          }
                        },
                        "actions": {
                          "description": "Required. The ordered list of actions performed by the end user and the Dialogflow agent.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.dialogflowcx_v3beta1.types.Action",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "container_name": {
                                  "description": "An optional name for the container. The container hostname will be set to this name, making it useful for inter-container communication. The name must contain only upper and lowercase alphanumeric characters and hyphens and cannot start with a hyphen.",
                                  "type": "string"
                                },
                                "image_uri": {
                                  "description": "Required. The URI to pull the container image from. Note that all images referenced by actions in the pipeline are pulled before the first action runs. If multiple actions reference the same image, it is only pulled once, ensuring that the same image is used for all actions in a single pipeline.  The image URI can be either a complete host and image specification (e.g., quay.io/biocontainers/samtools), a library and image name (e.g., google/cloud-sdk) or a bare image name ('bash') to pull from the default library. No schema is required in any of these cases.  If the specified image is not public, the service account specified for the Virtual Machine must have access to pull the images from GCR, or appropriate credentials must be specified in the [google.cloud.lifesciences.v2beta.Action.credentials][google.cloud.lifesciences.v2beta.Action.credentials] field.",
                                  "type": "string"
                                },
                                "commands": {
                                  "description": "If specified, overrides the ``CMD`` specified in the container. If the container also has an ``ENTRYPOINT`` the values are used as entrypoint arguments. Otherwise, they are used as a command and arguments to run inside the container.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "entrypoint": {
                                  "description": "If specified, overrides the ``ENTRYPOINT`` specified in the container.",
                                  "type": "string"
                                },
                                "environment": {
                                  "description": "The environment to pass into the container. This environment is merged with values specified in the [google.cloud.lifesciences.v2beta.Pipeline][google.cloud.lifesciences.v2beta.Pipeline] message, overwriting any duplicate values.  In addition to the values passed here, a few other values are automatically injected into the environment. These cannot be hidden or overwritten.  ``GOOGLE_PIPELINE_FAILED`` will be set to \"1\" if the pipeline failed because an action has exited with a non-zero status (and did not have the ``IGNORE_EXIT_STATUS`` flag set). This can be used to determine if additional debug or logging actions should execute.  ``GOOGLE_LAST_EXIT_STATUS`` will be set to the exit status of the last non-background action that executed. This can be used by workflow engine authors to determine whether an individual action has succeeded or failed.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "encrypted_environment": {
                                  "description": "The encrypted environment to pass into the container. This environment is merged with values specified in the [google.cloud.lifesciences.v2beta.Pipeline][google.cloud.lifesciences.v2beta.Pipeline] message, overwriting any duplicate values.  The secret must decrypt to a JSON-encoded dictionary where key-value pairs serve as environment variable names and their values. The decoded environment variables can overwrite the values specified by the ``environment`` field.",
                                  "type": "object",
                                  "reference": "google.cloud.lifesciences_v2beta.types.Secret",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "key_name": {
                                        "description": "The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the ``decrypt`` method on the specified key.",
                                        "type": "string"
                                      },
                                      "cipher_text": {
                                        "description": "The value of the cipherText response from the ``encrypt`` method. This field is intentionally unaudited.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "pid_namespace": {
                                  "description": "An optional identifier for a PID namespace to run the action inside. Multiple actions should use the same string to share a namespace.  If unspecified, a separate isolated namespace is used.",
                                  "type": "string"
                                },
                                "port_mappings": {
                                  "description": "A map of containers to host port mappings for this container. If the container already specifies exposed ports, use the ``PUBLISH_EXPOSED_PORTS`` flag instead.  The host port number must be less than 65536. If it is zero, an unused random port is assigned. To determine the resulting port number, consult the ``ContainerStartedEvent`` in the operation metadata.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "integer"
                                  }
                                },
                                "mounts": {
                                  "description": "A list of mounts to make available to the action.  In addition to the values specified here, every action has a special virtual disk mounted under ``/google`` that contains log files and other operational components.  .. raw:: html  <ul> <li><code>/google/logs</code> All logs written during the pipeline execution.</li> <li><code>/google/logs/output</code> The combined standard output and standard error of all actions run as part of the pipeline execution.</li> <li><code>/google/logs/action/*/stdout</code> The complete contents of each individual action's standard output.</li> <li><code>/google/logs/action/*/stderr</code> The complete contents of each individual action's standard error output.</li> </ul>",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "reference": "google.cloud.lifesciences_v2beta.types.Mount",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "disk": {
                                          "description": "The name of the disk to mount, as specified in the resources section.",
                                          "type": "string"
                                        },
                                        "path": {
                                          "description": "The path to mount the disk inside the container.",
                                          "type": "string"
                                        },
                                        "read_only": {
                                          "description": "If true, the disk is mounted read-only inside the container.",
                                          "type": "boolean",
                                          "output_only": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "labels": {
                                  "description": "Labels to associate with the action. This field is provided to assist workflow engine authors in identifying actions (for example, to indicate what sort of action they perform, such as localization or debugging). They are returned in the operation metadata, but are otherwise ignored.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "credentials": {
                                  "description": "If the specified image is hosted on a private registry other than Google Container Registry, the credentials required to pull the image must be specified here as an encrypted secret.  The secret must decrypt to a JSON-encoded dictionary containing both ``username`` and ``password`` keys.",
                                  "type": "object",
                                  "reference": "google.cloud.lifesciences_v2beta.types.Secret",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "key_name": {
                                        "description": "The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the ``decrypt`` method on the specified key.",
                                        "type": "string"
                                      },
                                      "cipher_text": {
                                        "description": "The value of the cipherText response from the ``encrypt`` method. This field is intentionally unaudited.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "timeout": {
                                  "description": "The maximum amount of time to give the action to complete. If the action fails to complete before the timeout, it will be terminated and the exit status will be non-zero. The pipeline will continue or terminate based on the rules defined by the ``ALWAYS_RUN`` and ``IGNORE_EXIT_STATUS`` flags.",
                                  "type": "object",
                                  "reference": "google.protobuf.duration_pb2.Duration",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "nanos": {
                                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                        "type": "integer"
                                      },
                                      "seconds": {
                                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                "ignore_exit_status": {
                                  "description": "Normally, a non-zero exit status causes the pipeline to fail. This flag allows execution of other actions to continue instead.",
                                  "type": "boolean"
                                },
                                "run_in_background": {
                                  "description": "This flag allows an action to continue running in the background while executing subsequent actions. This is useful to provide services to other actions (or to provide debugging support tools like SSH servers).",
                                  "type": "boolean"
                                },
                                "always_run": {
                                  "description": "By default, after an action fails, no further actions are run. This flag indicates that this action must be run even if the pipeline has already failed. This is useful for actions that copy output files off of the VM or for debugging. Note that no actions will be run if image prefetching fails.",
                                  "type": "boolean"
                                },
                                "enable_fuse": {
                                  "description": "Enable access to the FUSE device for this action. Filesystems can then be mounted into disks shared with other actions. The other actions do not need the ``enable_fuse`` flag to access the mounted filesystem.  This has the effect of causing the container to be executed with ``CAP_SYS_ADMIN`` and exposes ``/dev/fuse`` to the container, so use it only for containers you trust.",
                                  "type": "boolean"
                                },
                                "publish_exposed_ports": {
                                  "description": "Exposes all ports specified by ``EXPOSE`` statements in the container. To discover the host side port numbers, consult the ``ACTION_STARTED`` event in the operation metadata.",
                                  "type": "boolean"
                                },
                                "disable_image_prefetch": {
                                  "description": "All container images are typically downloaded before any actions are executed. This helps prevent typos in URIs or issues like lack of disk space from wasting large amounts of compute resources.  If set, this flag prevents the worker from downloading the image until just before the action is executed.",
                                  "type": "boolean"
                                },
                                "disable_standard_error_capture": {
                                  "description": "A small portion of the container's standard error stream is typically captured and returned inside the ``ContainerStoppedEvent``. Setting this flag disables this functionality.",
                                  "type": "boolean"
                                },
                                "block_external_network": {
                                  "description": "Prevents the container from accessing the external network.",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "image_uri"
                              ]
                            }
                          }
                        },
                        "display_name": {
                          "description": "Required. The display name of the example.",
                          "type": "string"
                        },
                        "description": {
                          "description": "Optional. The high level concise description of the example. The max number of characters is 200.",
                          "type": "string"
                        },
                        "token_count": {
                          "description": "Output only. Estimated number of tokes current example takes when sent to the LLM.",
                          "type": "integer",
                          "output_only": true
                        },
                        "create_time": {
                          "description": "Output only. The timestamp of initial example creation.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "update_time": {
                          "description": "Output only. Last time the example was updated.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "conversation_state": {
                          "description": "Required. Example's output state.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.OutputState"
                        },
                        "language_code": {
                          "description": "Optional. The language code of the example. If not specified, the agent's default language is used. Note: languages must be enabled in the agent before they can be used. Note: example's language code is not currently used in dialogflow agents.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "actions",
                        "display_name",
                        "conversation_state"
                      ]
                    }
                  }
                },
                "messages": {
                  "description": "Required. A snapshot of the recent conversation history sorted chronologically.  Turns alternate between two authors.  If the total input size exceeds the model's ``input_token_limit`` the input will be truncated: The oldest items will be dropped from ``messages``.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.Message",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Optional. The unique identifier of the message. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>/messages/<Message ID>``.",
                          "type": "string"
                        },
                        "content": {
                          "description": "Required. The message content.",
                          "type": "string"
                        },
                        "language_code": {
                          "description": "Optional. The message language. This should be a `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language tag. Example: \"en-US\".",
                          "type": "string"
                        },
                        "participant": {
                          "description": "Output only. The participant that sends this message.",
                          "type": "string",
                          "output_only": true
                        },
                        "participant_role": {
                          "description": "Output only. The role of the participant.",
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.Participant.Role",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Identifier. The resource name of the ``Role``. Format: ``networks/{network_code}/roles/{role_id}``",
                                "type": "string"
                              },
                              "role_id": {
                                "description": "Output only. ``Role`` ID.",
                                "type": "integer",
                                "output_only": true
                              },
                              "display_name": {
                                "description": "Required. The display name of the ``Role``.",
                                "type": "string"
                              },
                              "description": {
                                "description": "Optional. The description of the ``Role``.",
                                "type": "string"
                              },
                              "built_in": {
                                "description": "Output only. Whether the ``Role`` is a built-in or custom user role.",
                                "type": "boolean",
                                "output_only": true
                              },
                              "status": {
                                "description": "Output only. The status of the ``Role``.",
                                "type": "object",
                                "reference": "google.ads.admanager_v1.types.RoleStatusEnum.RoleStatus",
                                "output_only": true
                              }
                            },
                            "required": [
                              "display_name"
                            ]
                          }
                        },
                        "create_time": {
                          "description": "Output only. The time when the message was created in Contact Center AI.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "send_time": {
                          "description": "Optional. The time when the message was sent.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp"
                        },
                        "message_annotation": {
                          "description": "Output only. The annotation for the message.",
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.MessageAnnotation",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "parts": {
                                "description": "The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "reference": "google.cloud.dialogflow_v2.types.AnnotatedMessagePart",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "text": {
                                        "description": "A part of a message possibly annotated with an entity.",
                                        "type": "string"
                                      },
                                      "entity_type": {
                                        "description": "The `Dialogflow system entity type <https://cloud.google.com/dialogflow/docs/reference/system-entities>`__ of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.",
                                        "type": "string"
                                      },
                                      "formatted_value": {
                                        "description": "The `Dialogflow system entity formatted value <https://cloud.google.com/dialogflow/docs/reference/system-entities>`__ of this message part. For example for a system entity of type ``@sys.unit-currency``, this may contain:  .. raw:: html  <pre> { \"amount\": 5, \"currency\": \"USD\" } </pre>",
                                        "type": "object",
                                        "reference": "google.protobuf.struct_pb2.Value",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "dropdown_value": {
                                              "description": "The custom_field_option_id, if the CustomFieldDataType is DROPDOWN.  This field is a member of `oneof`_ ``value``.",
                                              "type": "integer"
                                            },
                                            "string_value": {
                                              "description": "The value, if the CustomFieldDataType is STRING.  This field is a member of `oneof`_ ``value``.",
                                              "type": "string"
                                            },
                                            "number_value": {
                                              "description": "The value, if the CustomFieldDataType is NUMBER.  This field is a member of `oneof`_ ``value``.",
                                              "type": "number"
                                            },
                                            "toggle_value": {
                                              "description": "The value, if the CustomFieldDataType is TOGGLE.  This field is a member of `oneof`_ ``value``.",
                                              "type": "boolean"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "contain_entities": {
                                "description": "Indicates whether the text message contains entities.",
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "sentiment_analysis": {
                          "description": "Output only. The sentiment analysis result for the message.",
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.SentimentAnalysisResult",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "query_text_sentiment": {
                                "description": "The sentiment analysis result for ``query_text``.",
                                "type": "object",
                                "reference": "google.cloud.dialogflow_v2.types.Sentiment",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "score": {
                                      "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
                                      "type": "number"
                                    },
                                    "magnitude": {
                                      "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  }
                }
              },
              "required": [
                "messages"
              ]
            }
          }
        },
        "required": [
          "model",
          "prompt"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-ai-generativelanguage/google/ai/generativelanguage_v1beta/types/retriever_service.py": [
    {
      "type": "function",
      "name": "CreateCorpusRequest",
      "description": "Request to create a ``Corpus``.\n\nAttributes:\n    corpus (google.ai.generativelanguage_v1beta.types.Corpus):\n        Required. The ``Corpus`` to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "corpus": {
            "description": "Required. The ``Corpus`` to create.",
            "reference": "google.ai.generativelanguage_v1beta.types.Corpus",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Resource name of the corpus. Format: ``projects/{project_number}/locations/{location_id}/corpora/{corpus_id}``",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. The corpus name to shown in the UI. The name can be up to 32 characters long.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Description of the corpus. Can be up to 25000 characters long.",
                  "type": "string"
                },
                "default_ttl": {
                  "description": "Optional. The default TTL value for all assets under the corpus without a asset level user-defined TTL. For STREAM_VIDEO type corpora, this is required and the maximum allowed default_ttl is 10 years.",
                  "type": "object",
                  "reference": "google.protobuf.duration_pb2.Duration",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                        "type": "integer"
                      },
                      "seconds": {
                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "type_": {
                  "description": "Optional. Type of the asset inside corpus.",
                  "type": "object",
                  "reference": "google.cloud.visionai_v1.types.Corpus.Type"
                },
                "search_capability_setting": {
                  "description": "Default search capability setting on corpus level.",
                  "type": "object",
                  "reference": "google.cloud.visionai_v1.types.SearchCapabilitySetting",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "search_capabilities": {
                        "description": "The metadata of search capability to enable.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.visionai_v1.types.SearchCapability",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "type_": {
                                "description": "The search capability to enable.",
                                "type": "object",
                                "reference": "google.cloud.visionai_v1.types.SearchCapability.Type"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "satisfies_pzs": {
                  "description": "Output only. This boolean field is only set for projects that have Physical Zone Separation enabled via an Org Policy constraint. It is set to true when the corpus is a valid zone separated corpus and false if it isn't.  This field is a member of `oneof`_ ``_satisfies_pzs``.",
                  "type": "boolean",
                  "output_only": true
                },
                "satisfies_pzi": {
                  "description": "Output only. This boolean field is only set for projects that have Physical Zone Isolation enabled via an Org Policy constraint. It is set to true when the corpus is a valid zone isolated corpus and false if it isn't.  This field is a member of `oneof`_ ``_satisfies_pzi``.",
                  "type": "boolean",
                  "output_only": true
                }
              },
              "required": [
                "display_name"
              ]
            }
          }
        },
        "required": [
          "corpus"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetCorpusRequest",
      "description": "Request for getting information about a specific ``Corpus``.\n\nAttributes:\n    name (str):\n        Required. The name of the ``Corpus``. Example:\n        ``corpora/my-corpus-123``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the ``Corpus``. Example: ``corpora/my-corpus-123``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateCorpusRequest",
      "description": "Request to update a ``Corpus``.\n\nAttributes:\n    corpus (google.ai.generativelanguage_v1beta.types.Corpus):\n        Required. The ``Corpus`` to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The list of fields to update. Currently, this only\n        supports updating ``display_name``.",
      "parameters": {
        "type": "object",
        "properties": {
          "corpus": {
            "description": "Required. The ``Corpus`` to update.",
            "reference": "google.ai.generativelanguage_v1beta.types.Corpus",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Resource name of the corpus. Format: ``projects/{project_number}/locations/{location_id}/corpora/{corpus_id}``",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. The corpus name to shown in the UI. The name can be up to 32 characters long.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Description of the corpus. Can be up to 25000 characters long.",
                  "type": "string"
                },
                "default_ttl": {
                  "description": "Optional. The default TTL value for all assets under the corpus without a asset level user-defined TTL. For STREAM_VIDEO type corpora, this is required and the maximum allowed default_ttl is 10 years.",
                  "type": "object",
                  "reference": "google.protobuf.duration_pb2.Duration",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                        "type": "integer"
                      },
                      "seconds": {
                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "type_": {
                  "description": "Optional. Type of the asset inside corpus.",
                  "type": "object",
                  "reference": "google.cloud.visionai_v1.types.Corpus.Type"
                },
                "search_capability_setting": {
                  "description": "Default search capability setting on corpus level.",
                  "type": "object",
                  "reference": "google.cloud.visionai_v1.types.SearchCapabilitySetting",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "search_capabilities": {
                        "description": "The metadata of search capability to enable.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.visionai_v1.types.SearchCapability",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "type_": {
                                "description": "The search capability to enable.",
                                "type": "object",
                                "reference": "google.cloud.visionai_v1.types.SearchCapability.Type"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "satisfies_pzs": {
                  "description": "Output only. This boolean field is only set for projects that have Physical Zone Separation enabled via an Org Policy constraint. It is set to true when the corpus is a valid zone separated corpus and false if it isn't.  This field is a member of `oneof`_ ``_satisfies_pzs``.",
                  "type": "boolean",
                  "output_only": true
                },
                "satisfies_pzi": {
                  "description": "Output only. This boolean field is only set for projects that have Physical Zone Isolation enabled via an Org Policy constraint. It is set to true when the corpus is a valid zone isolated corpus and false if it isn't.  This field is a member of `oneof`_ ``_satisfies_pzi``.",
                  "type": "boolean",
                  "output_only": true
                }
              },
              "required": [
                "display_name"
              ]
            }
          },
          "update_mask": {
            "description": "Required. The list of fields to update. Currently, this only supports updating ``display_name``.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "corpus",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteCorpusRequest",
      "description": "Request to delete a ``Corpus``.\n\nAttributes:\n    name (str):\n        Required. The resource name of the ``Corpus``. Example:\n        ``corpora/my-corpus-123``\n    force (bool):\n        Optional. If set to true, any ``Document``\\ s and objects\n        related to this ``Corpus`` will also be deleted.\n\n        If false (the default), a ``FAILED_PRECONDITION`` error will\n        be returned if ``Corpus`` contains any ``Document``\\ s.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the ``Corpus``. Example: ``corpora/my-corpus-123``",
            "type": "string"
          },
          "force": {
            "description": "Optional. If set to true, any ``Document``\\ s and objects related to this ``Corpus`` will also be deleted.  If false (the default), a ``FAILED_PRECONDITION`` error will be returned if ``Corpus`` contains any ``Document``\\ s.",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListCorporaRequest",
      "description": "Request for listing ``Corpora``.\n\nAttributes:\n    page_size (int):\n        Optional. The maximum number of ``Corpora`` to return (per\n        page). The service may return fewer ``Corpora``.\n\n        If unspecified, at most 10 ``Corpora`` will be returned. The\n        maximum size limit is 20 ``Corpora`` per page.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListCorpora`` call.\n\n        Provide the ``next_page_token`` returned in the response as\n        an argument to the next request to retrieve the next page.\n\n        When paginating, all other parameters provided to\n        ``ListCorpora`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "page_size": {
            "description": "Optional. The maximum number of ``Corpora`` to return (per page). The service may return fewer ``Corpora``.  If unspecified, at most 10 ``Corpora`` will be returned. The maximum size limit is 20 ``Corpora`` per page.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListCorpora`` call.  Provide the ``next_page_token`` returned in the response as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to ``ListCorpora`` must match the call that provided the page token.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "QueryCorpusRequest",
      "description": "Request for querying a ``Corpus``.\n\nAttributes:\n    name (str):\n        Required. The name of the ``Corpus`` to query. Example:\n        ``corpora/my-corpus-123``\n    query (str):\n        Required. Query string to perform semantic\n        search.\n    metadata_filters (MutableSequence[google.ai.generativelanguage_v1beta.types.MetadataFilter]):\n        Optional. Filter for ``Chunk`` and ``Document`` metadata.\n        Each ``MetadataFilter`` object should correspond to a unique\n        key. Multiple ``MetadataFilter`` objects are joined by\n        logical \"AND\"s.\n\n        Example query at document level: (year >= 2020 OR year <\n        2010) AND (genre = drama OR genre = action)\n\n        ``MetadataFilter`` object list: metadata_filters = [ {key =\n        \"document.custom_metadata.year\" conditions = [{int_value =\n        2020, operation = GREATER_EQUAL}, {int_value = 2010,\n        operation = LESS}]}, {key = \"document.custom_metadata.year\"\n        conditions = [{int_value = 2020, operation = GREATER_EQUAL},\n      ",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the ``Corpus`` to query. Example: ``corpora/my-corpus-123``",
            "type": "string"
          },
          "query": {
            "description": "Required. Query string to perform semantic search.",
            "type": "string"
          },
          "metadata_filters": {
            "description": "Optional. Filter for ``Chunk`` and ``Document`` metadata. Each ``MetadataFilter`` object should correspond to a unique key. Multiple ``MetadataFilter`` objects are joined by logical \"AND\"s.  Example query at document level: (year >= 2020 OR year < 2010) AND (genre = drama OR genre = action)  ``MetadataFilter`` object list: metadata_filters = [ {key = \"document.custom_metadata.year\" conditions = [{int_value = 2020, operation = GREATER_EQUAL}, {int_value = 2010, operation = LESS}]}, {key = \"document.custom_metadata.year\" conditions = [{int_value = 2020, operation = GREATER_EQUAL}, {int_value = 2010, operation = LESS}]}, {key = \"document.custom_metadata.genre\" conditions = [{string_value = \"drama\", operation = EQUAL}, {string_value = \"action\", operation = EQUAL}]}]  Example query at chunk level for a numeric range of values: (year > 2015 AND year <= 2020)  ``MetadataFilter`` object list: metadata_filters = [ {key = \"chunk.custom_metadata.year\" conditions = [{int_value = 2015, operation = GREATER}]}, {key = \"chunk.custom_metadata.year\" conditions = [{int_value = 2020, operation = LESS_EQUAL}]}]  Note: \"AND\"s for the same key are only supported for numeric values. String values only support \"OR\"s for the same key.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.MetadataFilter",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "filter_labels": {
                    "description": "The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list must not be empty and can have at the most 64 entries.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "reference": "google.cloud.compute_v1.types.MetadataFilterLabelMatch",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of metadata label. The name can have a maximum length of 1024 characters and must be at least 1 character long.  This field is a member of `oneof`_ ``_name``.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the label must match the specified value. value can have a maximum length of 1024 characters.  This field is a member of `oneof`_ ``_value``.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "filter_match_criteria": {
                    "description": "Specifies how individual filter label matches within the list of filterLabels and contributes toward the overall metadataFilter match. Supported values are: - MATCH_ANY: at least one of the filterLabels must have a matching label in the provided metadata. - MATCH_ALL: all filterLabels must have matching labels in the provided metadata. Check the FilterMatchCriteria enum for the list of possible values.  This field is a member of `oneof`_ ``_filter_match_criteria``.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "results_count": {
            "description": "Optional. The maximum number of ``Chunk``\\ s to return. The service may return fewer ``Chunk``\\ s.  If unspecified, at most 10 ``Chunk``\\ s will be returned. The maximum specified result count is 100.",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "query"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateDocumentRequest",
      "description": "Request to create a ``Document``.\n\nAttributes:\n    parent (str):\n        Required. The name of the ``Corpus`` where this ``Document``\n        will be created. Example: ``corpora/my-corpus-123``\n    document (google.ai.generativelanguage_v1beta.types.Document):\n        Required. The ``Document`` to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the ``Corpus`` where this ``Document`` will be created. Example: ``corpora/my-corpus-123``",
            "type": "string"
          },
          "document": {
            "description": "Required. The ``Document`` to create.",
            "reference": "google.ai.generativelanguage_v1beta.types.Document",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. The document resource name. The name must be empty when creating a document. Format: ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>``.",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.",
                  "type": "string"
                },
                "mime_type": {
                  "description": "Required. The MIME type of this document.",
                  "type": "string"
                },
                "knowledge_types": {
                  "description": "Required. The knowledge type of document content.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.dialogflow_v2.types.Document.KnowledgeType"
                  }
                },
                "content_uri": {
                  "description": "The URI where the file content is located.  For documents stored in Google Cloud Storage, these URIs must have the form ``gs://<bucket-name>/<object-name>``.  NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the ``gs://`` format URI described above.  This field is a member of `oneof`_ ``source``.",
                  "type": "string"
                },
                "raw_content": {
                  "description": "The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.  This field is a member of `oneof`_ ``source``.",
                  "type": "object",
                  "reference": "bytes"
                },
                "enable_auto_reload": {
                  "description": "Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document.  Currently you can only enable automatic reload for documents sourced from a public url, see ``source`` field for the source types.  Reload status can be tracked in ``latest_reload_status``. If a reload fails, we will keep the document unchanged.  If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISSION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling ``ReloadDocument`` and clear the errors.",
                  "type": "boolean"
                },
                "latest_reload_status": {
                  "description": "Output only. The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Document.ReloadStatus",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "description": "The time of a reload attempt. This reload may have been triggered automatically or manually and may not have succeeded.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "status": {
                        "description": "The status of a reload attempt or the initial load.",
                        "type": "object",
                        "reference": "google.rpc.status_pb2.Status",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "state": {
                              "description": "Output only. State of the metadata job.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.MetadataJob.Status.State",
                              "output_only": true
                            },
                            "message": {
                              "description": "Output only. Message relating to the progression of a metadata job.",
                              "type": "string",
                              "output_only": true
                            },
                            "completion_percent": {
                              "description": "Output only. Progress tracking.",
                              "type": "integer",
                              "output_only": true
                            },
                            "update_time": {
                              "description": "Output only. The time when the status was updated.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp",
                              "output_only": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "metadata": {
                  "description": "Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a ``key`` or a ``value`` of the metadata is 1024 bytes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "state": {
                  "description": "Output only. The current state of the document.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Document.State",
                  "output_only": true
                }
              },
              "required": [
                "display_name",
                "mime_type",
                "knowledge_types"
              ]
            }
          }
        },
        "required": [
          "parent",
          "document"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetDocumentRequest",
      "description": "Request for getting information about a specific ``Document``.\n\nAttributes:\n    name (str):\n        Required. The name of the ``Document`` to retrieve. Example:\n        ``corpora/my-corpus-123/documents/the-doc-abc``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the ``Document`` to retrieve. Example: ``corpora/my-corpus-123/documents/the-doc-abc``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateDocumentRequest",
      "description": "Request to update a ``Document``.\n\nAttributes:\n    document (google.ai.generativelanguage_v1beta.types.Document):\n        Required. The ``Document`` to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The list of fields to update. Currently, this only\n        supports updating ``display_name`` and ``custom_metadata``.",
      "parameters": {
        "type": "object",
        "properties": {
          "document": {
            "description": "Required. The ``Document`` to update.",
            "reference": "google.ai.generativelanguage_v1beta.types.Document",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. The document resource name. The name must be empty when creating a document. Format: ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>``.",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.",
                  "type": "string"
                },
                "mime_type": {
                  "description": "Required. The MIME type of this document.",
                  "type": "string"
                },
                "knowledge_types": {
                  "description": "Required. The knowledge type of document content.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.dialogflow_v2.types.Document.KnowledgeType"
                  }
                },
                "content_uri": {
                  "description": "The URI where the file content is located.  For documents stored in Google Cloud Storage, these URIs must have the form ``gs://<bucket-name>/<object-name>``.  NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the ``gs://`` format URI described above.  This field is a member of `oneof`_ ``source``.",
                  "type": "string"
                },
                "raw_content": {
                  "description": "The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.  This field is a member of `oneof`_ ``source``.",
                  "type": "object",
                  "reference": "bytes"
                },
                "enable_auto_reload": {
                  "description": "Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document.  Currently you can only enable automatic reload for documents sourced from a public url, see ``source`` field for the source types.  Reload status can be tracked in ``latest_reload_status``. If a reload fails, we will keep the document unchanged.  If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISSION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling ``ReloadDocument`` and clear the errors.",
                  "type": "boolean"
                },
                "latest_reload_status": {
                  "description": "Output only. The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Document.ReloadStatus",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "description": "The time of a reload attempt. This reload may have been triggered automatically or manually and may not have succeeded.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "status": {
                        "description": "The status of a reload attempt or the initial load.",
                        "type": "object",
                        "reference": "google.rpc.status_pb2.Status",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "state": {
                              "description": "Output only. State of the metadata job.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.MetadataJob.Status.State",
                              "output_only": true
                            },
                            "message": {
                              "description": "Output only. Message relating to the progression of a metadata job.",
                              "type": "string",
                              "output_only": true
                            },
                            "completion_percent": {
                              "description": "Output only. Progress tracking.",
                              "type": "integer",
                              "output_only": true
                            },
                            "update_time": {
                              "description": "Output only. The time when the status was updated.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp",
                              "output_only": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "metadata": {
                  "description": "Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a ``key`` or a ``value`` of the metadata is 1024 bytes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "state": {
                  "description": "Output only. The current state of the document.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Document.State",
                  "output_only": true
                }
              },
              "required": [
                "display_name",
                "mime_type",
                "knowledge_types"
              ]
            }
          },
          "update_mask": {
            "description": "Required. The list of fields to update. Currently, this only supports updating ``display_name`` and ``custom_metadata``.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "document",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteDocumentRequest",
      "description": "Request to delete a ``Document``.\n\nAttributes:\n    name (str):\n        Required. The resource name of the ``Document`` to delete.\n        Example: ``corpora/my-corpus-123/documents/the-doc-abc``\n    force (bool):\n        Optional. If set to true, any ``Chunk``\\ s and objects\n        related to this ``Document`` will also be deleted.\n\n        If false (the default), a ``FAILED_PRECONDITION`` error will\n        be returned if ``Document`` contains any ``Chunk``\\ s.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the ``Document`` to delete. Example: ``corpora/my-corpus-123/documents/the-doc-abc``",
            "type": "string"
          },
          "force": {
            "description": "Optional. If set to true, any ``Chunk``\\ s and objects related to this ``Document`` will also be deleted.  If false (the default), a ``FAILED_PRECONDITION`` error will be returned if ``Document`` contains any ``Chunk``\\ s.",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListDocumentsRequest",
      "description": "Request for listing ``Document``\\ s.\n\nAttributes:\n    parent (str):\n        Required. The name of the ``Corpus`` containing\n        ``Document``\\ s. Example: ``corpora/my-corpus-123``\n    page_size (int):\n        Optional. The maximum number of ``Document``\\ s to return\n        (per page). The service may return fewer ``Document``\\ s.\n\n        If unspecified, at most 10 ``Document``\\ s will be returned.\n        The maximum size limit is 20 ``Document``\\ s per page.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListDocuments`` call.\n\n        Provide the ``next_page_token`` returned in the response as\n        an argument to the next request to retrieve the next page.\n\n        When paginating, all other parameters provided to\n        ``ListDocuments`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the ``Corpus`` containing ``Document``\\ s. Example: ``corpora/my-corpus-123``",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of ``Document``\\ s to return (per page). The service may return fewer ``Document``\\ s.  If unspecified, at most 10 ``Document``\\ s will be returned. The maximum size limit is 20 ``Document``\\ s per page.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListDocuments`` call.  Provide the ``next_page_token`` returned in the response as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to ``ListDocuments`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "QueryDocumentRequest",
      "description": "Request for querying a ``Document``.\n\nAttributes:\n    name (str):\n        Required. The name of the ``Document`` to query. Example:\n        ``corpora/my-corpus-123/documents/the-doc-abc``\n    query (str):\n        Required. Query string to perform semantic\n        search.\n    results_count (int):\n        Optional. The maximum number of ``Chunk``\\ s to return. The\n        service may return fewer ``Chunk``\\ s.\n\n        If unspecified, at most 10 ``Chunk``\\ s will be returned.\n        The maximum specified result count is 100.\n    metadata_filters (MutableSequence[google.ai.generativelanguage_v1beta.types.MetadataFilter]):\n        Optional. Filter for ``Chunk`` metadata. Each\n        ``MetadataFilter`` object should correspond to a unique key.\n        Multiple ``MetadataFilter`` objects are joined by logical\n        \"AND\"s.\n\n        Note: ``Document``-level filtering is not supported for this\n        request because a ``Document`` name is already specified.\n\n        Example query: (year >= 2020 OR year < 2010) A",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the ``Document`` to query. Example: ``corpora/my-corpus-123/documents/the-doc-abc``",
            "type": "string"
          },
          "query": {
            "description": "Required. Query string to perform semantic search.",
            "type": "string"
          },
          "results_count": {
            "description": "Optional. The maximum number of ``Chunk``\\ s to return. The service may return fewer ``Chunk``\\ s.  If unspecified, at most 10 ``Chunk``\\ s will be returned. The maximum specified result count is 100.",
            "type": "integer"
          },
          "metadata_filters": {
            "description": "Optional. Filter for ``Chunk`` metadata. Each ``MetadataFilter`` object should correspond to a unique key. Multiple ``MetadataFilter`` objects are joined by logical \"AND\"s.  Note: ``Document``-level filtering is not supported for this request because a ``Document`` name is already specified.  Example query: (year >= 2020 OR year < 2010) AND (genre = drama OR genre = action)  ``MetadataFilter`` object list: metadata_filters = [ {key = \"chunk.custom_metadata.year\" conditions = [{int_value = 2020, operation = GREATER_EQUAL}, {int_value = 2010, operation = LESS}}, {key = \"chunk.custom_metadata.genre\" conditions = [{string_value = \"drama\", operation = EQUAL}, {string_value = \"action\", operation = EQUAL}}]  Example query for a numeric range of values: (year > 2015 AND year <= 2020)  ``MetadataFilter`` object list: metadata_filters = [ {key = \"chunk.custom_metadata.year\" conditions = [{int_value = 2015, operation = GREATER}]}, {key = \"chunk.custom_metadata.year\" conditions = [{int_value = 2020, operation = LESS_EQUAL}]}]  Note: \"AND\"s for the same key are only supported for numeric values. String values only support \"OR\"s for the same key.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.MetadataFilter",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "filter_labels": {
                    "description": "The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list must not be empty and can have at the most 64 entries.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "reference": "google.cloud.compute_v1.types.MetadataFilterLabelMatch",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of metadata label. The name can have a maximum length of 1024 characters and must be at least 1 character long.  This field is a member of `oneof`_ ``_name``.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the label must match the specified value. value can have a maximum length of 1024 characters.  This field is a member of `oneof`_ ``_value``.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "filter_match_criteria": {
                    "description": "Specifies how individual filter label matches within the list of filterLabels and contributes toward the overall metadataFilter match. Supported values are: - MATCH_ANY: at least one of the filterLabels must have a matching label in the provided metadata. - MATCH_ALL: all filterLabels must have matching labels in the provided metadata. Check the FilterMatchCriteria enum for the list of possible values.  This field is a member of `oneof`_ ``_filter_match_criteria``.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "query"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateChunkRequest",
      "description": "Request to create a ``Chunk``.\n\nAttributes:\n    parent (str):\n        Required. The name of the ``Document`` where this ``Chunk``\n        will be created. Example:\n        ``corpora/my-corpus-123/documents/the-doc-abc``\n    chunk (google.ai.generativelanguage_v1beta.types.Chunk):\n        Required. The ``Chunk`` to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the ``Document`` where this ``Chunk`` will be created. Example: ``corpora/my-corpus-123/documents/the-doc-abc``",
            "type": "string"
          },
          "chunk": {
            "description": "Required. The ``Chunk`` to create.",
            "reference": "google.ai.generativelanguage_v1beta.types.Chunk",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "chunk_id": {
                  "description": "ID of the chunk.",
                  "type": "string"
                },
                "source_block_ids": {
                  "description": "Unused.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "content": {
                  "description": "Text content of the chunk.",
                  "type": "string"
                },
                "page_span": {
                  "description": "Page span of the chunk.",
                  "type": "object",
                  "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "page_start": {
                        "description": "Page where chunk starts in the document.",
                        "type": "integer"
                      },
                      "page_end": {
                        "description": "Page where chunk ends in the document.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "page_headers": {
                  "description": "Page headers associated with the chunk.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageHeader",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "description": "Header in text format.",
                          "type": "string"
                        },
                        "page_span": {
                          "description": "Page span of the header.",
                          "type": "object",
                          "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "page_start": {
                                "description": "Page where chunk starts in the document.",
                                "type": "integer"
                              },
                              "page_end": {
                                "description": "Page where chunk ends in the document.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "page_footers": {
                  "description": "Page footers associated with the chunk.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageFooter",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "description": "Footer in text format.",
                          "type": "string"
                        },
                        "page_span": {
                          "description": "Page span of the footer.",
                          "type": "object",
                          "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "page_start": {
                                "description": "Page where chunk starts in the document.",
                                "type": "integer"
                              },
                              "page_end": {
                                "description": "Page where chunk ends in the document.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "chunk"
        ]
      }
    },
    {
      "type": "function",
      "name": "BatchCreateChunksRequest",
      "description": "Request to batch create ``Chunk``\\ s.\n\nAttributes:\n    parent (str):\n        Optional. The name of the ``Document`` where this batch of\n        ``Chunk``\\ s will be created. The parent field in every\n        ``CreateChunkRequest`` must match this value. Example:\n        ``corpora/my-corpus-123/documents/the-doc-abc``\n    requests (MutableSequence[google.ai.generativelanguage_v1beta.types.CreateChunkRequest]):\n        Required. The request messages specifying the ``Chunk``\\ s\n        to create. A maximum of 100 ``Chunk``\\ s can be created in a\n        batch.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Optional. The name of the ``Document`` where this batch of ``Chunk``\\ s will be created. The parent field in every ``CreateChunkRequest`` must match this value. Example: ``corpora/my-corpus-123/documents/the-doc-abc``",
            "type": "string"
          },
          "requests": {
            "description": "Required. The request messages specifying the ``Chunk``\\ s to create. A maximum of 100 ``Chunk``\\ s can be created in a batch.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.CreateChunkRequest",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "parent": {
                    "description": "Required. The name of the ``Document`` where this ``Chunk`` will be created. Example: ``corpora/my-corpus-123/documents/the-doc-abc``",
                    "type": "string"
                  },
                  "chunk": {
                    "description": "Required. The ``Chunk`` to create.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta.types.Chunk",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "chunk_id": {
                          "description": "ID of the chunk.",
                          "type": "string"
                        },
                        "source_block_ids": {
                          "description": "Unused.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "content": {
                          "description": "Text content of the chunk.",
                          "type": "string"
                        },
                        "page_span": {
                          "description": "Page span of the chunk.",
                          "type": "object",
                          "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "page_start": {
                                "description": "Page where chunk starts in the document.",
                                "type": "integer"
                              },
                              "page_end": {
                                "description": "Page where chunk ends in the document.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "page_headers": {
                          "description": "Page headers associated with the chunk.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageHeader",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "description": "Header in text format.",
                                  "type": "string"
                                },
                                "page_span": {
                                  "description": "Page span of the header.",
                                  "type": "object",
                                  "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "page_start": {
                                        "description": "Page where chunk starts in the document.",
                                        "type": "integer"
                                      },
                                      "page_end": {
                                        "description": "Page where chunk ends in the document.",
                                        "type": "integer"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "page_footers": {
                          "description": "Page footers associated with the chunk.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageFooter",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "description": "Footer in text format.",
                                  "type": "string"
                                },
                                "page_span": {
                                  "description": "Page span of the footer.",
                                  "type": "object",
                                  "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "page_start": {
                                        "description": "Page where chunk starts in the document.",
                                        "type": "integer"
                                      },
                                      "page_end": {
                                        "description": "Page where chunk ends in the document.",
                                        "type": "integer"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "parent",
                  "chunk"
                ]
              }
            }
          }
        },
        "required": [
          "requests"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetChunkRequest",
      "description": "Request for getting information about a specific ``Chunk``.\n\nAttributes:\n    name (str):\n        Required. The name of the ``Chunk`` to retrieve. Example:\n        ``corpora/my-corpus-123/documents/the-doc-abc/chunks/some-chunk``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the ``Chunk`` to retrieve. Example: ``corpora/my-corpus-123/documents/the-doc-abc/chunks/some-chunk``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateChunkRequest",
      "description": "Request to update a ``Chunk``.\n\nAttributes:\n    chunk (google.ai.generativelanguage_v1beta.types.Chunk):\n        Required. The ``Chunk`` to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The list of fields to update. Currently, this only\n        supports updating ``custom_metadata`` and ``data``.",
      "parameters": {
        "type": "object",
        "properties": {
          "chunk": {
            "description": "Required. The ``Chunk`` to update.",
            "reference": "google.ai.generativelanguage_v1beta.types.Chunk",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "chunk_id": {
                  "description": "ID of the chunk.",
                  "type": "string"
                },
                "source_block_ids": {
                  "description": "Unused.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "content": {
                  "description": "Text content of the chunk.",
                  "type": "string"
                },
                "page_span": {
                  "description": "Page span of the chunk.",
                  "type": "object",
                  "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "page_start": {
                        "description": "Page where chunk starts in the document.",
                        "type": "integer"
                      },
                      "page_end": {
                        "description": "Page where chunk ends in the document.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "page_headers": {
                  "description": "Page headers associated with the chunk.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageHeader",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "description": "Header in text format.",
                          "type": "string"
                        },
                        "page_span": {
                          "description": "Page span of the header.",
                          "type": "object",
                          "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "page_start": {
                                "description": "Page where chunk starts in the document.",
                                "type": "integer"
                              },
                              "page_end": {
                                "description": "Page where chunk ends in the document.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "page_footers": {
                  "description": "Page footers associated with the chunk.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageFooter",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "description": "Footer in text format.",
                          "type": "string"
                        },
                        "page_span": {
                          "description": "Page span of the footer.",
                          "type": "object",
                          "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "page_start": {
                                "description": "Page where chunk starts in the document.",
                                "type": "integer"
                              },
                              "page_end": {
                                "description": "Page where chunk ends in the document.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "Required. The list of fields to update. Currently, this only supports updating ``custom_metadata`` and ``data``.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "chunk",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "BatchUpdateChunksRequest",
      "description": "Request to batch update ``Chunk``\\ s.\n\nAttributes:\n    parent (str):\n        Optional. The name of the ``Document`` containing the\n        ``Chunk``\\ s to update. The parent field in every\n        ``UpdateChunkRequest`` must match this value. Example:\n        ``corpora/my-corpus-123/documents/the-doc-abc``\n    requests (MutableSequence[google.ai.generativelanguage_v1beta.types.UpdateChunkRequest]):\n        Required. The request messages specifying the ``Chunk``\\ s\n        to update. A maximum of 100 ``Chunk``\\ s can be updated in a\n        batch.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Optional. The name of the ``Document`` containing the ``Chunk``\\ s to update. The parent field in every ``UpdateChunkRequest`` must match this value. Example: ``corpora/my-corpus-123/documents/the-doc-abc``",
            "type": "string"
          },
          "requests": {
            "description": "Required. The request messages specifying the ``Chunk``\\ s to update. A maximum of 100 ``Chunk``\\ s can be updated in a batch.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.UpdateChunkRequest",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "chunk": {
                    "description": "Required. The ``Chunk`` to update.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta.types.Chunk",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "chunk_id": {
                          "description": "ID of the chunk.",
                          "type": "string"
                        },
                        "source_block_ids": {
                          "description": "Unused.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "content": {
                          "description": "Text content of the chunk.",
                          "type": "string"
                        },
                        "page_span": {
                          "description": "Page span of the chunk.",
                          "type": "object",
                          "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "page_start": {
                                "description": "Page where chunk starts in the document.",
                                "type": "integer"
                              },
                              "page_end": {
                                "description": "Page where chunk ends in the document.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "page_headers": {
                          "description": "Page headers associated with the chunk.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageHeader",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "description": "Header in text format.",
                                  "type": "string"
                                },
                                "page_span": {
                                  "description": "Page span of the header.",
                                  "type": "object",
                                  "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "page_start": {
                                        "description": "Page where chunk starts in the document.",
                                        "type": "integer"
                                      },
                                      "page_end": {
                                        "description": "Page where chunk ends in the document.",
                                        "type": "integer"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "page_footers": {
                          "description": "Page footers associated with the chunk.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageFooter",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "description": "Footer in text format.",
                                  "type": "string"
                                },
                                "page_span": {
                                  "description": "Page span of the footer.",
                                  "type": "object",
                                  "reference": "google.cloud.documentai_v1.types.Document.ChunkedDocument.Chunk.ChunkPageSpan",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "page_start": {
                                        "description": "Page where chunk starts in the document.",
                                        "type": "integer"
                                      },
                                      "page_end": {
                                        "description": "Page where chunk ends in the document.",
                                        "type": "integer"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "update_mask": {
                    "description": "Required. The list of fields to update. Currently, this only supports updating ``custom_metadata`` and ``data``.",
                    "type": "object",
                    "reference": "google.protobuf.field_mask_pb2.FieldMask"
                  }
                },
                "required": [
                  "chunk",
                  "update_mask"
                ]
              }
            }
          }
        },
        "required": [
          "requests"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteChunkRequest",
      "description": "Request to delete a ``Chunk``.\n\nAttributes:\n    name (str):\n        Required. The resource name of the ``Chunk`` to delete.\n        Example:\n        ``corpora/my-corpus-123/documents/the-doc-abc/chunks/some-chunk``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the ``Chunk`` to delete. Example: ``corpora/my-corpus-123/documents/the-doc-abc/chunks/some-chunk``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "BatchDeleteChunksRequest",
      "description": "Request to batch delete ``Chunk``\\ s.\n\nAttributes:\n    parent (str):\n        Optional. The name of the ``Document`` containing the\n        ``Chunk``\\ s to delete. The parent field in every\n        ``DeleteChunkRequest`` must match this value. Example:\n        ``corpora/my-corpus-123/documents/the-doc-abc``\n    requests (MutableSequence[google.ai.generativelanguage_v1beta.types.DeleteChunkRequest]):\n        Required. The request messages specifying the ``Chunk``\\ s\n        to delete.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Optional. The name of the ``Document`` containing the ``Chunk``\\ s to delete. The parent field in every ``DeleteChunkRequest`` must match this value. Example: ``corpora/my-corpus-123/documents/the-doc-abc``",
            "type": "string"
          },
          "requests": {
            "description": "Required. The request messages specifying the ``Chunk``\\ s to delete.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.DeleteChunkRequest",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Required. The resource name of the ``Chunk`` to delete. Example: ``corpora/my-corpus-123/documents/the-doc-abc/chunks/some-chunk``",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "required": [
          "requests"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListChunksRequest",
      "description": "Request for listing ``Chunk``\\ s.\n\nAttributes:\n    parent (str):\n        Required. The name of the ``Document`` containing\n        ``Chunk``\\ s. Example:\n        ``corpora/my-corpus-123/documents/the-doc-abc``\n    page_size (int):\n        Optional. The maximum number of ``Chunk``\\ s to return (per\n        page). The service may return fewer ``Chunk``\\ s.\n\n        If unspecified, at most 10 ``Chunk``\\ s will be returned.\n        The maximum size limit is 100 ``Chunk``\\ s per page.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListChunks`` call.\n\n        Provide the ``next_page_token`` returned in the response as\n        an argument to the next request to retrieve the next page.\n\n        When paginating, all other parameters provided to\n        ``ListChunks`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the ``Document`` containing ``Chunk``\\ s. Example: ``corpora/my-corpus-123/documents/the-doc-abc``",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of ``Chunk``\\ s to return (per page). The service may return fewer ``Chunk``\\ s.  If unspecified, at most 10 ``Chunk``\\ s will be returned. The maximum size limit is 100 ``Chunk``\\ s per page.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListChunks`` call.  Provide the ``next_page_token`` returned in the response as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to ``ListChunks`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-ai-generativelanguage/google/ai/generativelanguage_v1beta/types/permission_service.py": [
    {
      "type": "function",
      "name": "CreatePermissionRequest",
      "description": "Request to create a ``Permission``.\n\nAttributes:\n    parent (str):\n        Required. The parent resource of the ``Permission``.\n        Formats: ``tunedModels/{tuned_model}`` ``corpora/{corpus}``\n    permission (google.ai.generativelanguage_v1beta.types.Permission):\n        Required. The permission to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource of the ``Permission``. Formats: ``tunedModels/{tuned_model}`` ``corpora/{corpus}``",
            "type": "string"
          },
          "permission": {
            "description": "Required. The permission to create.",
            "reference": "google.ai.generativelanguage_v1beta.types.Permission",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of this Permission.",
                  "type": "string"
                },
                "title": {
                  "description": "The title of this Permission.",
                  "type": "string"
                },
                "description": {
                  "description": "A brief description of what this Permission is used for. This permission can ONLY be used in predefined roles.",
                  "type": "string"
                },
                "only_in_predefined_roles": {
                  "description": "",
                  "type": "boolean"
                },
                "stage": {
                  "description": "The current launch stage of the permission.",
                  "type": "object",
                  "reference": "google.cloud.iam_admin_v1.types.Permission.PermissionLaunchStage"
                },
                "custom_roles_support_level": {
                  "description": "The current custom role support level.",
                  "type": "object",
                  "reference": "google.cloud.iam_admin_v1.types.Permission.CustomRolesSupportLevel"
                },
                "api_disabled": {
                  "description": "The service API associated with the permission is not enabled.",
                  "type": "boolean"
                },
                "primary_permission": {
                  "description": "The preferred name for this permission. If present, then this permission is an alias of, and equivalent to, the listed primary_permission.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "permission"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetPermissionRequest",
      "description": "Request for getting information about a specific ``Permission``.\n\nAttributes:\n    name (str):\n        Required. The resource name of the permission.\n\n        Formats:\n        ``tunedModels/{tuned_model}/permissions/{permission}``\n        ``corpora/{corpus}/permissions/{permission}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the permission.  Formats: ``tunedModels/{tuned_model}/permissions/{permission}`` ``corpora/{corpus}/permissions/{permission}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListPermissionsRequest",
      "description": "Request for listing permissions.\n\nAttributes:\n    parent (str):\n        Required. The parent resource of the permissions. Formats:\n        ``tunedModels/{tuned_model}`` ``corpora/{corpus}``\n    page_size (int):\n        Optional. The maximum number of ``Permission``\\ s to return\n        (per page). The service may return fewer permissions.\n\n        If unspecified, at most 10 permissions will be returned.\n        This method returns at most 1000 permissions per page, even\n        if you pass larger page_size.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListPermissions`` call.\n\n        Provide the ``page_token`` returned by one request as an\n        argument to the next request to retrieve the next page.\n\n        When paginating, all other parameters provided to\n        ``ListPermissions`` must match the call that provided the\n        page token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource of the permissions. Formats: ``tunedModels/{tuned_model}`` ``corpora/{corpus}``",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of ``Permission``\\ s to return (per page). The service may return fewer permissions.  If unspecified, at most 10 permissions will be returned. This method returns at most 1000 permissions per page, even if you pass larger page_size.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListPermissions`` call.  Provide the ``page_token`` returned by one request as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to ``ListPermissions`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdatePermissionRequest",
      "description": "Request to update the ``Permission``.\n\nAttributes:\n    permission (google.ai.generativelanguage_v1beta.types.Permission):\n        Required. The permission to update.\n\n        The permission's ``name`` field is used to identify the\n        permission to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The list of fields to update. Accepted ones:\n\n        -  role (``Permission.role`` field)",
      "parameters": {
        "type": "object",
        "properties": {
          "permission": {
            "description": "Required. The permission to update.  The permission's ``name`` field is used to identify the permission to update.",
            "reference": "google.ai.generativelanguage_v1beta.types.Permission",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of this Permission.",
                  "type": "string"
                },
                "title": {
                  "description": "The title of this Permission.",
                  "type": "string"
                },
                "description": {
                  "description": "A brief description of what this Permission is used for. This permission can ONLY be used in predefined roles.",
                  "type": "string"
                },
                "only_in_predefined_roles": {
                  "description": "",
                  "type": "boolean"
                },
                "stage": {
                  "description": "The current launch stage of the permission.",
                  "type": "object",
                  "reference": "google.cloud.iam_admin_v1.types.Permission.PermissionLaunchStage"
                },
                "custom_roles_support_level": {
                  "description": "The current custom role support level.",
                  "type": "object",
                  "reference": "google.cloud.iam_admin_v1.types.Permission.CustomRolesSupportLevel"
                },
                "api_disabled": {
                  "description": "The service API associated with the permission is not enabled.",
                  "type": "boolean"
                },
                "primary_permission": {
                  "description": "The preferred name for this permission. If present, then this permission is an alias of, and equivalent to, the listed primary_permission.",
                  "type": "string"
                }
              }
            }
          },
          "update_mask": {
            "description": "Required. The list of fields to update. Accepted ones:  -  role (``Permission.role`` field)",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "permission",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeletePermissionRequest",
      "description": "Request to delete the ``Permission``.\n\nAttributes:\n    name (str):\n        Required. The resource name of the permission. Formats:\n        ``tunedModels/{tuned_model}/permissions/{permission}``\n        ``corpora/{corpus}/permissions/{permission}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the permission. Formats: ``tunedModels/{tuned_model}/permissions/{permission}`` ``corpora/{corpus}/permissions/{permission}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "TransferOwnershipRequest",
      "description": "Request to transfer the ownership of the tuned model.\n\nAttributes:\n    name (str):\n        Required. The resource name of the tuned model to transfer\n        ownership.\n\n        Format: ``tunedModels/my-model-id``\n    email_address (str):\n        Required. The email address of the user to\n        whom the tuned model is being transferred to.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the tuned model to transfer ownership.  Format: ``tunedModels/my-model-id``",
            "type": "string"
          },
          "email_address": {
            "description": "Required. The email address of the user to whom the tuned model is being transferred to.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "email_address"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-ai-generativelanguage/google/ai/generativelanguage_v1beta/types/prediction_service.py": [
    {
      "type": "function",
      "name": "PredictRequest",
      "description": "Request message for\n[PredictionService.Predict][google.ai.generativelanguage.v1beta.PredictionService.Predict].\n\nAttributes:\n    model (str):\n        Required. The name of the model for prediction. Format:\n        ``name=models/{model}``.\n    instances (MutableSequence[google.protobuf.struct_pb2.Value]):\n        Required. The instances that are the input to\n        the prediction call.\n    parameters (google.protobuf.struct_pb2.Value):\n        Optional. The parameters that govern the\n        prediction call.",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The name of the model for prediction. Format: ``name=models/{model}``.",
            "type": "string"
          },
          "instances": {
            "description": "Required. The instances that are the input to the prediction call.",
            "type": "array",
            "items": {
              "reference": "google.protobuf.struct_pb2.Value",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "dropdown_value": {
                    "description": "The custom_field_option_id, if the CustomFieldDataType is DROPDOWN.  This field is a member of `oneof`_ ``value``.",
                    "type": "integer"
                  },
                  "string_value": {
                    "description": "The value, if the CustomFieldDataType is STRING.  This field is a member of `oneof`_ ``value``.",
                    "type": "string"
                  },
                  "number_value": {
                    "description": "The value, if the CustomFieldDataType is NUMBER.  This field is a member of `oneof`_ ``value``.",
                    "type": "number"
                  },
                  "toggle_value": {
                    "description": "The value, if the CustomFieldDataType is TOGGLE.  This field is a member of `oneof`_ ``value``.",
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "parameters": {
            "description": "Optional. The parameters that govern the prediction call.",
            "reference": "google.protobuf.struct_pb2.Value",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "dropdown_value": {
                  "description": "The custom_field_option_id, if the CustomFieldDataType is DROPDOWN.  This field is a member of `oneof`_ ``value``.",
                  "type": "integer"
                },
                "string_value": {
                  "description": "The value, if the CustomFieldDataType is STRING.  This field is a member of `oneof`_ ``value``.",
                  "type": "string"
                },
                "number_value": {
                  "description": "The value, if the CustomFieldDataType is NUMBER.  This field is a member of `oneof`_ ``value``.",
                  "type": "number"
                },
                "toggle_value": {
                  "description": "The value, if the CustomFieldDataType is TOGGLE.  This field is a member of `oneof`_ ``value``.",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "required": [
          "model",
          "instances"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-ai-generativelanguage/google/ai/generativelanguage_v1beta/types/model_service.py": [
    {
      "type": "function",
      "name": "GetModelRequest",
      "description": "Request for getting information about a specific Model.\n\nAttributes:\n    name (str):\n        Required. The resource name of the model.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the model.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListModelsRequest",
      "description": "Request for listing all Models.\n\nAttributes:\n    page_size (int):\n        The maximum number of ``Models`` to return (per page).\n\n        If unspecified, 50 models will be returned per page. This\n        method returns at most 1000 models per page, even if you\n        pass a larger page_size.\n    page_token (str):\n        A page token, received from a previous ``ListModels`` call.\n\n        Provide the ``page_token`` returned by one request as an\n        argument to the next request to retrieve the next page.\n\n        When paginating, all other parameters provided to\n        ``ListModels`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "page_size": {
            "description": "The maximum number of ``Models`` to return (per page).  If unspecified, 50 models will be returned per page. This method returns at most 1000 models per page, even if you pass a larger page_size.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListModels`` call.  Provide the ``page_token`` returned by one request as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to ``ListModels`` must match the call that provided the page token.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "GetTunedModelRequest",
      "description": "Request for getting information about a specific Model.\n\nAttributes:\n    name (str):\n        Required. The resource name of the model.\n\n        Format: ``tunedModels/my-model-id``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the model.  Format: ``tunedModels/my-model-id``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListTunedModelsRequest",
      "description": "Request for listing TunedModels.\n\nAttributes:\n    page_size (int):\n        Optional. The maximum number of ``TunedModels`` to return\n        (per page). The service may return fewer tuned models.\n\n        If unspecified, at most 10 tuned models will be returned.\n        This method returns at most 1000 models per page, even if\n        you pass a larger page_size.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListTunedModels`` call.\n\n        Provide the ``page_token`` returned by one request as an\n        argument to the next request to retrieve the next page.\n\n        When paginating, all other parameters provided to\n        ``ListTunedModels`` must match the call that provided the\n        page token.\n    filter (str):\n        Optional. A filter is a full text search over\n        the tuned model's description and display name.\n        By default, results will not include tuned\n        models shared with everyone.\n\n        Additional operators:\n\n          - owner:me\n ",
      "parameters": {
        "type": "object",
        "properties": {
          "page_size": {
            "description": "Optional. The maximum number of ``TunedModels`` to return (per page). The service may return fewer tuned models.  If unspecified, at most 10 tuned models will be returned. This method returns at most 1000 models per page, even if you pass a larger page_size.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListTunedModels`` call.  Provide the ``page_token`` returned by one request as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to ``ListTunedModels`` must match the call that provided the page token.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. A filter is a full text search over the tuned model's description and display name. By default, results will not include tuned models shared with everyone.  Additional operators:  - owner:me - writers:me - readers:me - readers:everyone  Examples:  \"owner:me\" returns all tuned models to which caller has owner role   \"readers:me\" returns all tuned models to which caller has reader role \"readers:everyone\" returns all tuned models that are shared with everyone",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "CreateTunedModelRequest",
      "description": "Request to create a TunedModel.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    tuned_model_id (str):\n        Optional. The unique id for the tuned model if specified.\n        This value should be up to 40 characters, the first\n        character must be a letter, the last could be a letter or a\n        number. The id must match the regular expression:\n        ``[a-z]([a-z0-9-]{0,38}[a-z0-9])?``.\n\n        This field is a member of `oneof`_ ``_tuned_model_id``.\n    tuned_model (google.ai.generativelanguage_v1beta.types.TunedModel):\n        Required. The tuned model to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "tuned_model_id": {
            "description": "Optional. The unique id for the tuned model if specified. This value should be up to 40 characters, the first character must be a letter, the last could be a letter or a number. The id must match the regular expression: ``[a-z]([a-z0-9-]{0,38}[a-z0-9])?``.  This field is a member of `oneof`_ ``_tuned_model_id``.",
            "type": "string"
          },
          "tuned_model": {
            "description": "Required. The tuned model to create.",
            "reference": "google.ai.generativelanguage_v1beta.types.TunedModel",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "tuned_model_source": {
                  "description": "Optional. TunedModel to use as the starting point for training the new model.  This field is a member of `oneof`_ ``source_model``.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta3.types.TunedModelSource",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "tuned_model": {
                        "description": "Immutable. The name of the ``TunedModel`` to use as the starting point for training the new model. Example: ``tunedModels/my-tuned-model``",
                        "type": "string"
                      },
                      "base_model": {
                        "description": "Output only. The name of the base ``Model`` this ``TunedModel`` was tuned from. Example: ``models/text-bison-001``",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                },
                "base_model": {
                  "description": "Immutable. The name of the ``Model`` to tune. Example: ``models/text-bison-001``  This field is a member of `oneof`_ ``source_model``.",
                  "type": "string"
                },
                "name": {
                  "description": "Output only. The tuned model name. A unique name will be generated on create. Example: ``tunedModels/az2mb0bpw6i`` If display_name is set on create, the id portion of the name will be set by concatenating the words of the display_name with hyphens and adding a random portion for uniqueness. Example: display_name = \"Sentence Translator\" name = \"tunedModels/sentence-translator-u3b7m\".",
                  "type": "string",
                  "output_only": true
                },
                "display_name": {
                  "description": "Optional. The name to display for this model in user interfaces. The display name must be up to 40 characters including spaces.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. A short description of this model.",
                  "type": "string"
                },
                "temperature": {
                  "description": "Optional. Controls the randomness of the output.  Values can range over ``[0.0,1.0]``, inclusive. A value closer to ``1.0`` will produce responses that are more varied, while a value closer to ``0.0`` will typically result in less surprising responses from the model.  This value specifies default to be the one used by the base model while creating the model.  This field is a member of `oneof`_ ``_temperature``.",
                  "type": "number"
                },
                "top_p": {
                  "description": "Optional. For Nucleus sampling.  Nucleus sampling considers the smallest set of tokens whose probability sum is at least ``top_p``.  This value specifies default to be the one used by the base model while creating the model.  This field is a member of `oneof`_ ``_top_p``.",
                  "type": "number"
                },
                "top_k": {
                  "description": "Optional. For Top-k sampling.  Top-k sampling considers the set of ``top_k`` most probable tokens. This value specifies default to be used by the backend while making the call to the model.  This value specifies default to be the one used by the base model while creating the model.  This field is a member of `oneof`_ ``_top_k``.",
                  "type": "integer"
                },
                "state": {
                  "description": "Output only. The state of the tuned model.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta3.types.TunedModel.State",
                  "output_only": true
                },
                "create_time": {
                  "description": "Output only. The timestamp when this model was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The timestamp when this model was updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "tuning_task": {
                  "description": "Required. The tuning task that creates the tuned model.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta3.types.TuningTask",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "start_time": {
                        "description": "Output only. The timestamp when tuning this model started.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "complete_time": {
                        "description": "Output only. The timestamp when tuning this model completed.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "snapshots": {
                        "description": "Output only. Metrics collected during tuning.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.ai.generativelanguage_v1beta3.types.TuningSnapshot",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "step": {
                                "description": "Output only. The tuning step.",
                                "type": "integer",
                                "output_only": true
                              },
                              "epoch": {
                                "description": "Output only. The epoch this step was part of.",
                                "type": "integer",
                                "output_only": true
                              },
                              "mean_loss": {
                                "description": "Output only. The mean loss of the training examples for this step.",
                                "type": "number",
                                "output_only": true
                              },
                              "compute_time": {
                                "description": "Output only. The timestamp when this metric was computed.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                "output_only": true
                              }
                            }
                          }
                        },
                        "output_only": true
                      },
                      "training_data": {
                        "description": "Required. Input only. Immutable. The model training data.",
                        "type": "object",
                        "reference": "google.ai.generativelanguage_v1beta3.types.Dataset",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "dataset_name": {
                              "description": "The name of the dataset.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.DatasetName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "info": {
                              "description": "User-provided metadata for the dataset.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.DatasetInfo",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "friendly_name": {
                                    "description": "A short name for the dataset, such as\\ ``\"Analytics Data 2011\"``.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "A long description, perhaps several paragraphs, describing the dataset contents in detail.",
                                    "type": "string"
                                  },
                                  "labels": {
                                    "description": "Labels provided for the dataset.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "create_time": {
                              "description": "The time the dataset was created.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            },
                            "update_time": {
                              "description": "The time the dataset was last modified.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            },
                            "acl": {
                              "description": "The access control list for the dataset.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.BigQueryAcl",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "entries": {
                                    "description": "Access control entry list.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.bigquery_logging_v1.types.BigQueryAcl.Entry",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "role": {
                                            "description": "The granted role, which can be ``READER``, ``WRITER``, or ``OWNER``.",
                                            "type": "string"
                                          },
                                          "group_email": {
                                            "description": "Grants access to a group identified by an email address.",
                                            "type": "string"
                                          },
                                          "user_email": {
                                            "description": "Grants access to a user identified by an email address.",
                                            "type": "string"
                                          },
                                          "domain": {
                                            "description": "Grants access to all members of a domain.",
                                            "type": "string"
                                          },
                                          "special_group": {
                                            "description": "Grants access to special groups. Valid groups are ``PROJECT_OWNERS``, ``PROJECT_READERS``, ``PROJECT_WRITERS`` and ``ALL_AUTHENTICATED_USERS``.",
                                            "type": "string"
                                          },
                                          "view_name": {
                                            "description": "Grants access to a BigQuery View.",
                                            "type": "object",
                                            "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "project_id": {
                                                  "description": "The project ID.",
                                                  "type": "string"
                                                },
                                                "dataset_id": {
                                                  "description": "The dataset ID within the project.",
                                                  "type": "string"
                                                },
                                                "table_id": {
                                                  "description": "The table ID of the table within the dataset.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "default_table_expire_duration": {
                              "description": "If this field is present, each table that does not specify an expiration time is assigned an expiration time by adding this duration to the table's ``createTime``. If this field is empty, there is no default table expiration time.",
                              "type": "object",
                              "reference": "google.protobuf.duration_pb2.Duration",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "nanos": {
                                    "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                    "type": "integer"
                                  },
                                  "seconds": {
                                    "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "hyperparameters": {
                        "description": "Immutable. Hyperparameters controlling the tuning process. If not provided, default values will be used.",
                        "type": "object",
                        "reference": "google.ai.generativelanguage_v1beta3.types.Hyperparameters",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "epoch_count": {
                              "description": "Immutable. The number of training epochs. An epoch is one pass through the training data. If not set, a default of 10 will be used.  This field is a member of `oneof`_ ``_epoch_count``.",
                              "type": "integer"
                            },
                            "batch_size": {
                              "description": "Immutable. The batch size hyperparameter for tuning. If not set, a default of 16 or 64 will be used based on the number of training examples.  This field is a member of `oneof`_ ``_batch_size``.",
                              "type": "integer"
                            },
                            "learning_rate": {
                              "description": "Immutable. The learning rate hyperparameter for tuning. If not set, a default of 0.0002 or 0.002 will be calculated based on the number of training examples.  This field is a member of `oneof`_ ``_learning_rate``.",
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "training_data"
                    ]
                  }
                }
              },
              "required": [
                "tuning_task"
              ]
            }
          }
        },
        "required": [
          "tuned_model"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTunedModelRequest",
      "description": "Request to update a TunedModel.\n\nAttributes:\n    tuned_model (google.ai.generativelanguage_v1beta.types.TunedModel):\n        Required. The tuned model to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Optional. The list of fields to update.",
      "parameters": {
        "type": "object",
        "properties": {
          "tuned_model": {
            "description": "Required. The tuned model to update.",
            "reference": "google.ai.generativelanguage_v1beta.types.TunedModel",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "tuned_model_source": {
                  "description": "Optional. TunedModel to use as the starting point for training the new model.  This field is a member of `oneof`_ ``source_model``.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta3.types.TunedModelSource",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "tuned_model": {
                        "description": "Immutable. The name of the ``TunedModel`` to use as the starting point for training the new model. Example: ``tunedModels/my-tuned-model``",
                        "type": "string"
                      },
                      "base_model": {
                        "description": "Output only. The name of the base ``Model`` this ``TunedModel`` was tuned from. Example: ``models/text-bison-001``",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                },
                "base_model": {
                  "description": "Immutable. The name of the ``Model`` to tune. Example: ``models/text-bison-001``  This field is a member of `oneof`_ ``source_model``.",
                  "type": "string"
                },
                "name": {
                  "description": "Output only. The tuned model name. A unique name will be generated on create. Example: ``tunedModels/az2mb0bpw6i`` If display_name is set on create, the id portion of the name will be set by concatenating the words of the display_name with hyphens and adding a random portion for uniqueness. Example: display_name = \"Sentence Translator\" name = \"tunedModels/sentence-translator-u3b7m\".",
                  "type": "string",
                  "output_only": true
                },
                "display_name": {
                  "description": "Optional. The name to display for this model in user interfaces. The display name must be up to 40 characters including spaces.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. A short description of this model.",
                  "type": "string"
                },
                "temperature": {
                  "description": "Optional. Controls the randomness of the output.  Values can range over ``[0.0,1.0]``, inclusive. A value closer to ``1.0`` will produce responses that are more varied, while a value closer to ``0.0`` will typically result in less surprising responses from the model.  This value specifies default to be the one used by the base model while creating the model.  This field is a member of `oneof`_ ``_temperature``.",
                  "type": "number"
                },
                "top_p": {
                  "description": "Optional. For Nucleus sampling.  Nucleus sampling considers the smallest set of tokens whose probability sum is at least ``top_p``.  This value specifies default to be the one used by the base model while creating the model.  This field is a member of `oneof`_ ``_top_p``.",
                  "type": "number"
                },
                "top_k": {
                  "description": "Optional. For Top-k sampling.  Top-k sampling considers the set of ``top_k`` most probable tokens. This value specifies default to be used by the backend while making the call to the model.  This value specifies default to be the one used by the base model while creating the model.  This field is a member of `oneof`_ ``_top_k``.",
                  "type": "integer"
                },
                "state": {
                  "description": "Output only. The state of the tuned model.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta3.types.TunedModel.State",
                  "output_only": true
                },
                "create_time": {
                  "description": "Output only. The timestamp when this model was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The timestamp when this model was updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "tuning_task": {
                  "description": "Required. The tuning task that creates the tuned model.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta3.types.TuningTask",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "start_time": {
                        "description": "Output only. The timestamp when tuning this model started.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "complete_time": {
                        "description": "Output only. The timestamp when tuning this model completed.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "snapshots": {
                        "description": "Output only. Metrics collected during tuning.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.ai.generativelanguage_v1beta3.types.TuningSnapshot",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "step": {
                                "description": "Output only. The tuning step.",
                                "type": "integer",
                                "output_only": true
                              },
                              "epoch": {
                                "description": "Output only. The epoch this step was part of.",
                                "type": "integer",
                                "output_only": true
                              },
                              "mean_loss": {
                                "description": "Output only. The mean loss of the training examples for this step.",
                                "type": "number",
                                "output_only": true
                              },
                              "compute_time": {
                                "description": "Output only. The timestamp when this metric was computed.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                "output_only": true
                              }
                            }
                          }
                        },
                        "output_only": true
                      },
                      "training_data": {
                        "description": "Required. Input only. Immutable. The model training data.",
                        "type": "object",
                        "reference": "google.ai.generativelanguage_v1beta3.types.Dataset",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "dataset_name": {
                              "description": "The name of the dataset.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.DatasetName",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "project_id": {
                                    "description": "The project ID.",
                                    "type": "string"
                                  },
                                  "dataset_id": {
                                    "description": "The dataset ID within the project.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "info": {
                              "description": "User-provided metadata for the dataset.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.DatasetInfo",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "friendly_name": {
                                    "description": "A short name for the dataset, such as\\ ``\"Analytics Data 2011\"``.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "A long description, perhaps several paragraphs, describing the dataset contents in detail.",
                                    "type": "string"
                                  },
                                  "labels": {
                                    "description": "Labels provided for the dataset.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "create_time": {
                              "description": "The time the dataset was created.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            },
                            "update_time": {
                              "description": "The time the dataset was last modified.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            },
                            "acl": {
                              "description": "The access control list for the dataset.",
                              "type": "object",
                              "reference": "google.cloud.bigquery_logging_v1.types.BigQueryAcl",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "entries": {
                                    "description": "Access control entry list.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.bigquery_logging_v1.types.BigQueryAcl.Entry",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "role": {
                                            "description": "The granted role, which can be ``READER``, ``WRITER``, or ``OWNER``.",
                                            "type": "string"
                                          },
                                          "group_email": {
                                            "description": "Grants access to a group identified by an email address.",
                                            "type": "string"
                                          },
                                          "user_email": {
                                            "description": "Grants access to a user identified by an email address.",
                                            "type": "string"
                                          },
                                          "domain": {
                                            "description": "Grants access to all members of a domain.",
                                            "type": "string"
                                          },
                                          "special_group": {
                                            "description": "Grants access to special groups. Valid groups are ``PROJECT_OWNERS``, ``PROJECT_READERS``, ``PROJECT_WRITERS`` and ``ALL_AUTHENTICATED_USERS``.",
                                            "type": "string"
                                          },
                                          "view_name": {
                                            "description": "Grants access to a BigQuery View.",
                                            "type": "object",
                                            "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "project_id": {
                                                  "description": "The project ID.",
                                                  "type": "string"
                                                },
                                                "dataset_id": {
                                                  "description": "The dataset ID within the project.",
                                                  "type": "string"
                                                },
                                                "table_id": {
                                                  "description": "The table ID of the table within the dataset.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "default_table_expire_duration": {
                              "description": "If this field is present, each table that does not specify an expiration time is assigned an expiration time by adding this duration to the table's ``createTime``. If this field is empty, there is no default table expiration time.",
                              "type": "object",
                              "reference": "google.protobuf.duration_pb2.Duration",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "nanos": {
                                    "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                    "type": "integer"
                                  },
                                  "seconds": {
                                    "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "hyperparameters": {
                        "description": "Immutable. Hyperparameters controlling the tuning process. If not provided, default values will be used.",
                        "type": "object",
                        "reference": "google.ai.generativelanguage_v1beta3.types.Hyperparameters",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "epoch_count": {
                              "description": "Immutable. The number of training epochs. An epoch is one pass through the training data. If not set, a default of 10 will be used.  This field is a member of `oneof`_ ``_epoch_count``.",
                              "type": "integer"
                            },
                            "batch_size": {
                              "description": "Immutable. The batch size hyperparameter for tuning. If not set, a default of 16 or 64 will be used based on the number of training examples.  This field is a member of `oneof`_ ``_batch_size``.",
                              "type": "integer"
                            },
                            "learning_rate": {
                              "description": "Immutable. The learning rate hyperparameter for tuning. If not set, a default of 0.0002 or 0.002 will be calculated based on the number of training examples.  This field is a member of `oneof`_ ``_learning_rate``.",
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "training_data"
                    ]
                  }
                }
              },
              "required": [
                "tuning_task"
              ]
            }
          },
          "update_mask": {
            "description": "Optional. The list of fields to update.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "tuned_model"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTunedModelRequest",
      "description": "Request to delete a TunedModel.\n\nAttributes:\n    name (str):\n        Required. The resource name of the model. Format:\n        ``tunedModels/my-model-id``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the model. Format: ``tunedModels/my-model-id``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-ai-generativelanguage/google/ai/generativelanguage_v1beta/types/cache_service.py": [
    {
      "type": "function",
      "name": "ListCachedContentsRequest",
      "description": "Request to list CachedContents.\n\nAttributes:\n    page_size (int):\n        Optional. The maximum number of cached\n        contents to return. The service may return fewer\n        than this value. If unspecified, some default\n        (under maximum) number of items will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListCachedContents`` call. Provide this to retrieve the\n        subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListCachedContents`` must match the call that provided the\n        page token.",
      "parameters": {
        "type": "object",
        "properties": {
          "page_size": {
            "description": "Optional. The maximum number of cached contents to return. The service may return fewer than this value. If unspecified, some default (under maximum) number of items will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListCachedContents`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListCachedContents`` must match the call that provided the page token.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "CreateCachedContentRequest",
      "description": "Request to create CachedContent.\n\nAttributes:\n    cached_content (google.ai.generativelanguage_v1beta.types.CachedContent):\n        Required. The cached content to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "cached_content": {
            "description": "Required. The cached content to create.",
            "reference": "google.ai.generativelanguage_v1beta.types.CachedContent",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "expire_time": {
                  "description": "Timestamp in UTC of when this resource is considered expired. This is *always* provided on output, regardless of what was sent on input.  This field is a member of `oneof`_ ``expiration``.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "ttl": {
                  "description": "Input only. New TTL for this resource, input only.  This field is a member of `oneof`_ ``expiration``.",
                  "type": "object",
                  "reference": "google.protobuf.duration_pb2.Duration",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                        "type": "integer"
                      },
                      "seconds": {
                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "name": {
                  "description": "Optional. Identifier. The resource name referring to the cached content. Format: ``cachedContents/{id}``  This field is a member of `oneof`_ ``_name``.",
                  "type": "string"
                },
                "display_name": {
                  "description": "Optional. Immutable. The user-generated meaningful display name of the cached content. Maximum 128 Unicode characters.  This field is a member of `oneof`_ ``_display_name``.",
                  "type": "string"
                },
                "model": {
                  "description": "Required. Immutable. The name of the ``Model`` to use for cached content Format: ``models/{model}``  This field is a member of `oneof`_ ``_model``.",
                  "type": "string"
                },
                "system_instruction": {
                  "description": "Optional. Input only. Immutable. Developer set system instruction. Currently text only.  This field is a member of `oneof`_ ``_system_instruction``.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta.types.Content",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                        "type": "string",
                        "output_only": true
                      },
                      "uid": {
                        "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                        "type": "string",
                        "output_only": true
                      },
                      "path": {
                        "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                        "type": "string"
                      },
                      "create_time": {
                        "description": "Output only. Content creation time.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "update_time": {
                        "description": "Output only. The time when the content was last updated.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "labels": {
                        "description": "Optional. User defined labels for the content.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "description": {
                        "description": "Optional. Description of the content.",
                        "type": "string"
                      },
                      "data_text": {
                        "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                        "type": "string"
                      },
                      "sql_script": {
                        "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "engine": {
                              "description": "Required. Query Engine to be used for the Sql Query.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                            }
                          },
                          "required": [
                            "engine"
                          ]
                        }
                      },
                      "notebook": {
                        "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "kernel_type": {
                              "description": "Required. Kernel Type of the notebook.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                            }
                          },
                          "required": [
                            "kernel_type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "path",
                      "data_text"
                    ]
                  }
                },
                "contents": {
                  "description": "Optional. Input only. Immutable. The content to cache.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta.types.Content",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "type": "string",
                          "output_only": true
                        },
                        "uid": {
                          "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                          "type": "string",
                          "output_only": true
                        },
                        "path": {
                          "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                          "type": "string"
                        },
                        "create_time": {
                          "description": "Output only. Content creation time.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "update_time": {
                          "description": "Output only. The time when the content was last updated.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "labels": {
                          "description": "Optional. User defined labels for the content.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "description": {
                          "description": "Optional. Description of the content.",
                          "type": "string"
                        },
                        "data_text": {
                          "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                          "type": "string"
                        },
                        "sql_script": {
                          "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "engine": {
                                "description": "Required. Query Engine to be used for the Sql Query.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                              }
                            },
                            "required": [
                              "engine"
                            ]
                          }
                        },
                        "notebook": {
                          "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "kernel_type": {
                                "description": "Required. Kernel Type of the notebook.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                              }
                            },
                            "required": [
                              "kernel_type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "path",
                        "data_text"
                      ]
                    }
                  }
                },
                "tools": {
                  "description": "Optional. Input only. Immutable. A list of ``Tools`` the model may use to generate the next response",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta.types.Tool",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The unique identifier of the Tool. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/tools/<ToolID>``.",
                          "type": "string"
                        },
                        "display_name": {
                          "description": "Required. The human-readable name of the Tool, unique within an agent.",
                          "type": "string"
                        },
                        "description": {
                          "description": "Required. High level description of the Tool and its usage.",
                          "type": "string"
                        },
                        "open_api_spec": {
                          "description": "OpenAPI specification of the Tool.  This field is a member of `oneof`_ ``specification``.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.OpenApiTool",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "text_schema": {
                                "description": "Required. The OpenAPI schema specified as a text.  This field is a member of `oneof`_ ``schema``.",
                                "type": "string"
                              },
                              "authentication": {
                                "description": "Optional. Authentication information required by the API.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "api_key_config": {
                                      "description": "Config for API key auth.  This field is a member of `oneof`_ ``auth_config``.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.ApiKeyConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "key_name": {
                                            "description": "Required. The parameter name or the header name of the API key. E.g., If the API request is \"https://example.com/act?X-Api-Key=<API KEY>\", \"X-Api-Key\" would be the parameter name.",
                                            "type": "string"
                                          },
                                          "api_key": {
                                            "description": "Required. The API key.",
                                            "type": "string"
                                          },
                                          "request_location": {
                                            "description": "Required. Key location in the request.",
                                            "type": "object",
                                            "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.RequestLocation"
                                          }
                                        },
                                        "required": [
                                          "key_name",
                                          "api_key",
                                          "request_location"
                                        ]
                                      }
                                    },
                                    "oauth_config": {
                                      "description": "Config for OAuth.  This field is a member of `oneof`_ ``auth_config``.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.OAuthConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "client_id": {
                                            "description": "Required. The client ID provided by the 3rd party platform.",
                                            "type": "string"
                                          },
                                          "client_secret": {
                                            "description": "Required. The client secret provided by the 3rd party platform.",
                                            "type": "string"
                                          },
                                          "token_endpoint": {
                                            "description": "Required. The token endpoint provided by the 3rd party platform to exchange an access token.",
                                            "type": "string"
                                          },
                                          "scopes": {
                                            "description": "Optional. The OAuth scopes to grant.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "required": [
                                          "client_id",
                                          "client_secret",
                                          "token_endpoint"
                                        ]
                                      }
                                    },
                                    "service_agent_auth_config": {
                                      "description": "Config for `Diglogflow service agent <https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent>`__ auth.  This field is a member of `oneof`_ ``auth_config``.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.ServiceAgentAuthConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "service_agent_auth": {
                                            "description": "Optional. Indicate the auth token type generated from the `Diglogflow service agent <https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent>`__. The generated token is sent in the Authorization header.",
                                            "type": "object",
                                            "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.ServiceAgentAuthConfig.ServiceAgentAuth"
                                          }
                                        }
                                      }
                                    },
                                    "bearer_token_config": {
                                      "description": "Config for bearer token auth.  This field is a member of `oneof`_ ``auth_config``.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.BearerTokenConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "token": {
                                            "description": "Required. The text token appended to the text ``Bearer`` to the request Authorization header. `Session parameters reference <https://cloud.google.com/dialogflow/cx/docs/concept/parameter#session-ref>`__ can be used to pass the token dynamically, e.g. ``$session.params.parameter-id``.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "token"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "tls_config": {
                                "description": "Optional. TLS configuration for the HTTPS verification.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.TLSConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "ca_certs": {
                                      "description": "Required. Specifies a list of allowed custom CA certificates for HTTPS verification.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.TLSConfig.CACert",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "display_name": {
                                              "description": "Required. The name of the allowed custom CA certificates. This can be used to disambiguate the custom CA certificates.",
                                              "type": "string"
                                            },
                                            "cert": {
                                              "description": "Required. The allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with \"subject alt name\". For instance a certificate can be self-signed using the following command:  ::  openssl x509 -req -days 200 -in example.com.csr \\ -signkey example.com.key \\ -out example.com.crt \\ -extfile <(printf \"\\nsubjectAltName='DNS:www.example.com'\")",
                                              "type": "object",
                                              "reference": "bytes"
                                            }
                                          },
                                          "required": [
                                            "display_name",
                                            "cert"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "ca_certs"
                                  ]
                                }
                              },
                              "service_directory_config": {
                                "description": "Optional. Service Directory configuration.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.ServiceDirectoryConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "service": {
                                      "description": "Required. The name of `Service Directory <https://cloud.google.com/service-directory>`__ service. Format: ``projects/<ProjectID>/locations/<LocationID>/namespaces/<NamespaceID>/services/<ServiceID>``. ``Location ID`` of the service directory must be the same as the location of the agent.",
                                      "type": "string"
                                    },
                                    "generic_web_service": {
                                      "description": "Generic Service configuration of this webhook.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3.types.Webhook.GenericWebService",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "uri": {
                                            "description": "Required. The fulfillment URI for receiving POST requests. It must use https protocol.",
                                            "type": "string"
                                          },
                                          "username": {
                                            "description": "Optional. The user name for HTTP Basic authentication.",
                                            "type": "string"
                                          },
                                          "password": {
                                            "description": "Optional. The password for HTTP Basic authentication.",
                                            "type": "string"
                                          },
                                          "request_headers": {
                                            "description": "Optional. The HTTP request headers to send together with fulfillment requests.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "is_cloud_function": {
                                            "description": "Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false.  is_cloud_function is deprecated. Cloud functions can be configured by its uri as a regular web service now.",
                                            "type": "boolean"
                                          }
                                        },
                                        "required": [
                                          "uri"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "service"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "text_schema"
                            ]
                          }
                        },
                        "data_store_spec": {
                          "description": "Data store search tool specification.  This field is a member of `oneof`_ ``specification``.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.DataStoreTool",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "data_store_connections": {
                                "description": "Required. List of data stores to search.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "reference": "google.cloud.dialogflowcx_v3beta1.types.DataStoreConnection",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "data_store_type": {
                                        "description": "The type of the connected data store.",
                                        "type": "object",
                                        "reference": "google.cloud.dialogflowcx_v3.types.DataStoreType"
                                      },
                                      "data_store": {
                                        "description": "The full name of the referenced data store. Formats: ``projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`` ``projects/{project}/locations/{location}/dataStores/{data_store}``",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "fallback_prompt": {
                                "description": "Required. Fallback prompt configurations to use.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.DataStoreTool.FallbackPrompt",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {}
                                }
                              }
                            },
                            "required": [
                              "data_store_connections",
                              "fallback_prompt"
                            ]
                          }
                        },
                        "extension_spec": {
                          "description": "Vertex extension tool specification.  This field is a member of `oneof`_ ``specification``.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.ExtensionTool",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Required. The full name of the referenced vertex extension. Formats: ``projects/{project}/locations/{location}/extensions/{extension}``",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        },
                        "function_spec": {
                          "description": "Client side executed function specification.  This field is a member of `oneof`_ ``specification``.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.FunctionTool",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "input_schema": {
                                "description": "Optional. The JSON schema is encapsulated in a [google.protobuf.Struct][google.protobuf.Struct] to describe the input of the function. This input is a JSON object that contains the function's parameters as properties of the object.",
                                "type": "object",
                                "reference": "google.protobuf.struct_pb2.Struct"
                              },
                              "output_schema": {
                                "description": "Optional. The JSON schema is encapsulated in a [google.protobuf.Struct][google.protobuf.Struct] to describe the output of the function. This output is a JSON object that contains the function's parameters as properties of the object.",
                                "type": "object",
                                "reference": "google.protobuf.struct_pb2.Struct"
                              }
                            }
                          }
                        },
                        "tool_type": {
                          "description": "Output only. The tool type.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.ToolType",
                          "output_only": true
                        }
                      },
                      "required": [
                        "display_name",
                        "description"
                      ]
                    }
                  }
                },
                "tool_config": {
                  "description": "Optional. Input only. Immutable. Tool config. This config is shared for all tools.  This field is a member of `oneof`_ ``_tool_config``.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta.types.ToolConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "function_calling_config": {
                        "description": "Optional. Function calling config.",
                        "type": "object",
                        "reference": "google.ai.generativelanguage_v1beta.types.FunctionCallingConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "Optional. Specifies the mode in which function calling should execute. If unspecified, the default value will be set to AUTO.",
                              "type": "object",
                              "reference": "google.ai.generativelanguage_v1beta.types.FunctionCallingConfig.Mode"
                            },
                            "allowed_function_names": {
                              "description": "Optional. A set of function names that, when provided, limits the functions the model will call.  This should only be set when the Mode is ANY. Function names should match [FunctionDeclaration.name]. With mode set to ANY, model will predict a function call from the set of function names provided.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "create_time": {
                  "description": "Output only. Creation time of the cache entry.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. When the cache entry was last updated in UTC time.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "usage_metadata": {
                  "description": "Output only. Metadata on the usage of the cached content.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta.types.CachedContent.UsageMetadata",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "prompt_token_count": {
                        "description": "Number of tokens in the prompt. When ``cached_content`` is set, this is still the total effective prompt size meaning this includes the number of tokens in the cached content.",
                        "type": "integer"
                      },
                      "candidates_token_count": {
                        "description": "Total number of tokens across all the generated response candidates.",
                        "type": "integer"
                      },
                      "total_token_count": {
                        "description": "Total token count for the generation request (prompt + response candidates).",
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": [
                "model"
              ]
            }
          }
        },
        "required": [
          "cached_content"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetCachedContentRequest",
      "description": "Request to read CachedContent.\n\nAttributes:\n    name (str):\n        Required. The resource name referring to the content cache\n        entry. Format: ``cachedContents/{id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name referring to the content cache entry. Format: ``cachedContents/{id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateCachedContentRequest",
      "description": "Request to update CachedContent.\n\nAttributes:\n    cached_content (google.ai.generativelanguage_v1beta.types.CachedContent):\n        Required. The content cache entry to update\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to update.",
      "parameters": {
        "type": "object",
        "properties": {
          "cached_content": {
            "description": "Required. The content cache entry to update",
            "reference": "google.ai.generativelanguage_v1beta.types.CachedContent",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "expire_time": {
                  "description": "Timestamp in UTC of when this resource is considered expired. This is *always* provided on output, regardless of what was sent on input.  This field is a member of `oneof`_ ``expiration``.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "ttl": {
                  "description": "Input only. New TTL for this resource, input only.  This field is a member of `oneof`_ ``expiration``.",
                  "type": "object",
                  "reference": "google.protobuf.duration_pb2.Duration",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                        "type": "integer"
                      },
                      "seconds": {
                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "name": {
                  "description": "Optional. Identifier. The resource name referring to the cached content. Format: ``cachedContents/{id}``  This field is a member of `oneof`_ ``_name``.",
                  "type": "string"
                },
                "display_name": {
                  "description": "Optional. Immutable. The user-generated meaningful display name of the cached content. Maximum 128 Unicode characters.  This field is a member of `oneof`_ ``_display_name``.",
                  "type": "string"
                },
                "model": {
                  "description": "Required. Immutable. The name of the ``Model`` to use for cached content Format: ``models/{model}``  This field is a member of `oneof`_ ``_model``.",
                  "type": "string"
                },
                "system_instruction": {
                  "description": "Optional. Input only. Immutable. Developer set system instruction. Currently text only.  This field is a member of `oneof`_ ``_system_instruction``.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta.types.Content",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                        "type": "string",
                        "output_only": true
                      },
                      "uid": {
                        "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                        "type": "string",
                        "output_only": true
                      },
                      "path": {
                        "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                        "type": "string"
                      },
                      "create_time": {
                        "description": "Output only. Content creation time.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "update_time": {
                        "description": "Output only. The time when the content was last updated.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "labels": {
                        "description": "Optional. User defined labels for the content.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "description": {
                        "description": "Optional. Description of the content.",
                        "type": "string"
                      },
                      "data_text": {
                        "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                        "type": "string"
                      },
                      "sql_script": {
                        "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "engine": {
                              "description": "Required. Query Engine to be used for the Sql Query.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                            }
                          },
                          "required": [
                            "engine"
                          ]
                        }
                      },
                      "notebook": {
                        "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "kernel_type": {
                              "description": "Required. Kernel Type of the notebook.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                            }
                          },
                          "required": [
                            "kernel_type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "path",
                      "data_text"
                    ]
                  }
                },
                "contents": {
                  "description": "Optional. Input only. Immutable. The content to cache.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta.types.Content",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "type": "string",
                          "output_only": true
                        },
                        "uid": {
                          "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                          "type": "string",
                          "output_only": true
                        },
                        "path": {
                          "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                          "type": "string"
                        },
                        "create_time": {
                          "description": "Output only. Content creation time.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "update_time": {
                          "description": "Output only. The time when the content was last updated.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "labels": {
                          "description": "Optional. User defined labels for the content.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "description": {
                          "description": "Optional. Description of the content.",
                          "type": "string"
                        },
                        "data_text": {
                          "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                          "type": "string"
                        },
                        "sql_script": {
                          "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "engine": {
                                "description": "Required. Query Engine to be used for the Sql Query.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                              }
                            },
                            "required": [
                              "engine"
                            ]
                          }
                        },
                        "notebook": {
                          "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "kernel_type": {
                                "description": "Required. Kernel Type of the notebook.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                              }
                            },
                            "required": [
                              "kernel_type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "path",
                        "data_text"
                      ]
                    }
                  }
                },
                "tools": {
                  "description": "Optional. Input only. Immutable. A list of ``Tools`` the model may use to generate the next response",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta.types.Tool",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The unique identifier of the Tool. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/tools/<ToolID>``.",
                          "type": "string"
                        },
                        "display_name": {
                          "description": "Required. The human-readable name of the Tool, unique within an agent.",
                          "type": "string"
                        },
                        "description": {
                          "description": "Required. High level description of the Tool and its usage.",
                          "type": "string"
                        },
                        "open_api_spec": {
                          "description": "OpenAPI specification of the Tool.  This field is a member of `oneof`_ ``specification``.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.OpenApiTool",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "text_schema": {
                                "description": "Required. The OpenAPI schema specified as a text.  This field is a member of `oneof`_ ``schema``.",
                                "type": "string"
                              },
                              "authentication": {
                                "description": "Optional. Authentication information required by the API.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "api_key_config": {
                                      "description": "Config for API key auth.  This field is a member of `oneof`_ ``auth_config``.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.ApiKeyConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "key_name": {
                                            "description": "Required. The parameter name or the header name of the API key. E.g., If the API request is \"https://example.com/act?X-Api-Key=<API KEY>\", \"X-Api-Key\" would be the parameter name.",
                                            "type": "string"
                                          },
                                          "api_key": {
                                            "description": "Required. The API key.",
                                            "type": "string"
                                          },
                                          "request_location": {
                                            "description": "Required. Key location in the request.",
                                            "type": "object",
                                            "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.RequestLocation"
                                          }
                                        },
                                        "required": [
                                          "key_name",
                                          "api_key",
                                          "request_location"
                                        ]
                                      }
                                    },
                                    "oauth_config": {
                                      "description": "Config for OAuth.  This field is a member of `oneof`_ ``auth_config``.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.OAuthConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "client_id": {
                                            "description": "Required. The client ID provided by the 3rd party platform.",
                                            "type": "string"
                                          },
                                          "client_secret": {
                                            "description": "Required. The client secret provided by the 3rd party platform.",
                                            "type": "string"
                                          },
                                          "token_endpoint": {
                                            "description": "Required. The token endpoint provided by the 3rd party platform to exchange an access token.",
                                            "type": "string"
                                          },
                                          "scopes": {
                                            "description": "Optional. The OAuth scopes to grant.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "required": [
                                          "client_id",
                                          "client_secret",
                                          "token_endpoint"
                                        ]
                                      }
                                    },
                                    "service_agent_auth_config": {
                                      "description": "Config for `Diglogflow service agent <https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent>`__ auth.  This field is a member of `oneof`_ ``auth_config``.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.ServiceAgentAuthConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "service_agent_auth": {
                                            "description": "Optional. Indicate the auth token type generated from the `Diglogflow service agent <https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent>`__. The generated token is sent in the Authorization header.",
                                            "type": "object",
                                            "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.ServiceAgentAuthConfig.ServiceAgentAuth"
                                          }
                                        }
                                      }
                                    },
                                    "bearer_token_config": {
                                      "description": "Config for bearer token auth.  This field is a member of `oneof`_ ``auth_config``.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.BearerTokenConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "token": {
                                            "description": "Required. The text token appended to the text ``Bearer`` to the request Authorization header. `Session parameters reference <https://cloud.google.com/dialogflow/cx/docs/concept/parameter#session-ref>`__ can be used to pass the token dynamically, e.g. ``$session.params.parameter-id``.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "token"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "tls_config": {
                                "description": "Optional. TLS configuration for the HTTPS verification.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.TLSConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "ca_certs": {
                                      "description": "Required. Specifies a list of allowed custom CA certificates for HTTPS verification.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.TLSConfig.CACert",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "display_name": {
                                              "description": "Required. The name of the allowed custom CA certificates. This can be used to disambiguate the custom CA certificates.",
                                              "type": "string"
                                            },
                                            "cert": {
                                              "description": "Required. The allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with \"subject alt name\". For instance a certificate can be self-signed using the following command:  ::  openssl x509 -req -days 200 -in example.com.csr \\ -signkey example.com.key \\ -out example.com.crt \\ -extfile <(printf \"\\nsubjectAltName='DNS:www.example.com'\")",
                                              "type": "object",
                                              "reference": "bytes"
                                            }
                                          },
                                          "required": [
                                            "display_name",
                                            "cert"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "ca_certs"
                                  ]
                                }
                              },
                              "service_directory_config": {
                                "description": "Optional. Service Directory configuration.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.ServiceDirectoryConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "service": {
                                      "description": "Required. The name of `Service Directory <https://cloud.google.com/service-directory>`__ service. Format: ``projects/<ProjectID>/locations/<LocationID>/namespaces/<NamespaceID>/services/<ServiceID>``. ``Location ID`` of the service directory must be the same as the location of the agent.",
                                      "type": "string"
                                    },
                                    "generic_web_service": {
                                      "description": "Generic Service configuration of this webhook.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3.types.Webhook.GenericWebService",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "uri": {
                                            "description": "Required. The fulfillment URI for receiving POST requests. It must use https protocol.",
                                            "type": "string"
                                          },
                                          "username": {
                                            "description": "Optional. The user name for HTTP Basic authentication.",
                                            "type": "string"
                                          },
                                          "password": {
                                            "description": "Optional. The password for HTTP Basic authentication.",
                                            "type": "string"
                                          },
                                          "request_headers": {
                                            "description": "Optional. The HTTP request headers to send together with fulfillment requests.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "is_cloud_function": {
                                            "description": "Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false.  is_cloud_function is deprecated. Cloud functions can be configured by its uri as a regular web service now.",
                                            "type": "boolean"
                                          }
                                        },
                                        "required": [
                                          "uri"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "service"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "text_schema"
                            ]
                          }
                        },
                        "data_store_spec": {
                          "description": "Data store search tool specification.  This field is a member of `oneof`_ ``specification``.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.DataStoreTool",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "data_store_connections": {
                                "description": "Required. List of data stores to search.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "reference": "google.cloud.dialogflowcx_v3beta1.types.DataStoreConnection",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "data_store_type": {
                                        "description": "The type of the connected data store.",
                                        "type": "object",
                                        "reference": "google.cloud.dialogflowcx_v3.types.DataStoreType"
                                      },
                                      "data_store": {
                                        "description": "The full name of the referenced data store. Formats: ``projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`` ``projects/{project}/locations/{location}/dataStores/{data_store}``",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "fallback_prompt": {
                                "description": "Required. Fallback prompt configurations to use.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.DataStoreTool.FallbackPrompt",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {}
                                }
                              }
                            },
                            "required": [
                              "data_store_connections",
                              "fallback_prompt"
                            ]
                          }
                        },
                        "extension_spec": {
                          "description": "Vertex extension tool specification.  This field is a member of `oneof`_ ``specification``.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.ExtensionTool",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Required. The full name of the referenced vertex extension. Formats: ``projects/{project}/locations/{location}/extensions/{extension}``",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        },
                        "function_spec": {
                          "description": "Client side executed function specification.  This field is a member of `oneof`_ ``specification``.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.FunctionTool",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "input_schema": {
                                "description": "Optional. The JSON schema is encapsulated in a [google.protobuf.Struct][google.protobuf.Struct] to describe the input of the function. This input is a JSON object that contains the function's parameters as properties of the object.",
                                "type": "object",
                                "reference": "google.protobuf.struct_pb2.Struct"
                              },
                              "output_schema": {
                                "description": "Optional. The JSON schema is encapsulated in a [google.protobuf.Struct][google.protobuf.Struct] to describe the output of the function. This output is a JSON object that contains the function's parameters as properties of the object.",
                                "type": "object",
                                "reference": "google.protobuf.struct_pb2.Struct"
                              }
                            }
                          }
                        },
                        "tool_type": {
                          "description": "Output only. The tool type.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.ToolType",
                          "output_only": true
                        }
                      },
                      "required": [
                        "display_name",
                        "description"
                      ]
                    }
                  }
                },
                "tool_config": {
                  "description": "Optional. Input only. Immutable. Tool config. This config is shared for all tools.  This field is a member of `oneof`_ ``_tool_config``.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta.types.ToolConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "function_calling_config": {
                        "description": "Optional. Function calling config.",
                        "type": "object",
                        "reference": "google.ai.generativelanguage_v1beta.types.FunctionCallingConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "Optional. Specifies the mode in which function calling should execute. If unspecified, the default value will be set to AUTO.",
                              "type": "object",
                              "reference": "google.ai.generativelanguage_v1beta.types.FunctionCallingConfig.Mode"
                            },
                            "allowed_function_names": {
                              "description": "Optional. A set of function names that, when provided, limits the functions the model will call.  This should only be set when the Mode is ANY. Function names should match [FunctionDeclaration.name]. With mode set to ANY, model will predict a function call from the set of function names provided.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "create_time": {
                  "description": "Output only. Creation time of the cache entry.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. When the cache entry was last updated in UTC time.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "usage_metadata": {
                  "description": "Output only. Metadata on the usage of the cached content.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta.types.CachedContent.UsageMetadata",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "prompt_token_count": {
                        "description": "Number of tokens in the prompt. When ``cached_content`` is set, this is still the total effective prompt size meaning this includes the number of tokens in the cached content.",
                        "type": "integer"
                      },
                      "candidates_token_count": {
                        "description": "Total number of tokens across all the generated response candidates.",
                        "type": "integer"
                      },
                      "total_token_count": {
                        "description": "Total token count for the generation request (prompt + response candidates).",
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": [
                "model"
              ]
            }
          },
          "update_mask": {
            "description": "The list of fields to update.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "cached_content"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteCachedContentRequest",
      "description": "Request to delete CachedContent.\n\nAttributes:\n    name (str):\n        Required. The resource name referring to the content cache\n        entry Format: ``cachedContents/{id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name referring to the content cache entry Format: ``cachedContents/{id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-ai-generativelanguage/google/ai/generativelanguage_v1beta/types/generative_service.py": [
    {
      "type": "function",
      "name": "GenerateContentRequest",
      "description": "Request to generate a completion from the model.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    model (str):\n        Required. The name of the ``Model`` to use for generating\n        the completion.\n\n        Format: ``name=models/{model}``.\n    system_instruction (google.ai.generativelanguage_v1beta.types.Content):\n        Optional. Developer set `system\n        instruction(s) <https://ai.google.dev/gemini-api/docs/system-instructions>`__.\n        Currently, text only.\n\n        This field is a member of `oneof`_ ``_system_instruction``.\n    contents (MutableSequence[google.ai.generativelanguage_v1beta.types.Content]):\n        Required. The content of the current conversation with the\n        model.\n\n        For single-turn queries, this is a single instance. For\n        multi-turn queries like\n        `chat <https://ai.google.dev/gemini-api/docs/text-generation#chat>`__,\n        this is a repeated field that contains the conversatio",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The name of the ``Model`` to use for generating the completion.  Format: ``name=models/{model}``.",
            "type": "string"
          },
          "system_instruction": {
            "description": "Optional. Developer set `system instruction(s) <https://ai.google.dev/gemini-api/docs/system-instructions>`__. Currently, text only.  This field is a member of `oneof`_ ``_system_instruction``.",
            "reference": "google.ai.generativelanguage_v1beta.types.Content",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                  "type": "string",
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                  "type": "string",
                  "output_only": true
                },
                "path": {
                  "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. Content creation time.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The time when the content was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. User defined labels for the content.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "description": {
                  "description": "Optional. Description of the content.",
                  "type": "string"
                },
                "data_text": {
                  "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                  "type": "string"
                },
                "sql_script": {
                  "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                  "type": "object",
                  "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "engine": {
                        "description": "Required. Query Engine to be used for the Sql Query.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                      }
                    },
                    "required": [
                      "engine"
                    ]
                  }
                },
                "notebook": {
                  "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                  "type": "object",
                  "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kernel_type": {
                        "description": "Required. Kernel Type of the notebook.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                      }
                    },
                    "required": [
                      "kernel_type"
                    ]
                  }
                }
              },
              "required": [
                "path",
                "data_text"
              ]
            }
          },
          "contents": {
            "description": "Required. The content of the current conversation with the model.  For single-turn queries, this is a single instance. For multi-turn queries like `chat <https://ai.google.dev/gemini-api/docs/text-generation#chat>`__, this is a repeated field that contains the conversation history and the latest request.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.Content",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                    "type": "string",
                    "output_only": true
                  },
                  "uid": {
                    "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                    "type": "string",
                    "output_only": true
                  },
                  "path": {
                    "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                    "type": "string"
                  },
                  "create_time": {
                    "description": "Output only. Content creation time.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "update_time": {
                    "description": "Output only. The time when the content was last updated.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "labels": {
                    "description": "Optional. User defined labels for the content.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "description": {
                    "description": "Optional. Description of the content.",
                    "type": "string"
                  },
                  "data_text": {
                    "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                    "type": "string"
                  },
                  "sql_script": {
                    "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                    "type": "object",
                    "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "engine": {
                          "description": "Required. Query Engine to be used for the Sql Query.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                        }
                      },
                      "required": [
                        "engine"
                      ]
                    }
                  },
                  "notebook": {
                    "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                    "type": "object",
                    "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "kernel_type": {
                          "description": "Required. Kernel Type of the notebook.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                        }
                      },
                      "required": [
                        "kernel_type"
                      ]
                    }
                  }
                },
                "required": [
                  "path",
                  "data_text"
                ]
              }
            }
          },
          "tools": {
            "description": "Optional. A list of ``Tools`` the ``Model`` may use to generate the next response.  A ``Tool`` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the ``Model``. Supported ``Tool``\\ s are ``Function`` and ``code_execution``. Refer to the `Function calling <https://ai.google.dev/gemini-api/docs/function-calling>`__ and the `Code execution <https://ai.google.dev/gemini-api/docs/code-execution>`__ guides to learn more.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.Tool",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The unique identifier of the Tool. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/tools/<ToolID>``.",
                    "type": "string"
                  },
                  "display_name": {
                    "description": "Required. The human-readable name of the Tool, unique within an agent.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Required. High level description of the Tool and its usage.",
                    "type": "string"
                  },
                  "open_api_spec": {
                    "description": "OpenAPI specification of the Tool.  This field is a member of `oneof`_ ``specification``.",
                    "type": "object",
                    "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.OpenApiTool",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "text_schema": {
                          "description": "Required. The OpenAPI schema specified as a text.  This field is a member of `oneof`_ ``schema``.",
                          "type": "string"
                        },
                        "authentication": {
                          "description": "Optional. Authentication information required by the API.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "api_key_config": {
                                "description": "Config for API key auth.  This field is a member of `oneof`_ ``auth_config``.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.ApiKeyConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "key_name": {
                                      "description": "Required. The parameter name or the header name of the API key. E.g., If the API request is \"https://example.com/act?X-Api-Key=<API KEY>\", \"X-Api-Key\" would be the parameter name.",
                                      "type": "string"
                                    },
                                    "api_key": {
                                      "description": "Required. The API key.",
                                      "type": "string"
                                    },
                                    "request_location": {
                                      "description": "Required. Key location in the request.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.RequestLocation"
                                    }
                                  },
                                  "required": [
                                    "key_name",
                                    "api_key",
                                    "request_location"
                                  ]
                                }
                              },
                              "oauth_config": {
                                "description": "Config for OAuth.  This field is a member of `oneof`_ ``auth_config``.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.OAuthConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "client_id": {
                                      "description": "Required. The client ID provided by the 3rd party platform.",
                                      "type": "string"
                                    },
                                    "client_secret": {
                                      "description": "Required. The client secret provided by the 3rd party platform.",
                                      "type": "string"
                                    },
                                    "token_endpoint": {
                                      "description": "Required. The token endpoint provided by the 3rd party platform to exchange an access token.",
                                      "type": "string"
                                    },
                                    "scopes": {
                                      "description": "Optional. The OAuth scopes to grant.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "client_id",
                                    "client_secret",
                                    "token_endpoint"
                                  ]
                                }
                              },
                              "service_agent_auth_config": {
                                "description": "Config for `Diglogflow service agent <https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent>`__ auth.  This field is a member of `oneof`_ ``auth_config``.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.ServiceAgentAuthConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "service_agent_auth": {
                                      "description": "Optional. Indicate the auth token type generated from the `Diglogflow service agent <https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent>`__. The generated token is sent in the Authorization header.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.ServiceAgentAuthConfig.ServiceAgentAuth"
                                    }
                                  }
                                }
                              },
                              "bearer_token_config": {
                                "description": "Config for bearer token auth.  This field is a member of `oneof`_ ``auth_config``.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.Authentication.BearerTokenConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "token": {
                                      "description": "Required. The text token appended to the text ``Bearer`` to the request Authorization header. `Session parameters reference <https://cloud.google.com/dialogflow/cx/docs/concept/parameter#session-ref>`__ can be used to pass the token dynamically, e.g. ``$session.params.parameter-id``.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "token"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tls_config": {
                          "description": "Optional. TLS configuration for the HTTPS verification.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.TLSConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "ca_certs": {
                                "description": "Required. Specifies a list of allowed custom CA certificates for HTTPS verification.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.TLSConfig.CACert",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "display_name": {
                                        "description": "Required. The name of the allowed custom CA certificates. This can be used to disambiguate the custom CA certificates.",
                                        "type": "string"
                                      },
                                      "cert": {
                                        "description": "Required. The allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with \"subject alt name\". For instance a certificate can be self-signed using the following command:  ::  openssl x509 -req -days 200 -in example.com.csr \\ -signkey example.com.key \\ -out example.com.crt \\ -extfile <(printf \"\\nsubjectAltName='DNS:www.example.com'\")",
                                        "type": "object",
                                        "reference": "bytes"
                                      }
                                    },
                                    "required": [
                                      "display_name",
                                      "cert"
                                    ]
                                  }
                                }
                              }
                            },
                            "required": [
                              "ca_certs"
                            ]
                          }
                        },
                        "service_directory_config": {
                          "description": "Optional. Service Directory configuration.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.ServiceDirectoryConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "service": {
                                "description": "Required. The name of `Service Directory <https://cloud.google.com/service-directory>`__ service. Format: ``projects/<ProjectID>/locations/<LocationID>/namespaces/<NamespaceID>/services/<ServiceID>``. ``Location ID`` of the service directory must be the same as the location of the agent.",
                                "type": "string"
                              },
                              "generic_web_service": {
                                "description": "Generic Service configuration of this webhook.",
                                "type": "object",
                                "reference": "google.cloud.dialogflowcx_v3.types.Webhook.GenericWebService",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "Required. The fulfillment URI for receiving POST requests. It must use https protocol.",
                                      "type": "string"
                                    },
                                    "username": {
                                      "description": "Optional. The user name for HTTP Basic authentication.",
                                      "type": "string"
                                    },
                                    "password": {
                                      "description": "Optional. The password for HTTP Basic authentication.",
                                      "type": "string"
                                    },
                                    "request_headers": {
                                      "description": "Optional. The HTTP request headers to send together with fulfillment requests.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "is_cloud_function": {
                                      "description": "Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false.  is_cloud_function is deprecated. Cloud functions can be configured by its uri as a regular web service now.",
                                      "type": "boolean"
                                    }
                                  },
                                  "required": [
                                    "uri"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "service"
                            ]
                          }
                        }
                      },
                      "required": [
                        "text_schema"
                      ]
                    }
                  },
                  "data_store_spec": {
                    "description": "Data store search tool specification.  This field is a member of `oneof`_ ``specification``.",
                    "type": "object",
                    "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.DataStoreTool",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "data_store_connections": {
                          "description": "Required. List of data stores to search.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.dialogflowcx_v3beta1.types.DataStoreConnection",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "data_store_type": {
                                  "description": "The type of the connected data store.",
                                  "type": "object",
                                  "reference": "google.cloud.dialogflowcx_v3.types.DataStoreType"
                                },
                                "data_store": {
                                  "description": "The full name of the referenced data store. Formats: ``projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`` ``projects/{project}/locations/{location}/dataStores/{data_store}``",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "fallback_prompt": {
                          "description": "Required. Fallback prompt configurations to use.",
                          "type": "object",
                          "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.DataStoreTool.FallbackPrompt",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      },
                      "required": [
                        "data_store_connections",
                        "fallback_prompt"
                      ]
                    }
                  },
                  "extension_spec": {
                    "description": "Vertex extension tool specification.  This field is a member of `oneof`_ ``specification``.",
                    "type": "object",
                    "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.ExtensionTool",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Required. The full name of the referenced vertex extension. Formats: ``projects/{project}/locations/{location}/extensions/{extension}``",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  },
                  "function_spec": {
                    "description": "Client side executed function specification.  This field is a member of `oneof`_ ``specification``.",
                    "type": "object",
                    "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.FunctionTool",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "input_schema": {
                          "description": "Optional. The JSON schema is encapsulated in a [google.protobuf.Struct][google.protobuf.Struct] to describe the input of the function. This input is a JSON object that contains the function's parameters as properties of the object.",
                          "type": "object",
                          "reference": "google.protobuf.struct_pb2.Struct"
                        },
                        "output_schema": {
                          "description": "Optional. The JSON schema is encapsulated in a [google.protobuf.Struct][google.protobuf.Struct] to describe the output of the function. This output is a JSON object that contains the function's parameters as properties of the object.",
                          "type": "object",
                          "reference": "google.protobuf.struct_pb2.Struct"
                        }
                      }
                    }
                  },
                  "tool_type": {
                    "description": "Output only. The tool type.",
                    "type": "object",
                    "reference": "google.cloud.dialogflowcx_v3beta1.types.Tool.ToolType",
                    "output_only": true
                  }
                },
                "required": [
                  "display_name",
                  "description"
                ]
              }
            }
          },
          "tool_config": {
            "description": "Optional. Tool configuration for any ``Tool`` specified in the request. Refer to the `Function calling guide <https://ai.google.dev/gemini-api/docs/function-calling#function_calling_mode>`__ for a usage example.",
            "reference": "google.ai.generativelanguage_v1beta.types.ToolConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "function_calling_config": {
                  "description": "Optional. Function calling config.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta.types.FunctionCallingConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. Specifies the mode in which function calling should execute. If unspecified, the default value will be set to AUTO.",
                        "type": "object",
                        "reference": "google.ai.generativelanguage_v1beta.types.FunctionCallingConfig.Mode"
                      },
                      "allowed_function_names": {
                        "description": "Optional. A set of function names that, when provided, limits the functions the model will call.  This should only be set when the Mode is ANY. Function names should match [FunctionDeclaration.name]. With mode set to ANY, model will predict a function call from the set of function names provided.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "safety_settings": {
            "description": "Optional. A list of unique ``SafetySetting`` instances for blocking unsafe content.  This will be enforced on the ``GenerateContentRequest.contents`` and ``GenerateContentResponse.candidates``. There should not be more than one setting for each ``SafetyCategory`` type. The API will block any contents and responses that fail to meet the thresholds set by these settings. This list overrides the default settings for each ``SafetyCategory`` specified in the safety_settings. If there is no ``SafetySetting`` for a given ``SafetyCategory`` provided in the list, the API will use the default safety setting for that category. Harm categories HARM_CATEGORY_HATE_SPEECH, HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT, HARM_CATEGORY_HARASSMENT are supported. Refer to the `guide <https://ai.google.dev/gemini-api/docs/safety-settings>`__ for detailed information on available safety settings. Also refer to the `Safety guidance <https://ai.google.dev/gemini-api/docs/safety-guidance>`__ to learn how to incorporate safety considerations in your AI applications.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.SafetySetting",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "category": {
                    "description": "Required. The category for this setting.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.HarmCategory"
                  },
                  "threshold": {
                    "description": "Required. Controls the probability threshold at which harm is blocked.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.SafetySetting.HarmBlockThreshold"
                  }
                },
                "required": [
                  "category",
                  "threshold"
                ]
              }
            }
          },
          "generation_config": {
            "description": "Optional. Configuration options for model generation and outputs.  This field is a member of `oneof`_ ``_generation_config``.",
            "reference": "google.ai.generativelanguage_v1beta.types.GenerationConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "candidate_count": {
                  "description": "Optional. Number of generated responses to return. Currently, this value can only be set to 1. If unset, this will default to 1.  This field is a member of `oneof`_ ``_candidate_count``.",
                  "type": "integer"
                },
                "stop_sequences": {
                  "description": "Optional. The set of character sequences (up to 5) that will stop output generation. If specified, the API will stop at the first appearance of a ``stop_sequence``. The stop sequence will not be included as part of the response.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "max_output_tokens": {
                  "description": "Optional. The maximum number of tokens to include in a response candidate.  Note: The default value varies by model, see the ``Model.output_token_limit`` attribute of the ``Model`` returned from the ``getModel`` function.  This field is a member of `oneof`_ ``_max_output_tokens``.",
                  "type": "integer"
                },
                "temperature": {
                  "description": "Optional. Controls the randomness of the output.  Note: The default value varies by model, see the ``Model.temperature`` attribute of the ``Model`` returned from the ``getModel`` function.  Values can range from [0.0, 2.0].  This field is a member of `oneof`_ ``_temperature``.",
                  "type": "number"
                },
                "top_p": {
                  "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.  The model uses combined Top-k and Top-p (nucleus) sampling.  Tokens are sorted based on their assigned probabilities so that only the most likely tokens are considered. Top-k sampling directly limits the maximum number of tokens to consider, while Nucleus sampling limits the number of tokens based on the cumulative probability.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_p``.",
                  "type": "number"
                },
                "top_k": {
                  "description": "Optional. The maximum number of tokens to consider when sampling.  Gemini models use Top-p (nucleus) sampling or a combination of Top-k and nucleus sampling. Top-k sampling considers the set of ``top_k`` most probable tokens. Models running with nucleus sampling don't allow top_k setting.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_k``.",
                  "type": "integer"
                },
                "presence_penalty": {
                  "description": "Optional. Presence penalty applied to the next token's logprobs if the token has already been seen in the response.  This penalty is binary on/off and not dependant on the number of times the token is used (after the first). Use [frequency_penalty][google.ai.generativelanguage.v1.GenerationConfig.frequency_penalty] for a penalty that increases with each use.  A positive penalty will discourage the use of tokens that have already been used in the response, increasing the vocabulary.  A negative penalty will encourage the use of tokens that have already been used in the response, decreasing the vocabulary.  This field is a member of `oneof`_ ``_presence_penalty``.",
                  "type": "number"
                },
                "frequency_penalty": {
                  "description": "Optional. Frequency penalty applied to the next token's logprobs, multiplied by the number of times each token has been seen in the respponse so far.  A positive penalty will discourage the use of tokens that have already been used, proportional to the number of times the token has been used: The more a token is used, the more dificult it is for the model to use that token again increasing the vocabulary of responses.  Caution: A *negative* penalty will encourage the model to reuse tokens proportional to the number of times the token has been used. Small negative values will reduce the vocabulary of a response. Larger negative values will cause the model to start repeating a common token until it hits the [max_output_tokens][google.ai.generativelanguage.v1.GenerationConfig.max_output_tokens] limit.  This field is a member of `oneof`_ ``_frequency_penalty``.",
                  "type": "number"
                },
                "response_logprobs": {
                  "description": "Optional. If true, export the logprobs results in response.  This field is a member of `oneof`_ ``_response_logprobs``.",
                  "type": "boolean"
                },
                "logprobs": {
                  "description": "Optional. Only valid if [response_logprobs=True][google.ai.generativelanguage.v1.GenerationConfig.response_logprobs]. This sets the number of top logprobs to return at each decoding step in the [Candidate.logprobs_result][google.ai.generativelanguage.v1.Candidate.logprobs_result].  This field is a member of `oneof`_ ``_logprobs``.",
                  "type": "integer"
                }
              }
            }
          },
          "cached_content": {
            "description": "Optional. The name of the content `cached <https://ai.google.dev/gemini-api/docs/caching>`__ to use as context to serve the prediction. Format: ``cachedContents/{cachedContent}``  This field is a member of `oneof`_ ``_cached_content``.",
            "type": "string"
          }
        },
        "required": [
          "model",
          "contents"
        ]
      }
    },
    {
      "type": "function",
      "name": "GenerateAnswerRequest",
      "description": "Request to generate a grounded answer from the ``Model``.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    inline_passages (google.ai.generativelanguage_v1beta.types.GroundingPassages):\n        Passages provided inline with the request.\n\n        This field is a member of `oneof`_ ``grounding_source``.\n    semantic_retriever (google.ai.generativelanguage_v1beta.types.SemanticRetrieverConfig):\n        Content retrieved from resources created via\n        the Semantic Retriever API.\n\n        This field is a member of `oneof`_ ``grounding_source``.\n    model (str):\n        Required. The name of the ``Model`` to use for generating\n        the grounded response.\n\n        Format: ``model=models/{model}``.\n    contents (MutableSequence[google",
      "parameters": {
        "type": "object",
        "properties": {
          "inline_passages": {
            "description": "Passages provided inline with the request.  This field is a member of `oneof`_ ``grounding_source``.",
            "reference": "google.ai.generativelanguage_v1beta.types.GroundingPassages",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "passages": {
                  "description": "List of passages.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta.types.GroundingPassage",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Identifier for the passage for attributing this passage in grounded answers.",
                          "type": "string"
                        },
                        "content": {
                          "description": "Content of the passage.",
                          "type": "object",
                          "reference": "google.ai.generativelanguage_v1beta.types.Content",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                                "type": "string",
                                "output_only": true
                              },
                              "uid": {
                                "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                                "type": "string",
                                "output_only": true
                              },
                              "path": {
                                "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                                "type": "string"
                              },
                              "create_time": {
                                "description": "Output only. Content creation time.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                "output_only": true
                              },
                              "update_time": {
                                "description": "Output only. The time when the content was last updated.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                "output_only": true
                              },
                              "labels": {
                                "description": "Optional. User defined labels for the content.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "description": {
                                "description": "Optional. Description of the content.",
                                "type": "string"
                              },
                              "data_text": {
                                "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                                "type": "string"
                              },
                              "sql_script": {
                                "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "engine": {
                                      "description": "Required. Query Engine to be used for the Sql Query.",
                                      "type": "object",
                                      "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                                    }
                                  },
                                  "required": [
                                    "engine"
                                  ]
                                }
                              },
                              "notebook": {
                                "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "kernel_type": {
                                      "description": "Required. Kernel Type of the notebook.",
                                      "type": "object",
                                      "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                                    }
                                  },
                                  "required": [
                                    "kernel_type"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "path",
                              "data_text"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "semantic_retriever": {
            "description": "Content retrieved from resources created via the Semantic Retriever API.  This field is a member of `oneof`_ ``grounding_source``.",
            "reference": "google.ai.generativelanguage_v1beta.types.SemanticRetrieverConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "source": {
                  "description": "Required. Name of the resource for retrieval. Example: ``corpora/123`` or ``corpora/123/documents/abc``.",
                  "type": "string"
                },
                "query": {
                  "description": "Required. Query to use for matching ``Chunk``\\ s in the given resource by similarity.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1beta.types.Content",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                        "type": "string",
                        "output_only": true
                      },
                      "uid": {
                        "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                        "type": "string",
                        "output_only": true
                      },
                      "path": {
                        "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                        "type": "string"
                      },
                      "create_time": {
                        "description": "Output only. Content creation time.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "update_time": {
                        "description": "Output only. The time when the content was last updated.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "labels": {
                        "description": "Optional. User defined labels for the content.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "description": {
                        "description": "Optional. Description of the content.",
                        "type": "string"
                      },
                      "data_text": {
                        "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                        "type": "string"
                      },
                      "sql_script": {
                        "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "engine": {
                              "description": "Required. Query Engine to be used for the Sql Query.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                            }
                          },
                          "required": [
                            "engine"
                          ]
                        }
                      },
                      "notebook": {
                        "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "kernel_type": {
                              "description": "Required. Kernel Type of the notebook.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                            }
                          },
                          "required": [
                            "kernel_type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "path",
                      "data_text"
                    ]
                  }
                },
                "metadata_filters": {
                  "description": "Optional. Filters for selecting ``Document``\\ s and/or ``Chunk``\\ s from the resource.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta.types.MetadataFilter",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "filter_labels": {
                          "description": "The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list must not be empty and can have at the most 64 entries.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.compute_v1.types.MetadataFilterLabelMatch",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of metadata label. The name can have a maximum length of 1024 characters and must be at least 1 character long.  This field is a member of `oneof`_ ``_name``.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value of the label must match the specified value. value can have a maximum length of 1024 characters.  This field is a member of `oneof`_ ``_value``.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "filter_match_criteria": {
                          "description": "Specifies how individual filter label matches within the list of filterLabels and contributes toward the overall metadataFilter match. Supported values are: - MATCH_ANY: at least one of the filterLabels must have a matching label in the provided metadata. - MATCH_ALL: all filterLabels must have matching labels in the provided metadata. Check the FilterMatchCriteria enum for the list of possible values.  This field is a member of `oneof`_ ``_filter_match_criteria``.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "max_chunks_count": {
                  "description": "Optional. Maximum number of relevant ``Chunk``\\ s to retrieve.  This field is a member of `oneof`_ ``_max_chunks_count``.",
                  "type": "integer"
                },
                "minimum_relevance_score": {
                  "description": "Optional. Minimum relevance score for retrieved relevant ``Chunk``\\ s.  This field is a member of `oneof`_ ``_minimum_relevance_score``.",
                  "type": "number"
                }
              },
              "required": [
                "source",
                "query"
              ]
            }
          },
          "model": {
            "description": "Required. The name of the ``Model`` to use for generating the grounded response.  Format: ``model=models/{model}``.",
            "type": "string"
          },
          "contents": {
            "description": "Required. The content of the current conversation with the ``Model``. For single-turn queries, this is a single question to answer. For multi-turn queries, this is a repeated field that contains conversation history and the last ``Content`` in the list containing the question.  Note: ``GenerateAnswer`` only supports queries in English.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.Content",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                    "type": "string",
                    "output_only": true
                  },
                  "uid": {
                    "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                    "type": "string",
                    "output_only": true
                  },
                  "path": {
                    "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                    "type": "string"
                  },
                  "create_time": {
                    "description": "Output only. Content creation time.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "update_time": {
                    "description": "Output only. The time when the content was last updated.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "labels": {
                    "description": "Optional. User defined labels for the content.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "description": {
                    "description": "Optional. Description of the content.",
                    "type": "string"
                  },
                  "data_text": {
                    "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                    "type": "string"
                  },
                  "sql_script": {
                    "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                    "type": "object",
                    "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "engine": {
                          "description": "Required. Query Engine to be used for the Sql Query.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                        }
                      },
                      "required": [
                        "engine"
                      ]
                    }
                  },
                  "notebook": {
                    "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                    "type": "object",
                    "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "kernel_type": {
                          "description": "Required. Kernel Type of the notebook.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                        }
                      },
                      "required": [
                        "kernel_type"
                      ]
                    }
                  }
                },
                "required": [
                  "path",
                  "data_text"
                ]
              }
            }
          },
          "answer_style": {
            "description": "Required. Style in which answers should be returned.",
            "type": "object",
            "reference": "google.ai.generativelanguage_v1beta.types.GenerateAnswerRequest.AnswerStyle"
          },
          "safety_settings": {
            "description": "Optional. A list of unique ``SafetySetting`` instances for blocking unsafe content.  This will be enforced on the ``GenerateAnswerRequest.contents`` and ``GenerateAnswerResponse.candidate``. There should not be more than one setting for each ``SafetyCategory`` type. The API will block any contents and responses that fail to meet the thresholds set by these settings. This list overrides the default settings for each ``SafetyCategory`` specified in the safety_settings. If there is no ``SafetySetting`` for a given ``SafetyCategory`` provided in the list, the API will use the default safety setting for that category. Harm categories HARM_CATEGORY_HATE_SPEECH, HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT, HARM_CATEGORY_HARASSMENT are supported. Refer to the `guide <https://ai.google.dev/gemini-api/docs/safety-settings>`__ for detailed information on available safety settings. Also refer to the `Safety guidance <https://ai.google.dev/gemini-api/docs/safety-guidance>`__ to learn how to incorporate safety considerations in your AI applications.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.SafetySetting",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "category": {
                    "description": "Required. The category for this setting.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.HarmCategory"
                  },
                  "threshold": {
                    "description": "Required. Controls the probability threshold at which harm is blocked.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.SafetySetting.HarmBlockThreshold"
                  }
                },
                "required": [
                  "category",
                  "threshold"
                ]
              }
            }
          },
          "temperature": {
            "description": "Optional. Controls the randomness of the output.  Values can range from [0.0,1.0], inclusive. A value closer to 1.0 will produce responses that are more varied and creative, while a value closer to 0.0 will typically result in more straightforward responses from the model. A low temperature (~0.2) is usually recommended for Attributed-Question-Answering use cases.  This field is a member of `oneof`_ ``_temperature``.",
            "type": "number"
          }
        },
        "required": [
          "model",
          "contents",
          "answer_style"
        ]
      }
    },
    {
      "type": "function",
      "name": "EmbedContentRequest",
      "description": "Request containing the ``Content`` for the model to embed.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    model (str):\n        Required. The model's resource name. This serves as an ID\n        for the Model to use.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``\n    content (google.ai.generativelanguage_v1beta.types.Content):\n        Required. The content to embed. Only the ``parts.text``\n        fields will be counted.\n    task_type (google.ai.generativelanguage_v1beta.types.TaskType):\n        Optional. Optional task type for which the embeddings will\n        be used. Can only be set for ``models/embedding-001``.\n\n        This field is a member of `oneof`_ ``_task_type``.\n    title (str):\n        Optional. An optional title for the text. Only applicable\n        when TaskType is ``RETRIEVAL_DOCUMENT``.\n\n        Note: Specifying a ``title`` for ``RETRIEVA",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          },
          "content": {
            "description": "Required. The content to embed. Only the ``parts.text`` fields will be counted.",
            "reference": "google.ai.generativelanguage_v1beta.types.Content",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                  "type": "string",
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                  "type": "string",
                  "output_only": true
                },
                "path": {
                  "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. Content creation time.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The time when the content was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. User defined labels for the content.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "description": {
                  "description": "Optional. Description of the content.",
                  "type": "string"
                },
                "data_text": {
                  "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                  "type": "string"
                },
                "sql_script": {
                  "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                  "type": "object",
                  "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "engine": {
                        "description": "Required. Query Engine to be used for the Sql Query.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                      }
                    },
                    "required": [
                      "engine"
                    ]
                  }
                },
                "notebook": {
                  "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                  "type": "object",
                  "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kernel_type": {
                        "description": "Required. Kernel Type of the notebook.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                      }
                    },
                    "required": [
                      "kernel_type"
                    ]
                  }
                }
              },
              "required": [
                "path",
                "data_text"
              ]
            }
          },
          "task_type": {
            "description": "Optional. Optional task type for which the embeddings will be used. Can only be set for ``models/embedding-001``.  This field is a member of `oneof`_ ``_task_type``.",
            "type": "object",
            "reference": "google.ai.generativelanguage_v1beta.types.TaskType"
          },
          "title": {
            "description": "Optional. An optional title for the text. Only applicable when TaskType is ``RETRIEVAL_DOCUMENT``.  Note: Specifying a ``title`` for ``RETRIEVAL_DOCUMENT`` provides better quality embeddings for retrieval.  This field is a member of `oneof`_ ``_title``.",
            "type": "string"
          },
          "output_dimensionality": {
            "description": "Optional. Optional reduced dimension for the output embedding. If set, excessive values in the output embedding are truncated from the end. Supported by newer models since 2024 only. You cannot set this value if using the earlier model (``models/embedding-001``).  This field is a member of `oneof`_ ``_output_dimensionality``.",
            "type": "integer"
          }
        },
        "required": [
          "model",
          "content"
        ]
      }
    },
    {
      "type": "function",
      "name": "BatchEmbedContentsRequest",
      "description": "Batch request to get embeddings from the model for a list of\nprompts.\n\nAttributes:\n    model (str):\n        Required. The model's resource name. This serves as an ID\n        for the Model to use.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``\n    requests (MutableSequence[google.ai.generativelanguage_v1beta.types.EmbedContentRequest]):\n        Required. Embed requests for the batch. The model in each of\n        these requests must match the model specified\n        ``BatchEmbedContentsRequest.model``.",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          },
          "requests": {
            "description": "Required. Embed requests for the batch. The model in each of these requests must match the model specified ``BatchEmbedContentsRequest.model``.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.EmbedContentRequest",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
                    "type": "string"
                  },
                  "content": {
                    "description": "Required. The content to embed. Only the ``parts.text`` fields will be counted.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1.types.Content",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "type": "string",
                          "output_only": true
                        },
                        "uid": {
                          "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                          "type": "string",
                          "output_only": true
                        },
                        "path": {
                          "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                          "type": "string"
                        },
                        "create_time": {
                          "description": "Output only. Content creation time.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "update_time": {
                          "description": "Output only. The time when the content was last updated.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "labels": {
                          "description": "Optional. User defined labels for the content.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "description": {
                          "description": "Optional. Description of the content.",
                          "type": "string"
                        },
                        "data_text": {
                          "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                          "type": "string"
                        },
                        "sql_script": {
                          "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "engine": {
                                "description": "Required. Query Engine to be used for the Sql Query.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                              }
                            },
                            "required": [
                              "engine"
                            ]
                          }
                        },
                        "notebook": {
                          "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "kernel_type": {
                                "description": "Required. Kernel Type of the notebook.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                              }
                            },
                            "required": [
                              "kernel_type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "path",
                        "data_text"
                      ]
                    }
                  },
                  "task_type": {
                    "description": "Optional. Optional task type for which the embeddings will be used. Can only be set for ``models/embedding-001``.  This field is a member of `oneof`_ ``_task_type``.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1.types.TaskType"
                  },
                  "title": {
                    "description": "Optional. An optional title for the text. Only applicable when TaskType is ``RETRIEVAL_DOCUMENT``.  Note: Specifying a ``title`` for ``RETRIEVAL_DOCUMENT`` provides better quality embeddings for retrieval.  This field is a member of `oneof`_ ``_title``.",
                    "type": "string"
                  },
                  "output_dimensionality": {
                    "description": "Optional. Optional reduced dimension for the output embedding. If set, excessive values in the output embedding are truncated from the end. Supported by newer models since 2024 only. You cannot set this value if using the earlier model (``models/embedding-001``).  This field is a member of `oneof`_ ``_output_dimensionality``.",
                    "type": "integer"
                  }
                },
                "required": [
                  "model",
                  "content"
                ]
              }
            }
          }
        },
        "required": [
          "model",
          "requests"
        ]
      }
    },
    {
      "type": "function",
      "name": "CountTokensRequest",
      "description": "Counts the number of tokens in the ``prompt`` sent to a model.\n\nModels may tokenize text differently, so each model may return a\ndifferent ``token_count``.\n\nAttributes:\n    model (str):\n        Required. The model's resource name. This serves as an ID\n        for the Model to use.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``\n    contents (MutableSequence[google.ai.generativelanguage_v1beta.types.Content]):\n        Optional. The input given to the model as a prompt. This\n        field is ignored when ``generate_content_request`` is set.\n    generate_content_request (google.ai.generativelanguage_v1beta.types.GenerateContentRequest):\n        Optional. The overall input given to the ``Model``. This\n        includes the prompt as well as other model steering\n        information like `system\n        instructions <https://ai.google.dev/gemini-api/docs/system-instructions>`__,\n        and/or function declarations for `function\n        ",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          },
          "contents": {
            "description": "Optional. The input given to the model as a prompt. This field is ignored when ``generate_content_request`` is set.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.Content",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                    "type": "string",
                    "output_only": true
                  },
                  "uid": {
                    "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                    "type": "string",
                    "output_only": true
                  },
                  "path": {
                    "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                    "type": "string"
                  },
                  "create_time": {
                    "description": "Output only. Content creation time.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "update_time": {
                    "description": "Output only. The time when the content was last updated.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "labels": {
                    "description": "Optional. User defined labels for the content.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "description": {
                    "description": "Optional. Description of the content.",
                    "type": "string"
                  },
                  "data_text": {
                    "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                    "type": "string"
                  },
                  "sql_script": {
                    "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                    "type": "object",
                    "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "engine": {
                          "description": "Required. Query Engine to be used for the Sql Query.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                        }
                      },
                      "required": [
                        "engine"
                      ]
                    }
                  },
                  "notebook": {
                    "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                    "type": "object",
                    "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "kernel_type": {
                          "description": "Required. Kernel Type of the notebook.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                        }
                      },
                      "required": [
                        "kernel_type"
                      ]
                    }
                  }
                },
                "required": [
                  "path",
                  "data_text"
                ]
              }
            }
          },
          "generate_content_request": {
            "description": "Optional. The overall input given to the ``Model``. This includes the prompt as well as other model steering information like `system instructions <https://ai.google.dev/gemini-api/docs/system-instructions>`__, and/or function declarations for `function calling <https://ai.google.dev/gemini-api/docs/function-calling>`__. ``Model``\\ s/\\ ``Content``\\ s and ``generate_content_request``\\ s are mutually exclusive. You can either send ``Model`` + ``Content``\\ s or a ``generate_content_request``, but never both.",
            "reference": "google.ai.generativelanguage_v1beta.types.GenerateContentRequest",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "model": {
                  "description": "Required. The name of the ``Model`` to use for generating the completion.  Format: ``name=models/{model}``.",
                  "type": "string"
                },
                "contents": {
                  "description": "Required. The content of the current conversation with the model.  For single-turn queries, this is a single instance. For multi-turn queries like `chat <https://ai.google.dev/gemini-api/docs/text-generation#chat>`__, this is a repeated field that contains the conversation history and the latest request.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1.types.Content",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "type": "string",
                          "output_only": true
                        },
                        "uid": {
                          "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
                          "type": "string",
                          "output_only": true
                        },
                        "path": {
                          "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
                          "type": "string"
                        },
                        "create_time": {
                          "description": "Output only. Content creation time.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "update_time": {
                          "description": "Output only. The time when the content was last updated.",
                          "type": "object",
                          "reference": "google.protobuf.timestamp_pb2.Timestamp",
                          "output_only": true
                        },
                        "labels": {
                          "description": "Optional. User defined labels for the content.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "description": {
                          "description": "Optional. Description of the content.",
                          "type": "string"
                        },
                        "data_text": {
                          "description": "Required. Content data in string format.  This field is a member of `oneof`_ ``data``.",
                          "type": "string"
                        },
                        "sql_script": {
                          "description": "Sql Script related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.SqlScript",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "engine": {
                                "description": "Required. Query Engine to be used for the Sql Query.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.SqlScript.QueryEngine"
                              }
                            },
                            "required": [
                              "engine"
                            ]
                          }
                        },
                        "notebook": {
                          "description": "Notebook related configurations.  This field is a member of `oneof`_ ``content``.",
                          "type": "object",
                          "reference": "google.cloud.dataplex_v1.types.Content.Notebook",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "kernel_type": {
                                "description": "Required. Kernel Type of the notebook.",
                                "type": "object",
                                "reference": "google.cloud.dataplex_v1.types.Content.Notebook.KernelType"
                              }
                            },
                            "required": [
                              "kernel_type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "path",
                        "data_text"
                      ]
                    }
                  }
                },
                "safety_settings": {
                  "description": "Optional. A list of unique ``SafetySetting`` instances for blocking unsafe content.  This will be enforced on the ``GenerateContentRequest.contents`` and ``GenerateContentResponse.candidates``. There should not be more than one setting for each ``SafetyCategory`` type. The API will block any contents and responses that fail to meet the thresholds set by these settings. This list overrides the default settings for each ``SafetyCategory`` specified in the safety_settings. If there is no ``SafetySetting`` for a given ``SafetyCategory`` provided in the list, the API will use the default safety setting for that category. Harm categories HARM_CATEGORY_HATE_SPEECH, HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT, HARM_CATEGORY_HARASSMENT are supported. Refer to the `guide <https://ai.google.dev/gemini-api/docs/safety-settings>`__ for detailed information on available safety settings. Also refer to the `Safety guidance <https://ai.google.dev/gemini-api/docs/safety-guidance>`__ to learn how to incorporate safety considerations in your AI applications.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1.types.SafetySetting",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "description": "Required. The category for this setting.",
                          "type": "object",
                          "reference": "google.ai.generativelanguage_v1beta3.types.HarmCategory"
                        },
                        "threshold": {
                          "description": "Required. Controls the probability threshold at which harm is blocked.",
                          "type": "object",
                          "reference": "google.ai.generativelanguage_v1beta3.types.SafetySetting.HarmBlockThreshold"
                        }
                      },
                      "required": [
                        "category",
                        "threshold"
                      ]
                    }
                  }
                },
                "generation_config": {
                  "description": "Optional. Configuration options for model generation and outputs.  This field is a member of `oneof`_ ``_generation_config``.",
                  "type": "object",
                  "reference": "google.ai.generativelanguage_v1.types.GenerationConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "candidate_count": {
                        "description": "Optional. Number of generated responses to return. Currently, this value can only be set to 1. If unset, this will default to 1.  This field is a member of `oneof`_ ``_candidate_count``.",
                        "type": "integer"
                      },
                      "stop_sequences": {
                        "description": "Optional. The set of character sequences (up to 5) that will stop output generation. If specified, the API will stop at the first appearance of a ``stop_sequence``. The stop sequence will not be included as part of the response.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "max_output_tokens": {
                        "description": "Optional. The maximum number of tokens to include in a response candidate.  Note: The default value varies by model, see the ``Model.output_token_limit`` attribute of the ``Model`` returned from the ``getModel`` function.  This field is a member of `oneof`_ ``_max_output_tokens``.",
                        "type": "integer"
                      },
                      "temperature": {
                        "description": "Optional. Controls the randomness of the output.  Note: The default value varies by model, see the ``Model.temperature`` attribute of the ``Model`` returned from the ``getModel`` function.  Values can range from [0.0, 2.0].  This field is a member of `oneof`_ ``_temperature``.",
                        "type": "number"
                      },
                      "top_p": {
                        "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.  The model uses combined Top-k and Top-p (nucleus) sampling.  Tokens are sorted based on their assigned probabilities so that only the most likely tokens are considered. Top-k sampling directly limits the maximum number of tokens to consider, while Nucleus sampling limits the number of tokens based on the cumulative probability.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_p``.",
                        "type": "number"
                      },
                      "top_k": {
                        "description": "Optional. The maximum number of tokens to consider when sampling.  Gemini models use Top-p (nucleus) sampling or a combination of Top-k and nucleus sampling. Top-k sampling considers the set of ``top_k`` most probable tokens. Models running with nucleus sampling don't allow top_k setting.  Note: The default value varies by ``Model`` and is specified by the\\ ``Model.top_p`` attribute returned from the ``getModel`` function. An empty ``top_k`` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting ``top_k`` on requests.  This field is a member of `oneof`_ ``_top_k``.",
                        "type": "integer"
                      },
                      "presence_penalty": {
                        "description": "Optional. Presence penalty applied to the next token's logprobs if the token has already been seen in the response.  This penalty is binary on/off and not dependant on the number of times the token is used (after the first). Use [frequency_penalty][google.ai.generativelanguage.v1.GenerationConfig.frequency_penalty] for a penalty that increases with each use.  A positive penalty will discourage the use of tokens that have already been used in the response, increasing the vocabulary.  A negative penalty will encourage the use of tokens that have already been used in the response, decreasing the vocabulary.  This field is a member of `oneof`_ ``_presence_penalty``.",
                        "type": "number"
                      },
                      "frequency_penalty": {
                        "description": "Optional. Frequency penalty applied to the next token's logprobs, multiplied by the number of times each token has been seen in the respponse so far.  A positive penalty will discourage the use of tokens that have already been used, proportional to the number of times the token has been used: The more a token is used, the more dificult it is for the model to use that token again increasing the vocabulary of responses.  Caution: A *negative* penalty will encourage the model to reuse tokens proportional to the number of times the token has been used. Small negative values will reduce the vocabulary of a response. Larger negative values will cause the model to start repeating a common token until it hits the [max_output_tokens][google.ai.generativelanguage.v1.GenerationConfig.max_output_tokens] limit.  This field is a member of `oneof`_ ``_frequency_penalty``.",
                        "type": "number"
                      },
                      "response_logprobs": {
                        "description": "Optional. If true, export the logprobs results in response.  This field is a member of `oneof`_ ``_response_logprobs``.",
                        "type": "boolean"
                      },
                      "logprobs": {
                        "description": "Optional. Only valid if [response_logprobs=True][google.ai.generativelanguage.v1.GenerationConfig.response_logprobs]. This sets the number of top logprobs to return at each decoding step in the [Candidate.logprobs_result][google.ai.generativelanguage.v1.Candidate.logprobs_result].  This field is a member of `oneof`_ ``_logprobs``.",
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": [
                "model",
                "contents"
              ]
            }
          }
        },
        "required": [
          "model"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-ai-generativelanguage/google/ai/generativelanguage_v1beta/types/text_service.py": [
    {
      "type": "function",
      "name": "GenerateTextRequest",
      "description": "Request to generate a text completion response from the\nmodel.\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    model (str):\n        Required. The name of the ``Model`` or ``TunedModel`` to use\n        for generating the completion. Examples:\n        models/text-bison-001 tunedModels/sentence-translator-u3b7m\n    prompt (google.ai.generativelanguage_v1beta.types.TextPrompt):\n        Required. The free-form input text given to\n        the model as a prompt.\n        Given a prompt, the model will generate a\n        TextCompletion response it predicts as the\n        completion of the input text.\n    temperature (float):\n        Optional. Controls the randomness of the output. Note: The\n        default value varies by model, see the ``Model.temperature``\n        attribute of the ``Model`` returned the ``getModel``\n        function.\n\n        Values can range from [0.0,1.0], inclusive. A value closer\n        to 1.0 will produce responses t",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The name of the ``Model`` or ``TunedModel`` to use for generating the completion. Examples: models/text-bison-001 tunedModels/sentence-translator-u3b7m",
            "type": "string"
          },
          "prompt": {
            "description": "Required. The free-form input text given to the model as a prompt. Given a prompt, the model will generate a TextCompletion response it predicts as the completion of the input text.",
            "reference": "google.ai.generativelanguage_v1beta.types.TextPrompt",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "text": {
                  "description": "Required. The prompt text.",
                  "type": "string"
                }
              },
              "required": [
                "text"
              ]
            }
          },
          "temperature": {
            "description": "Optional. Controls the randomness of the output. Note: The default value varies by model, see the ``Model.temperature`` attribute of the ``Model`` returned the ``getModel`` function.  Values can range from [0.0,1.0], inclusive. A value closer to 1.0 will produce responses that are more varied and creative, while a value closer to 0.0 will typically result in more straightforward responses from the model.  This field is a member of `oneof`_ ``_temperature``.",
            "type": "number"
          },
          "candidate_count": {
            "description": "Optional. Number of generated responses to return.  This value must be between [1, 8], inclusive. If unset, this will default to 1.  This field is a member of `oneof`_ ``_candidate_count``.",
            "type": "integer"
          },
          "max_output_tokens": {
            "description": "Optional. The maximum number of tokens to include in a candidate.  If unset, this will default to output_token_limit specified in the ``Model`` specification.  This field is a member of `oneof`_ ``_max_output_tokens``.",
            "type": "integer"
          },
          "top_p": {
            "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.  The model uses combined Top-k and nucleus sampling.  Tokens are sorted based on their assigned probabilities so that only the most likely tokens are considered. Top-k sampling directly limits the maximum number of tokens to consider, while Nucleus sampling limits number of tokens based on the cumulative probability.  Note: The default value varies by model, see the ``Model.top_p`` attribute of the ``Model`` returned the ``getModel`` function.  This field is a member of `oneof`_ ``_top_p``.",
            "type": "number"
          },
          "top_k": {
            "description": "Optional. The maximum number of tokens to consider when sampling.  The model uses combined Top-k and nucleus sampling.  Top-k sampling considers the set of ``top_k`` most probable tokens. Defaults to 40.  Note: The default value varies by model, see the ``Model.top_k`` attribute of the ``Model`` returned the ``getModel`` function.  This field is a member of `oneof`_ ``_top_k``.",
            "type": "integer"
          },
          "safety_settings": {
            "description": "Optional. A list of unique ``SafetySetting`` instances for blocking unsafe content.  that will be enforced on the ``GenerateTextRequest.prompt`` and ``GenerateTextResponse.candidates``. There should not be more than one setting for each ``SafetyCategory`` type. The API will block any prompts and responses that fail to meet the thresholds set by these settings. This list overrides the default settings for each ``SafetyCategory`` specified in the safety_settings. If there is no ``SafetySetting`` for a given ``SafetyCategory`` provided in the list, the API will use the default safety setting for that category. Harm categories HARM_CATEGORY_DEROGATORY, HARM_CATEGORY_TOXICITY, HARM_CATEGORY_VIOLENCE, HARM_CATEGORY_SEXUAL, HARM_CATEGORY_MEDICAL, HARM_CATEGORY_DANGEROUS are supported in text service.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.SafetySetting",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "category": {
                    "description": "Required. The category for this setting.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.HarmCategory"
                  },
                  "threshold": {
                    "description": "Required. Controls the probability threshold at which harm is blocked.",
                    "type": "object",
                    "reference": "google.ai.generativelanguage_v1beta3.types.SafetySetting.HarmBlockThreshold"
                  }
                },
                "required": [
                  "category",
                  "threshold"
                ]
              }
            }
          },
          "stop_sequences": {
            "description": "The set of character sequences (up to 5) that will stop output generation. If specified, the API will stop at the first appearance of a stop sequence. The stop sequence will not be included as part of the response.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "model",
          "prompt"
        ]
      }
    },
    {
      "type": "function",
      "name": "EmbedTextRequest",
      "description": "Request to get a text embedding from the model.\n\nAttributes:\n    model (str):\n        Required. The model name to use with the\n        format model=models/{model}.\n    text (str):\n        Optional. The free-form input text that the\n        model will turn into an embedding.",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model name to use with the format model=models/{model}.",
            "type": "string"
          },
          "text": {
            "description": "Optional. The free-form input text that the model will turn into an embedding.",
            "type": "string"
          }
        },
        "required": [
          "model"
        ]
      }
    },
    {
      "type": "function",
      "name": "BatchEmbedTextRequest",
      "description": "Batch request to get a text embedding from the model.\n\nAttributes:\n    model (str):\n        Required. The name of the ``Model`` to use for generating\n        the embedding. Examples: models/embedding-gecko-001\n    texts (MutableSequence[str]):\n        Optional. The free-form input texts that the\n        model will turn into an embedding. The current\n        limit is 100 texts, over which an error will be\n        thrown.\n    requests (MutableSequence[google.ai.generativelanguage_v1beta.types.EmbedTextRequest]):\n        Optional. Embed requests for the batch. Only one of\n        ``texts`` or ``requests`` can be set.",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The name of the ``Model`` to use for generating the embedding. Examples: models/embedding-gecko-001",
            "type": "string"
          },
          "texts": {
            "description": "Optional. The free-form input texts that the model will turn into an embedding. The current limit is 100 texts, over which an error will be thrown.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requests": {
            "description": "Optional. Embed requests for the batch. Only one of ``texts`` or ``requests`` can be set.",
            "type": "array",
            "items": {
              "reference": "google.ai.generativelanguage_v1beta.types.EmbedTextRequest",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "description": "Required. The model name to use with the format model=models/{model}.",
                    "type": "string"
                  },
                  "text": {
                    "description": "Required. The free-form input text that the model will turn into an embedding.",
                    "type": "string"
                  }
                },
                "required": [
                  "model",
                  "text"
                ]
              }
            }
          }
        },
        "required": [
          "model"
        ]
      }
    },
    {
      "type": "function",
      "name": "CountTextTokensRequest",
      "description": "Counts the number of tokens in the ``prompt`` sent to a model.\n\nModels may tokenize text differently, so each model may return a\ndifferent ``token_count``.\n\nAttributes:\n    model (str):\n        Required. The model's resource name. This serves as an ID\n        for the Model to use.\n\n        This name should match a model name returned by the\n        ``ListModels`` method.\n\n        Format: ``models/{model}``\n    prompt (google.ai.generativelanguage_v1beta.types.TextPrompt):\n        Required. The free-form input text given to\n        the model as a prompt.",
      "parameters": {
        "type": "object",
        "properties": {
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.  This name should match a model name returned by the ``ListModels`` method.  Format: ``models/{model}``",
            "type": "string"
          },
          "prompt": {
            "description": "Required. The free-form input text given to the model as a prompt.",
            "reference": "google.ai.generativelanguage_v1beta.types.TextPrompt",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "text": {
                  "description": "Required. The prompt text.",
                  "type": "string"
                }
              },
              "required": [
                "text"
              ]
            }
          }
        },
        "required": [
          "model",
          "prompt"
        ]
      }
    }
  ]
}