{
  "AccountIssueService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_account_issues",
          "description": "Lists all account issues of a Merchant Center\naccount.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_list_account_issues():\n        # Create a client\n        client = merchant_accounts_v1beta.AccountIssueServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.ListAccountIssuesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_account_issues(request=request)\n\n        # Handle the response\n        async for response in page_result:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of issues. Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.services.account_issue_service.pagers.ListAccountIssuesAsyncPager: Response message for the ListAccountIssues method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.services.account_issue_service.pagers.ListAccountIssuesAsyncPager"
          ]
        }
      }
    ]
  },
  "AccountTaxService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_account_tax",
          "description": "Returns the tax rules that match the conditions of\nGetAccountTaxRequest\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_account_tax():\n        # Create a client\n        client = merchant_accounts_v1beta.AccountTaxServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetAccountTaxRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_account_tax(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name from which tax settings will be retrieved  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.AccountTax: The tax settings of a merchant account. All methods require the admin role."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.AccountTax"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_account_tax",
          "description": "Lists the tax settings of the sub-accounts only in\nyour Merchant Center account.\nThis method can only be called on a multi-client\naccount, otherwise it'll return an error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_list_account_tax():\n        # Create a client\n        client = merchant_accounts_v1beta.AccountTaxServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.ListAccountTaxRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of account tax. Format: accounts/{account}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.services.account_tax_service.pagers.ListAccountTaxAsyncPager: Response to account tax list request This method can only be called on a multi-client account, otherwise it'll return an error.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.services.account_tax_service.pagers.ListAccountTaxAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_account_tax",
          "description": "Updates the tax settings of the account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_update_account_tax():\n        # Create a client\n        client = merchant_accounts_v1beta.AccountTaxServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.UpdateAccountTaxRequest(\n        )\n\n        # Make the request\n        response = await client.update_account_tax(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shopping.merchant_accounts_v1be",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "account_tax": {
                "type": "google.shopping.merchant_accounts_v1beta.types.AccountTax",
                "description": "Required. The tax setting that will be updated  This corresponds to the ``account_tax`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.AccountTax: The tax settings of a merchant account. All methods require the admin role."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "account_tax",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.AccountTax"
          ]
        }
      }
    ]
  },
  "AccountsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_account",
          "description": "Retrieves an account from your Merchant Center\naccount. After inserting, updating, or deleting an\naccount, it may take several minutes before changes take\neffect.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_account():\n        # Create a client\n        client = merchant_accounts_v1beta.AccountsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetAccountRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_account(request=reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the account to retrieve. Format: ``accounts/{account}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.Account: An account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Account"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_and_configure_account",
          "description": "Creates a standalone Merchant Center account with\nadditional configuration. Adds the user that makes the\nrequest as an admin for the new account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_create_and_configure_account():\n        # Create a client\n        client = merchant_accounts_v1beta.AccountsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        account = merchant_accounts_v1beta.Account()\n        account.account_name = \"account_name_value\"\n        account.language_code = \"language_code_value\"\n\n        request = merchant_ac",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Account"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_account",
          "description": "Deletes the specified account regardless of its type:\nstandalone, MCA or sub-account. Deleting an MCA leads to the\ndeletion of all of its sub-accounts. Executing this method\nrequires admin access. The deletion succeeds only if the account\ndoes not provide services to any other account and has no\nprocessed offers. You can use the ``force`` parameter to\noverride this.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_delete_account():\n        # Create a client\n        client = merchant_accounts_v1beta.AccountsServiceAsyncClient()\n\n        # Initialize ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the account to delete. Format: ``accounts/{account}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_account",
          "description": "Updates an account regardless of its type:\nstandalone, MCA or sub-account. Executing this method\nrequires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_update_account():\n        # Create a client\n        client = merchant_accounts_v1beta.AccountsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        account = merchant_accounts_v1beta.Account()\n        account.account_name = \"account_name_value\"\n        account.language_code = \"language_code_value\"\n\n        request = merchant_accounts_v1beta.UpdateAccountRequest(\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "account": {
                "type": "google.shopping.merchant_accounts_v1beta.types.Account",
                "description": "Required. The new version of the account.  This corresponds to the ``account`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. List of fields being updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.Account: An account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "account",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Account"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_accounts",
          "description": "Lists accounts accessible to the calling user and\nmatching the constraints of the request such as page\nsize or filters. This is not just listing the\nsub-accounts of an MCA, but all accounts the calling\nuser has access to including other MCAs, linked\naccounts, standalone accounts and so on. If no filter is\nprovided, then it returns accounts the user is directly\nadded to.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_list_accounts():\n        # Create a client\n        client = merchant_accounts_v1beta.AccountsServiceAsyncClient()\n\n        # Initiali",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.services.accounts_service.pagers.ListAccountsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_sub_accounts",
          "description": "List all sub-accounts for a given multi client account. This is\na convenience wrapper for the more powerful ``ListAccounts``\nmethod. This method will produce the same results as calling\n``ListsAccounts`` with the following filter:\n``relationship(providerId={parent} AND service(type=\"ACCOUNT_AGGREGATION\"))``\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_list_sub_accounts():\n        # Create a client\n        client = merchant_accounts_v1beta.AccountsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "provider": {
                "type": "str",
                "description": "Required. The parent account. Format: ``accounts/{account}``  This corresponds to the ``provider`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.services.accounts_service.pagers.ListSubAccountsAsyncPager: Response message for the ListSubAccounts method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "provider",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.services.accounts_service.pagers.ListSubAccountsAsyncPager"
          ]
        }
      }
    ]
  },
  "AutofeedSettingsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_autofeed_settings",
          "description": "Retrieves the autofeed settings of an account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_autofeed_settings():\n        # Create a client\n        client = merchant_accounts_v1beta.AutofeedSettingsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetAutofeedSettingsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_autofeed_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (O",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the autofeed settings. Format: ``accounts/{account}/autofeedSettings``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.AutofeedSettings: Collection of information related to the [autofeed](https://support.google.com/merchants/answer/7538732) settings."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.AutofeedSettings"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_autofeed_settings",
          "description": "Updates the autofeed settings of an account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_update_autofeed_settings():\n        # Create a client\n        client = merchant_accounts_v1beta.AutofeedSettingsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        autofeed_settings = merchant_accounts_v1beta.AutofeedSettings()\n        autofeed_settings.enable_products = True\n\n        request = merchant_accounts_v1beta.UpdateAutofeedSettingsRequest(\n            autofeed_settings=autofeed_settings,\n        )\n\n        # Make the request\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "autofeed_settings": {
                "type": "google.shopping.merchant_accounts_v1beta.types.AutofeedSettings",
                "description": "Required. The new version of the autofeed setting.  This corresponds to the ``autofeed_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. List of fields being updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.AutofeedSettings: Collection of information related to the [autofeed](https://support.google.com/merchants/answer/7538732) settings."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "autofeed_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.AutofeedSettings"
          ]
        }
      }
    ]
  },
  "BusinessIdentityService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_business_identity",
          "description": "Retrieves the business identity of an account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_business_identity():\n        # Create a client\n        client = merchant_accounts_v1beta.BusinessIdentityServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetBusinessIdentityRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_business_identity(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (O",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the business identity. Format: ``accounts/{account}/businessIdentity``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.BusinessIdentity: Collection of information related to the [identity of a business](\\ https://support.google.com/merchants/answer/12564247)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.BusinessIdentity"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_business_identity",
          "description": "Updates the business identity of an account.\nExecuting this method requires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_update_business_identity():\n        # Create a client\n        client = merchant_accounts_v1beta.BusinessIdentityServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.UpdateBusinessIdentityRequest(\n        )\n\n        # Make the request\n        response = await client.update_business_identity(request=request)\n\n        # Handle the response\n        print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "business_identity": {
                "type": "google.shopping.merchant_accounts_v1beta.types.BusinessIdentity",
                "description": "Required. The new version of the business identity.  This corresponds to the ``business_identity`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. List of fields being updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.BusinessIdentity: Collection of information related to the [identity of a business](\\ https://support.google.com/merchants/answer/12564247)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "business_identity",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.BusinessIdentity"
          ]
        }
      }
    ]
  },
  "BusinessInfoService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_business_info",
          "description": "Retrieves the business info of an account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_business_info():\n        # Create a client\n        client = merchant_accounts_v1beta.BusinessInfoServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetBusinessInfoRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_business_info(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the business info. Format: ``accounts/{account}/businessInfo``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.BusinessInfo: Collection of information related to a business."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.BusinessInfo"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_business_info",
          "description": "Updates the business info of an account. Executing\nthis method requires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_update_business_info():\n        # Create a client\n        client = merchant_accounts_v1beta.BusinessInfoServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.UpdateBusinessInfoRequest(\n        )\n\n        # Make the request\n        response = await client.update_business_info(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "business_info": {
                "type": "google.shopping.merchant_accounts_v1beta.types.BusinessInfo",
                "description": "Required. The new version of the business info.  This corresponds to the ``business_info`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. List of fields being updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.BusinessInfo: Collection of information related to a business."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "business_info",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.BusinessInfo"
          ]
        }
      }
    ]
  },
  "EmailPreferencesService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_email_preferences",
          "description": "Returns the email preferences for a Merchant Center account\nuser.\n\nUse the `name=accounts/*/users/me/emailPreferences` alias to get\npreferences for the authenticated user.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_email_preferences():\n        # Create a client\n        client = merchant_accounts_v1beta.EmailPreferencesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetEmailPreferencesRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = awa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the ``EmailPreferences`` resource. Format: ``accounts/{account}/users/{email}/emailPreferences``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.EmailPreferences: The categories of notifications the user opted into / opted out of. The email preferences do not include mandatory announcements as users can't opt out of them."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.EmailPreferences"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_email_preferences",
          "description": "Updates the email preferences for a Merchant Center account\nuser. MCA users should specify the MCA account rather than a\nsub-account of the MCA.\n\nPreferences which are not explicitly selected in the update mask\nwill not be updated.\n\nIt is invalid for updates to specify an UNCONFIRMED opt-in\nstatus value.\n\nUse the `name=accounts/*/users/me/emailPreferences` alias to\nupdate preferences for the authenticated user.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_update_email_preferences():\n        # Create a client\n        client = merchant_accounts_v1",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "email_preferences": {
                "type": "google.shopping.merchant_accounts_v1beta.types.EmailPreferences",
                "description": "Required. Email Preferences to be updated.  This corresponds to the ``email_preferences`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. List of fields being updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.EmailPreferences: The categories of notifications the user opted into / opted out of. The email preferences do not include mandatory announcements as users can't opt out of them."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "email_preferences",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.EmailPreferences"
          ]
        }
      }
    ]
  },
  "HomepageService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_homepage",
          "description": "Retrieves a store's homepage.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_homepage():\n        # Create a client\n        client = merchant_accounts_v1beta.HomepageServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetHomepageRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_homepage(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shopping.merchant_accounts_v1b",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the homepage to retrieve. Format: ``accounts/{account}/homepage``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.Homepage: A store's homepage."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Homepage"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_homepage",
          "description": "Updates a store's homepage. Executing this method\nrequires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_update_homepage():\n        # Create a client\n        client = merchant_accounts_v1beta.HomepageServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.UpdateHomepageRequest(\n        )\n\n        # Make the request\n        response = await client.update_homepage(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shopping.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "homepage": {
                "type": "google.shopping.merchant_accounts_v1beta.types.Homepage",
                "description": "Required. The new version of the homepage.  This corresponds to the ``homepage`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. List of fields being updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.Homepage: A store's homepage."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "homepage",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Homepage"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "claim_homepage",
          "description": "Claims a store's homepage. Executing this method requires admin\naccess.\n\nIf the homepage is already claimed, this will recheck the\nverification (unless the merchant is exempted from claiming,\nwhich also exempts from verification) and return a successful\nresponse. If ownership can no longer be verified, it will return\nan error, but it won't clear the claim. In case of failure, a\ncanonical error message will be returned: \\* PERMISSION_DENIED:\nuser doesn't have the necessary permissions on this MC account;\n\\* FAILED_PRECONDITION: - The account is not a Merchant Center\naccount; - MC account doesn't have a homepage; - claiming failed\n(in this case the error message will contain more details).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the servi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Homepage"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "unclaim_homepage",
          "description": "Unclaims a store's homepage. Executing this method\nrequires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_unclaim_homepage():\n        # Create a client\n        client = merchant_accounts_v1beta.HomepageServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.UnclaimHomepageRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.unclaim_homepage(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Homepage"
          ]
        }
      }
    ]
  },
  "OnlineReturnPolicyService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_online_return_policy",
          "description": "Gets an existing return policy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_online_return_policy():\n        # Create a client\n        client = merchant_accounts_v1beta.OnlineReturnPolicyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetOnlineReturnPolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_online_return_policy(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Option",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the return policy to retrieve. Format: ``accounts/{account}/onlineReturnPolicies/{return_policy}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.OnlineReturnPolicy: [Online return policy](\\ https://support.google.com/merchants/answer/10220642) object. This is currently used to represent return policies for ads and free listings programs."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.OnlineReturnPolicy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_online_return_policies",
          "description": "Lists all existing return policies.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_list_online_return_policies():\n        # Create a client\n        client = merchant_accounts_v1beta.OnlineReturnPolicyServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.ListOnlineReturnPoliciesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_online_return_policies(request=request)\n\n        # Handle the response\n        async for response in page_r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The merchant account for which to list return policies. Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.services.online_return_policy_service.pagers.ListOnlineReturnPoliciesAsyncPager: Response message for the ListOnlineReturnPolicies method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.services.online_return_policy_service.pagers.ListOnlineReturnPoliciesAsyncPager"
          ]
        }
      }
    ]
  },
  "ProgramsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_program",
          "description": "Retrieves the specified program for the account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_program():\n        # Create a client\n        client = merchant_accounts_v1beta.ProgramsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetProgramRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_program(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shopping.merch",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the program to retrieve. Format: ``accounts/{account}/programs/{program}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.Program: Defines participation in a given program for the specified account.  Programs provide a mechanism for adding functionality to merchant accounts. A typical example of this is the [Free product listings](\\ https://support.google.com/merchants/topic/9240261?ref_topic=7257954,7259405,&sjid=796648681813264022-EU) program, which enables products from a merchant's store to be shown across Google for free."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Program"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_programs",
          "description": "Retrieves all programs for the account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_list_programs():\n        # Create a client\n        client = merchant_accounts_v1beta.ProgramsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.ListProgramsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_programs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the account for which to retrieve all programs. Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.services.programs_service.pagers.ListProgramsAsyncPager: Response message for the ListPrograms method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.services.programs_service.pagers.ListProgramsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "enable_program",
          "description": "Enable participation in the specified program for the\naccount. Executing this method requires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_enable_program():\n        # Create a client\n        client = merchant_accounts_v1beta.ProgramsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.EnableProgramRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.enable_program(request=request)\n\n        # Handle the response\n        prin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the program for which to enable participation for the given account. Format: ``accounts/{account}/programs/{program}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.Program: Defines participation in a given program for the specified account.  Programs provide a mechanism for adding functionality to merchant accounts. A typical example of this is the [Free product listings](\\ https://support.google.com/merchants/topic/9240261?ref_topic=7257954,7259405,&sjid=796648681813264022-EU) program, which enables products from a merchant's store to be shown across Google for free."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Program"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "disable_program",
          "description": "Disable participation in the specified program for\nthe account. Executing this method requires admin\naccess.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_disable_program():\n        # Create a client\n        client = merchant_accounts_v1beta.ProgramsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.DisableProgramRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.disable_program(request=request)\n\n        # Handle the response\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the program for which to disable participation for the given account. Format: ``accounts/{account}/programs/{program}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.Program: Defines participation in a given program for the specified account.  Programs provide a mechanism for adding functionality to merchant accounts. A typical example of this is the [Free product listings](\\ https://support.google.com/merchants/topic/9240261?ref_topic=7257954,7259405,&sjid=796648681813264022-EU) program, which enables products from a merchant's store to be shown across Google for free."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Program"
          ]
        }
      }
    ]
  },
  "RegionsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_region",
          "description": "Retrieves a region defined in your Merchant Center\naccount.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_region():\n        # Create a client\n        client = merchant_accounts_v1beta.RegionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetRegionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_region(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shoppin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the region to retrieve. Format: ``accounts/{account}/regions/{region}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.Region: Represents a geographic region that you can use as a target with both the RegionalInventory and ShippingSettings services. You can define regions as collections of either postal codes or, in some countries, using predefined geotargets. For more information, see [Set up regions ](\\ https://support.google.com/merchants/answer/7410946#zippy=%2Ccreate-a-new-region) for more information."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Region"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_region",
          "description": "Creates a region definition in your Merchant Center\naccount. Executing this method requires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_create_region():\n        # Create a client\n        client = merchant_accounts_v1beta.RegionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.CreateRegionRequest(\n            parent=\"parent_value\",\n            region_id=\"region_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_region(request=request)\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The account to create a region for. Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "region": {
                "type": "google.shopping.merchant_accounts_v1beta.types.Region",
                "description": "Required. The region to create. This corresponds to the ``region`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "region_id": {
                "type": "str",
                "description": "Required. The identifier for the region, unique over all regions of the same account.  This corresponds to the ``region_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.Region: Represents a geographic region that you can use as a target with both the RegionalInventory and ShippingSettings services. You can define regions as collections of either postal codes or, in some countries, using predefined geotargets. For more information, see [Set up regions ](\\ https://support.google.com/merchants/answer/7410946#zippy=%2Ccreate-a-new-region) for more information."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "region",
              "region_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Region"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_region",
          "description": "Updates a region definition in your Merchant Center\naccount. Executing this method requires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_update_region():\n        # Create a client\n        client = merchant_accounts_v1beta.RegionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.UpdateRegionRequest(\n        )\n\n        # Make the request\n        response = await client.update_region(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "region": {
                "type": "google.shopping.merchant_accounts_v1beta.types.Region",
                "description": "Required. The updated region. This corresponds to the ``region`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. The comma-separated field mask indicating the fields to update. Example: ``\"displayName,postalCodeArea.regionCode\"``.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.Region: Represents a geographic region that you can use as a target with both the RegionalInventory and ShippingSettings services. You can define regions as collections of either postal codes or, in some countries, using predefined geotargets. For more information, see [Set up regions ](\\ https://support.google.com/merchants/answer/7410946#zippy=%2Ccreate-a-new-region) for more information."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "region",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.Region"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_region",
          "description": "Deletes a region definition from your Merchant Center\naccount. Executing this method requires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_delete_region():\n        # Create a client\n        client = merchant_accounts_v1beta.RegionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.DeleteRegionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_region(request=request)\n\nArgs:\n    request (Optional[Union[google.shopping.merchan",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the region to delete. Format: ``accounts/{account}/regions/{region}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_regions",
          "description": "Lists the regions in your Merchant Center account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_list_regions():\n        # Create a client\n        client = merchant_accounts_v1beta.RegionsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.ListRegionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_regions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The account to list regions for. Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.services.regions_service.pagers.ListRegionsAsyncPager: Response message for the ListRegions method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.services.regions_service.pagers.ListRegionsAsyncPager"
          ]
        }
      }
    ]
  },
  "ShippingSettingsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_shipping_settings",
          "description": "Retrieve shipping setting information.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_shipping_settings():\n        # Create a client\n        client = merchant_accounts_v1beta.ShippingSettingsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetShippingSettingsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_shipping_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the shipping setting to retrieve. Format: ``accounts/{account}/shippingsetting``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.ShippingSettings: The merchant account's [shipping setting](\\ https://support.google.com/merchants/answer/6069284)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.ShippingSettings"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "insert_shipping_settings",
          "description": "Replace the shipping setting of a merchant with the\nrequest shipping setting. Executing this method requires\nadmin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_insert_shipping_settings():\n        # Create a client\n        client = merchant_accounts_v1beta.ShippingSettingsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        shipping_setting = merchant_accounts_v1beta.ShippingSettings()\n        shipping_setting.etag = \"etag_value\"\n\n        request = merchant_accounts_v1beta.InsertShippingSettingsRequest(\n            paren",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.ShippingSettings"
          ]
        }
      }
    ]
  },
  "TermsOfServiceAgreementStateService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_terms_of_service_agreement_state",
          "description": "Returns the state of a terms of service agreement.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_terms_of_service_agreement_state():\n        # Create a client\n        client = merchant_accounts_v1beta.TermsOfServiceAgreementStateServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetTermsOfServiceAgreementStateRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_terms_of_service_agreement_state(request=request)\n\n        # Handle ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the terms of service version. Format: ``accounts/{account}/termsOfServiceAgreementState/{identifier}`` The identifier format is: ``{TermsOfServiceKind}-{country}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.TermsOfServiceAgreementState: This resource represents the agreement state for a given account and terms of service kind. The state is as follows:  \\* If the merchant has accepted a terms of service: [accepted](TermsOfServiceAggrementState.accepted) will be populated, otherwise it will be empty \\* If the merchant must sign a terms of service: [required](TermsOfServiceAggrementState.required) will be populated, otherwise it will be empty.  Note that both [required](TermsOfServiceAggrementState.required) and [accepted](TermsOfServiceAggrementState.accepted) can be present. In this case the accepted terms of services will have an expiration date set in the [valid_until](Accepted.valid_until) field. The required terms of services need to be accepted before valid_until in order for the account to continue having a valid agreement. When accepting new terms of services we expect 3Ps to display the text associated with the given terms of service agreement (the url to the file containing the text is added in the Required message below as [tos_file_uri](Accepted.tos_file_uri). The actual acceptance of the terms of service is done by calling accept on the [TermsOfService](TermsOfService) resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.TermsOfServiceAgreementState"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "retrieve_for_application_terms_of_service_agreement_state",
          "description": "Retrieves the state of the agreement for the\napplication terms of service.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_retrieve_for_application_terms_of_service_agreement_state():\n        # Create a client\n        client = merchant_accounts_v1beta.TermsOfServiceAgreementStateServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.RetrieveForApplicationTermsOfServiceAgreementStateRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.retr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The account for which to get a TermsOfServiceAgreementState Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.TermsOfServiceAgreementState: This resource represents the agreement state for a given account and terms of service kind. The state is as follows:  \\* If the merchant has accepted a terms of service: [accepted](TermsOfServiceAggrementState.accepted) will be populated, otherwise it will be empty \\* If the merchant must sign a terms of service: [required](TermsOfServiceAggrementState.required) will be populated, otherwise it will be empty.  Note that both [required](TermsOfServiceAggrementState.required) and [accepted](TermsOfServiceAggrementState.accepted) can be present. In this case the accepted terms of services will have an expiration date set in the [valid_until](Accepted.valid_until) field. The required terms of services need to be accepted before valid_until in order for the account to continue having a valid agreement. When accepting new terms of services we expect 3Ps to display the text associated with the given terms of service agreement (the url to the file containing the text is added in the Required message below as [tos_file_uri](Accepted.tos_file_uri). The actual acceptance of the terms of service is done by calling accept on the [TermsOfService](TermsOfService) resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.TermsOfServiceAgreementState"
          ]
        }
      }
    ]
  },
  "TermsOfServiceService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_terms_of_service",
          "description": "Retrieves the ``TermsOfService`` associated with the provided\nversion.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_terms_of_service():\n        # Create a client\n        client = merchant_accounts_v1beta.TermsOfServiceServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetTermsOfServiceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_terms_of_service(request=request)\n\n        # Handle the response\n        print(response)\n\nAr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the terms of service version. Format: ``termsOfService/{version}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.TermsOfService: A TermsOfService."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.TermsOfService"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "retrieve_latest_terms_of_service",
          "description": "Retrieves the latest version of the ``TermsOfService`` for a\ngiven ``kind`` and ``region_code``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_retrieve_latest_terms_of_service():\n        # Create a client\n        client = merchant_accounts_v1beta.TermsOfServiceServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.RetrieveLatestTermsOfServiceRequest(\n            region_code=\"region_code_value\",\n            kind=\"MERCHANT_CENTER\",\n        )\n\n        # Make the request\n        response = await clie",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.TermsOfService"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "accept_terms_of_service",
          "description": "Accepts a ``TermsOfService``. Executing this method requires\nadmin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_accept_terms_of_service():\n        # Create a client\n        client = merchant_accounts_v1beta.TermsOfServiceServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.AcceptTermsOfServiceRequest(\n            name=\"name_value\",\n            account=\"account_value\",\n            region_code=\"region_code_value\",\n        )\n\n        # Make the request\n        await client.accept_terms_of",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the terms of service version. Format: ``termsOfService/{version}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      }
    ]
  },
  "UserService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_user",
          "description": "Retrieves a Merchant Center account user.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_get_user():\n        # Create a client\n        client = merchant_accounts_v1beta.UserServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.GetUserRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_user(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shopping.merchant_accounts_v1beta.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the user to retrieve. Format: ``accounts/{account}/users/{email}``  It is also possible to retrieve the user corresponding to the caller by using ``me`` rather than an email address as in ``accounts/{account}/users/me``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.User: A [user](https://support.google.com/merchants/answer/12160472)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.User"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_user",
          "description": "Creates a Merchant Center account user. Executing\nthis method requires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_create_user():\n        # Create a client\n        client = merchant_accounts_v1beta.UserServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.CreateUserRequest(\n            parent=\"parent_value\",\n            user_id=\"user_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_user(request=request)\n\n        # Handle the response\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the account for which a user will be created. Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "user": {
                "type": "google.shopping.merchant_accounts_v1beta.types.User",
                "description": "Required. The user to create. This corresponds to the ``user`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.User: A [user](https://support.google.com/merchants/answer/12160472)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "user",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.User"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_user",
          "description": "Deletes a Merchant Center account user. Executing\nthis method requires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_delete_user():\n        # Create a client\n        client = merchant_accounts_v1beta.UserServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.DeleteUserRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_user(request=request)\n\nArgs:\n    request (Optional[Union[google.shopping.merchant_accounts_v1beta.types.DeleteUs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the user to delete. Format: ``accounts/{account}/users/{email}``  It is also possible to delete the user corresponding to the caller by using ``me`` rather than an email address as in ``accounts/{account}/users/me``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_user",
          "description": "Updates a Merchant Center account user. Executing\nthis method requires admin access.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_update_user():\n        # Create a client\n        client = merchant_accounts_v1beta.UserServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.UpdateUserRequest(\n        )\n\n        # Make the request\n        response = await client.update_user(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.shopping.merc",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "user": {
                "type": "google.shopping.merchant_accounts_v1beta.types.User",
                "description": "Required. The new version of the user.  Use ``me`` to refer to your own email address, for example ``accounts/{account}/users/me``.  This corresponds to the ``user`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. List of fields being updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.types.User: A [user](https://support.google.com/merchants/answer/12160472)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "user",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.types.User"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_users",
          "description": "Lists all users of a Merchant Center account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_accounts_v1beta\n\n    async def sample_list_users():\n        # Create a client\n        client = merchant_accounts_v1beta.UserServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_accounts_v1beta.ListUsersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_users(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns this collection of users. Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_accounts_v1beta.services.user_service.pagers.ListUsersAsyncPager: Response message for the ListUsers method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.shopping.merchant_accounts_v1beta.services.user_service.pagers.ListUsersAsyncPager"
          ]
        }
      }
    ]
  }
}