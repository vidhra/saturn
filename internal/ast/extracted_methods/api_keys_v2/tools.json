{
  "ApiKeys": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_key",
          "description": "Creates a new API key.\n\nNOTE: Key is a global resource; hence the only supported value\nfor location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import api_keys_v2\n\n    async def sample_create_key():\n        # Create a client\n        client = api_keys_v2.ApiKeysAsyncClient()\n\n        # Initialize request argument(s)\n        request = api_keys_v2.CreateKeyRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_key(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project in which the API key is created.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "key": {
                "type": "google.cloud.api_keys_v2.types.Key",
                "description": "Required. The API key fields to set at creation time. You can configure only the ``display_name``, ``restrictions``, and ``annotations`` fields.  This corresponds to the ``key`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "key_id": {
                "type": "str",
                "description": "User specified key id (optional). If specified, it will become the final component of the key resource name.  The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. In another word, the id must match the regular expression: ``[a-z]([a-z0-9-]{0,61}[a-z0-9])?``.  The id must NOT be a UUID-like string.  This corresponds to the ``key_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.api_keys_v2.types.Key` The representation of a key managed by the API Keys API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "key",
              "key_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "CreateKeyRequest"
          ],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_keys",
          "description": "Lists the API keys owned by a project. The key string of the API\nkey isn't included in the response.\n\nNOTE: Key is a global resource; hence the only supported value\nfor location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import api_keys_v2\n\n    async def sample_list_keys():\n        # Create a client\n        client = api_keys_v2.ApiKeysAsyncClient()\n\n        # Initialize request argument(s)\n        request = api_keys_v2.ListKeysRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_keys(request=request)\n\n        # Handle the ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Lists all API keys associated with this project.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.api_keys_v2.services.api_keys.pagers.ListKeysAsyncPager: Response message for ListKeys method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "ListKeysRequest"
          ],
          "response_types": [
            "google.cloud.api_keys_v2.services.api_keys.pagers.ListKeysAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_key",
          "description": "Gets the metadata for an API key. The key string of the API key\nisn't included in the response.\n\nNOTE: Key is a global resource; hence the only supported value\nfor location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import api_keys_v2\n\n    async def sample_get_key():\n        # Create a client\n        client = api_keys_v2.ApiKeysAsyncClient()\n\n        # Initialize request argument(s)\n        request = api_keys_v2.GetKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_key(request=request)\n\n        # Handle the response\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the API key to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.api_keys_v2.types.Key: The representation of a key managed by the API Keys API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GetKeyRequest"
          ],
          "response_types": [
            "google.cloud.api_keys_v2.types.Key"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_key_string",
          "description": "Get the key string for an API key.\n\nNOTE: Key is a global resource; hence the only supported value\nfor location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import api_keys_v2\n\n    async def sample_get_key_string():\n        # Create a client\n        client = api_keys_v2.ApiKeysAsyncClient()\n\n        # Initialize request argument(s)\n        request = api_keys_v2.GetKeyStringRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_key_string(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the API key to be retrieved.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.api_keys_v2.types.GetKeyStringResponse: Response message for GetKeyString method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GetKeyStringRequest"
          ],
          "response_types": [
            "google.cloud.api_keys_v2.types.GetKeyStringResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_key",
          "description": "Patches the modifiable fields of an API key. The key string of\nthe API key isn't included in the response.\n\nNOTE: Key is a global resource; hence the only supported value\nfor location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import api_keys_v2\n\n    async def sample_update_key():\n        # Create a client\n        client = api_keys_v2.ApiKeysAsyncClient()\n\n        # Initialize request argument(s)\n        request = api_keys_v2.UpdateKeyRequest(\n        )\n\n        # Make the request\n        operation = client.update_key(request=request)\n\n        print(\"Waiting for operation to complete.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "key": {
                "type": "google.cloud.api_keys_v2.types.Key",
                "description": "Required. Set the ``name`` field to the resource name of the API key to be updated. You can update only the ``display_name``, ``restrictions``, and ``annotations`` fields.  This corresponds to the ``key`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The field mask specifies which fields to be updated as part of this request. All other fields are ignored. Mutable fields are: ``display_name``, ``restrictions``, and ``annotations``. If an update mask is not provided, the service treats it as an implied mask equivalent to all allowed fields that are set on the wire. If the field mask has a special value \"*\", the service treats it equivalent to replace all allowed mutable fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.api_keys_v2.types.Key` The representation of a key managed by the API Keys API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "key",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "UpdateKeyRequest"
          ],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_key",
          "description": "Deletes an API key. Deleted key can be retrieved within 30 days\nof deletion. Afterward, key will be purged from the project.\n\nNOTE: Key is a global resource; hence the only supported value\nfor location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import api_keys_v2\n\n    async def sample_delete_key():\n        # Create a client\n        client = api_keys_v2.ApiKeysAsyncClient()\n\n        # Initialize request argument(s)\n        request = api_keys_v2.DeleteKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_key(request=request)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the API key to be deleted.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.api_keys_v2.types.Key` The representation of a key managed by the API Keys API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "DeleteKeyRequest"
          ],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undelete_key",
          "description": "Undeletes an API key which was deleted within 30 days.\n\nNOTE: Key is a global resource; hence the only supported value\nfor location is ``global``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import api_keys_v2\n\n    async def sample_undelete_key():\n        # Create a client\n        client = api_keys_v2.ApiKeysAsyncClient()\n\n        # Initialize request argument(s)\n        request = api_keys_v2.UndeleteKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.undelete_key(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "UndeleteKeyRequest"
          ],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "lookup_key",
          "description": "Find the parent project and resource name of the API key that\nmatches the key string in the request. If the API key has been\npurged, resource name will not be set. The service account must\nhave the ``apikeys.keys.lookup`` permission on the parent\nproject.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import api_keys_v2\n\n    async def sample_lookup_key():\n        # Create a client\n        client = api_keys_v2.ApiKeysAsyncClient()\n\n        # Initialize request argument(s)\n        request = api_keys_v2.LookupKeyRequest(\n            key_string=\"key_string_value\",\n        )\n\n        # Make the request\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "LookupKeyRequest"
          ],
          "response_types": [
            "google.cloud.api_keys_v2.types.LookupKeyResponse"
          ]
        }
      }
    ]
  }
}