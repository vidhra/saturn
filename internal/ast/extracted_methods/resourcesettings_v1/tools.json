{
  "ResourceSettingsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_settings",
          "description": "Lists all the settings that are available on the Cloud resource\n``parent``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import resourcesettings_v1\n\n    async def sample_list_settings():\n        # Create a client\n        client = resourcesettings_v1.ResourceSettingsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = resourcesettings_v1.ListSettingsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_settings(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The Cloud resource that parents the setting. Must be in one of the following forms:  -  ``projects/{project_number}`` -  ``projects/{project_id}`` -  ``folders/{folder_id}`` -  ``organizations/{organization_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.resourcesettings_v1.services.resource_settings_service.pagers.ListSettingsAsyncPager: The response from ListSettings.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "resource_settings.ListSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_setting",
          "description": "Gets a setting.\n\nReturns a ``google.rpc.Status`` with\n``google.rpc.Code.NOT_FOUND`` if the setting does not exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import resourcesettings_v1\n\n    async def sample_get_setting():\n        # Create a client\n        client = resourcesettings_v1.ResourceSettingsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = resourcesettings_v1.GetSettingRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_setting(request=request)\n\n        # Handle the response\n        print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the setting to get. See [Setting][google.cloud.resourcesettings.v1.Setting] for naming requirements.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.resourcesettings_v1.types.Setting: The schema for settings."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "resource_settings.GetSettingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_setting",
          "description": "Updates a setting.\n\nReturns a ``google.rpc.Status`` with\n``google.rpc.Code.NOT_FOUND`` if the setting does not exist.\nReturns a ``google.rpc.Status`` with\n``google.rpc.Code.FAILED_PRECONDITION`` if the setting is\nflagged as read only. Returns a ``google.rpc.Status`` with\n``google.rpc.Code.ABORTED`` if the etag supplied in the request\ndoes not match the persisted etag of the setting value.\n\nOn success, the response will contain only ``name``,\n``local_value`` and ``etag``. The ``metadata`` and\n``effective_value`` cannot be updated through this API.\n\nNote: the supplied setting will perform a full overwrite of the\n``local_value`` field.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "resource_settings.UpdateSettingRequest"
          ]
        }
      }
    ]
  }
}