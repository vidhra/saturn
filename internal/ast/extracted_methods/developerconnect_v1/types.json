{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-developerconnect\\google\\cloud\\developerconnect_v1\\types\\developer_connect.py": [
    {
      "type": "function",
      "name": "ListConnectionsRequest",
      "description": "Message for requesting list of Connections\n\nAttributes:\n    parent (str):\n        Required. Parent value for\n        ListConnectionsRequest\n    page_size (int):\n        Optional. Requested page size. Server may\n        return fewer items than requested. If\n        unspecified, server will pick an appropriate\n        default.\n    page_token (str):\n        Optional. A token identifying a page of\n        results the server should return.\n    filter (str):\n        Optional. Filtering results\n    order_by (str):\n        Optional. Hint for how to order the results",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Parent value for ListConnectionsRequest",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A token identifying a page of results the server should return.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. Filtering results",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. Hint for how to order the results",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetConnectionRequest",
      "description": "Message for getting a Connection\n\nAttributes:\n    name (str):\n        Required. Name of the resource",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateConnectionRequest",
      "description": "Message for creating a Connection\n\nAttributes:\n    parent (str):\n        Required. Value for parent.\n    connection_id (str):\n        Required. Id of the requesting object If auto-generating Id\n        server-side, remove this field and connection_id from the\n        method_signature of Create RPC\n    connection (google.cloud.developerconnect_v1.types.Connection):\n        Required. The resource being created\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes since the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID, the server can check if original operation\n        with the same request ID wa",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Value for parent.",
            "type": "string"
          },
          "connection_id": {
            "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and connection_id from the method_signature of Create RPC",
            "type": "string"
          },
          "connection": {
            "description": "Required. The resource being created",
            "type": "object",
            "properties": {
              "destination_ip": {
                "description": "Destination IP address. Not present for sockets that are listening and not connected.",
                "type": "string"
              },
              "destination_port": {
                "description": "Destination port. Not present for sockets that are listening and not connected.",
                "type": "integer"
              },
              "source_ip": {
                "description": "Source IP address.",
                "type": "string"
              },
              "source_port": {
                "description": "Source port.",
                "type": "integer"
              },
              "protocol": {
                "type": "enum",
                "name": "Protocol",
                "description": "Defines possible protocols used to send logs to\na logging server.\n\nValues:\n    PROTOCOL_UNSPECIFIED (0):\n        Unspecified communications protocol. This is\n        the default value.\n    UDP (1):\n        UDP\n    TCP (2):\n        TCP\n    TLS (3):\n        TLS\n    SSL (4):\n        SSL\n    RELP (5):\n        RELP",
                "values": {
                  "PROTOCOL_UNSPECIFIED": {
                    "value": 0
                  },
                  "UDP": {
                    "value": 1
                  },
                  "TCP": {
                    "value": 2
                  },
                  "TLS": {
                    "value": 3
                  },
                  "SSL": {
                    "value": 4
                  },
                  "RELP": {
                    "value": 5
                  }
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          },
          "validate_only": {
            "description": "Optional. If set, validate the request, but do not actually post it.",
            "type": "boolean"
          }
        },
        "required": [
          "parent",
          "connection_id",
          "connection"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateConnectionRequest",
      "description": "Message for updating a Connection\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Field mask is used to specify the fields to be\n        overwritten in the Connection resource by the update. The\n        fields specified in the update_mask are relative to the\n        resource, not the full request. A field will be overwritten\n        if it is in the mask. If the user does not provide a mask\n        then all fields will be overwritten.\n    connection (google.cloud.developerconnect_v1.types.Connection):\n        Required. The resource being updated\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes since the first request.\n\n        For example, consider a situation where you make\n        an initial req",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Field mask is used to specify the fields to be overwritten in the Connection resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "connection": {
            "description": "Required. The resource being updated",
            "type": "object",
            "properties": {
              "destination_ip": {
                "description": "Destination IP address. Not present for sockets that are listening and not connected.",
                "type": "string"
              },
              "destination_port": {
                "description": "Destination port. Not present for sockets that are listening and not connected.",
                "type": "integer"
              },
              "source_ip": {
                "description": "Source IP address.",
                "type": "string"
              },
              "source_port": {
                "description": "Source port.",
                "type": "integer"
              },
              "protocol": {
                "type": "enum",
                "name": "Protocol",
                "description": "Defines possible protocols used to send logs to\na logging server.\n\nValues:\n    PROTOCOL_UNSPECIFIED (0):\n        Unspecified communications protocol. This is\n        the default value.\n    UDP (1):\n        UDP\n    TCP (2):\n        TCP\n    TLS (3):\n        TLS\n    SSL (4):\n        SSL\n    RELP (5):\n        RELP",
                "values": {
                  "PROTOCOL_UNSPECIFIED": {
                    "value": 0
                  },
                  "UDP": {
                    "value": 1
                  },
                  "TCP": {
                    "value": 2
                  },
                  "TLS": {
                    "value": 3
                  },
                  "SSL": {
                    "value": 4
                  },
                  "RELP": {
                    "value": 5
                  }
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          },
          "allow_missing": {
            "description": "Optional. If set to true, and the connection is not found a new connection will be created. In this situation ``update_mask`` is ignored. The creation will succeed only if the input connection has all the necessary information (e.g a github_config with both user_oauth_token and installation_id properties).",
            "type": "boolean"
          },
          "validate_only": {
            "description": "Optional. If set, validate the request, but do not actually post it.",
            "type": "boolean"
          }
        },
        "required": [
          "update_mask",
          "connection"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteConnectionRequest",
      "description": "Message for deleting a Connection\n\nAttributes:\n    name (str):\n        Required. Name of the resource\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes after the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID, the server can check if original operation\n        with the same request ID was received, and if\n        so, will ignore the second request. This\n        prevents clients from accidentally creating\n        duplicate commitments.\n\n        The request ID must be a valid UUID with the\n        exception that zero UUID is not supported\n        (00000000-0000-0000-0000-000000000000).\n    val",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          },
          "validate_only": {
            "description": "Optional. If set, validate the request, but do not actually post it.",
            "type": "boolean"
          },
          "etag": {
            "description": "Optional. The current etag of the Connection. If an etag is provided and does not match the current etag of the Connection, deletion will be blocked and an ABORTED error will be returned.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateGitRepositoryLinkRequest",
      "description": "Message for creating a GitRepositoryLink\n\nAttributes:\n    parent (str):\n        Required. Value for parent.\n    git_repository_link (google.cloud.developerconnect_v1.types.GitRepositoryLink):\n        Required. The resource being created\n    git_repository_link_id (str):\n        Required. The ID to use for the repository, which will\n        become the final component of the repository's resource\n        name. This ID should be unique in the connection. Allows\n        alphanumeric characters and any of -._~%!$&'()*+,;=@.\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes since the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Value for parent.",
            "type": "string"
          },
          "git_repository_link": {
            "description": "Required. The resource being created",
            "type": "object",
            "properties": {
              "name": {
                "description": "Identifier. Resource name of the repository, in the format ``projects/*/locations/*/connections/*/gitRepositoryLinks/*``.",
                "type": "string"
              },
              "clone_uri": {
                "description": "Required. Git Clone URI.",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. [Output only] Create timestamp",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. [Output only] Update timestamp",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "delete_time": {
                "description": "Output only. [Output only] Delete timestamp",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "labels": {
                "description": "Optional. Labels as key value pairs",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "etag": {
                "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                "type": "string"
              },
              "reconciling": {
                "description": "Output only. Set to true when the connection is being set up or updated in the background.",
                "type": "boolean"
              },
              "annotations": {
                "description": "Optional. Allows clients to store small amounts of arbitrary data.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "uid": {
                "description": "Output only. A system-assigned unique identifier for a the GitRepositoryLink.",
                "type": "string"
              }
            },
            "required": [
              "clone_uri"
            ]
          },
          "git_repository_link_id": {
            "description": "Required. The ID to use for the repository, which will become the final component of the repository's resource name. This ID should be unique in the connection. Allows alphanumeric characters and any of -._~%!$&'()*+,;=@.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          },
          "validate_only": {
            "description": "Optional. If set, validate the request, but do not actually post it.",
            "type": "boolean"
          }
        },
        "required": [
          "parent",
          "git_repository_link",
          "git_repository_link_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteGitRepositoryLinkRequest",
      "description": "Message for deleting a GitRepositoryLink\n\nAttributes:\n    name (str):\n        Required. Name of the resource\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes after the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID, the server can check if original operation\n        with the same request ID was received, and if\n        so, will ignore the second request. This\n        prevents clients from accidentally creating\n        duplicate commitments.\n\n        The request ID must be a valid UUID with the\n        exception that zero UUID is not supported\n        (00000000-0000-0000-0000-000000000000).\n",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          },
          "validate_only": {
            "description": "Optional. If set, validate the request, but do not actually post it.",
            "type": "boolean"
          },
          "etag": {
            "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListGitRepositoryLinksRequest",
      "description": "Message for requesting a list of GitRepositoryLinks\n\nAttributes:\n    parent (str):\n        Required. Parent value for\n        ListGitRepositoryLinksRequest\n    page_size (int):\n        Optional. Requested page size. Server may\n        return fewer items than requested. If\n        unspecified, server will pick an appropriate\n        default.\n    page_token (str):\n        Optional. A token identifying a page of\n        results the server should return.\n    filter (str):\n        Optional. Filtering results\n    order_by (str):\n        Optional. Hint for how to order the results",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Parent value for ListGitRepositoryLinksRequest",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A token identifying a page of results the server should return.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. Filtering results",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. Hint for how to order the results",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetGitRepositoryLinkRequest",
      "description": "Message for getting a GitRepositoryLink\n\nAttributes:\n    name (str):\n        Required. Name of the resource",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "FetchReadWriteTokenRequest",
      "description": "Message for fetching SCM read/write token.\n\nAttributes:\n    git_repository_link (str):\n        Required. The resource name of the gitRepositoryLink in the\n        format\n        ``projects/*/locations/*/connections/*/gitRepositoryLinks/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "git_repository_link": {
            "description": "Required. The resource name of the gitRepositoryLink in the format ``projects/*/locations/*/connections/*/gitRepositoryLinks/*``.",
            "type": "string"
          }
        },
        "required": [
          "git_repository_link"
        ]
      }
    },
    {
      "type": "function",
      "name": "FetchReadTokenRequest",
      "description": "Message for fetching SCM read token.\n\nAttributes:\n    git_repository_link (str):\n        Required. The resource name of the gitRepositoryLink in the\n        format\n        ``projects/*/locations/*/connections/*/gitRepositoryLinks/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "git_repository_link": {
            "description": "Required. The resource name of the gitRepositoryLink in the format ``projects/*/locations/*/connections/*/gitRepositoryLinks/*``.",
            "type": "string"
          }
        },
        "required": [
          "git_repository_link"
        ]
      }
    },
    {
      "type": "function",
      "name": "FetchLinkableGitRepositoriesRequest",
      "description": "Request message for FetchLinkableGitRepositoriesRequest.\n\nAttributes:\n    connection (str):\n        Required. The name of the Connection. Format:\n        ``projects/*/locations/*/connections/*``.\n    page_size (int):\n        Optional. Number of results to return in the\n        list. Defaults to 20.\n    page_token (str):\n        Optional. Page start.",
      "parameters": {
        "type": "object",
        "properties": {
          "connection": {
            "description": "Required. The name of the Connection. Format: ``projects/*/locations/*/connections/*``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. Number of results to return in the list. Defaults to 20.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. Page start.",
            "type": "string"
          }
        },
        "required": [
          "connection"
        ]
      }
    },
    {
      "type": "function",
      "name": "FetchGitHubInstallationsRequest",
      "description": "Request for fetching github installations.\n\nAttributes:\n    connection (str):\n        Required. The resource name of the connection in the format\n        ``projects/*/locations/*/connections/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "connection": {
            "description": "Required. The resource name of the connection in the format ``projects/*/locations/*/connections/*``.",
            "type": "string"
          }
        },
        "required": [
          "connection"
        ]
      }
    },
    {
      "type": "function",
      "name": "FetchGitRefsRequest",
      "description": "Request for fetching git refs.\n\nAttributes:\n    git_repository_link (str):\n        Required. The resource name of GitRepositoryLink in the\n        format\n        ``projects/*/locations/*/connections/*/gitRepositoryLinks/*``.\n    ref_type (google.cloud.developerconnect_v1.types.FetchGitRefsRequest.RefType):\n        Required. Type of refs to fetch.\n    page_size (int):\n        Optional. Number of results to return in the\n        list. Default to 20.\n    page_token (str):\n        Optional. Page start.",
      "parameters": {
        "type": "object",
        "properties": {
          "git_repository_link": {
            "description": "Required. The resource name of GitRepositoryLink in the format ``projects/*/locations/*/connections/*/gitRepositoryLinks/*``.",
            "type": "string"
          },
          "ref_type": {
            "description": "Type of refs.\n\nValues:\n    REF_TYPE_UNSPECIFIED (0):\n        No type specified.\n    TAG (1):\n        To fetch tags.\n    BRANCH (2):\n        To fetch branches.",
            "type": "enum",
            "name": "RefType",
            "values": {
              "REF_TYPE_UNSPECIFIED": {
                "value": 0
              },
              "TAG": {
                "value": 1
              },
              "BRANCH": {
                "value": 2
              }
            }
          },
          "page_size": {
            "description": "Optional. Number of results to return in the list. Default to 20.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. Page start.",
            "type": "string"
          }
        },
        "required": [
          "git_repository_link",
          "ref_type"
        ]
      }
    }
  ]
}