{
  "DeveloperConnect": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_connections",
          "description": "Lists Connections in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_list_connections():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        request = developerconnect_v1.ListConnectionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_connections(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListConnectionsRequest  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.developerconnect_v1.services.developer_connect.pagers.ListConnectionsAsyncPager: Message for response to listing Connections Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.developerconnect_v1.services.developer_connect.pagers.ListConnectionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_connection",
          "description": "Gets details of a single Connection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_get_connection():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        request = developerconnect_v1.GetConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_connection(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.developerconnect_v1.types.Ge",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.developerconnect_v1.types.Connection: Message describing Connection object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.developerconnect_v1.types.Connection"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_connection",
          "description": "Creates a new Connection in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_create_connection():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        connection = developerconnect_v1.Connection()\n        connection.github_config.github_app = \"FIREBASE\"\n\n        request = developerconnect_v1.CreateConnectionRequest(\n            parent=\"parent_value\",\n            connection_id=\"connection_id_value\",\n            connection=connection,\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "connection": {
                "type": "google.cloud.developerconnect_v1.types.Connection",
                "description": "Required. The resource being created This corresponds to the ``connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "connection_id": {
                "type": "str",
                "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and connection_id from the method_signature of Create RPC  This corresponds to the ``connection_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.developerconnect_v1.types.Connection` Message describing Connection object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "connection",
              "connection_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_connection",
          "description": "Updates the parameters of a single Connection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_update_connection():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        connection = developerconnect_v1.Connection()\n        connection.github_config.github_app = \"FIREBASE\"\n\n        request = developerconnect_v1.UpdateConnectionRequest(\n            connection=connection,\n        )\n\n        # Make the request\n        operation = client.update_connection(request=request)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "connection": {
                "type": "google.cloud.developerconnect_v1.types.Connection",
                "description": "Required. The resource being updated This corresponds to the ``connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the Connection resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.developerconnect_v1.types.Connection` Message describing Connection object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "connection",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_connection",
          "description": "Deletes a single Connection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_delete_connection():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        request = developerconnect_v1.DeleteConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_connection(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_git_repository_link",
          "description": "Creates a GitRepositoryLink. Upon linking a Git\nRepository, Developer Connect will configure the Git\nRepository to send webhook events to Developer Connect.\nConnections that use Firebase GitHub Application will\nhave events forwarded to the Firebase service. All other\nConnections will have events forwarded to Cloud Build.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_create_git_repository_link():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        git_repository_lin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "git_repository_link": {
                "type": "google.cloud.developerconnect_v1.types.GitRepositoryLink",
                "description": "Required. The resource being created This corresponds to the ``git_repository_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "git_repository_link_id": {
                "type": "str",
                "description": "Required. The ID to use for the repository, which will become the final component of the repository's resource name. This ID should be unique in the connection. Allows alphanumeric characters and any of -._~%!$&'()*+,;=@.  This corresponds to the ``git_repository_link_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.developerconnect_v1.types.GitRepositoryLink` Message describing the GitRepositoryLink object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "git_repository_link",
              "git_repository_link_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_git_repository_link",
          "description": "Deletes a single GitRepositoryLink.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_delete_git_repository_link():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        request = developerconnect_v1.DeleteGitRepositoryLinkRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_git_repository_link(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_git_repository_links",
          "description": "Lists GitRepositoryLinks in a given project,\nlocation, and connection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_list_git_repository_links():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        request = developerconnect_v1.ListGitRepositoryLinksRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_git_repository_links(request=request)\n\n        # Handle the response\n        async for response in page",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListGitRepositoryLinksRequest  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.developerconnect_v1.services.developer_connect.pagers.ListGitRepositoryLinksAsyncPager: Message for response to listing GitRepositoryLinks Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.developerconnect_v1.services.developer_connect.pagers.ListGitRepositoryLinksAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_git_repository_link",
          "description": "Gets details of a single GitRepositoryLink.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_get_git_repository_link():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        request = developerconnect_v1.GetGitRepositoryLinkRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_git_repository_link(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.developerconnect_v1.types.GitRepositoryLink: Message describing the GitRepositoryLink object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.developerconnect_v1.types.GitRepositoryLink"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_read_write_token",
          "description": "Fetches read/write token of a given\ngitRepositoryLink.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_fetch_read_write_token():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        request = developerconnect_v1.FetchReadWriteTokenRequest(\n            git_repository_link=\"git_repository_link_value\",\n        )\n\n        # Make the request\n        response = await client.fetch_read_write_token(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "git_repository_link": {
                "type": "str",
                "description": "Required. The resource name of the gitRepositoryLink in the format ``projects/*/locations/*/connections/*/gitRepositoryLinks/*``.  This corresponds to the ``git_repository_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.developerconnect_v1.types.FetchReadWriteTokenResponse: Message for responding to get read/write token."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "git_repository_link",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.developerconnect_v1.types.FetchReadWriteTokenResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_read_token",
          "description": "Fetches read token of a given gitRepositoryLink.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_fetch_read_token():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        request = developerconnect_v1.FetchReadTokenRequest(\n            git_repository_link=\"git_repository_link_value\",\n        )\n\n        # Make the request\n        response = await client.fetch_read_token(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "git_repository_link": {
                "type": "str",
                "description": "Required. The resource name of the gitRepositoryLink in the format ``projects/*/locations/*/connections/*/gitRepositoryLinks/*``.  This corresponds to the ``git_repository_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.developerconnect_v1.types.FetchReadTokenResponse: Message for responding to get read token."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "git_repository_link",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.developerconnect_v1.types.FetchReadTokenResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_linkable_git_repositories",
          "description": "FetchLinkableGitRepositories returns a list of git\nrepositories from an SCM that are available to be added\nto a Connection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_fetch_linkable_git_repositories():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        request = developerconnect_v1.FetchLinkableGitRepositoriesRequest(\n            connection=\"connection_value\",\n        )\n\n        # Make the request\n        page_result = client.fetch_linkable_git_repositories(req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "connection": {
                "type": "str",
                "description": "Required. The name of the Connection. Format: ``projects/*/locations/*/connections/*``.  This corresponds to the ``connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.developerconnect_v1.services.developer_connect.pagers.FetchLinkableGitRepositoriesAsyncPager: Response message for FetchLinkableGitRepositories. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "connection",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.developerconnect_v1.services.developer_connect.pagers.FetchLinkableGitRepositoriesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_git_hub_installations",
          "description": "FetchGitHubInstallations returns the list of GitHub\nInstallations that are available to be added to a\nConnection. For github.com, only installations\naccessible to the authorizer token are returned. For\nGitHub Enterprise, all installations are returned.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_fetch_git_hub_installations():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        request = developerconnect_v1.FetchGitHubInstallationsRequest(\n            connection=\"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "connection": {
                "type": "str",
                "description": "Required. The resource name of the connection in the format ``projects/*/locations/*/connections/*``.  This corresponds to the ``connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.developerconnect_v1.types.FetchGitHubInstallationsResponse: Response of fetching github installations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "connection",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.developerconnect_v1.types.FetchGitHubInstallationsResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_git_refs",
          "description": "Fetch the list of branches or tags for a given\nrepository.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import developerconnect_v1\n\n    async def sample_fetch_git_refs():\n        # Create a client\n        client = developerconnect_v1.DeveloperConnectAsyncClient()\n\n        # Initialize request argument(s)\n        request = developerconnect_v1.FetchGitRefsRequest(\n            git_repository_link=\"git_repository_link_value\",\n            ref_type=\"BRANCH\",\n        )\n\n        # Make the request\n        page_result = client.fetch_git_refs(request=request)\n\n        # Handle the response\n        async for res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "git_repository_link": {
                "type": "str",
                "description": "Required. The resource name of GitRepositoryLink in the format ``projects/*/locations/*/connections/*/gitRepositoryLinks/*``.  This corresponds to the ``git_repository_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ref_type": {
                "type": "google.cloud.developerconnect_v1.types.FetchGitRefsRequest.RefType",
                "description": "Required. Type of refs to fetch. This corresponds to the ``ref_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.developerconnect_v1.services.developer_connect.pagers.FetchGitRefsAsyncPager: Response for fetching git refs.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "git_repository_link",
              "ref_type",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.developerconnect_v1.services.developer_connect.pagers.FetchGitRefsAsyncPager"
          ]
        }
      }
    ]
  }
}