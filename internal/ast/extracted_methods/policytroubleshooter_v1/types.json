{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-policy-troubleshooter\\google\\cloud\\policytroubleshooter_v1\\types\\checker.py": [
    {
      "type": "function",
      "name": "TroubleshootIamPolicyRequest",
      "description": "Request for\n[TroubleshootIamPolicy][google.cloud.policytroubleshooter.v1.IamChecker.TroubleshootIamPolicy].\n\nAttributes:\n    access_tuple (google.cloud.policytroubleshooter_v1.types.AccessTuple):\n        The information to use for checking whether a\n        principal has a permission for a resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "access_tuple": {
            "description": "The information to use for checking whether a principal has a permission for a resource.",
            "type": "object",
            "properties": {
              "principal": {
                "description": "Required. The email address of the principal whose access you want to check. For example, ``alice@example.com`` or ``my-service-account@my-project.iam.gserviceaccount.com``.  The principal must be a Google Account or a service account. Other types of principals are not supported.",
                "type": "string"
              },
              "full_resource_name": {
                "description": "Required. The full resource name that identifies the resource. For example, ``//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance``.  For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names.",
                "type": "string"
              },
              "permission": {
                "description": "Required. The IAM permission to check for, either in the ``v1`` permission format or the ``v2`` permission format.  For a complete list of IAM permissions in the ``v1`` format, see https://cloud.google.com/iam/help/permissions/reference.  For a list of IAM permissions in the ``v2`` format, see https://cloud.google.com/iam/help/deny/supported-permissions.  For a complete list of predefined IAM roles and the permissions in each role, see https://cloud.google.com/iam/help/roles/reference.",
                "type": "string"
              },
              "permission_fqdn": {
                "description": "Output only. The permission that Policy Troubleshooter checked for, in the ``v2`` format.",
                "type": "string"
              },
              "condition_context": {
                "type": "object",
                "properties": {
                  "resource": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name",
                        "type": "string"
                      },
                      "display_name": {
                        "description": "The human readable name of the resource.",
                        "type": "string"
                      },
                      "type_": {
                        "description": "The full resource type of the resource.",
                        "type": "string"
                      },
                      "cloud_provider": {
                        "description": "Indicates which cloud provider the finding is from.",
                        "type": "object",
                        "reference": "google.cloud.securitycenter_v2.types.CloudProvider"
                      },
                      "service": {
                        "description": "The service or resource provider associated with the resource.",
                        "type": "string"
                      },
                      "location": {
                        "description": "The region or location of the service (if applicable).",
                        "type": "string"
                      },
                      "gcp_metadata": {
                        "type": "object",
                        "properties": {
                          "project": {
                            "description": "The full resource name of project that the resource belongs to.",
                            "type": "string"
                          },
                          "project_display_name": {
                            "description": "The project ID that the resource belongs to.",
                            "type": "string"
                          },
                          "parent": {
                            "description": "The full resource name of resource's parent.",
                            "type": "string"
                          },
                          "parent_display_name": {
                            "description": "The human readable name of resource's parent.",
                            "type": "string"
                          },
                          "folders": {
                            "description": "Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Identifier. The name of this folder. Format: ``projects/{project}/buckets/{bucket}/folders/{folder}``",
                                  "type": "string"
                                },
                                "metageneration": {
                                  "description": "Output only. The version of the metadata for this folder. Used for preconditions and for detecting changes in metadata.",
                                  "type": "integer"
                                },
                                "create_time": {
                                  "description": "Output only. The creation time of the folder.",
                                  "type": "object",
                                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                                },
                                "update_time": {
                                  "description": "Output only. The modification time of the folder.",
                                  "type": "object",
                                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                                },
                                "pending_rename_info": {
                                  "type": "object",
                                  "properties": {
                                    "operation": {
                                      "description": "Output only. The name of the rename operation.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "organization": {
                            "description": "The name of the organization that the resource belongs to.",
                            "type": "string"
                          }
                        }
                      },
                      "aws_metadata": {
                        "type": "object",
                        "properties": {
                          "organization": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The unique identifier (ID) for the organization. The regex pattern for an organization ID string requires \"o-\" followed by from 10 to 32 lowercase letters or digits.",
                                "type": "string"
                              }
                            }
                          },
                          "organizational_units": {
                            "description": "A list of AWS organizational units associated with the resource, ordered from lowest level (closest to the account) to highest level.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The unique identifier (ID) associated with this OU. The regex pattern for an organizational unit ID string requires \"ou-\" followed by from 4 to 32 lowercase letters or digits (the ID of the root that contains the OU). This string is followed by a second \"-\" dash and from 8 to 32 additional lowercase letters or digits. For example, \"ou-ab12-cd34ef56\".",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The friendly name of the OU.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "account": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The unique identifier (ID) of the account, containing exactly 12 digits.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The friendly name of this account.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "azure_metadata": {
                        "type": "object",
                        "properties": {
                          "management_groups": {
                            "description": "A list of Azure management groups associated with the resource, ordered from lowest level (closest to the subscription) to highest level.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The UUID of the Azure management group, for example, ``20000000-0001-0000-0000-000000000000``.",
                                  "type": "string"
                                },
                                "display_name": {
                                  "description": "The display name of the Azure management group.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "subscription": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The UUID of the Azure subscription, for example, ``291bba3f-e0a5-47bc-a099-3bdcb2a50a05``.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "The display name of the Azure subscription.",
                                "type": "string"
                              }
                            }
                          },
                          "resource_group": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the Azure resource group. This is not a UUID.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "resource_path": {
                        "type": "object",
                        "properties": {
                          "nodes": {
                            "description": "The list of nodes that make the up resource path, ordered from lowest level to highest level.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "node_type": {
                                  "description": "The type of resource this node represents.",
                                  "type": "object",
                                  "reference": "google.cloud.securitycenter_v2.types.ResourcePath.ResourcePathNodeType"
                                },
                                "id": {
                                  "description": "The ID of the resource this node represents.",
                                  "type": "string"
                                },
                                "display_name": {
                                  "description": "The display name of the resource this node represents.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "resource_path_string": {
                        "description": "A string representation of the resource path. For Google Cloud, it has the format of ``organizations/{organization_id}/folders/{folder_id}/folders/{folder_id}/projects/{project_id}`` where there can be any number of folders. For AWS, it has the format of ``org/{organization_id}/ou/{organizational_unit_id}/ou/{organizational_unit_id}/account/{account_id}`` where there can be any number of organizational units. For Azure, it has the format of ``mg/{management_group_id}/mg/{management_group_id}/subscription/{subscription_id}/rg/{resource_group_name}`` where there can be any number of management groups.",
                        "type": "string"
                      }
                    }
                  },
                  "destination": {
                    "type": "object",
                    "properties": {
                      "ip": {
                        "description": "The IPv4 or IPv6 address of the peer.",
                        "type": "string"
                      },
                      "port": {
                        "description": "The network port of the peer.",
                        "type": "integer"
                      }
                    }
                  },
                  "request": {
                    "type": "object",
                    "properties": {
                      "receive_time": {
                        "description": "Optional. The timestamp when the destination service receives the first byte of the request.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      }
                    }
                  },
                  "effective_tags": {
                    "description": "Output only. The effective tags on the resource. The effective tags are fetched during troubleshooting.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "tag_value": {
                          "description": "Resource name for TagValue in the format ``tagValues/456``.",
                          "type": "string"
                        },
                        "namespaced_tag_value": {
                          "description": "The namespaced name of the TagValue. Can be in the form ``{organization_id}/{tag_key_short_name}/{tag_value_short_name}`` or ``{project_id}/{tag_key_short_name}/{tag_value_short_name}`` or ``{project_number}/{tag_key_short_name}/{tag_value_short_name}``.",
                          "type": "string"
                        },
                        "tag_key": {
                          "description": "The name of the TagKey, in the format ``tagKeys/{id}``, such as ``tagKeys/123``.",
                          "type": "string"
                        },
                        "namespaced_tag_key": {
                          "description": "The namespaced name of the TagKey. Can be in the form ``{organization_id}/{tag_key_short_name}`` or ``{project_id}/{tag_key_short_name}`` or ``{project_number}/{tag_key_short_name}``.",
                          "type": "string"
                        },
                        "tag_key_parent_name": {
                          "description": "The parent name of the tag key. Must be in the format ``organizations/{organization_id}`` or ``projects/{project_number}``",
                          "type": "string"
                        },
                        "inherited": {
                          "description": "Indicates the inheritance status of a tag value attached to the given resource. If the tag value is inherited from one of the resource's ancestors, inherited will be true. If false, then the tag value is directly attached to the resource, inherited will be false.",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "principal",
              "full_resource_name",
              "permission"
            ]
          }
        }
      }
    }
  ]
}