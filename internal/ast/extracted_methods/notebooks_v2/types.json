{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v2\\types\\diagnostic_config.py": [
    {
      "type": "request_class",
      "name": "DiagnosticConfig",
      "docstring": "Defines flags that are used to run the diagnostic tool\n\nAttributes:\n    gcs_bucket (str):\n        Required. User Cloud Storage bucket location (REQUIRED).\n        Must be formatted with path prefix (``gs://$GCS_BUCKET``).\n\n        Permissions: User Managed Notebooks:\n\n        -  storage.buckets.writer: Must be given to the project's\n           service account attached to VM. Google Managed Notebooks:\n        -  storage.buckets.writer: Must be given to the project's\n           service account or user credentials attached to VM\n           depending on authentication mode.\n\n        Cloud Storage bucket Log file will be written to\n        ``gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz``\n    relative_path (str):\n        Optional. Defines the relative storage path in the Cloud\n        Storage bucket where the diagnostic logs will be written:\n        Default path will be the root directory of the Cloud Storage\n        bucket (``gs://$GCS_BUCKET/$DATE_$TIME.tar.gz``) Example of\n        full path where Log fi",
      "attributes": {
        "gcs_bucket": {
          "type": "str",
          "description": "Required. User Cloud Storage bucket location (REQUIRED). Must be formatted with path prefix (``gs://$GCS_BUCKET``).  Permissions: User Managed Notebooks:  -  storage.buckets.writer: Must be given to the project's service account attached to VM. Google Managed Notebooks: -  storage.buckets.writer: Must be given to the project's service account or user credentials attached to VM depending on authentication mode.  Cloud Storage bucket Log file will be written to ``gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz``"
        },
        "relative_path": {
          "type": "str",
          "description": "Optional. Defines the relative storage path in the Cloud Storage bucket where the diagnostic logs will be written: Default path will be the root directory of the Cloud Storage bucket (``gs://$GCS_BUCKET/$DATE_$TIME.tar.gz``) Example of full path where Log file will be written: ``gs://$GCS_BUCKET/$RELATIVE_PATH/``"
        },
        "enable_repair_flag": {
          "type": "bool",
          "description": "Optional. Enables flag to repair service for instance"
        },
        "enable_packet_capture_flag": {
          "type": "bool",
          "description": "Optional. Enables flag to capture packets from the instance for 30 seconds"
        },
        "enable_copy_home_files_flag": {
          "type": "bool",
          "description": "Optional. Enables flag to copy all ``/home/jupyter`` folder contents"
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v2\\types\\event.py": [
    {
      "type": "request_class",
      "name": "Event",
      "docstring": "The definition of an Event for a managed / semi-managed\nnotebook instance.\n\nAttributes:\n    report_time (google.protobuf.timestamp_pb2.Timestamp):\n        Optional. Event report time.\n    type_ (google.cloud.notebooks_v2.types.Event.EventType):\n        Optional. Event type.\n    details (MutableMapping[str, str]):\n        Optional. Event details. This field is used\n        to pass event information.",
      "attributes": {
        "report_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Optional. Event report time."
        },
        "type_": {
          "type": "google.cloud.notebooks_v2.types.Event.EventType",
          "description": "Optional. Event type."
        },
        "details": {
          "type": "MutableMapping[str, str]",
          "description": "Optional. Event details. This field is used to pass event information."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v2\\types\\gce_setup.py": [
    {
      "type": "request_class",
      "name": "NetworkInterface",
      "docstring": "The definition of a network interface resource attached to a\nVM.\n\nAttributes:\n    network (str):\n        Optional. The name of the VPC that this VM instance is in.\n        Format:\n        ``projects/{project_id}/global/networks/{network_id}``\n    subnet (str):\n        Optional. The name of the subnet that this VM instance is\n        in. Format:\n        ``projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}``\n    nic_type (google.cloud.notebooks_v2.types.NetworkInterface.NicType):\n        Optional. The type of vNIC to be used on this\n        interface. This may be gVNIC or VirtioNet.",
      "attributes": {
        "network": {
          "type": "str",
          "description": "Optional. The name of the VPC that this VM instance is in. Format: ``projects/{project_id}/global/networks/{network_id}``"
        },
        "subnet": {
          "type": "str",
          "description": "Optional. The name of the subnet that this VM instance is in. Format: ``projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}``"
        },
        "nic_type": {
          "type": "google.cloud.notebooks_v2.types.NetworkInterface.NicType",
          "description": "Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VmImage",
      "docstring": "Definition of a custom Compute Engine virtual machine image\nfor starting a notebook instance with the environment installed\ndirectly on the VM.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    project (str):\n        Required. The name of the Google Cloud project that this VM\n        image belongs to. Format: ``{project_id}``\n    name (str):\n        Optional. Use VM image name to find the\n        image.\n\n        This field is a member of `oneof`_ ``image``.\n    family (str):\n        Optional. Use this VM image family to find\n        the image; the newest image in this family will\n        be used.\n\n        This field is a member of `oneof`_ ``image``.",
      "attributes": {
        "project": {
          "type": "str",
          "description": "Required. The name of the Google Cloud project that this VM image belongs to. Format: ``{project_id}``"
        },
        "name": {
          "type": "str",
          "description": "Optional. Use VM image name to find the image.  This field is a member of `oneof`_ ``image``."
        },
        "family": {
          "type": "str",
          "description": "Optional. Use this VM image family to find the image; the newest image in this family will be used.  This field is a member of `oneof`_ ``image``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ContainerImage",
      "docstring": "Definition of a container image for starting a notebook\ninstance with the environment installed in a container.\n\nAttributes:\n    repository (str):\n        Required. The path to the container image repository. For\n        example: ``gcr.io/{project_id}/{image_name}``\n    tag (str):\n        Optional. The tag of the container image. If\n        not specified, this defaults to the latest tag.",
      "attributes": {
        "repository": {
          "type": "str",
          "description": "Required. The path to the container image repository. For example: ``gcr.io/{project_id}/{image_name}``"
        },
        "tag": {
          "type": "str",
          "description": "Optional. The tag of the container image. If not specified, this defaults to the latest tag."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AcceleratorConfig",
      "docstring": "An accelerator configuration for a VM instance Definition of a\nhardware accelerator. Note that there is no check on ``type`` and\n``core_count`` combinations. TPUs are not supported. See `GPUs on\nCompute\nEngine <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__ to\nfind a valid combination.\n\nAttributes:\n    type_ (google.cloud.notebooks_v2.types.AcceleratorConfig.AcceleratorType):\n        Optional. Type of this accelerator.\n    core_count (int):\n        Optional. Count of cores of this accelerator.",
      "attributes": {
        "type_": {
          "type": "google.cloud.notebooks_v2.types.AcceleratorConfig.AcceleratorType",
          "description": "Optional. Type of this accelerator."
        },
        "core_count": {
          "type": "int",
          "description": "Optional. Count of cores of this accelerator."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ShieldedInstanceConfig",
      "docstring": "A set of Shielded Instance options. See `Images using supported\nShielded VM\nfeatures <https://cloud.google.com/compute/docs/instances/modifying-shielded-vm>`__.\nNot all combinations are valid.\n\nAttributes:\n    enable_secure_boot (bool):\n        Optional. Defines whether the VM instance has\n        Secure Boot enabled.\n        Secure Boot helps ensure that the system only\n        runs authentic software by verifying the digital\n        signature of all boot components, and halting\n        the boot process if signature verification\n        fails. Disabled by default.\n    enable_vtpm (bool):\n        Optional. Defines whether the VM instance has\n        the vTPM enabled. Enabled by default.\n    enable_integrity_monitoring (bool):\n        Optional. Defines whether the VM instance has\n        integrity monitoring enabled.\n        Enables monitoring and attestation of the boot\n        integrity of the VM instance. The attestation is\n        performed against the integrity policy baseline.\n        This baseline is in",
      "attributes": {
        "enable_secure_boot": {
          "type": "bool",
          "description": "Optional. Defines whether the VM instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default."
        },
        "enable_vtpm": {
          "type": "bool",
          "description": "Optional. Defines whether the VM instance has the vTPM enabled. Enabled by default."
        },
        "enable_integrity_monitoring": {
          "type": "bool",
          "description": "Optional. Defines whether the VM instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the VM instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the VM instance is created. Enabled by default."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GPUDriverConfig",
      "docstring": "A GPU driver configuration\n\nAttributes:\n    enable_gpu_driver (bool):\n        Optional. Whether the end user authorizes\n        Google Cloud to install GPU driver on this VM\n        instance. If this field is empty or set to\n        false, the GPU driver won't be installed. Only\n        applicable to instances with GPUs.\n    custom_gpu_driver_path (str):\n        Optional. Specify a custom Cloud Storage path\n        where the GPU driver is stored. If not\n        specified, we'll automatically choose from\n        official GPU drivers.",
      "attributes": {
        "enable_gpu_driver": {
          "type": "bool",
          "description": "Optional. Whether the end user authorizes Google Cloud to install GPU driver on this VM instance. If this field is empty or set to false, the GPU driver won't be installed. Only applicable to instances with GPUs."
        },
        "custom_gpu_driver_path": {
          "type": "str",
          "description": "Optional. Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DataDisk",
      "docstring": "An instance-attached disk resource.\n\nAttributes:\n    disk_size_gb (int):\n        Optional. The size of the disk in GB attached\n        to this VM instance, up to a maximum of 64000 GB\n        (64 TB). If not specified, this defaults to 100.\n    disk_type (google.cloud.notebooks_v2.types.DiskType):\n        Optional. Input only. Indicates the type of\n        the disk.\n    disk_encryption (google.cloud.notebooks_v2.types.DiskEncryption):\n        Optional. Input only. Disk encryption method\n        used on the boot and data disks, defaults to\n        GMEK.\n    kms_key (str):\n        Optional. Input only. The KMS key used to encrypt the disks,\n        only applicable if disk_encryption is CMEK. Format:\n        ``projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}``\n\n        Learn more about using your own encryption keys.",
      "attributes": {
        "disk_size_gb": {
          "type": "int",
          "description": "Optional. The size of the disk in GB attached to this VM instance, up to a maximum of 64000 GB (64 TB). If not specified, this defaults to 100."
        },
        "disk_type": {
          "type": "google.cloud.notebooks_v2.types.DiskType",
          "description": "Optional. Input only. Indicates the type of the disk."
        },
        "disk_encryption": {
          "type": "google.cloud.notebooks_v2.types.DiskEncryption",
          "description": "Optional. Input only. Disk encryption method used on the boot and data disks, defaults to GMEK."
        },
        "kms_key": {
          "type": "str",
          "description": "Optional. Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption is CMEK. Format: ``projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}``  Learn more about using your own encryption keys."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BootDisk",
      "docstring": "The definition of a boot disk.\n\nAttributes:\n    disk_size_gb (int):\n        Optional. The size of the boot disk in GB\n        attached to this instance, up to a maximum of\n        64000 GB (64 TB). If not specified, this\n        defaults to the recommended value of 150GB.\n    disk_type (google.cloud.notebooks_v2.types.DiskType):\n        Optional. Indicates the type of the disk.\n    disk_encryption (google.cloud.notebooks_v2.types.DiskEncryption):\n        Optional. Input only. Disk encryption method\n        used on the boot and data disks, defaults to\n        GMEK.\n    kms_key (str):\n        Optional. Input only. The KMS key used to encrypt the disks,\n        only applicable if disk_encryption is CMEK. Format:\n        ``projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}``\n\n        Learn more about using your own encryption keys.",
      "attributes": {
        "disk_size_gb": {
          "type": "int",
          "description": "Optional. The size of the boot disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). If not specified, this defaults to the recommended value of 150GB."
        },
        "disk_type": {
          "type": "google.cloud.notebooks_v2.types.DiskType",
          "description": "Optional. Indicates the type of the disk."
        },
        "disk_encryption": {
          "type": "google.cloud.notebooks_v2.types.DiskEncryption",
          "description": "Optional. Input only. Disk encryption method used on the boot and data disks, defaults to GMEK."
        },
        "kms_key": {
          "type": "str",
          "description": "Optional. Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption is CMEK. Format: ``projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}``  Learn more about using your own encryption keys."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ServiceAccount",
      "docstring": "A service account that acts as an identity.\n\nAttributes:\n    email (str):\n        Optional. Email address of the service\n        account.\n    scopes (MutableSequence[str]):\n        Output only. The list of scopes to be made\n        available for this service account. Set by the\n        CLH to\n        https://www.googleapis.com/auth/cloud-platform",
      "attributes": {
        "email": {
          "type": "str",
          "description": "Optional. Email address of the service account."
        },
        "scopes": {
          "type": "MutableSequence[str]",
          "description": "Output only. The list of scopes to be made available for this service account. Set by the CLH to https://www.googleapis.com/auth/cloud-platform"
        }
      }
    },
    {
      "type": "request_class",
      "name": "GceSetup",
      "docstring": "The definition of how to configure a VM instance outside of\nResources and Identity.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    machine_type (str):\n        Optional. The machine type of the VM\n        instance.\n        https://cloud.google.com/compute/docs/machine-resource\n    accelerator_configs (MutableSequence[google.cloud.notebooks_v2.types.AcceleratorConfig]):\n        Optional. The hardware accelerators used on this instance.\n        If you use accelerators, make sure that your configuration\n        has `enough vCPUs and memory to support the ``machine_type``\n        you have\n        selected <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__.\n        Currently supports only one accelerator configuration.\n    servic",
      "attributes": {
        "machine_type": {
          "type": "str",
          "description": "Optional. The machine type of the VM instance. https://cloud.google.com/compute/docs/machine-resource"
        },
        "accelerator_configs": {
          "type": "MutableSequence[google.cloud.notebooks_v2.types.AcceleratorConfig]",
          "description": "Optional. The hardware accelerators used on this instance. If you use accelerators, make sure that your configuration has `enough vCPUs and memory to support the ``machine_type`` you have selected <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__. Currently supports only one accelerator configuration."
        },
        "service_accounts": {
          "type": "MutableSequence[google.cloud.notebooks_v2.types.ServiceAccount]",
          "description": "Optional. The service account that serves as an identity for the VM instance. Currently supports only one service account."
        },
        "vm_image": {
          "type": "google.cloud.notebooks_v2.types.VmImage",
          "description": "Optional. Use a Compute Engine VM image to start the notebook instance.  This field is a member of `oneof`_ ``image``."
        },
        "container_image": {
          "type": "google.cloud.notebooks_v2.types.ContainerImage",
          "description": "Optional. Use a container image to start the notebook instance.  This field is a member of `oneof`_ ``image``."
        },
        "boot_disk": {
          "type": "google.cloud.notebooks_v2.types.BootDisk",
          "description": "Optional. The boot disk for the VM."
        },
        "data_disks": {
          "type": "MutableSequence[google.cloud.notebooks_v2.types.DataDisk]",
          "description": "Optional. Data disks attached to the VM instance. Currently supports only one data disk."
        },
        "shielded_instance_config": {
          "type": "google.cloud.notebooks_v2.types.ShieldedInstanceConfig",
          "description": "Optional. Shielded VM configuration. `Images using supported Shielded VM features <https://cloud.google.com/compute/docs/instances/modifying-shielded-vm>`__."
        },
        "network_interfaces": {
          "type": "MutableSequence[google.cloud.notebooks_v2.types.NetworkInterface]",
          "description": "Optional. The network interfaces for the VM. Supports only one interface."
        },
        "disable_public_ip": {
          "type": "bool",
          "description": "Optional. If true, no external IP will be assigned to this VM instance."
        },
        "tags": {
          "type": "MutableSequence[str]",
          "description": "Optional. The Compute Engine tags to add to runtime (see `Tagging instances <https://cloud.google.com/compute/docs/label-or-tag-resources#tags>`__)."
        },
        "metadata": {
          "type": "MutableMapping[str, str]",
          "description": "Optional. Custom metadata to apply to this instance."
        },
        "enable_ip_forwarding": {
          "type": "bool",
          "description": "Optional. Flag to enable ip forwarding or not, default false/off. https://cloud.google.com/vpc/docs/using-routes#canipforward"
        },
        "gpu_driver_config": {
          "type": "google.cloud.notebooks_v2.types.GPUDriverConfig",
          "description": "Optional. Configuration for GPU drivers."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v2\\types\\instance.py": [
    {
      "type": "request_class",
      "name": "UpgradeHistoryEntry",
      "docstring": "The entry of VM image upgrade history.\n\nAttributes:\n    snapshot (str):\n        Optional. The snapshot of the boot disk of\n        this notebook instance before upgrade.\n    vm_image (str):\n        Optional. The VM image before this instance\n        upgrade.\n    container_image (str):\n        Optional. The container image before this\n        instance upgrade.\n    framework (str):\n        Optional. The framework of this notebook\n        instance.\n    version (str):\n        Optional. The version of the notebook\n        instance before this upgrade.\n    state (google.cloud.notebooks_v2.types.UpgradeHistoryEntry.State):\n        Output only. The state of this instance\n        upgrade history entry.\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Immutable. The time that this instance\n        upgrade history entry is created.\n    action (google.cloud.notebooks_v2.types.UpgradeHistoryEntry.Action):\n        Optional. Action. Rolloback or Upgrade.\n    target_version (str):\n        Optional. Target V",
      "attributes": {
        "snapshot": {
          "type": "str",
          "description": "Optional. The snapshot of the boot disk of this notebook instance before upgrade."
        },
        "vm_image": {
          "type": "str",
          "description": "Optional. The VM image before this instance upgrade."
        },
        "container_image": {
          "type": "str",
          "description": "Optional. The container image before this instance upgrade."
        },
        "framework": {
          "type": "str",
          "description": "Optional. The framework of this notebook instance."
        },
        "version": {
          "type": "str",
          "description": "Optional. The version of the notebook instance before this upgrade."
        },
        "state": {
          "type": "google.cloud.notebooks_v2.types.UpgradeHistoryEntry.State",
          "description": "Output only. The state of this instance upgrade history entry."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Immutable. The time that this instance upgrade history entry is created."
        },
        "action": {
          "type": "google.cloud.notebooks_v2.types.UpgradeHistoryEntry.Action",
          "description": "Optional. Action. Rolloback or Upgrade."
        },
        "target_version": {
          "type": "str",
          "description": "Optional. Target VM Version, like m63."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Instance",
      "docstring": "The definition of a notebook instance.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Output only. The name of this notebook instance. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    gce_setup (google.cloud.notebooks_v2.types.GceSetup):\n        Optional. Compute Engine setup for the\n        notebook. Uses notebook-defined fields.\n\n        This field is a member of `oneof`_ ``infrastructure``.\n    proxy_uri (str):\n        Output only. The proxy endpoint that is used\n        to access the Jupyter notebook.\n    instance_owners (MutableSequence[str]):\n        Optional. Input only. The owner of this instance after\n        creation. Format: ``alias@example.com``\n\n        Currently supports one owner only. If not specified, all of\n        the service account users of your VM instance's service\n        account can use the instance.\n    creator (str):\n        Output only. Email a",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. The name of this notebook instance. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "gce_setup": {
          "type": "google.cloud.notebooks_v2.types.GceSetup",
          "description": "Optional. Compute Engine setup for the notebook. Uses notebook-defined fields.  This field is a member of `oneof`_ ``infrastructure``."
        },
        "proxy_uri": {
          "type": "str",
          "description": "Output only. The proxy endpoint that is used to access the Jupyter notebook."
        },
        "instance_owners": {
          "type": "MutableSequence[str]",
          "description": "Optional. Input only. The owner of this instance after creation. Format: ``alias@example.com``  Currently supports one owner only. If not specified, all of the service account users of your VM instance's service account can use the instance."
        },
        "creator": {
          "type": "str",
          "description": "Output only. Email address of entity that sent original CreateInstance request."
        },
        "state": {
          "type": "google.cloud.notebooks_v2.types.State",
          "description": "Output only. The state of this instance."
        },
        "upgrade_history": {
          "type": "MutableSequence[google.cloud.notebooks_v2.types.UpgradeHistoryEntry]",
          "description": "Output only. The upgrade history of this instance."
        },
        "id": {
          "type": "str",
          "description": "Output only. Unique ID of the resource."
        },
        "health_state": {
          "type": "google.cloud.notebooks_v2.types.HealthState",
          "description": "Output only. Instance health_state."
        },
        "health_info": {
          "type": "MutableMapping[str, str]",
          "description": "Output only. Additional information about instance health. Example:  ::  healthInfo\": { \"docker_proxy_agent_status\": \"1\", \"docker_status\": \"1\", \"jupyterlab_api_status\": \"-1\", \"jupyterlab_status\": \"-1\", \"updated\": \"2020-10-18 09:40:03.573409\" }"
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Instance creation time."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Instance update time."
        },
        "disable_proxy_access": {
          "type": "bool",
          "description": "Optional. If true, the notebook instance will not register with the proxy."
        },
        "labels": {
          "type": "MutableMapping[str, str]",
          "description": "Optional. Labels to apply to this instance. These can be later modified by the UpdateInstance method."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v2\\types\\service.py": [
    {
      "type": "request_class",
      "name": "OperationMetadata",
      "docstring": "Represents the metadata of the long-running operation.\n\nAttributes:\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time the operation was created.\n    end_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time the operation finished running.\n    target (str):\n        Server-defined resource path for the target\n        of the operation.\n    verb (str):\n        Name of the verb executed by the operation.\n    status_message (str):\n        Human-readable status of the operation, if\n        any.\n    requested_cancellation (bool):\n        Identifies whether the user has requested cancellation of\n        the operation. Operations that have successfully been\n        cancelled have [Operation.error][] value with a\n        [google.rpc.Status.code][google.rpc.Status.code] of 1,\n        corresponding to ``Code.CANCELLED``.\n    api_version (str):\n        API version used to start the operation.\n    endpoint (str):\n        API endpoint name of this operation.",
      "attributes": {
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The time the operation was created."
        },
        "end_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The time the operation finished running."
        },
        "target": {
          "type": "str",
          "description": "Server-defined resource path for the target of the operation."
        },
        "verb": {
          "type": "str",
          "description": "Name of the verb executed by the operation."
        },
        "status_message": {
          "type": "str",
          "description": "Human-readable status of the operation, if any."
        },
        "requested_cancellation": {
          "type": "bool",
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to ``Code.CANCELLED``."
        },
        "api_version": {
          "type": "str",
          "description": "API version used to start the operation."
        },
        "endpoint": {
          "type": "str",
          "description": "API endpoint name of this operation."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListInstancesRequest",
      "docstring": "Request for listing notebook instances.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Optional. Maximum return size of the list\n        call.\n    page_token (str):\n        Optional. A previous returned page token that\n        can be used to continue listing from the last\n        result.\n    order_by (str):\n        Optional. Sort results. Supported values are\n        \"name\", \"name desc\" or \"\" (unsorted).\n    filter (str):\n        Optional. List filter.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``"
        },
        "page_size": {
          "type": "int",
          "description": "Optional. Maximum return size of the list call."
        },
        "page_token": {
          "type": "str",
          "description": "Optional. A previous returned page token that can be used to continue listing from the last result."
        },
        "order_by": {
          "type": "str",
          "description": "Optional. Sort results. Supported values are \"name\", \"name desc\" or \"\" (unsorted)."
        },
        "filter": {
          "type": "str",
          "description": "Optional. List filter."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListInstancesResponse",
      "docstring": "Response for listing notebook instances.\n\nAttributes:\n    instances (MutableSequence[google.cloud.notebooks_v2.types.Instance]):\n        A list of returned instances.\n    next_page_token (str):\n        Page token that can be used to continue\n        listing from the last result in the next list\n        call.\n    unreachable (MutableSequence[str]):\n        Locations that could not be reached. For example,\n        ['us-west1-a', 'us-central1-b']. A ListInstancesResponse\n        will only contain either instances or unreachables,",
      "attributes": {
        "instances": {
          "type": "MutableSequence[google.cloud.notebooks_v2.types.Instance]",
          "description": "A list of returned instances."
        },
        "next_page_token": {
          "type": "str",
          "description": "Page token that can be used to continue listing from the last result in the next list call."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Locations that could not be reached. For example, ['us-west1-a', 'us-central1-b']. A ListInstancesResponse will only contain either instances or unreachables,"
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetInstanceRequest",
      "docstring": "Request for getting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateInstanceRequest",
      "docstring": "Request for creating a notebook instance.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    instance_id (str):\n        Required. User-defined unique ID of this\n        instance.\n    instance (google.cloud.notebooks_v2.types.Instance):\n        Required. The instance to be created.\n    request_id (str):\n        Optional. Idempotent request UUID.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``"
        },
        "instance_id": {
          "type": "str",
          "description": "Required. User-defined unique ID of this instance."
        },
        "instance": {
          "type": "google.cloud.notebooks_v2.types.Instance",
          "description": "Required. The instance to be created."
        },
        "request_id": {
          "type": "str",
          "description": "Optional. Idempotent request UUID."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateInstanceRequest",
      "docstring": "Request for updating a notebook instance.\n\nAttributes:\n    instance (google.cloud.notebooks_v2.types.Instance):\n        Required. A representation of an instance.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Mask used to update an instance\n    request_id (str):\n        Optional. Idempotent request UUID.",
      "attributes": {
        "instance": {
          "type": "google.cloud.notebooks_v2.types.Instance",
          "description": "Required. A representation of an instance."
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "Required. Mask used to update an instance"
        },
        "request_id": {
          "type": "str",
          "description": "Optional. Idempotent request UUID."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteInstanceRequest",
      "docstring": "Request for deleting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    request_id (str):\n        Optional. Idempotent request UUID.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "request_id": {
          "type": "str",
          "description": "Optional. Idempotent request UUID."
        }
      }
    },
    {
      "type": "request_class",
      "name": "StartInstanceRequest",
      "docstring": "Request for starting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "StopInstanceRequest",
      "docstring": "Request for stopping a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ResetInstanceRequest",
      "docstring": "Request for resetting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CheckInstanceUpgradabilityRequest",
      "docstring": "Request for checking if a notebook instance is upgradeable.\n\nAttributes:\n    notebook_instance (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "notebook_instance": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CheckInstanceUpgradabilityResponse",
      "docstring": "Response for checking if a notebook instance is upgradeable.\n\nAttributes:\n    upgradeable (bool):\n        If an instance is upgradeable.\n    upgrade_version (str):\n        The version this instance will be upgraded to\n        if calling the upgrade endpoint. This field will\n        only be populated if field upgradeable is true.\n    upgrade_info (str):\n        Additional information about upgrade.\n    upgrade_image (str):\n        The new image self link this instance will be\n        upgraded to if calling the upgrade endpoint.\n        This field will only be populated if field\n        upgradeable is true.",
      "attributes": {
        "upgradeable": {
          "type": "bool",
          "description": "If an instance is upgradeable."
        },
        "upgrade_version": {
          "type": "str",
          "description": "The version this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true."
        },
        "upgrade_info": {
          "type": "str",
          "description": "Additional information about upgrade."
        },
        "upgrade_image": {
          "type": "str",
          "description": "The new image self link this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpgradeInstanceRequest",
      "docstring": "Request for upgrading a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "RollbackInstanceRequest",
      "docstring": "Request for rollbacking a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    target_snapshot (str):\n        Required. The snapshot for rollback.\n        Example:\n        \"projects/test-project/global/snapshots/krwlzipynril\".\n    revision_id (str):\n        Required. Output only. Revision Id",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "target_snapshot": {
          "type": "str",
          "description": "Required. The snapshot for rollback. Example: \"projects/test-project/global/snapshots/krwlzipynril\"."
        },
        "revision_id": {
          "type": "str",
          "description": "Required. Output only. Revision Id"
        }
      }
    },
    {
      "type": "request_class",
      "name": "DiagnoseInstanceRequest",
      "docstring": "Request for creating a notebook instance diagnostic file.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    diagnostic_config (google.cloud.notebooks_v2.types.DiagnosticConfig):\n        Required. Defines flags that are used to run\n        the diagnostic tool\n    timeout_minutes (int):\n        Optional. Maxmium amount of time in minutes\n        before the operation times out.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "diagnostic_config": {
          "type": "google.cloud.notebooks_v2.types.DiagnosticConfig",
          "description": "Required. Defines flags that are used to run the diagnostic tool"
        },
        "timeout_minutes": {
          "type": "int",
          "description": "Optional. Maxmium amount of time in minutes before the operation times out."
        }
      }
    }
  ]
}