{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-notebooks/google/cloud/notebooks_v2/types/service.py": [
    {
      "type": "function",
      "name": "ListInstancesRequest",
      "description": "Request for listing notebook instances.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Optional. Maximum return size of the list\n        call.\n    page_token (str):\n        Optional. A previous returned page token that\n        can be used to continue listing from the last\n        result.\n    order_by (str):\n        Optional. Sort results. Supported values are\n        \"name\", \"name desc\" or \"\" (unsorted).\n    filter (str):\n        Optional. List filter.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. Maximum return size of the list call.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A previous returned page token that can be used to continue listing from the last result.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. Sort results. Supported values are \"name\", \"name desc\" or \"\" (unsorted).",
            "type": "string"
          },
          "filter": {
            "description": "Optional. List filter.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetInstanceRequest",
      "description": "Request for getting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateInstanceRequest",
      "description": "Request for creating a notebook instance.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    instance_id (str):\n        Required. User-defined unique ID of this\n        instance.\n    instance (google.cloud.notebooks_v2.types.Instance):\n        Required. The instance to be created.\n    request_id (str):\n        Optional. Idempotent request UUID.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "instance_id": {
            "description": "Required. User-defined unique ID of this instance.",
            "type": "string"
          },
          "instance": {
            "description": "Required. The instance to be created.",
            "reference": "google.cloud.notebooks_v2.types.Instance",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. A unique identifier for an instance. The name should be of the format: ``projects/{project_number}/locations/{location_id}/instances/{instance_id}``  ``project_number``: Maps to a unique int64 id assigned to each project.  ``location_id``: Refers to the region where the instance will be deployed. Since Secure Source Manager is a regional service, it must be one of the valid GCP regions.  ``instance_id``: User provided name for the instance, must be unique for a project_number and location_id combination.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. Create timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. Update timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Labels as key value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "private_config": {
                  "description": "Optional. Private settings for private instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.PrivateConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "is_private": {
                        "description": "Required. Immutable. Indicate if it's private instance.",
                        "type": "boolean"
                      },
                      "ca_pool": {
                        "description": "Required. Immutable. CA pool resource, resource must in the format of ``projects/{project}/locations/{location}/caPools/{ca_pool}``.",
                        "type": "string"
                      },
                      "http_service_attachment": {
                        "description": "Output only. Service Attachment for HTTP, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string",
                        "output_only": true
                      },
                      "ssh_service_attachment": {
                        "description": "Output only. Service Attachment for SSH, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string",
                        "output_only": true
                      },
                      "psc_allowed_projects": {
                        "description": "Optional. Additional allowed projects for setting up PSC connections. Instance host project is automatically allowed and does not need to be included in this list.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "is_private",
                      "ca_pool"
                    ]
                  }
                },
                "state": {
                  "description": "Output only. Current state of the instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.State",
                  "output_only": true
                },
                "state_note": {
                  "description": "Output only. An optional field providing information about the current instance state.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.StateNote",
                  "output_only": true
                },
                "kms_key": {
                  "description": "Optional. Immutable. Customer-managed encryption key name, in the format projects/\\ */locations/*/keyRings/*/cryptoKeys/*.",
                  "type": "string"
                },
                "host_config": {
                  "description": "Output only. A list of hostnames for this instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.HostConfig",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "html": {
                        "description": "Output only. HTML hostname.",
                        "type": "string",
                        "output_only": true
                      },
                      "api": {
                        "description": "Output only. API hostname. This is the hostname to use for **Host: Data Plane** endpoints.",
                        "type": "string",
                        "output_only": true
                      },
                      "git_http": {
                        "description": "Output only. Git HTTP hostname.",
                        "type": "string",
                        "output_only": true
                      },
                      "git_ssh": {
                        "description": "Output only. Git SSH hostname.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. Idempotent request UUID.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "instance_id",
          "instance"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateInstanceRequest",
      "description": "Request for updating a notebook instance.\n\nAttributes:\n    instance (google.cloud.notebooks_v2.types.Instance):\n        Required. A representation of an instance.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Mask used to update an instance\n    request_id (str):\n        Optional. Idempotent request UUID.",
      "parameters": {
        "type": "object",
        "properties": {
          "instance": {
            "description": "Required. A representation of an instance.",
            "reference": "google.cloud.notebooks_v2.types.Instance",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. A unique identifier for an instance. The name should be of the format: ``projects/{project_number}/locations/{location_id}/instances/{instance_id}``  ``project_number``: Maps to a unique int64 id assigned to each project.  ``location_id``: Refers to the region where the instance will be deployed. Since Secure Source Manager is a regional service, it must be one of the valid GCP regions.  ``instance_id``: User provided name for the instance, must be unique for a project_number and location_id combination.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. Create timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. Update timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Labels as key value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "private_config": {
                  "description": "Optional. Private settings for private instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.PrivateConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "is_private": {
                        "description": "Required. Immutable. Indicate if it's private instance.",
                        "type": "boolean"
                      },
                      "ca_pool": {
                        "description": "Required. Immutable. CA pool resource, resource must in the format of ``projects/{project}/locations/{location}/caPools/{ca_pool}``.",
                        "type": "string"
                      },
                      "http_service_attachment": {
                        "description": "Output only. Service Attachment for HTTP, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string",
                        "output_only": true
                      },
                      "ssh_service_attachment": {
                        "description": "Output only. Service Attachment for SSH, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string",
                        "output_only": true
                      },
                      "psc_allowed_projects": {
                        "description": "Optional. Additional allowed projects for setting up PSC connections. Instance host project is automatically allowed and does not need to be included in this list.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "is_private",
                      "ca_pool"
                    ]
                  }
                },
                "state": {
                  "description": "Output only. Current state of the instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.State",
                  "output_only": true
                },
                "state_note": {
                  "description": "Output only. An optional field providing information about the current instance state.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.StateNote",
                  "output_only": true
                },
                "kms_key": {
                  "description": "Optional. Immutable. Customer-managed encryption key name, in the format projects/\\ */locations/*/keyRings/*/cryptoKeys/*.",
                  "type": "string"
                },
                "host_config": {
                  "description": "Output only. A list of hostnames for this instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.HostConfig",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "html": {
                        "description": "Output only. HTML hostname.",
                        "type": "string",
                        "output_only": true
                      },
                      "api": {
                        "description": "Output only. API hostname. This is the hostname to use for **Host: Data Plane** endpoints.",
                        "type": "string",
                        "output_only": true
                      },
                      "git_http": {
                        "description": "Output only. Git HTTP hostname.",
                        "type": "string",
                        "output_only": true
                      },
                      "git_ssh": {
                        "description": "Output only. Git SSH hostname.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "Required. Mask used to update an instance",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "request_id": {
            "description": "Optional. Idempotent request UUID.",
            "type": "string"
          }
        },
        "required": [
          "instance",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteInstanceRequest",
      "description": "Request for deleting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    request_id (str):\n        Optional. Idempotent request UUID.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. Idempotent request UUID.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StartInstanceRequest",
      "description": "Request for starting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StopInstanceRequest",
      "description": "Request for stopping a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ResetInstanceRequest",
      "description": "Request for resetting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CheckInstanceUpgradabilityRequest",
      "description": "Request for checking if a notebook instance is upgradeable.\n\nAttributes:\n    notebook_instance (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "notebook_instance": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "notebook_instance"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpgradeInstanceRequest",
      "description": "Request for upgrading a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "RollbackInstanceRequest",
      "description": "Request for rollbacking a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    target_snapshot (str):\n        Required. The snapshot for rollback.\n        Example:\n        \"projects/test-project/global/snapshots/krwlzipynril\".\n    revision_id (str):\n        Required. Output only. Revision Id",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "target_snapshot": {
            "description": "Required. The snapshot for rollback. Example: \"projects/test-project/global/snapshots/krwlzipynril\".",
            "type": "string"
          },
          "revision_id": {
            "description": "Required. Output only. Revision Id",
            "type": "string",
            "output_only": true
          }
        },
        "required": [
          "name",
          "target_snapshot",
          "revision_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DiagnoseInstanceRequest",
      "description": "Request for creating a notebook instance diagnostic file.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    diagnostic_config (google.cloud.notebooks_v2.types.DiagnosticConfig):\n        Required. Defines flags that are used to run\n        the diagnostic tool\n    timeout_minutes (int):\n        Optional. Maxmium amount of time in minutes\n        before the operation times out.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "diagnostic_config": {
            "description": "Required. Defines flags that are used to run the diagnostic tool",
            "reference": "google.cloud.notebooks_v2.types.DiagnosticConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "gcs_bucket": {
                  "description": "Required. User Cloud Storage bucket location (REQUIRED). Must be formatted with path prefix (``gs://$GCS_BUCKET``).  Permissions: User Managed Notebooks:  -  storage.buckets.writer: Must be given to the project's service account attached to VM. Google Managed Notebooks: -  storage.buckets.writer: Must be given to the project's service account or user credentials attached to VM depending on authentication mode.  Cloud Storage bucket Log file will be written to ``gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz``",
                  "type": "string"
                },
                "relative_path": {
                  "description": "Optional. Defines the relative storage path in the Cloud Storage bucket where the diagnostic logs will be written: Default path will be the root directory of the Cloud Storage bucket (``gs://$GCS_BUCKET/$DATE_$TIME.tar.gz``) Example of full path where Log file will be written: ``gs://$GCS_BUCKET/$RELATIVE_PATH/``",
                  "type": "string"
                },
                "enable_repair_flag": {
                  "description": "Optional. Enables flag to repair service for instance",
                  "type": "boolean"
                },
                "enable_packet_capture_flag": {
                  "description": "Optional. Enables flag to capture packets from the instance for 30 seconds",
                  "type": "boolean"
                },
                "enable_copy_home_files_flag": {
                  "description": "Optional. Enables flag to copy all ``/home/jupyter`` folder contents",
                  "type": "boolean"
                }
              },
              "required": [
                "gcs_bucket"
              ]
            }
          },
          "timeout_minutes": {
            "description": "Optional. Maxmium amount of time in minutes before the operation times out.",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "diagnostic_config"
        ]
      }
    }
  ]
}