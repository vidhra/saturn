{
  "NotebookService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_instances",
          "description": "Lists instances in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_list_instances():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v2.ListInstancesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_instances(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.notebooks_v2.services.notebook_service.pagers.ListInstancesAsyncPager: Response for listing notebook instances. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListInstancesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_instance",
          "description": "Gets details of a single Instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_get_instance():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v2.GetInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_instance(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.notebooks_v2.types.GetInstanceRequest, dict]]):\n        Th",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.notebooks_v2.types.Instance: The definition of a notebook instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_instance",
          "description": "Creates a new Instance in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_create_instance():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        instance = notebooks_v2.Instance()\n        instance.gce_setup.vm_image.name = \"name_value\"\n        instance.gce_setup.vm_image.project = \"project_value\"\n\n        request = notebooks_v2.CreateInstanceRequest(\n            parent=\"parent_value\",\n            instance_id=\"instance_id_value\",\n            instance=in",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "instance": {
                "type": "google.cloud.notebooks_v2.types.Instance",
                "description": "Required. The instance to be created. This corresponds to the ``instance`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "instance_id": {
                "type": "str",
                "description": "Required. User-defined unique ID of this instance.  This corresponds to the ``instance_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.notebooks_v2.types.Instance` The definition of a notebook instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "instance",
              "instance_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_instance",
          "description": "UpdateInstance updates an Instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_update_instance():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        instance = notebooks_v2.Instance()\n        instance.gce_setup.vm_image.name = \"name_value\"\n        instance.gce_setup.vm_image.project = \"project_value\"\n\n        request = notebooks_v2.UpdateInstanceRequest(\n            instance=instance,\n        )\n\n        # Make the request\n        operation = client.update_instance(request=req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "instance": {
                "type": "google.cloud.notebooks_v2.types.Instance",
                "description": "Required. A representation of an instance.  This corresponds to the ``instance`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Mask used to update an instance  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.notebooks_v2.types.Instance` The definition of a notebook instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "instance",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_instance",
          "description": "Deletes a single Instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_delete_instance():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v2.DeleteInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_instance",
          "description": "Starts a notebook instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_start_instance():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v2.StartInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.start_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.StartInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "stop_instance",
          "description": "Stops a notebook instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_stop_instance():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v2.StopInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.stop_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.StopInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reset_instance",
          "description": "Resets a notebook instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_reset_instance():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v2.ResetInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.reset_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ResetInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "check_instance_upgradability",
          "description": "Checks whether a notebook instance is upgradable.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_check_instance_upgradability():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v2.CheckInstanceUpgradabilityRequest(\n            notebook_instance=\"notebook_instance_value\",\n        )\n\n        # Make the request\n        response = await client.check_instance_upgradability(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CheckInstanceUpgradabilityRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "upgrade_instance",
          "description": "Upgrades a notebook instance to the latest version.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_upgrade_instance():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v2.UpgradeInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.upgrade_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpgradeInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "rollback_instance",
          "description": "Rollbacks a notebook instance to the previous\nversion.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_rollback_instance():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v2.RollbackInstanceRequest(\n            name=\"name_value\",\n            target_snapshot=\"target_snapshot_value\",\n            revision_id=\"revision_id_value\",\n        )\n\n        # Make the request\n        operation = client.rollback_instance(request=request)\n\n        print(\"Waiting for opera",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.RollbackInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "diagnose_instance",
          "description": "Creates a Diagnostic File and runs Diagnostic Tool\ngiven an Instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v2\n\n    async def sample_diagnose_instance():\n        # Create a client\n        client = notebooks_v2.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        diagnostic_config = notebooks_v2.DiagnosticConfig()\n        diagnostic_config.gcs_bucket = \"gcs_bucket_value\"\n\n        request = notebooks_v2.DiagnoseInstanceRequest(\n            name=\"name_value\",\n            diagnostic_config=diagnostic_config,\n        )\n\n        # Make the request\n        op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "diagnostic_config": {
                "type": "google.cloud.notebooks_v2.types.DiagnosticConfig",
                "description": "Required. Defines flags that are used to run the diagnostic tool  This corresponds to the ``diagnostic_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.notebooks_v2.types.Instance` The definition of a notebook instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "diagnostic_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DiagnoseInstanceRequest"
          ]
        }
      }
    ]
  }
}