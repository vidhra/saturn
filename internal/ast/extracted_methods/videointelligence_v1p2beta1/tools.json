{
  "VideoIntelligenceService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "annotate_video",
          "description": "Performs asynchronous video annotation. Progress and results can\nbe retrieved through the ``google.longrunning.Operations``\ninterface. ``Operation.metadata`` contains\n``AnnotateVideoProgress`` (progress). ``Operation.response``\ncontains ``AnnotateVideoResponse`` (results).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import videointelligence_v1p2beta1\n\n    async def sample_annotate_video():\n        # Create a client\n        client = videointelligence_v1p2beta1.VideoIntelligenceServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = videointelligence_v1p2beta1.AnnotateVideoRequ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "input_uri": {
                "type": "str",
                "description": "Input video location. Currently, only `Google Cloud Storage <https://cloud.google.com/storage/>`__ URIs are supported, which must be specified in the following format: ``gs://bucket-id/object-id`` (other URI formats return [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see `Request URIs <https://cloud.google.com/storage/docs/request-endpoints>`__. A video URI may include wildcards in ``object-id``, and thus identify multiple videos. Supported wildcards: '*' to match 0 or more characters; '?' to match 1 character. If unset, the input video should be embedded in the request as ``input_content``. If set, ``input_content`` should be unset.  This corresponds to the ``input_uri`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "features": {
                "type": "MutableSequence[google.cloud.videointelligence_v1p2beta1.types.Feature]",
                "description": "Required. Requested video annotation features.  This corresponds to the ``features`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.videointelligence_v1p2beta1.types.AnnotateVideoResponse` Video annotation response. Included in the response field of the Operation returned by the GetOperation call of the google::longrunning::Operations service."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "input_uri",
              "features",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      }
    ]
  }
}