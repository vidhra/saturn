{
  "EdgeNetwork": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "initialize_zone",
          "description": "InitializeZone will initialize resources for a zone\nin a project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_initialize_zone():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.InitializeZoneRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.initialize_zone(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgenetwork_v1.t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the zone resource.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.types.InitializeZoneResponse: The response of initializing a zone"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.types.InitializeZoneResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_zones",
          "description": "Deprecated: not implemented.\nLists Zones in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_list_zones():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.ListZonesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_zones(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Opt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListZonesRequest  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.services.edge_network.pagers.ListZonesAsyncPager: Deprecated: not implemented. Message for response to listing Zones  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.services.edge_network.pagers.ListZonesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_zone",
          "description": "Deprecated: not implemented.\nGets details of a single Zone.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_get_zone():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.GetZoneRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_zone(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgenetwork_v1.types.GetZoneRequest, dict]]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.types.Zone: A Google Edge Cloud zone."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.types.Zone"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_networks",
          "description": "Lists Networks in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_list_networks():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.ListNetworksRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_networks(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[googl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListNetworksRequest  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.services.edge_network.pagers.ListNetworksAsyncPager: Message for response to listing Networks Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.services.edge_network.pagers.ListNetworksAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_network",
          "description": "Gets details of a single Network.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_get_network():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.GetNetworkRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_network(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgenetwork_v1.types.GetNetworkRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.types.Network: Message describing Network object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.types.Network"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "diagnose_network",
          "description": "Get the diagnostics of a single network resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_diagnose_network():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.DiagnoseNetworkRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.diagnose_network(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgenetwork_v1.types.Diagnose",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the network resource.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.types.DiagnoseNetworkResponse: DiagnoseNetworkResponse contains the current status for a specific network."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.types.DiagnoseNetworkResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_network",
          "description": "Creates a new Network in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_create_network():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        network = edgenetwork_v1.Network()\n        network.name = \"name_value\"\n\n        request = edgenetwork_v1.CreateNetworkRequest(\n            parent=\"parent_value\",\n            network_id=\"network_id_value\",\n            network=network,\n        )\n\n        # Make the request\n        operation = client.create_network",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "network": {
                "type": "google.cloud.edgenetwork_v1.types.Network",
                "description": "Required. The resource being created This corresponds to the ``network`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "network_id": {
                "type": "str",
                "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and network_id from the method_signature of Create RPC  This corresponds to the ``network_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgenetwork_v1.types.Network` Message describing Network object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "network",
              "network_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_network",
          "description": "Deletes a single Network.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_delete_network():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.DeleteNetworkRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_network(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_subnets",
          "description": "Lists Subnets in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_list_subnets():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.ListSubnetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_subnets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListSubnetsRequest  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.services.edge_network.pagers.ListSubnetsAsyncPager: Message for response to listing Subnets Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.services.edge_network.pagers.ListSubnetsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_subnet",
          "description": "Gets details of a single Subnet.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_get_subnet():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.GetSubnetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_subnet(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgenetwork_v1.types.GetSubnetRequest, dict]]):\n        The requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.types.Subnet: Message describing Subnet object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.types.Subnet"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_subnet",
          "description": "Creates a new Subnet in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_create_subnet():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        subnet = edgenetwork_v1.Subnet()\n        subnet.name = \"name_value\"\n        subnet.network = \"network_value\"\n\n        request = edgenetwork_v1.CreateSubnetRequest(\n            parent=\"parent_value\",\n            subnet_id=\"subnet_id_value\",\n            subnet=subnet,\n        )\n\n        # Make the request\n        op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "subnet": {
                "type": "google.cloud.edgenetwork_v1.types.Subnet",
                "description": "Required. The resource being created This corresponds to the ``subnet`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "subnet_id": {
                "type": "str",
                "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and subnet_id from the method_signature of Create RPC  This corresponds to the ``subnet_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgenetwork_v1.types.Subnet` Message describing Subnet object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "subnet",
              "subnet_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_subnet",
          "description": "Updates the parameters of a single Subnet.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_update_subnet():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        subnet = edgenetwork_v1.Subnet()\n        subnet.name = \"name_value\"\n        subnet.network = \"network_value\"\n\n        request = edgenetwork_v1.UpdateSubnetRequest(\n            subnet=subnet,\n        )\n\n        # Make the request\n        operation = client.update_subnet(request=request)\n\n        print(\"Waiting for operation t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "subnet": {
                "type": "google.cloud.edgenetwork_v1.types.Subnet",
                "description": "Required. The resource being updated This corresponds to the ``subnet`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the Subnet resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgenetwork_v1.types.Subnet` Message describing Subnet object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "subnet",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_subnet",
          "description": "Deletes a single Subnet.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_delete_subnet():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.DeleteSubnetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_subnet(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_interconnects",
          "description": "Lists Interconnects in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_list_interconnects():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.ListInterconnectsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_interconnects(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListInterconnectsRequest  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.services.edge_network.pagers.ListInterconnectsAsyncPager: Message for response to listing Interconnects Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.services.edge_network.pagers.ListInterconnectsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_interconnect",
          "description": "Gets details of a single Interconnect.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_get_interconnect():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.GetInterconnectRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_interconnect(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgenetwork_v1.types.GetInterconnectRequ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.types.Interconnect: Message describing Interconnect object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.types.Interconnect"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "diagnose_interconnect",
          "description": "Get the diagnostics of a single interconnect\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_diagnose_interconnect():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.DiagnoseInterconnectRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.diagnose_interconnect(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgenetwo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the interconnect resource.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.types.DiagnoseInterconnectResponse: DiagnoseInterconnectResponse contains the current diagnostics for a specific interconnect."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.types.DiagnoseInterconnectResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_interconnect_attachments",
          "description": "Lists InterconnectAttachments in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_list_interconnect_attachments():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.ListInterconnectAttachmentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_interconnect_attachments(request=request)\n\n        # Handle the response\n        async for response in page_result:\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListInterconnectAttachmentsRequest  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.services.edge_network.pagers.ListInterconnectAttachmentsAsyncPager: Message for response to listing InterconnectAttachments Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.services.edge_network.pagers.ListInterconnectAttachmentsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_interconnect_attachment",
          "description": "Gets details of a single InterconnectAttachment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_get_interconnect_attachment():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.GetInterconnectAttachmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_interconnect_attachment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.clou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.types.InterconnectAttachment: Message describing InterconnectAttachment object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.types.InterconnectAttachment"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_interconnect_attachment",
          "description": "Creates a new InterconnectAttachment in a given\nproject and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_create_interconnect_attachment():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        interconnect_attachment = edgenetwork_v1.InterconnectAttachment()\n        interconnect_attachment.name = \"name_value\"\n        interconnect_attachment.interconnect = \"interconnect_value\"\n        interconnect_attachment.vlan_id = 733\n\n        request = edgenetwork_v1.CreateInterconne",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "interconnect_attachment": {
                "type": "google.cloud.edgenetwork_v1.types.InterconnectAttachment",
                "description": "Required. The resource being created This corresponds to the ``interconnect_attachment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "interconnect_attachment_id": {
                "type": "str",
                "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and interconnect_attachment_id from the method_signature of Create RPC  This corresponds to the ``interconnect_attachment_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgenetwork_v1.types.InterconnectAttachment` Message describing InterconnectAttachment object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "interconnect_attachment",
              "interconnect_attachment_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_interconnect_attachment",
          "description": "Deletes a single InterconnectAttachment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_delete_interconnect_attachment():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.DeleteInterconnectAttachmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_interconnect_attachment(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_routers",
          "description": "Lists Routers in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_list_routers():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.ListRoutersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_routers(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value for ListRoutersRequest  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.services.edge_network.pagers.ListRoutersAsyncPager: Message for response to listing Routers Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.services.edge_network.pagers.ListRoutersAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_router",
          "description": "Gets details of a single Router.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_get_router():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.GetRouterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_router(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgenetwork_v1.types.GetRouterRequest, dict]]):\n        The requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.types.Router: Message describing Router object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.types.Router"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "diagnose_router",
          "description": "Get the diagnostics of a single router resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_diagnose_router():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.DiagnoseRouterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.diagnose_router(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgenetwork_v1.types.DiagnoseRout",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the router resource.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgenetwork_v1.types.DiagnoseRouterResponse: DiagnoseRouterResponse contains the current status for a specific router."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.edgenetwork_v1.types.DiagnoseRouterResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_router",
          "description": "Creates a new Router in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_create_router():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        router = edgenetwork_v1.Router()\n        router.name = \"name_value\"\n        router.network = \"network_value\"\n\n        request = edgenetwork_v1.CreateRouterRequest(\n            parent=\"parent_value\",\n            router_id=\"router_id_value\",\n            router=router,\n        )\n\n        # Make the request\n        op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Value for parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "router": {
                "type": "google.cloud.edgenetwork_v1.types.Router",
                "description": "Required. The resource being created This corresponds to the ``router`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "router_id": {
                "type": "str",
                "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and router_id from the method_signature of Create RPC  This corresponds to the ``router_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgenetwork_v1.types.Router` Message describing Router object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "router",
              "router_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_router",
          "description": "Updates the parameters of a single Router.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_update_router():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        router = edgenetwork_v1.Router()\n        router.name = \"name_value\"\n        router.network = \"network_value\"\n\n        request = edgenetwork_v1.UpdateRouterRequest(\n            router=router,\n        )\n\n        # Make the request\n        operation = client.update_router(request=request)\n\n        print(\"Waiting for operation t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "router": {
                "type": "google.cloud.edgenetwork_v1.types.Router",
                "description": "Required. The resource being updated This corresponds to the ``router`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the Router resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgenetwork_v1.types.Router` Message describing Router object"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "router",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_router",
          "description": "Deletes a single Router.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgenetwork_v1\n\n    async def sample_delete_router():\n        # Create a client\n        client = edgenetwork_v1.EdgeNetworkAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgenetwork_v1.DeleteRouterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_router(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      }
    ]
  }
}