{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-edgenetwork\\google\\cloud\\edgenetwork_v1\\types\\service.py": [
    {
      "type": "function",
      "name": "ListZonesRequest",
      "description": "Deprecated: not implemented.\nMessage for requesting list of Zones\n\nAttributes:\n    parent (str):\n        Required. Parent value for ListZonesRequest\n    page_size (int):\n        Requested page size. Server may return fewer\n        items than requested. If unspecified, server\n        will pick an appropriate default.\n    page_token (str):\n        A token identifying a page of results the\n        server should return.\n    filter (str):\n        Filtering results\n    order_by (str):\n        Hint for how to order the results",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Parent value for ListZonesRequest",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "filter": {
            "description": "Filtering results",
            "type": "string"
          },
          "order_by": {
            "description": "Hint for how to order the results",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetZoneRequest",
      "description": "Deprecated: not implemented.\nMessage for getting a Zone\n\nAttributes:\n    name (str):\n        Required. Name of the resource",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListNetworksRequest",
      "description": "Message for requesting list of Networks\n\nAttributes:\n    parent (str):\n        Required. Parent value for\n        ListNetworksRequest\n    page_size (int):\n        Requested page size. Server may return fewer\n        items than requested. If unspecified, server\n        will pick an appropriate default.\n    page_token (str):\n        A token identifying a page of results the\n        server should return.\n    filter (str):\n        Filtering results\n    order_by (str):\n        Hint for how to order the results",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Parent value for ListNetworksRequest",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "filter": {
            "description": "Filtering results",
            "type": "string"
          },
          "order_by": {
            "description": "Hint for how to order the results",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetNetworkRequest",
      "description": "Message for getting a Network\n\nAttributes:\n    name (str):\n        Required. Name of the resource",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateNetworkRequest",
      "description": "Message for creating a Network\n\nAttributes:\n    parent (str):\n        Required. Value for parent.\n    network_id (str):\n        Required. Id of the requesting object If auto-generating Id\n        server-side, remove this field and network_id from the\n        method_signature of Create RPC\n    network (google.cloud.edgenetwork_v1.types.Network):\n        Required. The resource being created\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes since the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID, the server can check if original operation\n        with the same request ID was received, and if\n ",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Value for parent.",
            "type": "string"
          },
          "network_id": {
            "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and network_id from the method_signature of Create RPC",
            "type": "string"
          },
          "network": {
            "description": "Required. The resource being created",
            "type": "object",
            "properties": {
              "ingress_bps": {
                "type": "object",
                "properties": {
                  "full_frame_count": {
                    "description": "Counts of the full frame.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "entity": {
                          "type": "object",
                          "properties": {
                            "label_id": {
                              "description": "Label id.",
                              "type": "integer"
                            },
                            "label_string": {
                              "description": "Human readable string of the label.",
                              "type": "string"
                            }
                          }
                        },
                        "count": {
                          "description": "Count of the object.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "crossing_line_counts": {
                    "description": "Crossing line counts.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "annotation": {
                          "type": "object",
                          "properties": {
                            "active_zone": {
                              "type": "object",
                              "properties": {
                                "normalized_vertices": {
                                  "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "description": "X coordinate.",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "Y coordinate.",
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "crossing_line": {
                              "type": "object",
                              "properties": {
                                "normalized_vertices": {
                                  "description": "A sequence of vertices connected by straight lines.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "description": "X coordinate.",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "Y coordinate.",
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "id": {
                              "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                              "type": "string"
                            },
                            "display_name": {
                              "description": "User-friendly name for the annotation.",
                              "type": "string"
                            },
                            "source_stream": {
                              "description": "The Vision AI stream resource name.",
                              "type": "string"
                            },
                            "type_": {
                              "type": "enum",
                              "name": "StreamAnnotationType",
                              "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                              "values": {
                                "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                  "value": 0
                                },
                                "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                  "value": 1
                                },
                                "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                  "value": 2
                                }
                              }
                            }
                          }
                        },
                        "positive_direction_counts": {
                          "description": "The direction that follows the right hand rule.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entity": {
                                "type": "object",
                                "properties": {
                                  "label_id": {
                                    "description": "Label id.",
                                    "type": "integer"
                                  },
                                  "label_string": {
                                    "description": "Human readable string of the label.",
                                    "type": "string"
                                  }
                                }
                              },
                              "count": {
                                "description": "Count of the object.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "negative_direction_counts": {
                          "description": "The direction that is opposite to the right hand rule.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entity": {
                                "type": "object",
                                "properties": {
                                  "label_id": {
                                    "description": "Label id.",
                                    "type": "integer"
                                  },
                                  "label_string": {
                                    "description": "Human readable string of the label.",
                                    "type": "string"
                                  }
                                }
                              },
                              "count": {
                                "description": "Count of the object.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "accumulated_positive_direction_counts": {
                          "description": "The accumulated positive count.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "start_time": {
                                "description": "The start time of the accumulated count.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "object_count": {
                                "type": "object",
                                "properties": {
                                  "entity": {
                                    "type": "object",
                                    "properties": {
                                      "label_id": {
                                        "description": "Label id.",
                                        "type": "integer"
                                      },
                                      "label_string": {
                                        "description": "Human readable string of the label.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "count": {
                                    "description": "Count of the object.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "accumulated_negative_direction_counts": {
                          "description": "The accumulated negative count.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "start_time": {
                                "description": "The start time of the accumulated count.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "object_count": {
                                "type": "object",
                                "properties": {
                                  "entity": {
                                    "type": "object",
                                    "properties": {
                                      "label_id": {
                                        "description": "Label id.",
                                        "type": "integer"
                                      },
                                      "label_string": {
                                        "description": "Human readable string of the label.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "count": {
                                    "description": "Count of the object.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "active_zone_counts": {
                    "description": "Active zone counts.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "annotation": {
                          "type": "object",
                          "properties": {
                            "active_zone": {
                              "type": "object",
                              "properties": {
                                "normalized_vertices": {
                                  "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "description": "X coordinate.",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "Y coordinate.",
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "crossing_line": {
                              "type": "object",
                              "properties": {
                                "normalized_vertices": {
                                  "description": "A sequence of vertices connected by straight lines.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "description": "X coordinate.",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "Y coordinate.",
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "id": {
                              "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                              "type": "string"
                            },
                            "display_name": {
                              "description": "User-friendly name for the annotation.",
                              "type": "string"
                            },
                            "source_stream": {
                              "description": "The Vision AI stream resource name.",
                              "type": "string"
                            },
                            "type_": {
                              "type": "enum",
                              "name": "StreamAnnotationType",
                              "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                              "values": {
                                "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                  "value": 0
                                },
                                "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                  "value": 1
                                },
                                "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                  "value": 2
                                }
                              }
                            }
                          }
                        },
                        "counts": {
                          "description": "Counts in the zone.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entity": {
                                "type": "object",
                                "properties": {
                                  "label_id": {
                                    "description": "Label id.",
                                    "type": "integer"
                                  },
                                  "label_string": {
                                    "description": "Human readable string of the label.",
                                    "type": "string"
                                  }
                                }
                              },
                              "count": {
                                "description": "Count of the object.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "egress_bps": {
                "type": "object",
                "properties": {
                  "full_frame_count": {
                    "description": "Counts of the full frame.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "entity": {
                          "type": "object",
                          "properties": {
                            "label_id": {
                              "description": "Label id.",
                              "type": "integer"
                            },
                            "label_string": {
                              "description": "Human readable string of the label.",
                              "type": "string"
                            }
                          }
                        },
                        "count": {
                          "description": "Count of the object.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "crossing_line_counts": {
                    "description": "Crossing line counts.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "annotation": {
                          "type": "object",
                          "properties": {
                            "active_zone": {
                              "type": "object",
                              "properties": {
                                "normalized_vertices": {
                                  "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "description": "X coordinate.",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "Y coordinate.",
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "crossing_line": {
                              "type": "object",
                              "properties": {
                                "normalized_vertices": {
                                  "description": "A sequence of vertices connected by straight lines.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "description": "X coordinate.",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "Y coordinate.",
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "id": {
                              "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                              "type": "string"
                            },
                            "display_name": {
                              "description": "User-friendly name for the annotation.",
                              "type": "string"
                            },
                            "source_stream": {
                              "description": "The Vision AI stream resource name.",
                              "type": "string"
                            },
                            "type_": {
                              "type": "enum",
                              "name": "StreamAnnotationType",
                              "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                              "values": {
                                "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                  "value": 0
                                },
                                "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                  "value": 1
                                },
                                "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                  "value": 2
                                }
                              }
                            }
                          }
                        },
                        "positive_direction_counts": {
                          "description": "The direction that follows the right hand rule.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entity": {
                                "type": "object",
                                "properties": {
                                  "label_id": {
                                    "description": "Label id.",
                                    "type": "integer"
                                  },
                                  "label_string": {
                                    "description": "Human readable string of the label.",
                                    "type": "string"
                                  }
                                }
                              },
                              "count": {
                                "description": "Count of the object.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "negative_direction_counts": {
                          "description": "The direction that is opposite to the right hand rule.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entity": {
                                "type": "object",
                                "properties": {
                                  "label_id": {
                                    "description": "Label id.",
                                    "type": "integer"
                                  },
                                  "label_string": {
                                    "description": "Human readable string of the label.",
                                    "type": "string"
                                  }
                                }
                              },
                              "count": {
                                "description": "Count of the object.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "accumulated_positive_direction_counts": {
                          "description": "The accumulated positive count.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "start_time": {
                                "description": "The start time of the accumulated count.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "object_count": {
                                "type": "object",
                                "properties": {
                                  "entity": {
                                    "type": "object",
                                    "properties": {
                                      "label_id": {
                                        "description": "Label id.",
                                        "type": "integer"
                                      },
                                      "label_string": {
                                        "description": "Human readable string of the label.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "count": {
                                    "description": "Count of the object.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "accumulated_negative_direction_counts": {
                          "description": "The accumulated negative count.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "start_time": {
                                "description": "The start time of the accumulated count.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp"
                              },
                              "object_count": {
                                "type": "object",
                                "properties": {
                                  "entity": {
                                    "type": "object",
                                    "properties": {
                                      "label_id": {
                                        "description": "Label id.",
                                        "type": "integer"
                                      },
                                      "label_string": {
                                        "description": "Human readable string of the label.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "count": {
                                    "description": "Count of the object.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "active_zone_counts": {
                    "description": "Active zone counts.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "annotation": {
                          "type": "object",
                          "properties": {
                            "active_zone": {
                              "type": "object",
                              "properties": {
                                "normalized_vertices": {
                                  "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "description": "X coordinate.",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "Y coordinate.",
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "crossing_line": {
                              "type": "object",
                              "properties": {
                                "normalized_vertices": {
                                  "description": "A sequence of vertices connected by straight lines.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "description": "X coordinate.",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "Y coordinate.",
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "id": {
                              "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                              "type": "string"
                            },
                            "display_name": {
                              "description": "User-friendly name for the annotation.",
                              "type": "string"
                            },
                            "source_stream": {
                              "description": "The Vision AI stream resource name.",
                              "type": "string"
                            },
                            "type_": {
                              "type": "enum",
                              "name": "StreamAnnotationType",
                              "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                              "values": {
                                "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                  "value": 0
                                },
                                "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                  "value": 1
                                },
                                "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                  "value": 2
                                }
                              }
                            }
                          }
                        },
                        "counts": {
                          "description": "Counts in the zone.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entity": {
                                "type": "object",
                                "properties": {
                                  "label_id": {
                                    "description": "Label id.",
                                    "type": "integer"
                                  },
                                  "label_string": {
                                    "description": "Human readable string of the label.",
                                    "type": "string"
                                  }
                                }
                              },
                              "count": {
                                "description": "Count of the object.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "network_id",
          "network"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteNetworkRequest",
      "description": "Message for deleting a Network\n\nAttributes:\n    name (str):\n        Required. Name of the resource\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes after the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID, the server can check if original operation\n        with the same request ID was received, and if\n        so, will ignore the second request. This\n        prevents clients from accidentally creating\n        duplicate commitments.\n\n        The request ID must be a valid UUID with the\n        exception that zero UUID is not supported\n        (00000000-0000-0000-0000-000000000000).",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListSubnetsRequest",
      "description": "Message for requesting list of Subnets\n\nAttributes:\n    parent (str):\n        Required. Parent value for ListSubnetsRequest\n    page_size (int):\n        Requested page size. Server may return fewer\n        items than requested. If unspecified, server\n        will pick an appropriate default.\n    page_token (str):\n        A token identifying a page of results the\n        server should return.\n    filter (str):\n        Filtering results\n    order_by (str):\n        Hint for how to order the results",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Parent value for ListSubnetsRequest",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "filter": {
            "description": "Filtering results",
            "type": "string"
          },
          "order_by": {
            "description": "Hint for how to order the results",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetSubnetRequest",
      "description": "Message for getting a Subnet\n\nAttributes:\n    name (str):\n        Required. Name of the resource",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateSubnetRequest",
      "description": "Message for creating a Subnet\n\nAttributes:\n    parent (str):\n        Required. Value for parent.\n    subnet_id (str):\n        Required. Id of the requesting object If auto-generating Id\n        server-side, remove this field and subnet_id from the\n        method_signature of Create RPC\n    subnet (google.cloud.edgenetwork_v1.types.Subnet):\n        Required. The resource being created\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes since the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID, the server can check if original operation\n        with the same request ID was received, and if\n      ",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Value for parent.",
            "type": "string"
          },
          "subnet_id": {
            "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and subnet_id from the method_signature of Create RPC",
            "type": "string"
          },
          "subnet": {
            "description": "Required. The resource being created",
            "type": "object",
            "properties": {
              "name": {
                "description": "Subnet name (relative, not fully qualified). E.g. if the full subnet selfLink is https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetName} the correct input for this field would be {subnetName}",
                "type": "string"
              },
              "project_id": {
                "description": "Project in which the subnet exists. If not set, this project is assumed to be the project for which the connector create request was issued.",
                "type": "string"
              }
            }
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "subnet_id",
          "subnet"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateSubnetRequest",
      "description": "Message for updating a Subnet\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Field mask is used to specify the fields to be\n        overwritten in the Subnet resource by the update. The fields\n        specified in the update_mask are relative to the resource,\n        not the full request. A field will be overwritten if it is\n        in the mask. If the user does not provide a mask then all\n        fields will be overwritten.\n    subnet (google.cloud.edgenetwork_v1.types.Subnet):\n        Required. The resource being updated\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes since the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request ",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Field mask is used to specify the fields to be overwritten in the Subnet resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "subnet": {
            "description": "Required. The resource being updated",
            "type": "object",
            "properties": {
              "name": {
                "description": "Subnet name (relative, not fully qualified). E.g. if the full subnet selfLink is https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetName} the correct input for this field would be {subnetName}",
                "type": "string"
              },
              "project_id": {
                "description": "Project in which the subnet exists. If not set, this project is assumed to be the project for which the connector create request was issued.",
                "type": "string"
              }
            }
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "update_mask",
          "subnet"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteSubnetRequest",
      "description": "Message for deleting a Subnet\n\nAttributes:\n    name (str):\n        Required. Name of the resource\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes after the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID, the server can check if original operation\n        with the same request ID was received, and if\n        so, will ignore the second request. This\n        prevents clients from accidentally creating\n        duplicate commitments.\n\n        The request ID must be a valid UUID with the\n        exception that zero UUID is not supported\n        (00000000-0000-0000-0000-000000000000).",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListInterconnectsRequest",
      "description": "Message for requesting list of Interconnects\n\nAttributes:\n    parent (str):\n        Required. Parent value for\n        ListInterconnectsRequest\n    page_size (int):\n        Requested page size. Server may return fewer\n        items than requested. If unspecified, server\n        will pick an appropriate default.\n    page_token (str):\n        A token identifying a page of results the\n        server should return.\n    filter (str):\n        Filtering results\n    order_by (str):\n        Hint for how to order the results",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Parent value for ListInterconnectsRequest",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "filter": {
            "description": "Filtering results",
            "type": "string"
          },
          "order_by": {
            "description": "Hint for how to order the results",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetInterconnectRequest",
      "description": "Message for getting a Interconnect\n\nAttributes:\n    name (str):\n        Required. Name of the resource",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListInterconnectAttachmentsRequest",
      "description": "Message for requesting list of InterconnectAttachments\n\nAttributes:\n    parent (str):\n        Required. Parent value for\n        ListInterconnectAttachmentsRequest\n    page_size (int):\n        Requested page size. Server may return fewer\n        items than requested. If unspecified, server\n        will pick an appropriate default.\n    page_token (str):\n        A token identifying a page of results the\n        server should return.\n    filter (str):\n        Filtering results\n    order_by (str):\n        Hint for how to order the results",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Parent value for ListInterconnectAttachmentsRequest",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "filter": {
            "description": "Filtering results",
            "type": "string"
          },
          "order_by": {
            "description": "Hint for how to order the results",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetInterconnectAttachmentRequest",
      "description": "Message for getting a InterconnectAttachment\n\nAttributes:\n    name (str):\n        Required. Name of the resource",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateInterconnectAttachmentRequest",
      "description": "Message for creating a InterconnectAttachment\n\nAttributes:\n    parent (str):\n        Required. Value for parent.\n    interconnect_attachment_id (str):\n        Required. Id of the requesting object If auto-generating Id\n        server-side, remove this field and\n        interconnect_attachment_id from the method_signature of\n        Create RPC\n    interconnect_attachment (google.cloud.edgenetwork_v1.types.InterconnectAttachment):\n        Required. The resource being created\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes since the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID, the server c",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Value for parent.",
            "type": "string"
          },
          "interconnect_attachment_id": {
            "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and interconnect_attachment_id from the method_signature of Create RPC",
            "type": "string"
          },
          "interconnect_attachment": {
            "description": "Required. The resource being created",
            "type": "object",
            "properties": {
              "region": {
                "description": "Optional. Cloud region to install this policy based route on interconnect attachment. Use ``all`` to install it on all interconnect attachments.",
                "type": "string"
              }
            }
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "interconnect_attachment_id",
          "interconnect_attachment"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteInterconnectAttachmentRequest",
      "description": "Message for deleting a InterconnectAttachment\n\nAttributes:\n    name (str):\n        Required. Name of the resource\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes after the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID, the server can check if original operation\n        with the same request ID was received, and if\n        so, will ignore the second request. This\n        prevents clients from accidentally creating\n        duplicate commitments.\n\n        The request ID must be a valid UUID with the\n        exception that zero UUID is not supported\n        (00000000-0000-0000-0000-0000000000",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListRoutersRequest",
      "description": "Message for requesting list of Routers\n\nAttributes:\n    parent (str):\n        Required. Parent value for ListRoutersRequest\n    page_size (int):\n        Requested page size. Server may return fewer\n        items than requested. If unspecified, server\n        will pick an appropriate default.\n    page_token (str):\n        A token identifying a page of results the\n        server should return.\n    filter (str):\n        Filtering results\n    order_by (str):\n        Hint for how to order the results",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Parent value for ListRoutersRequest",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results the server should return.",
            "type": "string"
          },
          "filter": {
            "description": "Filtering results",
            "type": "string"
          },
          "order_by": {
            "description": "Hint for how to order the results",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetRouterRequest",
      "description": "Message for getting a Router\n\nAttributes:\n    name (str):\n        Required. Name of the resource",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateRouterRequest",
      "description": "Message for creating a Router\n\nAttributes:\n    parent (str):\n        Required. Value for parent.\n    router_id (str):\n        Required. Id of the requesting object If auto-generating Id\n        server-side, remove this field and router_id from the\n        method_signature of Create RPC\n    router (google.cloud.edgenetwork_v1.types.Router):\n        Required. The resource being created\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes since the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID, the server can check if original operation\n        with the same request ID was received, and if\n      ",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Value for parent.",
            "type": "string"
          },
          "router_id": {
            "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and router_id from the method_signature of Create RPC",
            "type": "string"
          },
          "router": {
            "description": "Required. The resource being created",
            "type": "object",
            "properties": {
              "name": {
                "description": "Required. The canonical resource name of the router.",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. The time when the router was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The time when the router was last updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "labels": {
                "description": "Labels associated with this resource.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "description": {
                "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
                "type": "string"
              },
              "network": {
                "description": "Required. The canonical name of the network to which this router belongs. The name is in the form of ``projects/{project}/locations/{location}/zones/{zone}/networks/{network}``.",
                "type": "string"
              },
              "interface": {
                "description": "Router interfaces.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of this interface entry. Unique within the Zones resource.",
                      "type": "string"
                    },
                    "ipv4_cidr": {
                      "description": "IP address and range of the interface.",
                      "type": "string"
                    },
                    "ipv6_cidr": {
                      "description": "IPv6 address and range of the interface.",
                      "type": "string"
                    },
                    "linked_interconnect_attachment": {
                      "description": "The canonical name of the linked Interconnect attachment.",
                      "type": "string"
                    },
                    "subnetwork": {
                      "description": "The canonical name of the subnetwork resource that this interface belongs to.",
                      "type": "string"
                    },
                    "loopback_ip_addresses": {
                      "description": "Create loopback interface in the router when specified. The number of IP addresses must match the number of TOR devices.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "bgp_peer": {
                "description": "BGP peers.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of this BGP peer. Unique within the Zones resource.",
                      "type": "string"
                    },
                    "interface": {
                      "description": "Name of the RouterInterface the BGP peer is associated with.",
                      "type": "string"
                    },
                    "interface_ipv4_cidr": {
                      "description": "IP range of the interface within Google.",
                      "type": "string"
                    },
                    "interface_ipv6_cidr": {
                      "description": "IPv6 range of the interface within Google.",
                      "type": "string"
                    },
                    "peer_ipv4_cidr": {
                      "description": "IP range of the BGP interface outside Google.",
                      "type": "string"
                    },
                    "peer_ipv6_cidr": {
                      "description": "IPv6 range of the BGP interface outside Google.",
                      "type": "string"
                    },
                    "peer_asn": {
                      "description": "Peer BGP Autonomous System Number (ASN). Each BGP interface may use a different value.",
                      "type": "integer"
                    },
                    "local_asn": {
                      "description": "Output only. Local BGP Autonomous System Number (ASN). This field is ST_NOT_REQUIRED because it stores private ASNs, which are meaningless outside the zone in which they are being used.",
                      "type": "integer"
                    }
                  }
                }
              },
              "bgp": {
                "type": "object",
                "properties": {
                  "asn": {
                    "description": "Locally assigned BGP ASN.",
                    "type": "integer"
                  },
                  "keepalive_interval_in_seconds": {
                    "description": "The interval in seconds between BGP keepalive messages that are sent to the peer. Default is 20 with value between 20 and 60.",
                    "type": "integer"
                  }
                }
              },
              "state": {
                "type": "enum",
                "name": "ResourceState",
                "description": "ResourceState describes the state the resource.\nA normal lifecycle of a new resource being created would be:\nPENDING -> PROVISIONING -> RUNNING. A normal lifecycle of an\nexisting resource being deleted would be: RUNNING -> DELETING.\nAny failures during processing will result the resource to be in\na SUSPENDED state.\n\nValues:\n    STATE_UNKNOWN (0):\n        Unspecified state.\n    STATE_PENDING (1):\n        The resource is being prepared to be applied\n        to the rack.\n    STATE_PROVISIONING (2):\n        The resource has started being applied to the\n        rack.\n    STATE_RUNNING (3):\n        The resource has been pushed to the rack.\n    STATE_SUSPENDED (4):\n        The resource failed to push to the rack.\n    STATE_DELETING (5):\n        The resource is under deletion.",
                "values": {
                  "STATE_UNKNOWN": {
                    "value": 0
                  },
                  "STATE_PENDING": {
                    "value": 1
                  },
                  "STATE_PROVISIONING": {
                    "value": 2
                  },
                  "STATE_RUNNING": {
                    "value": 3
                  },
                  "STATE_SUSPENDED": {
                    "value": 4
                  },
                  "STATE_DELETING": {
                    "value": 5
                  }
                }
              },
              "route_advertisements": {
                "description": "Optional. A list of CIDRs in IP/Length format to advertise northbound as static routes from this router.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name",
              "network"
            ]
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "router_id",
          "router"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateRouterRequest",
      "description": "Message for updating a Router\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Field mask is used to specify the fields to be\n        overwritten in the Router resource by the update. The fields\n        specified in the update_mask are relative to the resource,\n        not the full request. A field will be overwritten if it is\n        in the mask. If the user does not provide a mask then all\n        fields will be overwritten.\n    router (google.cloud.edgenetwork_v1.types.Router):\n        Required. The resource being updated\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes since the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request ",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Field mask is used to specify the fields to be overwritten in the Router resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "router": {
            "description": "Required. The resource being updated",
            "type": "object",
            "properties": {
              "name": {
                "description": "Required. The canonical resource name of the router.",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. The time when the router was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The time when the router was last updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "labels": {
                "description": "Labels associated with this resource.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "description": {
                "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
                "type": "string"
              },
              "network": {
                "description": "Required. The canonical name of the network to which this router belongs. The name is in the form of ``projects/{project}/locations/{location}/zones/{zone}/networks/{network}``.",
                "type": "string"
              },
              "interface": {
                "description": "Router interfaces.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of this interface entry. Unique within the Zones resource.",
                      "type": "string"
                    },
                    "ipv4_cidr": {
                      "description": "IP address and range of the interface.",
                      "type": "string"
                    },
                    "ipv6_cidr": {
                      "description": "IPv6 address and range of the interface.",
                      "type": "string"
                    },
                    "linked_interconnect_attachment": {
                      "description": "The canonical name of the linked Interconnect attachment.",
                      "type": "string"
                    },
                    "subnetwork": {
                      "description": "The canonical name of the subnetwork resource that this interface belongs to.",
                      "type": "string"
                    },
                    "loopback_ip_addresses": {
                      "description": "Create loopback interface in the router when specified. The number of IP addresses must match the number of TOR devices.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "bgp_peer": {
                "description": "BGP peers.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of this BGP peer. Unique within the Zones resource.",
                      "type": "string"
                    },
                    "interface": {
                      "description": "Name of the RouterInterface the BGP peer is associated with.",
                      "type": "string"
                    },
                    "interface_ipv4_cidr": {
                      "description": "IP range of the interface within Google.",
                      "type": "string"
                    },
                    "interface_ipv6_cidr": {
                      "description": "IPv6 range of the interface within Google.",
                      "type": "string"
                    },
                    "peer_ipv4_cidr": {
                      "description": "IP range of the BGP interface outside Google.",
                      "type": "string"
                    },
                    "peer_ipv6_cidr": {
                      "description": "IPv6 range of the BGP interface outside Google.",
                      "type": "string"
                    },
                    "peer_asn": {
                      "description": "Peer BGP Autonomous System Number (ASN). Each BGP interface may use a different value.",
                      "type": "integer"
                    },
                    "local_asn": {
                      "description": "Output only. Local BGP Autonomous System Number (ASN). This field is ST_NOT_REQUIRED because it stores private ASNs, which are meaningless outside the zone in which they are being used.",
                      "type": "integer"
                    }
                  }
                }
              },
              "bgp": {
                "type": "object",
                "properties": {
                  "asn": {
                    "description": "Locally assigned BGP ASN.",
                    "type": "integer"
                  },
                  "keepalive_interval_in_seconds": {
                    "description": "The interval in seconds between BGP keepalive messages that are sent to the peer. Default is 20 with value between 20 and 60.",
                    "type": "integer"
                  }
                }
              },
              "state": {
                "type": "enum",
                "name": "ResourceState",
                "description": "ResourceState describes the state the resource.\nA normal lifecycle of a new resource being created would be:\nPENDING -> PROVISIONING -> RUNNING. A normal lifecycle of an\nexisting resource being deleted would be: RUNNING -> DELETING.\nAny failures during processing will result the resource to be in\na SUSPENDED state.\n\nValues:\n    STATE_UNKNOWN (0):\n        Unspecified state.\n    STATE_PENDING (1):\n        The resource is being prepared to be applied\n        to the rack.\n    STATE_PROVISIONING (2):\n        The resource has started being applied to the\n        rack.\n    STATE_RUNNING (3):\n        The resource has been pushed to the rack.\n    STATE_SUSPENDED (4):\n        The resource failed to push to the rack.\n    STATE_DELETING (5):\n        The resource is under deletion.",
                "values": {
                  "STATE_UNKNOWN": {
                    "value": 0
                  },
                  "STATE_PENDING": {
                    "value": 1
                  },
                  "STATE_PROVISIONING": {
                    "value": 2
                  },
                  "STATE_RUNNING": {
                    "value": 3
                  },
                  "STATE_SUSPENDED": {
                    "value": 4
                  },
                  "STATE_DELETING": {
                    "value": 5
                  }
                }
              },
              "route_advertisements": {
                "description": "Optional. A list of CIDRs in IP/Length format to advertise northbound as static routes from this router.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name",
              "network"
            ]
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "update_mask",
          "router"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteRouterRequest",
      "description": "Message for deleting a Router\n\nAttributes:\n    name (str):\n        Required. Name of the resource\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID so that if\n        you must retry your request, the server will\n        know to ignore the request if it has already\n        been completed. The server will guarantee that\n        for at least 60 minutes after the first request.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID, the server can check if original operation\n        with the same request ID was received, and if\n        so, will ignore the second request. This\n        prevents clients from accidentally creating\n        duplicate commitments.\n\n        The request ID must be a valid UUID with the\n        exception that zero UUID is not supported\n        (00000000-0000-0000-0000-000000000000).",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the resource",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DiagnoseNetworkRequest",
      "description": "Message for requesting the diagnostics of a network within a\nspecific zone.\n\nAttributes:\n    name (str):\n        Required. The name of the network resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the network resource.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DiagnoseInterconnectRequest",
      "description": "Message for requesting the diagnostics of an interconnect\nwithin a specific zone.\n\nAttributes:\n    name (str):\n        Required. The name of the interconnect\n        resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the interconnect resource.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DiagnoseRouterRequest",
      "description": "Message for requesting diagnositcs of a router within a\nspecific zone.\n\nAttributes:\n    name (str):\n        Required. The name of the router resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the router resource.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "InitializeZoneRequest",
      "description": "Message for initializing a specified zone\n\nAttributes:\n    name (str):\n        Required. The name of the zone resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the zone resource.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}