{
  "IAM": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_service_accounts",
          "description": "Lists every [ServiceAccount][google.iam.admin.v1.ServiceAccount]\nthat belongs to a specific project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_list_service_accounts():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.ListServiceAccountsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        page_result = client.list_service_accounts(request=request)\n\n        # Handle the response\n        async for response in page_result:\n          ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the project associated with the service accounts, such as ``projects/my-project-123``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iam_admin_v1.services.iam.pagers.ListServiceAccountsAsyncPager: The service account list response.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.services.iam.pagers.ListServiceAccountsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_service_account",
          "description": "Gets a [ServiceAccount][google.iam.admin.v1.ServiceAccount].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_get_service_account():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.GetServiceAccountRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_service_account(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iam_admin_v1.types.GetSe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the service account in the following format: ``projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}``. Using ``-`` as a wildcard for the ``PROJECT_ID`` will infer the project from the account. The ``ACCOUNT`` value can be the ``email`` address or the ``unique_id`` of the service account.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iam_admin_v1.types.ServiceAccount: An IAM service account.  A service account is an account for an application or a virtual machine (VM) instance, not a person. You can use a service account to call Google APIs. To learn more, read the [overview of service accounts](\\ https://cloud.google.com/iam/help/service-accounts/overview).  When you create a service account, you specify the project ID that owns the service account, as well as a name that must be unique within the project. IAM uses these values to create an email address that identifies the service account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.ServiceAccount"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_service_account",
          "description": "Creates a [ServiceAccount][google.iam.admin.v1.ServiceAccount].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_create_service_account():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.CreateServiceAccountRequest(\n            name=\"name_value\",\n            account_id=\"account_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_service_account(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the project associated with the service accounts, such as ``projects/my-project-123``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "account_id": {
                "type": "str",
                "description": "Required. The account id that is used to generate the service account email address and a stable unique id. It is unique within a project, must be 6-30 characters long, and match the regular expression ``[a-z]([-a-z0-9]*[a-z0-9])`` to comply with RFC1035.  This corresponds to the ``account_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "service_account": {
                "type": "google.cloud.iam_admin_v1.types.ServiceAccount",
                "description": "The [ServiceAccount][google.iam.admin.v1.ServiceAccount] resource to create. Currently, only the following values are user assignable: ``display_name`` and ``description``.  This corresponds to the ``service_account`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iam_admin_v1.types.ServiceAccount: An IAM service account.  A service account is an account for an application or a virtual machine (VM) instance, not a person. You can use a service account to call Google APIs. To learn more, read the [overview of service accounts](\\ https://cloud.google.com/iam/help/service-accounts/overview).  When you create a service account, you specify the project ID that owns the service account, as well as a name that must be unique within the project. IAM uses these values to create an email address that identifies the service account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "account_id",
              "service_account",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.ServiceAccount"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_service_account",
          "description": "**Note:** We are in the process of deprecating this method. Use\n[PatchServiceAccount][google.iam.admin.v1.IAM.PatchServiceAccount]\ninstead.\n\nUpdates a [ServiceAccount][google.iam.admin.v1.ServiceAccount].\n\nYou can update only the ``display_name`` field.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_update_service_account():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.ServiceAccount(\n        )\n\n        # Make the request\n        response = await client.update_se",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.ServiceAccount"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "patch_service_account",
          "description": "Patches a [ServiceAccount][google.iam.admin.v1.ServiceAccount].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_patch_service_account():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.PatchServiceAccountRequest(\n        )\n\n        # Make the request\n        response = await client.patch_service_account(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iam_admin_v1.types.PatchServiceAccountRequest,",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.ServiceAccount"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_service_account",
          "description": "Deletes a [ServiceAccount][google.iam.admin.v1.ServiceAccount].\n\n**Warning:** After you delete a service account, you might not\nbe able to undelete it. If you know that you need to re-enable\nthe service account in the future, use\n[DisableServiceAccount][google.iam.admin.v1.IAM.DisableServiceAccount]\ninstead.\n\nIf you delete a service account, IAM permanently removes the\nservice account 30 days later. Google Cloud cannot recover the\nservice account after it is permanently removed, even if you\nfile a support request.\n\nTo help avoid unplanned outages, we recommend that you disable\nthe service account before you delete it. Use\n[DisableServiceAccount][google.iam.admin.v1.IAM.DisableServiceAccount]\nto disable the service account, then wait at least 24 hours and\nwatch for unintended consequences. If there are no unintended\nconsequences, you can delete the service account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the service account in the following format: ``projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}``. Using ``-`` as a wildcard for the ``PROJECT_ID`` will infer the project from the account. The ``ACCOUNT`` value can be the ``email`` address or the ``unique_id`` of the service account.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undelete_service_account",
          "description": "Restores a deleted\n[ServiceAccount][google.iam.admin.v1.ServiceAccount].\n\n**Important:** It is not always possible to restore a deleted\nservice account. Use this method only as a last resort.\n\nAfter you delete a service account, IAM permanently removes the\nservice account 30 days later. There is no way to restore a\ndeleted service account that has been permanently removed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_undelete_service_account():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.UndeleteServiceAccountResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "enable_service_account",
          "description": "Enables a [ServiceAccount][google.iam.admin.v1.ServiceAccount]\nthat was disabled by\n[DisableServiceAccount][google.iam.admin.v1.IAM.DisableServiceAccount].\n\nIf the service account is already enabled, then this method has\nno effect.\n\nIf the service account was disabled by other means\u2014for example,\nif Google disabled the service account because it was\ncompromised\u2014you cannot use this method to enable the service\naccount.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_enable_service_account():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "disable_service_account",
          "description": "Disables a [ServiceAccount][google.iam.admin.v1.ServiceAccount]\nimmediately.\n\nIf an application uses the service account to authenticate, that\napplication can no longer call Google APIs or access Google\nCloud resources. Existing access tokens for the service account\nare rejected, and requests for new access tokens will fail.\n\nTo re-enable the service account, use\n[EnableServiceAccount][google.iam.admin.v1.IAM.EnableServiceAccount].\nAfter you re-enable the service account, its existing access\ntokens will be accepted, and you can request new access tokens.\n\nTo help avoid unplanned outages, we recommend that you disable\nthe service account before you delete it. Use this method to\ndisable the service account, then wait at least 24 hours and\nwatch for unintended consequences. If there are no unintended\nconsequences, you can delete the service account with\n[DeleteServiceAccount][google.iam.admin.v1.IAM.DeleteServiceAccount].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_service_account_keys",
          "description": "Lists every\n[ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey] for a\nservice account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_list_service_account_keys():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.ListServiceAccountKeysRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.list_service_account_keys(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the service account in the following format: ``projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}``.  Using ``-`` as a wildcard for the ``PROJECT_ID``, will infer the project from the account. The ``ACCOUNT`` value can be the ``email`` address or the ``unique_id`` of the service account.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "key_types": {
                "type": "MutableSequence[google.cloud.iam_admin_v1.types.ListServiceAccountKeysRequest.KeyType]",
                "description": "Filters the types of keys the user wants to include in the list response. Duplicate key types are not allowed. If no key type is provided, all keys are returned.  This corresponds to the ``key_types`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iam_admin_v1.types.ListServiceAccountKeysResponse: The service account keys list response."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "key_types",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.ListServiceAccountKeysResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_service_account_key",
          "description": "Gets a\n[ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_get_service_account_key():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.GetServiceAccountKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_service_account_key(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iam_adm",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the service account key in the following format: ``projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}``.  Using ``-`` as a wildcard for the ``PROJECT_ID`` will infer the project from the account. The ``ACCOUNT`` value can be the ``email`` address or the ``unique_id`` of the service account.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "public_key_type": {
                "type": "google.cloud.iam_admin_v1.types.ServiceAccountPublicKeyType",
                "description": "Optional. The output format of the public key. The default is ``TYPE_NONE``, which means that the public key is not returned.  This corresponds to the ``public_key_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iam_admin_v1.types.ServiceAccountKey: Represents a service account key.  A service account has two sets of key-pairs: user-managed, and system-managed.  User-managed key-pairs can be created and deleted by users.  Users are responsible for rotating these keys periodically to ensure security of their service accounts.  Users retain the private key of these key-pairs, and Google retains ONLY the public key.  System-managed keys are automatically rotated by Google, and are used for signing for a maximum of two weeks. The rotation process is probabilistic, and usage of the new key will gradually ramp up and down over the key's lifetime.  If you cache the public key set for a service account, we recommend that you update the cache every 15 minutes. User-managed keys can be added and removed at any time, so it is important to update the cache frequently. For Google-managed keys, Google will publish a key at least 6 hours before it is first used for signing and will keep publishing it for at least 6 hours after it was last used for signing.  Public keys for all service accounts are also published at the OAuth2 Service Account API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "public_key_type",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.ServiceAccountKey"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_service_account_key",
          "description": "Creates a\n[ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_create_service_account_key():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.CreateServiceAccountKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.create_service_account_key(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the service account in the following format: ``projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}``. Using ``-`` as a wildcard for the ``PROJECT_ID`` will infer the project from the account. The ``ACCOUNT`` value can be the ``email`` address or the ``unique_id`` of the service account.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "private_key_type": {
                "type": "google.cloud.iam_admin_v1.types.ServiceAccountPrivateKeyType",
                "description": "The output format of the private key. The default value is ``TYPE_GOOGLE_CREDENTIALS_FILE``, which is the Google Credentials File format.  This corresponds to the ``private_key_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "key_algorithm": {
                "type": "google.cloud.iam_admin_v1.types.ServiceAccountKeyAlgorithm",
                "description": "Which type of key and algorithm to use for the key. The default is currently a 2K RSA key.  However this may change in the future.  This corresponds to the ``key_algorithm`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iam_admin_v1.types.ServiceAccountKey: Represents a service account key.  A service account has two sets of key-pairs: user-managed, and system-managed.  User-managed key-pairs can be created and deleted by users.  Users are responsible for rotating these keys periodically to ensure security of their service accounts.  Users retain the private key of these key-pairs, and Google retains ONLY the public key.  System-managed keys are automatically rotated by Google, and are used for signing for a maximum of two weeks. The rotation process is probabilistic, and usage of the new key will gradually ramp up and down over the key's lifetime.  If you cache the public key set for a service account, we recommend that you update the cache every 15 minutes. User-managed keys can be added and removed at any time, so it is important to update the cache frequently. For Google-managed keys, Google will publish a key at least 6 hours before it is first used for signing and will keep publishing it for at least 6 hours after it was last used for signing.  Public keys for all service accounts are also published at the OAuth2 Service Account API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "private_key_type",
              "key_algorithm",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.ServiceAccountKey"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "upload_service_account_key",
          "description": "Uploads the public key portion of a key pair that you manage,\nand associates the public key with a\n[ServiceAccount][google.iam.admin.v1.ServiceAccount].\n\nAfter you upload the public key, you can use the private key\nfrom the key pair as a service account key.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_upload_service_account_key():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.UploadServiceAccountKeyRequest(\n        )\n\n        # Make the request\n        response",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.ServiceAccountKey"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_service_account_key",
          "description": "Deletes a\n[ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].\nDeleting a service account key does not revoke short-lived\ncredentials that have been issued based on the service account\nkey.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_delete_service_account_key():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.DeleteServiceAccountKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_service_account_key",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the service account key in the following format: ``projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}``. Using ``-`` as a wildcard for the ``PROJECT_ID`` will infer the project from the account. The ``ACCOUNT`` value can be the ``email`` address or the ``unique_id`` of the service account.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "disable_service_account_key",
          "description": "Disable a\n[ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]. A\ndisabled service account key can be re-enabled with\n[EnableServiceAccountKey][google.iam.admin.v1.IAM.EnableServiceAccountKey].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_disable_service_account_key():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.DisableServiceAccountKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.disable_service_accou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the service account key in the following format: ``projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}``.  Using ``-`` as a wildcard for the ``PROJECT_ID`` will infer the project from the account. The ``ACCOUNT`` value can be the ``email`` address or the ``unique_id`` of the service account.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "enable_service_account_key",
          "description": "Enable a\n[ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_enable_service_account_key():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.EnableServiceAccountKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.enable_service_account_key(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.iam_admin_v1.types.EnableServiceAccountKeyRequest, dict]]):\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the service account key in the following format: ``projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}``.  Using ``-`` as a wildcard for the ``PROJECT_ID`` will infer the project from the account. The ``ACCOUNT`` value can be the ``email`` address or the ``unique_id`` of the service account.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "sign_blob",
          "description": "**Note:** This method is deprecated. Use the\n```signBlob`` <https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signBlob>`__\nmethod in the IAM Service Account Credentials API instead. If\nyou currently use this method, see the `migration\nguide <https://cloud.google.com/iam/help/credentials/migrate-api>`__\nfor instructions.\n\nSigns a blob using the system-managed private key for a\n[ServiceAccount][google.iam.admin.v1.ServiceAccount].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_sign_blob():\n        # Create a client\n        client = iam",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Deprecated. `Migrate to Service Account Credentials API <https://cloud.google.com/iam/help/credentials/migrate-api>`__.  The resource name of the service account in the following format: ``projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}``. Using ``-`` as a wildcard for the ``PROJECT_ID`` will infer the project from the account. The ``ACCOUNT`` value can be the ``email`` address or the ``unique_id`` of the service account.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "bytes_to_sign": {
                "type": "bytes",
                "description": "Required. Deprecated. `Migrate to Service Account Credentials API <https://cloud.google.com/iam/help/credentials/migrate-api>`__.  The bytes to sign.  This corresponds to the ``bytes_to_sign`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iam_admin_v1.types.SignBlobResponse: Deprecated. [Migrate to Service Account Credentials API](\\ https://cloud.google.com/iam/help/credentials/migrate-api).  The service account sign blob response."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "bytes_to_sign",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.SignBlobResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "sign_jwt",
          "description": "**Note:** This method is deprecated. Use the\n```signJwt`` <https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signJwt>`__\nmethod in the IAM Service Account Credentials API instead. If\nyou currently use this method, see the `migration\nguide <https://cloud.google.com/iam/help/credentials/migrate-api>`__\nfor instructions.\n\nSigns a JSON Web Token (JWT) using the system-managed private\nkey for a [ServiceAccount][google.iam.admin.v1.ServiceAccount].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_sign_jwt():\n        # Create a client\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Deprecated. `Migrate to Service Account Credentials API <https://cloud.google.com/iam/help/credentials/migrate-api>`__.  The resource name of the service account in the following format: ``projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}``. Using ``-`` as a wildcard for the ``PROJECT_ID`` will infer the project from the account. The ``ACCOUNT`` value can be the ``email`` address or the ``unique_id`` of the service account.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "payload": {
                "type": "str",
                "description": "Required. Deprecated. `Migrate to Service Account Credentials API <https://cloud.google.com/iam/help/credentials/migrate-api>`__.  The JWT payload to sign. Must be a serialized JSON object that contains a JWT Claims Set. For example: ``{\"sub\": \"user@example.com\", \"iat\": 313435}``  If the JWT Claims Set contains an expiration time (``exp``) claim, it must be an integer timestamp that is not in the past and no more than 12 hours in the future.  If the JWT Claims Set does not contain an expiration time (``exp``) claim, this claim is added automatically, with a timestamp that is 1 hour in the future.  This corresponds to the ``payload`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iam_admin_v1.types.SignJwtResponse: Deprecated. [Migrate to Service Account Credentials API](\\ https://cloud.google.com/iam/help/credentials/migrate-api).  The service account sign JWT response."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "payload",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.SignJwtResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_iam_policy",
          "description": "Gets the IAM policy that is attached to a\n[ServiceAccount][google.iam.admin.v1.ServiceAccount]. This IAM\npolicy specifies which principals have access to the service\naccount.\n\nThis method does not tell you whether the service account has\nbeen granted any roles on other resources. To check whether a\nservice account has role grants on a resource, use the\n``getIamPolicy`` method for that resource. For example, to view\nthe role grants for a project, call the Resource Manager API's\n```projects.getIamPolicy`` <https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy>`__\nmethod.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.policy_pb2.Policy: An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.  A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.  For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](\\ https://cloud.google.com/iam/help/conditions/resource-policies).  **JSON example:**  :literal:`\\`     {       \"bindings\": [         {           \"role\": \"roles/resourcemanager.organizationAdmin\",           \"members\": [             \"user:mike@example.com\",             \"group:admins@example.com\",             \"domain:google.com\",             \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"           ]         },         {           \"role\": \"roles/resourcemanager.organizationViewer\",           \"members\": [             \"user:eve@example.com\"           ],           \"condition\": {             \"title\": \"expirable access\",             \"description\": \"Does not grant access after Sep 2020\",             \"expression\": \"request.time <             timestamp('2020-10-01T00:00:00.000Z')\",           }         }       ],       \"etag\": \"BwWWja0YfJA=\",       \"version\": 3     }`\\ \\`  **YAML example:**  :literal:`\\`     bindings:     - members:       - user:mike@example.com       - group:admins@example.com       - domain:google.com       - serviceAccount:my-project-id@appspot.gserviceaccount.com       role: roles/resourcemanager.organizationAdmin     - members:       - user:eve@example.com       role: roles/resourcemanager.organizationViewer       condition:         title: expirable access         description: Does not grant access after Sep 2020         expression: request.time < timestamp('2020-10-01T00:00:00.000Z')     etag: BwWWja0YfJA=     version: 3`\\ \\`  For a description of IAM and its features, see the [IAM documentation](\\ https://cloud.google.com/iam/docs/)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GetIamPolicyRequest"
          ],
          "response_types": [
            "google.iam.v1.policy_pb2.Policy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_iam_policy",
          "description": "Sets the IAM policy that is attached to a\n[ServiceAccount][google.iam.admin.v1.ServiceAccount].\n\nUse this method to grant or revoke access to the service\naccount. For example, you could grant a principal the ability to\nimpersonate the service account.\n\nThis method does not enable the service account to access other\nresources. To grant roles to a service account on a resource,\nfollow these steps:\n\n1. Call the resource's ``getIamPolicy`` method to get its\n   current IAM policy.\n2. Edit the policy so that it binds the service account to an\n   IAM role for the resource.\n3. Call the resource's ``setIamPolicy`` method to update its IAM\n   policy.\n\nFor detailed instructions, see `Manage access to project,\nfolders, and\norganizations <https://cloud.google.com/iam/help/service-accounts/granting-access-to-service-accounts>`__\nor `Manage access to other\nresources <https://cloud.google.com/iam/help/access/manage-other-resources>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.policy_pb2.Policy: An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.  A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.  For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](\\ https://cloud.google.com/iam/help/conditions/resource-policies).  **JSON example:**  :literal:`\\`     {       \"bindings\": [         {           \"role\": \"roles/resourcemanager.organizationAdmin\",           \"members\": [             \"user:mike@example.com\",             \"group:admins@example.com\",             \"domain:google.com\",             \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"           ]         },         {           \"role\": \"roles/resourcemanager.organizationViewer\",           \"members\": [             \"user:eve@example.com\"           ],           \"condition\": {             \"title\": \"expirable access\",             \"description\": \"Does not grant access after Sep 2020\",             \"expression\": \"request.time <             timestamp('2020-10-01T00:00:00.000Z')\",           }         }       ],       \"etag\": \"BwWWja0YfJA=\",       \"version\": 3     }`\\ \\`  **YAML example:**  :literal:`\\`     bindings:     - members:       - user:mike@example.com       - group:admins@example.com       - domain:google.com       - serviceAccount:my-project-id@appspot.gserviceaccount.com       role: roles/resourcemanager.organizationAdmin     - members:       - user:eve@example.com       role: roles/resourcemanager.organizationViewer       condition:         title: expirable access         description: Does not grant access after Sep 2020         expression: request.time < timestamp('2020-10-01T00:00:00.000Z')     etag: BwWWja0YfJA=     version: 3`\\ \\`  For a description of IAM and its features, see the [IAM documentation](\\ https://cloud.google.com/iam/docs/)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "SetIamPolicyRequest"
          ],
          "response_types": [
            "google.iam.v1.policy_pb2.Policy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "test_iam_permissions",
          "description": "Tests whether the caller has the specified permissions on a\n[ServiceAccount][google.iam.admin.v1.ServiceAccount].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_test_iam_permissions():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.TestIamPermissionsRequest(\n            resource=\"resource_value\",\n            permissions=['permissions_value1', 'permissions_value2'],\n        )\n\n        # Make the request\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "permissions": {
                "type": "MutableSequence[str]",
                "description": "The set of permissions to check for the ``resource``. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see `IAM Overview <https://cloud.google.com/iam/docs/overview#permissions>`__.  This corresponds to the ``permissions`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse: Response message for TestIamPermissions method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "permissions",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "TestIamPermissionsRequest"
          ],
          "response_types": [
            "google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "query_grantable_roles",
          "description": "Lists roles that can be granted on a Google Cloud\nresource. A role is grantable if the IAM policy for the\nresource can contain bindings to the role.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_query_grantable_roles():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.QueryGrantableRolesRequest(\n            full_resource_name=\"full_resource_name_value\",\n        )\n\n        # Make the request\n        page_result = client.query_grantable_roles(request=request)\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "full_resource_name": {
                "type": "str",
                "description": "Required. The full resource name to query from the list of grantable roles.  The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id ``my-project`` will be named ``//cloudresourcemanager.googleapis.com/projects/my-project``.  This corresponds to the ``full_resource_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iam_admin_v1.services.iam.pagers.QueryGrantableRolesAsyncPager: The grantable role query response.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "full_resource_name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.services.iam.pagers.QueryGrantableRolesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_roles",
          "description": "Lists every predefined [Role][google.iam.admin.v1.Role] that IAM\nsupports, or every custom role that is defined for an\norganization or project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_list_roles():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.ListRolesRequest(\n        )\n\n        # Make the request\n        page_result = client.list_roles(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nA",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.services.iam.pagers.ListRolesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_role",
          "description": "Gets the definition of a [Role][google.iam.admin.v1.Role].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_get_role():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.GetRoleRequest(\n        )\n\n        # Make the request\n        response = await client.get_role(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iam_admin_v1.types.GetRoleRequest, dict]]):\n        The request object. The request to ge",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.Role"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_role",
          "description": "Creates a new custom [Role][google.iam.admin.v1.Role].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_create_role():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.CreateRoleRequest(\n        )\n\n        # Make the request\n        response = await client.create_role(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iam_admin_v1.types.CreateRoleRequest, dict]]):\n        The request object. The reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.Role"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_role",
          "description": "Updates the definition of a custom\n[Role][google.iam.admin.v1.Role].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_update_role():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.UpdateRoleRequest(\n        )\n\n        # Make the request\n        response = await client.update_role(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iam_admin_v1.types.UpdateRoleRequest, dict]]):\n        The request obj",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.Role"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_role",
          "description": "Deletes a custom [Role][google.iam.admin.v1.Role].\n\nWhen you delete a custom role, the following changes occur\nimmediately:\n\n-  You cannot bind a principal to the custom role in an IAM\n   [Policy][google.iam.v1.Policy].\n-  Existing bindings to the custom role are not changed, but\n   they have no effect.\n-  By default, the response from\n   [ListRoles][google.iam.admin.v1.IAM.ListRoles] does not\n   include the custom role.\n\nYou have 7 days to undelete the custom role. After 7 days, the\nfollowing changes occur:\n\n-  The custom role is permanently deleted and cannot be\n   recovered.\n-  If an IAM policy contains a binding to the custom role, the\n   binding is permanently removed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   cli",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.Role"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undelete_role",
          "description": "Undeletes a custom [Role][google.iam.admin.v1.Role].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_undelete_role():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.UndeleteRoleRequest(\n        )\n\n        # Make the request\n        response = await client.undelete_role(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iam_admin_v1.types.UndeleteRoleRequest, dict]]):\n        The request object. The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.Role"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "query_testable_permissions",
          "description": "Lists every permission that you can test on a\nresource. A permission is testable if you can check\nwhether a principal has that permission on the resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_query_testable_permissions():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.QueryTestablePermissionsRequest(\n        )\n\n        # Make the request\n        page_result = client.query_testable_permissions(request=request)\n\n        # Handle the response\n        async f",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.services.iam.pagers.QueryTestablePermissionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "query_auditable_services",
          "description": "Returns a list of services that allow you to opt into audit logs\nthat are not generated by default.\n\nTo learn more about audit logs, see the `Logging\ndocumentation <https://cloud.google.com/logging/docs/audit>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_query_auditable_services():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.QueryAuditableServicesRequest(\n        )\n\n        # Make the request\n        response = await client.query_auditable_services(request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.QueryAuditableServicesResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "lint_policy",
          "description": "Lints, or validates, an IAM policy. Currently checks the\n[google.iam.v1.Binding.condition][google.iam.v1.Binding.condition]\nfield, which contains a condition expression for a role binding.\n\nSuccessful calls to this method always return an HTTP ``200 OK``\nstatus code, even if the linter detects an issue in the IAM\npolicy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_admin_v1\n\n    async def sample_lint_policy():\n        # Create a client\n        client = iam_admin_v1.IAMAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_admin_v1.LintPolicyRequest(\n        )\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.iam_admin_v1.types.LintPolicyResponse"
          ]
        }
      }
    ]
  }
}