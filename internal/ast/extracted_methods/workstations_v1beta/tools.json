{
  "Workstations": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_workstation_cluster",
          "description": "Returns the requested workstation cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_get_workstation_cluster():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.GetWorkstationClusterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_workstation_cluster(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the requested resource.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workstations_v1beta.types.WorkstationCluster: A workstation cluster resource in the Cloud Workstations API. Defines a group of workstations in a particular region and the VPC network they're attached to."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.GetWorkstationClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_workstation_clusters",
          "description": "Returns all workstation clusters in the specified\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_list_workstation_clusters():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.ListWorkstationClustersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_workstation_clusters(request=request)\n\n        # Handle the response\n        async for response in page_result:\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workstations_v1beta.services.workstations.pagers.ListWorkstationClustersAsyncPager: Response message for ListWorkstationClusters. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.ListWorkstationClustersRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_workstation_cluster",
          "description": "Creates a new workstation cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_create_workstation_cluster():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.CreateWorkstationClusterRequest(\n            parent=\"parent_value\",\n            workstation_cluster_id=\"workstation_cluster_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_workstation_cluster(request=request)\n\n        print(\"Waiting for operatio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workstation_cluster": {
                "type": "google.cloud.workstations_v1beta.types.WorkstationCluster",
                "description": "Required. Workstation cluster to create.  This corresponds to the ``workstation_cluster`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workstation_cluster_id": {
                "type": "str",
                "description": "Required. ID to use for the workstation cluster.  This corresponds to the ``workstation_cluster_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workstations_v1beta.types.WorkstationCluster` A workstation cluster resource in the Cloud Workstations API.  Defines a group of workstations in a particular region and the VPC network they're attached to."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "workstation_cluster",
              "workstation_cluster_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.CreateWorkstationClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_workstation_cluster",
          "description": "Updates an existing workstation cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_update_workstation_cluster():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.UpdateWorkstationClusterRequest(\n        )\n\n        # Make the request\n        operation = client.update_workstation_cluster(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "workstation_cluster": {
                "type": "google.cloud.workstations_v1beta.types.WorkstationCluster",
                "description": "Required. Workstation cluster to update.  This corresponds to the ``workstation_cluster`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Mask that specifies which fields in the workstation cluster should be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workstations_v1beta.types.WorkstationCluster` A workstation cluster resource in the Cloud Workstations API.  Defines a group of workstations in a particular region and the VPC network they're attached to."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "workstation_cluster",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.UpdateWorkstationClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_workstation_cluster",
          "description": "Deletes the specified workstation cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_delete_workstation_cluster():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.DeleteWorkstationClusterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_workstation_cluster(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the workstation cluster to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workstations_v1beta.types.WorkstationCluster` A workstation cluster resource in the Cloud Workstations API.  Defines a group of workstations in a particular region and the VPC network they're attached to."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.DeleteWorkstationClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_workstation_config",
          "description": "Returns the requested workstation configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_get_workstation_config():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.GetWorkstationConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_workstation_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.clo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the requested resource.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workstations_v1beta.types.WorkstationConfig: A workstation configuration resource in the Cloud Workstations API.  Workstation configurations act as templates for workstations. The workstation configuration defines details such as the workstation virtual machine (VM) instance type, persistent storage, container image defining environment, which IDE or Code Editor to use, and more. Administrators and platform teams can also use [Identity and Access Management (IAM)](https://cloud.google.com/iam/docs/overview) rules to grant access to teams or to individual developers."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.GetWorkstationConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_workstation_configs",
          "description": "Returns all workstation configurations in the\nspecified cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_list_workstation_configs():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.ListWorkstationConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_workstation_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workstations_v1beta.services.workstations.pagers.ListWorkstationConfigsAsyncPager: Response message for ListWorkstationConfigs. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.ListWorkstationConfigsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_usable_workstation_configs",
          "description": "Returns all workstation configurations in the\nspecified cluster on which the caller has the\n\"workstations.workstation.create\" permission.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_list_usable_workstation_configs():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.ListUsableWorkstationConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_usable_workstation_configs(r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workstations_v1beta.services.workstations.pagers.ListUsableWorkstationConfigsAsyncPager: Response message for ListUsableWorkstationConfigs. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.ListUsableWorkstationConfigsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_workstation_config",
          "description": "Creates a new workstation configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_create_workstation_config():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.CreateWorkstationConfigRequest(\n            parent=\"parent_value\",\n            workstation_config_id=\"workstation_config_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_workstation_config(request=request)\n\n        print(\"Waiting for operati",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workstation_config": {
                "type": "google.cloud.workstations_v1beta.types.WorkstationConfig",
                "description": "Required. Config to create. This corresponds to the ``workstation_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workstation_config_id": {
                "type": "str",
                "description": "Required. ID to use for the workstation configuration.  This corresponds to the ``workstation_config_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workstations_v1beta.types.WorkstationConfig` A workstation configuration resource in the Cloud Workstations API.  Workstation configurations act as templates for workstations. The workstation configuration defines details such as the workstation virtual machine (VM) instance type, persistent storage, container image defining environment, which IDE or Code Editor to use, and more. Administrators and platform teams can also use [Identity and Access Management (IAM)](https://cloud.google.com/iam/docs/overview) rules to grant access to teams or to individual developers."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "workstation_config",
              "workstation_config_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.CreateWorkstationConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_workstation_config",
          "description": "Updates an existing workstation configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_update_workstation_config():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.UpdateWorkstationConfigRequest(\n        )\n\n        # Make the request\n        operation = client.update_workstation_config(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "workstation_config": {
                "type": "google.cloud.workstations_v1beta.types.WorkstationConfig",
                "description": "Required. Config to update. This corresponds to the ``workstation_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Mask specifying which fields in the workstation configuration should be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workstations_v1beta.types.WorkstationConfig` A workstation configuration resource in the Cloud Workstations API.  Workstation configurations act as templates for workstations. The workstation configuration defines details such as the workstation virtual machine (VM) instance type, persistent storage, container image defining environment, which IDE or Code Editor to use, and more. Administrators and platform teams can also use [Identity and Access Management (IAM)](https://cloud.google.com/iam/docs/overview) rules to grant access to teams or to individual developers."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "workstation_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.UpdateWorkstationConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_workstation_config",
          "description": "Deletes the specified workstation configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_delete_workstation_config():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.DeleteWorkstationConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_workstation_config(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the workstation configuration to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workstations_v1beta.types.WorkstationConfig` A workstation configuration resource in the Cloud Workstations API.  Workstation configurations act as templates for workstations. The workstation configuration defines details such as the workstation virtual machine (VM) instance type, persistent storage, container image defining environment, which IDE or Code Editor to use, and more. Administrators and platform teams can also use [Identity and Access Management (IAM)](https://cloud.google.com/iam/docs/overview) rules to grant access to teams or to individual developers."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.DeleteWorkstationConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_workstation",
          "description": "Returns the requested workstation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_get_workstation():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.GetWorkstationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_workstation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.workstations_v1beta.types.GetWo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the requested resource.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workstations_v1beta.types.Workstation: A single instance of a developer workstation with its own persistent storage."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.GetWorkstationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_workstations",
          "description": "Returns all Workstations using the specified\nworkstation configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_list_workstations():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.ListWorkstationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_workstations(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            prin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workstations_v1beta.services.workstations.pagers.ListWorkstationsAsyncPager: Response message for ListWorkstations. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.ListWorkstationsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_usable_workstations",
          "description": "Returns all workstations using the specified\nworkstation configuration on which the caller has the\n\"workstations.workstations.use\" permission.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_list_usable_workstations():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.ListUsableWorkstationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_usable_workstations(request=request)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workstations_v1beta.services.workstations.pagers.ListUsableWorkstationsAsyncPager: Response message for ListUsableWorkstations. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.ListUsableWorkstationsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_workstation",
          "description": "Creates a new workstation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_create_workstation():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.CreateWorkstationRequest(\n            parent=\"parent_value\",\n            workstation_id=\"workstation_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_workstation(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workstation": {
                "type": "google.cloud.workstations_v1beta.types.Workstation",
                "description": "Required. Workstation to create. This corresponds to the ``workstation`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "workstation_id": {
                "type": "str",
                "description": "Required. ID to use for the workstation.  This corresponds to the ``workstation_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workstations_v1beta.types.Workstation` A single instance of a developer workstation with its own persistent storage."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "workstation",
              "workstation_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.CreateWorkstationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_workstation",
          "description": "Updates an existing workstation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_update_workstation():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.UpdateWorkstationRequest(\n        )\n\n        # Make the request\n        operation = client.update_workstation(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "workstation": {
                "type": "google.cloud.workstations_v1beta.types.Workstation",
                "description": "Required. Workstation to update. This corresponds to the ``workstation`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Mask specifying which fields in the workstation configuration should be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workstations_v1beta.types.Workstation` A single instance of a developer workstation with its own persistent storage."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "workstation",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.UpdateWorkstationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_workstation",
          "description": "Deletes the specified workstation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_delete_workstation():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.DeleteWorkstationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_workstation(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the respon",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the workstation to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workstations_v1beta.types.Workstation` A single instance of a developer workstation with its own persistent storage."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.DeleteWorkstationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_workstation",
          "description": "Starts running a workstation so that users can\nconnect to it.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_start_workstation():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.StartWorkstationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.start_workstation(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the workstation to start.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workstations_v1beta.types.Workstation` A single instance of a developer workstation with its own persistent storage."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.StartWorkstationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "stop_workstation",
          "description": "Stops running a workstation, reducing costs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_stop_workstation():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.StopWorkstationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.stop_workstation(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the workstation to stop.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.workstations_v1beta.types.Workstation` A single instance of a developer workstation with its own persistent storage."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.StopWorkstationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_access_token",
          "description": "Returns a short-lived credential that can be used to\nsend authenticated and authorized traffic to a\nworkstation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import workstations_v1beta\n\n    async def sample_generate_access_token():\n        # Create a client\n        client = workstations_v1beta.WorkstationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = workstations_v1beta.GenerateAccessTokenRequest(\n            workstation=\"workstation_value\",\n        )\n\n        # Make the request\n        response = await client.generate_access_token(request=request)\n\n        # Handle the res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "workstation": {
                "type": "str",
                "description": "Required. Name of the workstation for which the access token should be generated.  This corresponds to the ``workstation`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workstations_v1beta.types.GenerateAccessTokenResponse: Response message for GenerateAccessToken."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "workstation",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "workstations.GenerateAccessTokenRequest"
          ]
        }
      }
    ]
  }
}