{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-videointelligence\\google\\cloud\\videointelligence_v1\\types\\video_intelligence.py": [
    {
      "type": "request_class",
      "name": "AnnotateVideoRequest",
      "docstring": "Video annotation request.\n\nAttributes:\n    input_uri (str):\n        Input video location. Currently, only `Cloud\n        Storage <https://cloud.google.com/storage/>`__ URIs are\n        supported. URIs must be specified in the following format:\n        ``gs://bucket-id/object-id`` (other URI formats return\n        [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]).\n        For more information, see `Request\n        URIs <https://cloud.google.com/storage/docs/request-endpoints>`__.\n        To identify multiple videos, a video URI may include\n        wildcards in the ``object-id``. Supported wildcards: '*' to\n        match 0 or more characters; '?' to match 1 character. If\n        unset, the input video should be embedded in the request as\n        ``input_content``. If set, ``input_content`` must be unset.\n    input_content (bytes):\n        The video data bytes. If unset, the input video(s) should be\n        specified via the ``input_uri``. If set, ``input_uri`` must\n        be unset.\n    feat",
      "attributes": {
        "input_uri": {
          "type": "str",
          "description": "Input video location. Currently, only `Cloud Storage <https://cloud.google.com/storage/>`__ URIs are supported. URIs must be specified in the following format: ``gs://bucket-id/object-id`` (other URI formats return [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see `Request URIs <https://cloud.google.com/storage/docs/request-endpoints>`__. To identify multiple videos, a video URI may include wildcards in the ``object-id``. Supported wildcards: '*' to match 0 or more characters; '?' to match 1 character. If unset, the input video should be embedded in the request as ``input_content``. If set, ``input_content`` must be unset."
        },
        "input_content": {
          "type": "bytes",
          "description": "The video data bytes. If unset, the input video(s) should be specified via the ``input_uri``. If set, ``input_uri`` must be unset."
        },
        "features": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.Feature]",
          "description": "Required. Requested video annotation features."
        },
        "video_context": {
          "type": "google.cloud.videointelligence_v1.types.VideoContext",
          "description": "Additional video context and/or feature-specific parameters."
        },
        "output_uri": {
          "type": "str",
          "description": "Optional. Location where the output (in JSON format) should be stored. Currently, only `Cloud Storage <https://cloud.google.com/storage/>`__ URIs are supported. These must be specified in the following format: ``gs://bucket-id/object-id`` (other URI formats return [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see `Request URIs <https://cloud.google.com/storage/docs/request-endpoints>`__."
        },
        "location_id": {
          "type": "str",
          "description": "Optional. Cloud region where annotation should take place. Supported cloud regions are: ``us-east1``, ``us-west1``, ``europe-west1``, ``asia-east1``. If no region is specified, the region will be determined based on video file location."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VideoContext",
      "docstring": "Video context and/or feature-specific parameters.\n\nAttributes:\n    segments (MutableSequence[google.cloud.videointelligence_v1.types.VideoSegment]):\n        Video segments to annotate. The segments may\n        overlap and are not required to be contiguous or\n        span the whole video. If unspecified, each video\n        is treated as a single segment.\n    label_detection_config (google.cloud.videointelligence_v1.types.LabelDetectionConfig):\n        Config for LABEL_DETECTION.\n    shot_change_detection_config (google.cloud.videointelligence_v1.types.ShotChangeDetectionConfig):\n        Config for SHOT_CHANGE_DETECTION.\n    explicit_content_detection_config (google.cloud.videointelligence_v1.types.ExplicitContentDetectionConfig):\n        Config for EXPLICIT_CONTENT_DETECTION.\n    face_detection_config (google.cloud.videointelligence_v1.types.FaceDetectionConfig):\n        Config for FACE_DETECTION.\n    speech_transcription_config (google.cloud.videointelligence_v1.types.SpeechTranscriptionConfig):\n        Confi",
      "attributes": {
        "segments": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.VideoSegment]",
          "description": "Video segments to annotate. The segments may overlap and are not required to be contiguous or span the whole video. If unspecified, each video is treated as a single segment."
        },
        "label_detection_config": {
          "type": "google.cloud.videointelligence_v1.types.LabelDetectionConfig",
          "description": "Config for LABEL_DETECTION."
        },
        "shot_change_detection_config": {
          "type": "google.cloud.videointelligence_v1.types.ShotChangeDetectionConfig",
          "description": "Config for SHOT_CHANGE_DETECTION."
        },
        "explicit_content_detection_config": {
          "type": "google.cloud.videointelligence_v1.types.ExplicitContentDetectionConfig",
          "description": "Config for EXPLICIT_CONTENT_DETECTION."
        },
        "face_detection_config": {
          "type": "google.cloud.videointelligence_v1.types.FaceDetectionConfig",
          "description": "Config for FACE_DETECTION."
        },
        "speech_transcription_config": {
          "type": "google.cloud.videointelligence_v1.types.SpeechTranscriptionConfig",
          "description": "Config for SPEECH_TRANSCRIPTION."
        },
        "text_detection_config": {
          "type": "google.cloud.videointelligence_v1.types.TextDetectionConfig",
          "description": "Config for TEXT_DETECTION."
        },
        "person_detection_config": {
          "type": "google.cloud.videointelligence_v1.types.PersonDetectionConfig",
          "description": "Config for PERSON_DETECTION."
        },
        "object_tracking_config": {
          "type": "google.cloud.videointelligence_v1.types.ObjectTrackingConfig",
          "description": "Config for OBJECT_TRACKING."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LabelDetectionConfig",
      "docstring": "Config for LABEL_DETECTION.\n\nAttributes:\n    label_detection_mode (google.cloud.videointelligence_v1.types.LabelDetectionMode):\n        What labels should be detected with LABEL_DETECTION, in\n        addition to video-level labels or segment-level labels. If\n        unspecified, defaults to ``SHOT_MODE``.\n    stationary_camera (bool):\n        Whether the video has been shot from a stationary (i.e.,\n        non-moving) camera. When set to true, might improve\n        detection accuracy for moving objects. Should be used with\n        ``SHOT_AND_FRAME_MODE`` enabled.\n    model (str):\n        Model to use for label detection.\n        Supported values: \"builtin/stable\" (the default\n        if unset) and \"builtin/latest\".\n    frame_confidence_threshold (float):\n        The confidence threshold we perform filtering on the labels\n        from frame-level detection. If not set, it is set to 0.4 by\n        default. The valid range for this threshold is [0.1, 0.9].\n        Any value set outside of this range will be clip",
      "attributes": {
        "label_detection_mode": {
          "type": "google.cloud.videointelligence_v1.types.LabelDetectionMode",
          "description": "What labels should be detected with LABEL_DETECTION, in addition to video-level labels or segment-level labels. If unspecified, defaults to ``SHOT_MODE``."
        },
        "stationary_camera": {
          "type": "bool",
          "description": "Whether the video has been shot from a stationary (i.e., non-moving) camera. When set to true, might improve detection accuracy for moving objects. Should be used with ``SHOT_AND_FRAME_MODE`` enabled."
        },
        "model": {
          "type": "str",
          "description": "Model to use for label detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
        },
        "frame_confidence_threshold": {
          "type": "float",
          "description": "The confidence threshold we perform filtering on the labels from frame-level detection. If not set, it is set to 0.4 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model."
        },
        "video_confidence_threshold": {
          "type": "float",
          "description": "The confidence threshold we perform filtering on the labels from video-level and shot-level detections. If not set, it's set to 0.3 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ShotChangeDetectionConfig",
      "docstring": "Config for SHOT_CHANGE_DETECTION.\n\nAttributes:\n    model (str):\n        Model to use for shot change detection.\n        Supported values: \"builtin/stable\" (the default\n        if unset) and \"builtin/latest\".",
      "attributes": {
        "model": {
          "type": "str",
          "description": "Model to use for shot change detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ObjectTrackingConfig",
      "docstring": "Config for OBJECT_TRACKING.\n\nAttributes:\n    model (str):\n        Model to use for object tracking.\n        Supported values: \"builtin/stable\" (the default\n        if unset) and \"builtin/latest\".",
      "attributes": {
        "model": {
          "type": "str",
          "description": "Model to use for object tracking. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FaceDetectionConfig",
      "docstring": "Config for FACE_DETECTION.\n\nAttributes:\n    model (str):\n        Model to use for face detection.\n        Supported values: \"builtin/stable\" (the default\n        if unset) and \"builtin/latest\".\n    include_bounding_boxes (bool):\n        Whether bounding boxes are included in the\n        face annotation output.\n    include_attributes (bool):\n        Whether to enable face attributes detection, such as\n        glasses, dark_glasses, mouth_open etc. Ignored if\n        'include_bounding_boxes' is set to false.",
      "attributes": {
        "model": {
          "type": "str",
          "description": "Model to use for face detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
        },
        "include_bounding_boxes": {
          "type": "bool",
          "description": "Whether bounding boxes are included in the face annotation output."
        },
        "include_attributes": {
          "type": "bool",
          "description": "Whether to enable face attributes detection, such as glasses, dark_glasses, mouth_open etc. Ignored if 'include_bounding_boxes' is set to false."
        }
      }
    },
    {
      "type": "request_class",
      "name": "PersonDetectionConfig",
      "docstring": "Config for PERSON_DETECTION.\n\nAttributes:\n    include_bounding_boxes (bool):\n        Whether bounding boxes are included in the\n        person detection annotation output.\n    include_pose_landmarks (bool):\n        Whether to enable pose landmarks detection. Ignored if\n        'include_bounding_boxes' is set to false.\n    include_attributes (bool):\n        Whether to enable person attributes detection, such as cloth\n        color (black, blue, etc), type (coat, dress, etc), pattern\n        (plain, floral, etc), hair, etc. Ignored if\n        'include_bounding_boxes' is set to false.",
      "attributes": {
        "include_bounding_boxes": {
          "type": "bool",
          "description": "Whether bounding boxes are included in the person detection annotation output."
        },
        "include_pose_landmarks": {
          "type": "bool",
          "description": "Whether to enable pose landmarks detection. Ignored if 'include_bounding_boxes' is set to false."
        },
        "include_attributes": {
          "type": "bool",
          "description": "Whether to enable person attributes detection, such as cloth color (black, blue, etc), type (coat, dress, etc), pattern (plain, floral, etc), hair, etc. Ignored if 'include_bounding_boxes' is set to false."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ExplicitContentDetectionConfig",
      "docstring": "Config for EXPLICIT_CONTENT_DETECTION.\n\nAttributes:\n    model (str):\n        Model to use for explicit content detection.\n        Supported values: \"builtin/stable\" (the default\n        if unset) and \"builtin/latest\".",
      "attributes": {
        "model": {
          "type": "str",
          "description": "Model to use for explicit content detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TextDetectionConfig",
      "docstring": "Config for TEXT_DETECTION.\n\nAttributes:\n    language_hints (MutableSequence[str]):\n        Language hint can be specified if the\n        language to be detected is known a priori. It\n        can increase the accuracy of the detection.\n        Language hint must be language code in BCP-47\n        format.\n\n        Automatic language detection is performed if no\n        hint is provided.\n    model (str):\n        Model to use for text detection.\n        Supported values: \"builtin/stable\" (the default\n        if unset) and \"builtin/latest\".",
      "attributes": {
        "language_hints": {
          "type": "MutableSequence[str]",
          "description": "Language hint can be specified if the language to be detected is known a priori. It can increase the accuracy of the detection. Language hint must be language code in BCP-47 format.  Automatic language detection is performed if no hint is provided."
        },
        "model": {
          "type": "str",
          "description": "Model to use for text detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VideoSegment",
      "docstring": "Video segment.\n\nAttributes:\n    start_time_offset (google.protobuf.duration_pb2.Duration):\n        Time-offset, relative to the beginning of the\n        video, corresponding to the start of the segment\n        (inclusive).\n    end_time_offset (google.protobuf.duration_pb2.Duration):\n        Time-offset, relative to the beginning of the\n        video, corresponding to the end of the segment\n        (inclusive).",
      "attributes": {
        "start_time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Time-offset, relative to the beginning of the video, corresponding to the start of the segment (inclusive)."
        },
        "end_time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Time-offset, relative to the beginning of the video, corresponding to the end of the segment (inclusive)."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LabelSegment",
      "docstring": "Video segment level annotation results for label detection.\n\nAttributes:\n    segment (google.cloud.videointelligence_v1.types.VideoSegment):\n        Video segment where a label was detected.\n    confidence (float):\n        Confidence that the label is accurate. Range: [0, 1].",
      "attributes": {
        "segment": {
          "type": "google.cloud.videointelligence_v1.types.VideoSegment",
          "description": "Video segment where a label was detected."
        },
        "confidence": {
          "type": "float",
          "description": "Confidence that the label is accurate. Range: [0, 1]."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LabelFrame",
      "docstring": "Video frame level annotation results for label detection.\n\nAttributes:\n    time_offset (google.protobuf.duration_pb2.Duration):\n        Time-offset, relative to the beginning of the\n        video, corresponding to the video frame for this\n        location.\n    confidence (float):\n        Confidence that the label is accurate. Range: [0, 1].",
      "attributes": {
        "time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Time-offset, relative to the beginning of the video, corresponding to the video frame for this location."
        },
        "confidence": {
          "type": "float",
          "description": "Confidence that the label is accurate. Range: [0, 1]."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Entity",
      "docstring": "Detected entity from video analysis.\n\nAttributes:\n    entity_id (str):\n        Opaque entity ID. Some IDs may be available in `Google\n        Knowledge Graph Search\n        API <https://developers.google.com/knowledge-graph/>`__.\n    description (str):\n        Textual description, e.g., ``Fixed-gear bicycle``.\n    language_code (str):\n        Language code for ``description`` in BCP-47 format.",
      "attributes": {
        "entity_id": {
          "type": "str",
          "description": "Opaque entity ID. Some IDs may be available in `Google Knowledge Graph Search API <https://developers.google.com/knowledge-graph/>`__."
        },
        "description": {
          "type": "str",
          "description": "Textual description, e.g., ``Fixed-gear bicycle``."
        },
        "language_code": {
          "type": "str",
          "description": "Language code for ``description`` in BCP-47 format."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LabelAnnotation",
      "docstring": "Label annotation.\n\nAttributes:\n    entity (google.cloud.videointelligence_v1.types.Entity):\n        Detected entity.\n    category_entities (MutableSequence[google.cloud.videointelligence_v1.types.Entity]):\n        Common categories for the detected entity. For example, when\n        the label is ``Terrier``, the category is likely ``dog``.\n        And in some cases there might be more than one categories\n        e.g., ``Terrier`` could also be a ``pet``.\n    segments (MutableSequence[google.cloud.videointelligence_v1.types.LabelSegment]):\n        All video segments where a label was\n        detected.\n    frames (MutableSequence[google.cloud.videointelligence_v1.types.LabelFrame]):\n        All video frames where a label was detected.\n    version (str):\n        Feature version.",
      "attributes": {
        "entity": {
          "type": "google.cloud.videointelligence_v1.types.Entity",
          "description": "Detected entity."
        },
        "category_entities": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.Entity]",
          "description": "Common categories for the detected entity. For example, when the label is ``Terrier``, the category is likely ``dog``. And in some cases there might be more than one categories e.g., ``Terrier`` could also be a ``pet``."
        },
        "segments": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.LabelSegment]",
          "description": "All video segments where a label was detected."
        },
        "frames": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.LabelFrame]",
          "description": "All video frames where a label was detected."
        },
        "version": {
          "type": "str",
          "description": "Feature version."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ExplicitContentFrame",
      "docstring": "Video frame level annotation results for explicit content.\n\nAttributes:\n    time_offset (google.protobuf.duration_pb2.Duration):\n        Time-offset, relative to the beginning of the\n        video, corresponding to the video frame for this\n        location.\n    pornography_likelihood (google.cloud.videointelligence_v1.types.Likelihood):\n        Likelihood of the pornography content..",
      "attributes": {
        "time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Time-offset, relative to the beginning of the video, corresponding to the video frame for this location."
        },
        "pornography_likelihood": {
          "type": "google.cloud.videointelligence_v1.types.Likelihood",
          "description": "Likelihood of the pornography content.."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ExplicitContentAnnotation",
      "docstring": "Explicit content annotation (based on per-frame visual\nsignals only). If no explicit content has been detected in a\nframe, no annotations are present for that frame.\n\nAttributes:\n    frames (MutableSequence[google.cloud.videointelligence_v1.types.ExplicitContentFrame]):\n        All video frames where explicit content was\n        detected.\n    version (str):\n        Feature version.",
      "attributes": {
        "frames": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.ExplicitContentFrame]",
          "description": "All video frames where explicit content was detected."
        },
        "version": {
          "type": "str",
          "description": "Feature version."
        }
      }
    },
    {
      "type": "request_class",
      "name": "NormalizedBoundingBox",
      "docstring": "Normalized bounding box. The normalized vertex coordinates are\nrelative to the original image. Range: [0, 1].\n\nAttributes:\n    left (float):\n        Left X coordinate.\n    top (float):\n        Top Y coordinate.\n    right (float):\n        Right X coordinate.\n    bottom (float):\n        Bottom Y coordinate.",
      "attributes": {
        "left": {
          "type": "float",
          "description": "Left X coordinate."
        },
        "top": {
          "type": "float",
          "description": "Top Y coordinate."
        },
        "right": {
          "type": "float",
          "description": "Right X coordinate."
        },
        "bottom": {
          "type": "float",
          "description": "Bottom Y coordinate."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FaceDetectionAnnotation",
      "docstring": "Face detection annotation.\n\nAttributes:\n    tracks (MutableSequence[google.cloud.videointelligence_v1.types.Track]):\n        The face tracks with attributes.\n    thumbnail (bytes):\n        The thumbnail of a person's face.\n    version (str):\n        Feature version.",
      "attributes": {
        "tracks": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.Track]",
          "description": "The face tracks with attributes."
        },
        "thumbnail": {
          "type": "bytes",
          "description": "The thumbnail of a person's face."
        },
        "version": {
          "type": "str",
          "description": "Feature version."
        }
      }
    },
    {
      "type": "request_class",
      "name": "PersonDetectionAnnotation",
      "docstring": "Person detection annotation per video.\n\nAttributes:\n    tracks (MutableSequence[google.cloud.videointelligence_v1.types.Track]):\n        The detected tracks of a person.\n    version (str):\n        Feature version.",
      "attributes": {
        "tracks": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.Track]",
          "description": "The detected tracks of a person."
        },
        "version": {
          "type": "str",
          "description": "Feature version."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FaceSegment",
      "docstring": "Video segment level annotation results for face detection.\n\nAttributes:\n    segment (google.cloud.videointelligence_v1.types.VideoSegment):\n        Video segment where a face was detected.",
      "attributes": {
        "segment": {
          "type": "google.cloud.videointelligence_v1.types.VideoSegment",
          "description": "Video segment where a face was detected."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FaceFrame",
      "docstring": "Deprecated. No effect.\n\nAttributes:\n    normalized_bounding_boxes (MutableSequence[google.cloud.videointelligence_v1.types.NormalizedBoundingBox]):\n        Normalized Bounding boxes in a frame.\n        There can be more than one boxes if the same\n        face is detected in multiple locations within\n        the current frame.\n    time_offset (google.protobuf.duration_pb2.Duration):\n        Time-offset, relative to the beginning of the\n        video, corresponding to the video frame for this\n        location.",
      "attributes": {
        "normalized_bounding_boxes": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.NormalizedBoundingBox]",
          "description": "Normalized Bounding boxes in a frame. There can be more than one boxes if the same face is detected in multiple locations within the current frame."
        },
        "time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Time-offset, relative to the beginning of the video, corresponding to the video frame for this location."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FaceAnnotation",
      "docstring": "Deprecated. No effect.\n\nAttributes:\n    thumbnail (bytes):\n        Thumbnail of a representative face view (in\n        JPEG format).\n    segments (MutableSequence[google.cloud.videointelligence_v1.types.FaceSegment]):\n        All video segments where a face was detected.\n    frames (MutableSequence[google.cloud.videointelligence_v1.types.FaceFrame]):\n        All video frames where a face was detected.",
      "attributes": {
        "thumbnail": {
          "type": "bytes",
          "description": "Thumbnail of a representative face view (in JPEG format)."
        },
        "segments": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.FaceSegment]",
          "description": "All video segments where a face was detected."
        },
        "frames": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.FaceFrame]",
          "description": "All video frames where a face was detected."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TimestampedObject",
      "docstring": "For tracking related features. An object at time_offset with\nattributes, and located with normalized_bounding_box.\n\nAttributes:\n    normalized_bounding_box (google.cloud.videointelligence_v1.types.NormalizedBoundingBox):\n        Normalized Bounding box in a frame, where the\n        object is located.\n    time_offset (google.protobuf.duration_pb2.Duration):\n        Time-offset, relative to the beginning of the\n        video, corresponding to the video frame for this\n        object.\n    attributes (MutableSequence[google.cloud.videointelligence_v1.types.DetectedAttribute]):\n        Optional. The attributes of the object in the\n        bounding box.\n    landmarks (MutableSequence[google.cloud.videointelligence_v1.types.DetectedLandmark]):\n        Optional. The detected landmarks.",
      "attributes": {
        "normalized_bounding_box": {
          "type": "google.cloud.videointelligence_v1.types.NormalizedBoundingBox",
          "description": "Normalized Bounding box in a frame, where the object is located."
        },
        "time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Time-offset, relative to the beginning of the video, corresponding to the video frame for this object."
        },
        "attributes": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.DetectedAttribute]",
          "description": "Optional. The attributes of the object in the bounding box."
        },
        "landmarks": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.DetectedLandmark]",
          "description": "Optional. The detected landmarks."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Track",
      "docstring": "A track of an object instance.\n\nAttributes:\n    segment (google.cloud.videointelligence_v1.types.VideoSegment):\n        Video segment of a track.\n    timestamped_objects (MutableSequence[google.cloud.videointelligence_v1.types.TimestampedObject]):\n        The object with timestamp and attributes per\n        frame in the track.\n    attributes (MutableSequence[google.cloud.videointelligence_v1.types.DetectedAttribute]):\n        Optional. Attributes in the track level.\n    confidence (float):\n        Optional. The confidence score of the tracked\n        object.",
      "attributes": {
        "segment": {
          "type": "google.cloud.videointelligence_v1.types.VideoSegment",
          "description": "Video segment of a track."
        },
        "timestamped_objects": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.TimestampedObject]",
          "description": "The object with timestamp and attributes per frame in the track."
        },
        "attributes": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.DetectedAttribute]",
          "description": "Optional. Attributes in the track level."
        },
        "confidence": {
          "type": "float",
          "description": "Optional. The confidence score of the tracked object."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DetectedAttribute",
      "docstring": "A generic detected attribute represented by name in string\nformat.\n\nAttributes:\n    name (str):\n        The name of the attribute, for example, glasses,\n        dark_glasses, mouth_open. A full list of supported type\n        names will be provided in the document.\n    confidence (float):\n        Detected attribute confidence. Range [0, 1].\n    value (str):\n        Text value of the detection result. For\n        example, the value for \"HairColor\" can be\n        \"black\", \"blonde\", etc.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The name of the attribute, for example, glasses, dark_glasses, mouth_open. A full list of supported type names will be provided in the document."
        },
        "confidence": {
          "type": "float",
          "description": "Detected attribute confidence. Range [0, 1]."
        },
        "value": {
          "type": "str",
          "description": "Text value of the detection result. For example, the value for \"HairColor\" can be \"black\", \"blonde\", etc."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DetectedLandmark",
      "docstring": "A generic detected landmark represented by name in string\nformat and a 2D location.\n\nAttributes:\n    name (str):\n        The name of this landmark, for example, left_hand,\n        right_shoulder.\n    point (google.cloud.videointelligence_v1.types.NormalizedVertex):\n        The 2D point of the detected landmark using\n        the normalized image coordindate system. The\n        normalized coordinates have the range from 0 to\n        1.\n    confidence (float):\n        The confidence score of the detected landmark. Range [0, 1].",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The name of this landmark, for example, left_hand, right_shoulder."
        },
        "point": {
          "type": "google.cloud.videointelligence_v1.types.NormalizedVertex",
          "description": "The 2D point of the detected landmark using the normalized image coordindate system. The normalized coordinates have the range from 0 to 1."
        },
        "confidence": {
          "type": "float",
          "description": "The confidence score of the detected landmark. Range [0, 1]."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VideoAnnotationResults",
      "docstring": "Annotation results for a single video.\n\nAttributes:\n    input_uri (str):\n        Video file location in `Cloud\n        Storage <https://cloud.google.com/storage/>`__.\n    segment (google.cloud.videointelligence_v1.types.VideoSegment):\n        Video segment on which the annotation is run.\n    segment_label_annotations (MutableSequence[google.cloud.videointelligence_v1.types.LabelAnnotation]):\n        Topical label annotations on video level or\n        user-specified segment level. There is exactly\n        one element for each unique label.\n    segment_presence_label_annotations (MutableSequence[google.cloud.videointelligence_v1.types.LabelAnnotation]):\n        Presence label annotations on video level or user-specified\n        segment level. There is exactly one element for each unique\n        label. Compared to the existing topical\n        ``segment_label_annotations``, this field presents more\n        fine-grained, segment-level labels detected in video content\n        and is made available only when the cli",
      "attributes": {
        "input_uri": {
          "type": "str",
          "description": "Video file location in `Cloud Storage <https://cloud.google.com/storage/>`__."
        },
        "segment": {
          "type": "google.cloud.videointelligence_v1.types.VideoSegment",
          "description": "Video segment on which the annotation is run."
        },
        "segment_label_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.LabelAnnotation]",
          "description": "Topical label annotations on video level or user-specified segment level. There is exactly one element for each unique label."
        },
        "segment_presence_label_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.LabelAnnotation]",
          "description": "Presence label annotations on video level or user-specified segment level. There is exactly one element for each unique label. Compared to the existing topical ``segment_label_annotations``, this field presents more fine-grained, segment-level labels detected in video content and is made available only when the client sets ``LabelDetectionConfig.model`` to \"builtin/latest\" in the request."
        },
        "shot_label_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.LabelAnnotation]",
          "description": "Topical label annotations on shot level. There is exactly one element for each unique label."
        },
        "shot_presence_label_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.LabelAnnotation]",
          "description": "Presence label annotations on shot level. There is exactly one element for each unique label. Compared to the existing topical ``shot_label_annotations``, this field presents more fine-grained, shot-level labels detected in video content and is made available only when the client sets ``LabelDetectionConfig.model`` to \"builtin/latest\" in the request."
        },
        "frame_label_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.LabelAnnotation]",
          "description": "Label annotations on frame level. There is exactly one element for each unique label."
        },
        "face_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.FaceAnnotation]",
          "description": "Deprecated. Please use ``face_detection_annotations`` instead."
        },
        "face_detection_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.FaceDetectionAnnotation]",
          "description": "Face detection annotations."
        },
        "shot_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.VideoSegment]",
          "description": "Shot annotations. Each shot is represented as a video segment."
        },
        "explicit_annotation": {
          "type": "google.cloud.videointelligence_v1.types.ExplicitContentAnnotation",
          "description": "Explicit content annotation."
        },
        "speech_transcriptions": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.SpeechTranscription]",
          "description": "Speech transcription."
        },
        "text_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.TextAnnotation]",
          "description": "OCR text detection and tracking. Annotations for list of detected text snippets. Each will have list of frame information associated with it."
        },
        "object_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.ObjectTrackingAnnotation]",
          "description": "Annotations for list of objects detected and tracked in video."
        },
        "logo_recognition_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.LogoRecognitionAnnotation]",
          "description": "Annotations for list of logos detected, tracked and recognized in video."
        },
        "person_detection_annotations": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.PersonDetectionAnnotation]",
          "description": "Person detection annotations."
        },
        "error": {
          "type": "google.rpc.status_pb2.Status",
          "description": "If set, indicates an error. Note that for a single ``AnnotateVideoRequest`` some videos may succeed and some may fail."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AnnotateVideoResponse",
      "docstring": "Video annotation response. Included in the ``response`` field of the\n``Operation`` returned by the ``GetOperation`` call of the\n``google::longrunning::Operations`` service.\n\nAttributes:\n    annotation_results (MutableSequence[google.cloud.videointelligence_v1.types.VideoAnnotationResults]):\n        Annotation results for all videos specified in\n        ``AnnotateVideoRequest``.",
      "attributes": {
        "annotation_results": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.VideoAnnotationResults]",
          "description": "Annotation results for all videos specified in ``AnnotateVideoRequest``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VideoAnnotationProgress",
      "docstring": "Annotation progress for a single video.\n\nAttributes:\n    input_uri (str):\n        Video file location in `Cloud\n        Storage <https://cloud.google.com/storage/>`__.\n    progress_percent (int):\n        Approximate percentage processed thus far.\n        Guaranteed to be 100 when fully processed.\n    start_time (google.protobuf.timestamp_pb2.Timestamp):\n        Time when the request was received.\n    update_time (google.protobuf.timestamp_pb2.Timestamp):\n        Time of the most recent update.\n    feature (google.cloud.videointelligence_v1.types.Feature):\n        Specifies which feature is being tracked if\n        the request contains more than one feature.\n    segment (google.cloud.videointelligence_v1.types.VideoSegment):\n        Specifies which segment is being tracked if\n        the request contains more than one segment.",
      "attributes": {
        "input_uri": {
          "type": "str",
          "description": "Video file location in `Cloud Storage <https://cloud.google.com/storage/>`__."
        },
        "progress_percent": {
          "type": "int",
          "description": "Approximate percentage processed thus far. Guaranteed to be 100 when fully processed."
        },
        "start_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Time when the request was received."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Time of the most recent update."
        },
        "feature": {
          "type": "google.cloud.videointelligence_v1.types.Feature",
          "description": "Specifies which feature is being tracked if the request contains more than one feature."
        },
        "segment": {
          "type": "google.cloud.videointelligence_v1.types.VideoSegment",
          "description": "Specifies which segment is being tracked if the request contains more than one segment."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AnnotateVideoProgress",
      "docstring": "Video annotation progress. Included in the ``metadata`` field of the\n``Operation`` returned by the ``GetOperation`` call of the\n``google::longrunning::Operations`` service.\n\nAttributes:\n    annotation_progress (MutableSequence[google.cloud.videointelligence_v1.types.VideoAnnotationProgress]):\n        Progress metadata for all videos specified in\n        ``AnnotateVideoRequest``.",
      "attributes": {
        "annotation_progress": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.VideoAnnotationProgress]",
          "description": "Progress metadata for all videos specified in ``AnnotateVideoRequest``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SpeechTranscriptionConfig",
      "docstring": "Config for SPEECH_TRANSCRIPTION.\n\nAttributes:\n    language_code (str):\n        Required. *Required* The language of the supplied audio as a\n        `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__\n        language tag. Example: \"en-US\". See `Language\n        Support <https://cloud.google.com/speech/docs/languages>`__\n        for a list of the currently supported language codes.\n    max_alternatives (int):\n        Optional. Maximum number of recognition hypotheses to be\n        returned. Specifically, the maximum number of\n        ``SpeechRecognitionAlternative`` messages within each\n        ``SpeechTranscription``. The server may return fewer than\n        ``max_alternatives``. Valid values are ``0``-``30``. A value\n        of ``0`` or ``1`` will return a maximum of one. If omitted,\n        will return a maximum of one.\n    filter_profanity (bool):\n        Optional. If set to ``true``, the server will attempt to\n        filter out profanities, replacing all but the initial\n        character in each fi",
      "attributes": {
        "language_code": {
          "type": "str",
          "description": "Required. *Required* The language of the supplied audio as a `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language tag. Example: \"en-US\". See `Language Support <https://cloud.google.com/speech/docs/languages>`__ for a list of the currently supported language codes."
        },
        "max_alternatives": {
          "type": "int",
          "description": "Optional. Maximum number of recognition hypotheses to be returned. Specifically, the maximum number of ``SpeechRecognitionAlternative`` messages within each ``SpeechTranscription``. The server may return fewer than ``max_alternatives``. Valid values are ``0``-``30``. A value of ``0`` or ``1`` will return a maximum of one. If omitted, will return a maximum of one."
        },
        "filter_profanity": {
          "type": "bool",
          "description": "Optional. If set to ``true``, the server will attempt to filter out profanities, replacing all but the initial character in each filtered word with asterisks, e.g. \"f***\". If set to ``false`` or omitted, profanities won't be filtered out."
        },
        "speech_contexts": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.SpeechContext]",
          "description": "Optional. A means to provide context to assist the speech recognition."
        },
        "enable_automatic_punctuation": {
          "type": "bool",
          "description": "Optional. If 'true', adds punctuation to recognition result hypotheses. This feature is only available in select languages. Setting this for requests in other languages has no effect at all. The default 'false' value does not add punctuation to result hypotheses. NOTE: \"This is currently offered as an experimental service, complimentary to all users. In the future this may be exclusively available as a premium feature.\"."
        },
        "audio_tracks": {
          "type": "MutableSequence[int]",
          "description": "Optional. For file formats, such as MXF or MKV, supporting multiple audio tracks, specify up to two tracks. Default: track 0."
        },
        "enable_speaker_diarization": {
          "type": "bool",
          "description": "Optional. If 'true', enables speaker detection for each recognized word in the top alternative of the recognition result using a speaker_tag provided in the WordInfo. Note: When this is true, we send all the words from the beginning of the audio for the top alternative in every consecutive response. This is done in order to improve our speaker tags as our models learn to identify the speakers in the conversation over time."
        },
        "diarization_speaker_count": {
          "type": "int",
          "description": "Optional. If set, specifies the estimated number of speakers in the conversation. If not set, defaults to '2'. Ignored unless enable_speaker_diarization is set to true."
        },
        "enable_word_confidence": {
          "type": "bool",
          "description": "Optional. If ``true``, the top result includes a list of words and the confidence for those words. If ``false``, no word-level confidence information is returned. The default is ``false``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SpeechContext",
      "docstring": "Provides \"hints\" to the speech recognizer to favor specific\nwords and phrases in the results.\n\nAttributes:\n    phrases (MutableSequence[str]):\n        Optional. A list of strings containing words and phrases\n        \"hints\" so that the speech recognition is more likely to\n        recognize them. This can be used to improve the accuracy for\n        specific words and phrases, for example, if specific\n        commands are typically spoken by the user. This can also be\n        used to add additional words to the vocabulary of the\n        recognizer. See `usage\n        limits <https://cloud.google.com/speech/limits#content>`__.",
      "attributes": {
        "phrases": {
          "type": "MutableSequence[str]",
          "description": "Optional. A list of strings containing words and phrases \"hints\" so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer. See `usage limits <https://cloud.google.com/speech/limits#content>`__."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SpeechTranscription",
      "docstring": "A speech recognition result corresponding to a portion of the\naudio.\n\nAttributes:\n    alternatives (MutableSequence[google.cloud.videointelligence_v1.types.SpeechRecognitionAlternative]):\n        May contain one or more recognition hypotheses (up to the\n        maximum specified in ``max_alternatives``). These\n        alternatives are ordered in terms of accuracy, with the top\n        (first) alternative being the most probable, as ranked by\n        the recognizer.\n    language_code (str):\n        Output only. The\n        `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__\n        language tag of the language in this result. This language\n        code was detected to have the most likelihood of being\n        spoken in the audio.",
      "attributes": {
        "alternatives": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.SpeechRecognitionAlternative]",
          "description": "May contain one or more recognition hypotheses (up to the maximum specified in ``max_alternatives``). These alternatives are ordered in terms of accuracy, with the top (first) alternative being the most probable, as ranked by the recognizer."
        },
        "language_code": {
          "type": "str",
          "description": "Output only. The `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language tag of the language in this result. This language code was detected to have the most likelihood of being spoken in the audio."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SpeechRecognitionAlternative",
      "docstring": "Alternative hypotheses (a.k.a. n-best list).\n\nAttributes:\n    transcript (str):\n        Transcript text representing the words that\n        the user spoke.\n    confidence (float):\n        Output only. The confidence estimate between 0.0 and 1.0. A\n        higher number indicates an estimated greater likelihood that\n        the recognized words are correct. This field is set only for\n        the top alternative. This field is not guaranteed to be\n        accurate and users should not rely on it to be always\n        provided. The default of 0.0 is a sentinel value indicating\n        ``confidence`` was not set.\n    words (MutableSequence[google.cloud.videointelligence_v1.types.WordInfo]):\n        Output only. A list of word-specific information for each\n        recognized word. Note: When ``enable_speaker_diarization``\n        is set to true, you will see all the words from the\n        beginning of the audio.",
      "attributes": {
        "transcript": {
          "type": "str",
          "description": "Transcript text representing the words that the user spoke."
        },
        "confidence": {
          "type": "float",
          "description": "Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating ``confidence`` was not set."
        },
        "words": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.WordInfo]",
          "description": "Output only. A list of word-specific information for each recognized word. Note: When ``enable_speaker_diarization`` is set to true, you will see all the words from the beginning of the audio."
        }
      }
    },
    {
      "type": "request_class",
      "name": "WordInfo",
      "docstring": "Word-specific information for recognized words. Word information is\nonly included in the response when certain request parameters are\nset, such as ``enable_word_time_offsets``.\n\nAttributes:\n    start_time (google.protobuf.duration_pb2.Duration):\n        Time offset relative to the beginning of the audio, and\n        corresponding to the start of the spoken word. This field is\n        only set if ``enable_word_time_offsets=true`` and only in\n        the top hypothesis. This is an experimental feature and the\n        accuracy of the time offset can vary.\n    end_time (google.protobuf.duration_pb2.Duration):\n        Time offset relative to the beginning of the audio, and\n        corresponding to the end of the spoken word. This field is\n        only set if ``enable_word_time_offsets=true`` and only in\n        the top hypothesis. This is an experimental feature and the\n        accuracy of the time offset can vary.\n    word (str):\n        The word corresponding to this set of\n        information.\n    confidence (f",
      "attributes": {
        "start_time": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Time offset relative to the beginning of the audio, and corresponding to the start of the spoken word. This field is only set if ``enable_word_time_offsets=true`` and only in the top hypothesis. This is an experimental feature and the accuracy of the time offset can vary."
        },
        "end_time": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Time offset relative to the beginning of the audio, and corresponding to the end of the spoken word. This field is only set if ``enable_word_time_offsets=true`` and only in the top hypothesis. This is an experimental feature and the accuracy of the time offset can vary."
        },
        "word": {
          "type": "str",
          "description": "The word corresponding to this set of information."
        },
        "confidence": {
          "type": "float",
          "description": "Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating ``confidence`` was not set."
        },
        "speaker_tag": {
          "type": "int",
          "description": "Output only. A distinct integer value is assigned for every speaker within the audio. This field specifies which one of those speakers was detected to have spoken this word. Value ranges from 1 up to diarization_speaker_count, and is only set if speaker diarization is enabled."
        }
      }
    },
    {
      "type": "request_class",
      "name": "NormalizedVertex",
      "docstring": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the\noriginal image and range from 0 to 1.\n\nAttributes:\n    x (float):\n        X coordinate.\n    y (float):\n        Y coordinate.",
      "attributes": {
        "x": {
          "type": "float",
          "description": "X coordinate."
        },
        "y": {
          "type": "float",
          "description": "Y coordinate."
        }
      }
    },
    {
      "type": "request_class",
      "name": "NormalizedBoundingPoly",
      "docstring": "Normalized bounding polygon for text (that might not be aligned with\naxis). Contains list of the corner points in clockwise order\nstarting from top-left corner. For example, for a rectangular\nbounding box: When the text is horizontal it might look like: 0----1\n\\| \\| 3----2\n\nWhen it's clockwise rotated 180 degrees around the top-left corner\nit becomes: 2----3 \\| \\| 1----0\n\nand the vertex order will still be (0, 1, 2, 3). Note that values\ncan be less than 0, or greater than 1 due to trignometric\ncalculations for location of the box.\n\nAttributes:\n    vertices (MutableSequence[google.cloud.videointelligence_v1.types.NormalizedVertex]):\n        Normalized vertices of the bounding polygon.",
      "attributes": {
        "vertices": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.NormalizedVertex]",
          "description": "Normalized vertices of the bounding polygon."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TextSegment",
      "docstring": "Video segment level annotation results for text detection.\n\nAttributes:\n    segment (google.cloud.videointelligence_v1.types.VideoSegment):\n        Video segment where a text snippet was\n        detected.\n    confidence (float):\n        Confidence for the track of detected text. It\n        is calculated as the highest over all frames\n        where OCR detected text appears.\n    frames (MutableSequence[google.cloud.videointelligence_v1.types.TextFrame]):\n        Information related to the frames where OCR\n        detected text appears.",
      "attributes": {
        "segment": {
          "type": "google.cloud.videointelligence_v1.types.VideoSegment",
          "description": "Video segment where a text snippet was detected."
        },
        "confidence": {
          "type": "float",
          "description": "Confidence for the track of detected text. It is calculated as the highest over all frames where OCR detected text appears."
        },
        "frames": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.TextFrame]",
          "description": "Information related to the frames where OCR detected text appears."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TextFrame",
      "docstring": "Video frame level annotation results for text annotation\n(OCR). Contains information regarding timestamp and bounding box\nlocations for the frames containing detected OCR text snippets.\n\nAttributes:\n    rotated_bounding_box (google.cloud.videointelligence_v1.types.NormalizedBoundingPoly):\n        Bounding polygon of the detected text for\n        this frame.\n    time_offset (google.protobuf.duration_pb2.Duration):\n        Timestamp of this frame.",
      "attributes": {
        "rotated_bounding_box": {
          "type": "google.cloud.videointelligence_v1.types.NormalizedBoundingPoly",
          "description": "Bounding polygon of the detected text for this frame."
        },
        "time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Timestamp of this frame."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TextAnnotation",
      "docstring": "Annotations related to one detected OCR text snippet. This\nwill contain the corresponding text, confidence value, and frame\nlevel information for each detection.\n\nAttributes:\n    text (str):\n        The detected text.\n    segments (MutableSequence[google.cloud.videointelligence_v1.types.TextSegment]):\n        All video segments where OCR detected text\n        appears.\n    version (str):\n        Feature version.",
      "attributes": {
        "text": {
          "type": "str",
          "description": "The detected text."
        },
        "segments": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.TextSegment]",
          "description": "All video segments where OCR detected text appears."
        },
        "version": {
          "type": "str",
          "description": "Feature version."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ObjectTrackingFrame",
      "docstring": "Video frame level annotations for object detection and\ntracking. This field stores per frame location, time offset, and\nconfidence.\n\nAttributes:\n    normalized_bounding_box (google.cloud.videointelligence_v1.types.NormalizedBoundingBox):\n        The normalized bounding box location of this\n        object track for the frame.\n    time_offset (google.protobuf.duration_pb2.Duration):\n        The timestamp of the frame in microseconds.",
      "attributes": {
        "normalized_bounding_box": {
          "type": "google.cloud.videointelligence_v1.types.NormalizedBoundingBox",
          "description": "The normalized bounding box location of this object track for the frame."
        },
        "time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "The timestamp of the frame in microseconds."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ObjectTrackingAnnotation",
      "docstring": "Annotations corresponding to one tracked object.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    segment (google.cloud.videointelligence_v1.types.VideoSegment):\n        Non-streaming batch mode ONLY.\n        Each object track corresponds to one video\n        segment where it appears.\n\n        This field is a member of `oneof`_ ``track_info``.\n    track_id (int):\n        Streaming mode ONLY. In streaming mode, we do not know the\n        end time of a tracked object before it is completed. Hence,\n        there is no VideoSegment info returned. Instead, we provide\n        a unique identifiable integer track_id so that the customers\n        can correlate the results of the ongoing\n        ObjectTrackAnnotation of the same track_id over ",
      "attributes": {
        "segment": {
          "type": "google.cloud.videointelligence_v1.types.VideoSegment",
          "description": "Non-streaming batch mode ONLY. Each object track corresponds to one video segment where it appears.  This field is a member of `oneof`_ ``track_info``."
        },
        "track_id": {
          "type": "int",
          "description": "Streaming mode ONLY. In streaming mode, we do not know the end time of a tracked object before it is completed. Hence, there is no VideoSegment info returned. Instead, we provide a unique identifiable integer track_id so that the customers can correlate the results of the ongoing ObjectTrackAnnotation of the same track_id over time.  This field is a member of `oneof`_ ``track_info``."
        },
        "entity": {
          "type": "google.cloud.videointelligence_v1.types.Entity",
          "description": "Entity to specify the object category that this track is labeled as."
        },
        "confidence": {
          "type": "float",
          "description": "Object category's labeling confidence of this track."
        },
        "frames": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.ObjectTrackingFrame]",
          "description": "Information corresponding to all frames where this object track appears. Non-streaming batch mode: it may be one or multiple ObjectTrackingFrame messages in frames. Streaming mode: it can only be one ObjectTrackingFrame message in frames."
        },
        "version": {
          "type": "str",
          "description": "Feature version."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LogoRecognitionAnnotation",
      "docstring": "Annotation corresponding to one detected, tracked and\nrecognized logo class.\n\nAttributes:\n    entity (google.cloud.videointelligence_v1.types.Entity):\n        Entity category information to specify the\n        logo class that all the logo tracks within this\n        LogoRecognitionAnnotation are recognized as.\n    tracks (MutableSequence[google.cloud.videointelligence_v1.types.Track]):\n        All logo tracks where the recognized logo\n        appears. Each track corresponds to one logo\n        instance appearing in consecutive frames.\n    segments (MutableSequence[google.cloud.videointelligence_v1.types.VideoSegment]):\n        All video segments where the recognized logo\n        appears. There might be multiple instances of\n        the same logo class appearing in one\n        VideoSegment.",
      "attributes": {
        "entity": {
          "type": "google.cloud.videointelligence_v1.types.Entity",
          "description": "Entity category information to specify the logo class that all the logo tracks within this LogoRecognitionAnnotation are recognized as."
        },
        "tracks": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.Track]",
          "description": "All logo tracks where the recognized logo appears. Each track corresponds to one logo instance appearing in consecutive frames."
        },
        "segments": {
          "type": "MutableSequence[google.cloud.videointelligence_v1.types.VideoSegment]",
          "description": "All video segments where the recognized logo appears. There might be multiple instances of the same logo class appearing in one VideoSegment."
        }
      }
    }
  ]
}