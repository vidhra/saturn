{
  "DataSourcesService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_data_source",
          "description": "Retrieves the data source configuration for the given\naccount.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_datasources_v1beta\n\n    async def sample_get_data_source():\n        # Create a client\n        client = merchant_datasources_v1beta.DataSourcesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_datasources_v1beta.GetDataSourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_data_source(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the data source to retrieve. Format: ``accounts/{account}/dataSources/{datasource}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_datasources_v1beta.types.DataSource: The [data source](\\ https://support.google.com/merchants/answer/7439058) for the Merchant Center account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datasources.GetDataSourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_data_sources",
          "description": "Lists the configurations for data sources for the\ngiven account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_datasources_v1beta\n\n    async def sample_list_data_sources():\n        # Create a client\n        client = merchant_datasources_v1beta.DataSourcesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_datasources_v1beta.ListDataSourcesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_data_sources(request=request)\n\n        # Handle the response\n        async for response in page",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The account to list data sources for. Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_datasources_v1beta.services.data_sources_service.pagers.ListDataSourcesAsyncPager: Response message for the ListDataSources method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datasources.ListDataSourcesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_data_source",
          "description": "Creates the new data source configuration for the\ngiven account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_datasources_v1beta\n\n    async def sample_create_data_source():\n        # Create a client\n        client = merchant_datasources_v1beta.DataSourcesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        data_source = merchant_datasources_v1beta.DataSource()\n        data_source.primary_product_data_source.channel = \"PRODUCTS\"\n        data_source.display_name = \"display_name_value\"\n\n        request = merchant_datasources_v1beta.CreateDataSourceRequest(\n           ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The account where this data source will be created. Format: ``accounts/{account}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "data_source": {
                "type": "google.shopping.merchant_datasources_v1beta.types.DataSource",
                "description": "Required. The data source to create. This corresponds to the ``data_source`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_datasources_v1beta.types.DataSource: The [data source](\\ https://support.google.com/merchants/answer/7439058) for the Merchant Center account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "data_source",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datasources.CreateDataSourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_data_source",
          "description": "Updates the existing data source configuration. The\nfields that are set in the update mask but not provided\nin the resource will be deleted.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_datasources_v1beta\n\n    async def sample_update_data_source():\n        # Create a client\n        client = merchant_datasources_v1beta.DataSourcesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        data_source = merchant_datasources_v1beta.DataSource()\n        data_source.primary_product_data_source.channel = \"PRODUCTS\"\n        data_source.display_name = \"display_name_value\"\n\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "data_source": {
                "type": "google.shopping.merchant_datasources_v1beta.types.DataSource",
                "description": "Required. The data source resource to update.  This corresponds to the ``data_source`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of data source fields to be updated.  Fields specified in the update mask without a value specified in the body will be deleted from the data source.  Providing special \"*\" value for full data source replacement is not supported.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_datasources_v1beta.types.DataSource: The [data source](\\ https://support.google.com/merchants/answer/7439058) for the Merchant Center account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "data_source",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datasources.UpdateDataSourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_data_source",
          "description": "Deletes a data source from your Merchant Center\naccount.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_datasources_v1beta\n\n    async def sample_delete_data_source():\n        # Create a client\n        client = merchant_datasources_v1beta.DataSourcesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_datasources_v1beta.DeleteDataSourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_data_source(request=request)\n\nArgs:\n    request (Optional[Union[google.shopping.merchant_datasources_v1beta.typ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the data source to delete. Format: ``accounts/{account}/dataSources/{datasource}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datasources.DeleteDataSourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_data_source",
          "description": "Performs the data fetch immediately (even outside\nfetch schedule) on a data source from your Merchant\nCenter Account. If you need to call this method more\nthan once per day, you should use the Products service\nto update your product data instead.\nThis method only works on data sources with a file input\nset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_datasources_v1beta\n\n    async def sample_fetch_data_source():\n        # Create a client\n        client = merchant_datasources_v1beta.DataSourcesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_d",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datasources.FetchDataSourceRequest"
          ]
        }
      }
    ]
  },
  "FileUploadsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_file_upload",
          "description": "Gets the latest data source file upload. Only the ``latest``\nalias is accepted for a file upload.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.shopping import merchant_datasources_v1beta\n\n    async def sample_get_file_upload():\n        # Create a client\n        client = merchant_datasources_v1beta.FileUploadsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = merchant_datasources_v1beta.GetFileUploadRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_file_upload(request=request)\n\n        # Handle the response\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the data source file upload to retrieve. Format: ``accounts/{account}/dataSources/{datasource}/fileUploads/latest``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.shopping.merchant_datasources_v1beta.types.FileUpload: The file upload of a specific data source, that is, the result of the retrieval of the data source at a certain timestamp computed asynchronously when the data source processing is finished. Only applicable to file data sources."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "fileuploads.GetFileUploadRequest"
          ]
        }
      }
    ]
  }
}