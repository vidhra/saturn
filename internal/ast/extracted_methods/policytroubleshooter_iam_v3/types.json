{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-policytroubleshooter-iam\\google\\cloud\\policytroubleshooter_iam_v3\\types\\troubleshooter.py": [
    {
      "type": "request_class",
      "name": "TroubleshootIamPolicyRequest",
      "docstring": "Request for\n[TroubleshootIamPolicy][google.cloud.policytroubleshooter.iam.v3.PolicyTroubleshooter.TroubleshootIamPolicy].\n\nAttributes:\n    access_tuple (google.cloud.policytroubleshooter_iam_v3.types.AccessTuple):\n        The information to use for checking whether a\n        principal has a permission for a resource.",
      "attributes": {
        "access_tuple": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.AccessTuple",
          "description": "The information to use for checking whether a principal has a permission for a resource."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TroubleshootIamPolicyResponse",
      "docstring": "Response for\n[TroubleshootIamPolicy][google.cloud.policytroubleshooter.iam.v3.PolicyTroubleshooter.TroubleshootIamPolicy].\n\nAttributes:\n    overall_access_state (google.cloud.policytroubleshooter_iam_v3.types.TroubleshootIamPolicyResponse.OverallAccessState):\n        Indicates whether the principal has the\n        specified permission for the specified resource,\n        based on evaluating all types of the applicable\n        IAM policies.\n    access_tuple (google.cloud.policytroubleshooter_iam_v3.types.AccessTuple):\n        The access tuple from the request, including\n        any provided context used to evaluate the\n        condition.\n    allow_policy_explanation (google.cloud.policytroubleshooter_iam_v3.types.AllowPolicyExplanation):\n        An explanation of how the applicable IAM\n        allow policies affect the final access state.\n    deny_policy_explanation (google.cloud.policytroubleshooter_iam_v3.types.DenyPolicyExplanation):\n        An explanation of how the applicable IAM deny\n        policies affe",
      "attributes": {
        "overall_access_state": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.TroubleshootIamPolicyResponse.OverallAccessState",
          "description": "Indicates whether the principal has the specified permission for the specified resource, based on evaluating all types of the applicable IAM policies."
        },
        "access_tuple": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.AccessTuple",
          "description": "The access tuple from the request, including any provided context used to evaluate the condition."
        },
        "allow_policy_explanation": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.AllowPolicyExplanation",
          "description": "An explanation of how the applicable IAM allow policies affect the final access state."
        },
        "deny_policy_explanation": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.DenyPolicyExplanation",
          "description": "An explanation of how the applicable IAM deny policies affect the final access state."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AccessTuple",
      "docstring": "Information about the principal, resource, and permission to\ncheck.\n\nAttributes:\n    principal (str):\n        Required. The email address of the principal whose access\n        you want to check. For example, ``alice@example.com`` or\n        ``my-service-account@my-project.iam.gserviceaccount.com``.\n\n        The principal must be a Google Account or a service account.\n        Other types of principals are not supported.\n    full_resource_name (str):\n        Required. The full resource name that identifies the\n        resource. For example,\n        ``//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance``.\n\n        For examples of full resource names for Google Cloud\n        services, see\n        https://cloud.google.com/iam/help/troubleshooter/full-resource-names.\n    permission (str):\n        Required. The IAM permission to check for, either in the\n        ``v1`` permission format or the ``v2`` permission format.\n\n        For a complete list of IAM permissions in the ``v1`` fo",
      "attributes": {
        "principal": {
          "type": "str",
          "description": "Required. The email address of the principal whose access you want to check. For example, ``alice@example.com`` or ``my-service-account@my-project.iam.gserviceaccount.com``.  The principal must be a Google Account or a service account. Other types of principals are not supported."
        },
        "full_resource_name": {
          "type": "str",
          "description": "Required. The full resource name that identifies the resource. For example, ``//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance``.  For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
        },
        "permission": {
          "type": "str",
          "description": "Required. The IAM permission to check for, either in the ``v1`` permission format or the ``v2`` permission format.  For a complete list of IAM permissions in the ``v1`` format, see https://cloud.google.com/iam/help/permissions/reference.  For a list of IAM permissions in the ``v2`` format, see https://cloud.google.com/iam/help/deny/supported-permissions.  For a complete list of predefined IAM roles and the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
        },
        "permission_fqdn": {
          "type": "str",
          "description": "Output only. The permission that Policy Troubleshooter checked for, in the ``v2`` format."
        },
        "condition_context": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.ConditionContext",
          "description": "Optional. Additional context for the request, such as the request time or IP address. This context allows Policy Troubleshooter to troubleshoot conditional role bindings and deny rules."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ConditionContext",
      "docstring": "Additional context for troubleshooting conditional role\nbindings and deny rules.\n\nAttributes:\n    resource (google.cloud.policytroubleshooter_iam_v3.types.ConditionContext.Resource):\n        Represents a target resource that is involved\n        with a network activity. If multiple resources\n        are involved with an activity, this must be the\n        primary one.\n    destination (google.cloud.policytroubleshooter_iam_v3.types.ConditionContext.Peer):\n        The destination of a network activity, such\n        as accepting a TCP connection. In a multi-hop\n        network activity, the destination represents the\n        receiver of the last hop.\n    request (google.cloud.policytroubleshooter_iam_v3.types.ConditionContext.Request):\n        Represents a network request, such as an HTTP\n        request.\n    effective_tags (MutableSequence[google.cloud.policytroubleshooter_iam_v3.types.ConditionContext.EffectiveTag]):\n        Output only. The effective tags on the\n        resource. The effective tags are fetched ",
      "attributes": {
        "resource": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.ConditionContext.Resource",
          "description": "Represents a target resource that is involved with a network activity. If multiple resources are involved with an activity, this must be the primary one."
        },
        "destination": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.ConditionContext.Peer",
          "description": "The destination of a network activity, such as accepting a TCP connection. In a multi-hop network activity, the destination represents the receiver of the last hop."
        },
        "request": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.ConditionContext.Request",
          "description": "Represents a network request, such as an HTTP request."
        },
        "effective_tags": {
          "type": "MutableSequence[google.cloud.policytroubleshooter_iam_v3.types.ConditionContext.EffectiveTag]",
          "description": "Output only. The effective tags on the resource. The effective tags are fetched during troubleshooting."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AllowPolicyExplanation",
      "docstring": "Details about how the relevant IAM allow policies affect the\nfinal access state.\n\nAttributes:\n    allow_access_state (google.cloud.policytroubleshooter_iam_v3.types.AllowAccessState):\n        Indicates whether the principal has the\n        specified permission for the specified resource,\n        based on evaluating all applicable IAM allow\n        policies.\n    explained_policies (MutableSequence[google.cloud.policytroubleshooter_iam_v3.types.ExplainedAllowPolicy]):\n        List of IAM allow policies that were\n        evaluated to check the principal's permissions,\n        with annotations to indicate how each policy\n        contributed to the final result.\n\n        The list of policies includes the policy for the\n        resource itself, as well as allow policies that\n        are inherited from higher levels of the resource\n        hierarchy, including the organization, the\n        folder, and the project.\n\n        To learn more about the resource hierarchy, see\n        https://cloud.google.com/iam/help/reso",
      "attributes": {
        "allow_access_state": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.AllowAccessState",
          "description": "Indicates whether the principal has the specified permission for the specified resource, based on evaluating all applicable IAM allow policies."
        },
        "explained_policies": {
          "type": "MutableSequence[google.cloud.policytroubleshooter_iam_v3.types.ExplainedAllowPolicy]",
          "description": "List of IAM allow policies that were evaluated to check the principal's permissions, with annotations to indicate how each policy contributed to the final result.  The list of policies includes the policy for the resource itself, as well as allow policies that are inherited from higher levels of the resource hierarchy, including the organization, the folder, and the project.  To learn more about the resource hierarchy, see https://cloud.google.com/iam/help/resource-hierarchy."
        },
        "relevance": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance",
          "description": "The relevance of the allow policy type to the overall access state."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ExplainedAllowPolicy",
      "docstring": "Details about how a specific IAM allow policy contributed to\nthe final access state.\n\nAttributes:\n    allow_access_state (google.cloud.policytroubleshooter_iam_v3.types.AllowAccessState):\n        Required. Indicates whether *this policy* provides the\n        specified permission to the specified principal for the\n        specified resource.\n\n        This field does *not* indicate whether the principal\n        actually has the permission for the resource. There might be\n        another policy that overrides this policy. To determine\n        whether the principal actually has the permission, use the\n        ``overall_access_state`` field in the\n        [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].\n    full_resource_name (str):\n        The full resource name that identifies the resource. For\n        example,\n        ``//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance``.\n\n        If the sender of the request does not h",
      "attributes": {
        "allow_access_state": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.AllowAccessState",
          "description": "Required. Indicates whether *this policy* provides the specified permission to the specified principal for the specified resource.  This field does *not* indicate whether the principal actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the principal actually has the permission, use the ``overall_access_state`` field in the [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse]."
        },
        "full_resource_name": {
          "type": "str",
          "description": "The full resource name that identifies the resource. For example, ``//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance``.  If the sender of the request does not have access to the policy, this field is omitted.  For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
        },
        "binding_explanations": {
          "type": "MutableSequence[google.cloud.policytroubleshooter_iam_v3.types.AllowBindingExplanation]",
          "description": "Details about how each role binding in the policy affects the principal's ability, or inability, to use the permission for the resource. The order of the role bindings matches the role binding order in the policy.  If the sender of the request does not have access to the policy, this field is omitted."
        },
        "relevance": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance",
          "description": "The relevance of this policy to the overall access state in the [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].  If the sender of the request does not have access to the policy, this field is omitted."
        },
        "policy": {
          "type": "google.iam.v1.policy_pb2.Policy",
          "description": "The IAM allow policy attached to the resource. If the sender of the request does not have access to the policy, this field is empty."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AllowBindingExplanation",
      "docstring": "Details about how a role binding in an allow policy affects a\nprincipal's ability to use a permission.\n\nAttributes:\n    allow_access_state (google.cloud.policytroubleshooter_iam_v3.types.AllowAccessState):\n        Required. Indicates whether *this role binding* gives the\n        specified permission to the specified principal on the\n        specified resource.\n\n        This field does *not* indicate whether the principal\n        actually has the permission on the resource. There might be\n        another role binding that overrides this role binding. To\n        determine whether the principal actually has the permission,\n        use the ``overall_access_state`` field in the\n        [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].\n    role (str):\n        The role that this role binding grants. For example,\n        ``roles/compute.admin``.\n\n        For a complete list of predefined IAM roles, as well as the\n        permissions in each role, see\n        http",
      "attributes": {
        "allow_access_state": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.AllowAccessState",
          "description": "Required. Indicates whether *this role binding* gives the specified permission to the specified principal on the specified resource.  This field does *not* indicate whether the principal actually has the permission on the resource. There might be another role binding that overrides this role binding. To determine whether the principal actually has the permission, use the ``overall_access_state`` field in the [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse]."
        },
        "role": {
          "type": "str",
          "description": "The role that this role binding grants. For example, ``roles/compute.admin``.  For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
        },
        "role_permission": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.RolePermissionInclusionState",
          "description": "Indicates whether the role granted by this role binding contains the specified permission."
        },
        "role_permission_relevance": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance",
          "description": "The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy."
        },
        "combined_membership": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.AllowBindingExplanation.AnnotatedAllowMembership",
          "description": "The combined result of all memberships. Indicates if the principal is included in any role binding, either directly or indirectly."
        },
        "memberships": {
          "type": "MutableMapping[str, google.cloud.policytroubleshooter_iam_v3.types.AllowBindingExplanation.AnnotatedAllowMembership]",
          "description": "Indicates whether each role binding includes the principal specified in the request, either directly or indirectly. Each key identifies a principal in the role binding, and each value indicates whether the principal in the role binding includes the principal in the request.  For example, suppose that a role binding includes the following principals:  -  ``user:alice@example.com`` -  ``group:product-eng@example.com``  You want to troubleshoot access for ``user:bob@example.com``. This user is a member of the group ``group:product-eng@example.com``.  For the first principal in the role binding, the key is ``user:alice@example.com``, and the ``membership`` field in the value is set to ``NOT_INCLUDED``.  For the second principal in the role binding, the key is ``group:product-eng@example.com``, and the ``membership`` field in the value is set to ``INCLUDED``."
        },
        "relevance": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance",
          "description": "The relevance of this role binding to the overall determination for the entire policy."
        },
        "condition": {
          "type": "google.type.expr_pb2.Expr",
          "description": "A condition expression that specifies when the role binding grants access. To learn about IAM Conditions, see https://cloud.google.com/iam/help/conditions/overview."
        },
        "condition_explanation": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.ConditionExplanation",
          "description": "Condition evaluation state for this role binding."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DenyPolicyExplanation",
      "docstring": "Details about how the relevant IAM deny policies affect the\nfinal access state.\n\nAttributes:\n    deny_access_state (google.cloud.policytroubleshooter_iam_v3.types.DenyAccessState):\n        Indicates whether the principal is denied the\n        specified permission for the specified resource,\n        based on evaluating all applicable IAM deny\n        policies.\n    explained_resources (MutableSequence[google.cloud.policytroubleshooter_iam_v3.types.ExplainedDenyResource]):\n        List of resources with IAM deny policies that\n        were evaluated to check the principal's denied\n        permissions, with annotations to indicate how\n        each policy contributed to the final result.\n\n        The list of resources includes the policy for\n        the resource itself, as well as policies that\n        are inherited from higher levels of the resource\n        hierarchy, including the organization, the\n        folder, and the project. The order of the\n        resources starts from the resource and climbs up\n        t",
      "attributes": {
        "deny_access_state": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.DenyAccessState",
          "description": "Indicates whether the principal is denied the specified permission for the specified resource, based on evaluating all applicable IAM deny policies."
        },
        "explained_resources": {
          "type": "MutableSequence[google.cloud.policytroubleshooter_iam_v3.types.ExplainedDenyResource]",
          "description": "List of resources with IAM deny policies that were evaluated to check the principal's denied permissions, with annotations to indicate how each policy contributed to the final result.  The list of resources includes the policy for the resource itself, as well as policies that are inherited from higher levels of the resource hierarchy, including the organization, the folder, and the project. The order of the resources starts from the resource and climbs up the resource hierarchy.  To learn more about the resource hierarchy, see https://cloud.google.com/iam/help/resource-hierarchy."
        },
        "relevance": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance",
          "description": "The relevance of the deny policy result to the overall access state."
        },
        "permission_deniable": {
          "type": "bool",
          "description": "Indicates whether the permission to troubleshoot is supported in deny policies."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ExplainedDenyResource",
      "docstring": "Details about how a specific resource contributed to the deny\npolicy evaluation.\n\nAttributes:\n    deny_access_state (google.cloud.policytroubleshooter_iam_v3.types.DenyAccessState):\n        Required. Indicates whether any policies attached to *this\n        resource* deny the specific permission to the specified\n        principal for the specified resource.\n\n        This field does *not* indicate whether the principal\n        actually has the permission for the resource. There might be\n        another policy that overrides this policy. To determine\n        whether the principal actually has the permission, use the\n        ``overall_access_state`` field in the\n        [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].\n    full_resource_name (str):\n        The full resource name that identifies the resource. For\n        example,\n        ``//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance``.\n\n        If the sender of the re",
      "attributes": {
        "deny_access_state": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.DenyAccessState",
          "description": "Required. Indicates whether any policies attached to *this resource* deny the specific permission to the specified principal for the specified resource.  This field does *not* indicate whether the principal actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the principal actually has the permission, use the ``overall_access_state`` field in the [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse]."
        },
        "full_resource_name": {
          "type": "str",
          "description": "The full resource name that identifies the resource. For example, ``//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance``.  If the sender of the request does not have access to the policy, this field is omitted.  For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
        },
        "explained_policies": {
          "type": "MutableSequence[google.cloud.policytroubleshooter_iam_v3.types.ExplainedDenyPolicy]",
          "description": "List of IAM deny policies that were evaluated to check the principal's denied permissions, with annotations to indicate how each policy contributed to the final result."
        },
        "relevance": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance",
          "description": "The relevance of this policy to the overall access state in the [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].  If the sender of the request does not have access to the policy, this field is omitted."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ExplainedDenyPolicy",
      "docstring": "Details about how a specific IAM deny policy\n[Policy][google.iam.v2.Policy] contributed to the access check.\n\nAttributes:\n    deny_access_state (google.cloud.policytroubleshooter_iam_v3.types.DenyAccessState):\n        Required. Indicates whether *this policy* denies the\n        specified permission to the specified principal for the\n        specified resource.\n\n        This field does *not* indicate whether the principal\n        actually has the permission for the resource. There might be\n        another policy that overrides this policy. To determine\n        whether the principal actually has the permission, use the\n        ``overall_access_state`` field in the\n        [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].\n    policy (google.cloud.iam_v2.Policy):\n        The IAM deny policy attached to the resource.\n\n        If the sender of the request does not have\n        access to the policy, this field is omitted.\n    rule_explanations (MutableSequence[g",
      "attributes": {
        "deny_access_state": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.DenyAccessState",
          "description": "Required. Indicates whether *this policy* denies the specified permission to the specified principal for the specified resource.  This field does *not* indicate whether the principal actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the principal actually has the permission, use the ``overall_access_state`` field in the [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse]."
        },
        "policy": {
          "type": "google.cloud.iam_v2.Policy",
          "description": "The IAM deny policy attached to the resource.  If the sender of the request does not have access to the policy, this field is omitted."
        },
        "rule_explanations": {
          "type": "MutableSequence[google.cloud.policytroubleshooter_iam_v3.types.DenyRuleExplanation]",
          "description": "Details about how each rule in the policy affects the principal's inability to use the permission for the resource. The order of the deny rule matches the order of the rules in the deny policy.  If the sender of the request does not have access to the policy, this field is omitted."
        },
        "relevance": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance",
          "description": "The relevance of this policy to the overall access state in the [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].  If the sender of the request does not have access to the policy, this field is omitted."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DenyRuleExplanation",
      "docstring": "Details about how a deny rule in a deny policy affects a\nprincipal's ability to use a permission.\n\nAttributes:\n    deny_access_state (google.cloud.policytroubleshooter_iam_v3.types.DenyAccessState):\n        Required. Indicates whether *this rule* denies the specified\n        permission to the specified principal for the specified\n        resource.\n\n        This field does *not* indicate whether the principal is\n        actually denied on the permission for the resource. There\n        might be another rule that overrides this rule. To determine\n        whether the principal actually has the permission, use the\n        ``overall_access_state`` field in the\n        [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].\n    combined_denied_permission (google.cloud.policytroubleshooter_iam_v3.types.DenyRuleExplanation.AnnotatedPermissionMatching):\n        Indicates whether the permission in the\n        request is listed as a denied permission in the\n        deny ru",
      "attributes": {
        "deny_access_state": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.DenyAccessState",
          "description": "Required. Indicates whether *this rule* denies the specified permission to the specified principal for the specified resource.  This field does *not* indicate whether the principal is actually denied on the permission for the resource. There might be another rule that overrides this rule. To determine whether the principal actually has the permission, use the ``overall_access_state`` field in the [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse]."
        },
        "combined_denied_permission": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.DenyRuleExplanation.AnnotatedPermissionMatching",
          "description": "Indicates whether the permission in the request is listed as a denied permission in the deny rule."
        },
        "denied_permissions": {
          "type": "MutableMapping[str, google.cloud.policytroubleshooter_iam_v3.types.DenyRuleExplanation.AnnotatedPermissionMatching]",
          "description": "Lists all denied permissions in the deny rule and indicates whether each permission matches the permission in the request.  Each key identifies a denied permission in the rule, and each value indicates whether the denied permission matches the permission in the request."
        },
        "combined_exception_permission": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.DenyRuleExplanation.AnnotatedPermissionMatching",
          "description": "Indicates whether the permission in the request is listed as an exception permission in the deny rule."
        },
        "exception_permissions": {
          "type": "MutableMapping[str, google.cloud.policytroubleshooter_iam_v3.types.DenyRuleExplanation.AnnotatedPermissionMatching]",
          "description": "Lists all exception permissions in the deny rule and indicates whether each permission matches the permission in the request.  Each key identifies a exception permission in the rule, and each value indicates whether the exception permission matches the permission in the request."
        },
        "combined_denied_principal": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.DenyRuleExplanation.AnnotatedDenyPrincipalMatching",
          "description": "Indicates whether the principal is listed as a denied principal in the deny rule, either directly or through membership in a principal set."
        },
        "denied_principals": {
          "type": "MutableMapping[str, google.cloud.policytroubleshooter_iam_v3.types.DenyRuleExplanation.AnnotatedDenyPrincipalMatching]",
          "description": "Lists all denied principals in the deny rule and indicates whether each principal matches the principal in the request, either directly or through membership in a principal set.  Each key identifies a denied principal in the rule, and each value indicates whether the denied principal matches the principal in the request."
        },
        "combined_exception_principal": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.DenyRuleExplanation.AnnotatedDenyPrincipalMatching",
          "description": "Indicates whether the principal is listed as an exception principal in the deny rule, either directly or through membership in a principal set."
        },
        "exception_principals": {
          "type": "MutableMapping[str, google.cloud.policytroubleshooter_iam_v3.types.DenyRuleExplanation.AnnotatedDenyPrincipalMatching]",
          "description": "Lists all exception principals in the deny rule and indicates whether each principal matches the principal in the request, either directly or through membership in a principal set.  Each key identifies a exception principal in the rule, and each value indicates whether the exception principal matches the principal in the request."
        },
        "relevance": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance",
          "description": "The relevance of this role binding to the overall determination for the entire policy."
        },
        "condition": {
          "type": "google.type.expr_pb2.Expr",
          "description": "A condition expression that specifies when the deny rule denies the principal access.  To learn about IAM Conditions, see https://cloud.google.com/iam/help/conditions/overview."
        },
        "condition_explanation": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.ConditionExplanation",
          "description": "Condition evaluation state for this role binding."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ConditionExplanation",
      "docstring": "Explanation for how a condition affects a principal's access\n\nAttributes:\n    value (google.protobuf.struct_pb2.Value):\n        Value of the condition.\n    errors (MutableSequence[google.rpc.status_pb2.Status]):\n        Any errors that prevented complete evaluation\n        of the condition expression.\n    evaluation_states (MutableSequence[google.cloud.policytroubleshooter_iam_v3.types.ConditionExplanation.EvaluationState]):\n        The value of each statement of the condition expression. The\n        value can be ``true``, ``false``, or ``null``. The value is\n        ``null`` if the statement can't be evaluated.",
      "attributes": {
        "value": {
          "type": "google.protobuf.struct_pb2.Value",
          "description": "Value of the condition."
        },
        "errors": {
          "type": "MutableSequence[google.rpc.status_pb2.Status]",
          "description": "Any errors that prevented complete evaluation of the condition expression."
        },
        "evaluation_states": {
          "type": "MutableSequence[google.cloud.policytroubleshooter_iam_v3.types.ConditionExplanation.EvaluationState]",
          "description": "The value of each statement of the condition expression. The value can be ``true``, ``false``, or ``null``. The value is ``null`` if the statement can't be evaluated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Resource",
      "docstring": "Core attributes for a resource. A resource is an\naddressable (named) entity provided by the destination service.\nFor example, a Compute Engine instance.\n\nAttributes:\n    service (str):\n        The name of the service that this resource belongs to, such\n        as ``compute.googleapis.com``. The service name might not\n        match the DNS hostname that actually serves the request.\n\n        For a full list of resource service values, see\n        https://cloud.google.com/iam/help/conditions/resource-services\n    name (str):\n        The stable identifier (name) of a resource on the\n        ``service``. A resource can be logically identified as\n        ``//{resource.service}/{resource.name}``. Unlike the\n        resource URI, the resource name doesn't contain any protocol\n        and version information.\n\n        For a list of full resource name formats, see\n        https://cloud.google.com/iam/help/troubleshooter/full-resource-names\n    type_ (str):\n        The type of the resource, in the format\n        ``{serv",
      "attributes": {
        "service": {
          "type": "str",
          "description": "The name of the service that this resource belongs to, such as ``compute.googleapis.com``. The service name might not match the DNS hostname that actually serves the request.  For a full list of resource service values, see https://cloud.google.com/iam/help/conditions/resource-services"
        },
        "name": {
          "type": "str",
          "description": "The stable identifier (name) of a resource on the ``service``. A resource can be logically identified as ``//{resource.service}/{resource.name}``. Unlike the resource URI, the resource name doesn't contain any protocol and version information.  For a list of full resource name formats, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names"
        },
        "type_": {
          "type": "str",
          "description": "The type of the resource, in the format ``{service}/{kind}``.  For a full list of resource type values, see https://cloud.google.com/iam/help/conditions/resource-types"
        }
      }
    },
    {
      "type": "request_class",
      "name": "Peer",
      "docstring": "This message defines attributes for a node that handles a network\nrequest. The node can be either a service or an application that\nsends, forwards, or receives the request. Service peers should fill\nin ``principal`` and ``labels`` as appropriate.\n\nAttributes:\n    ip (str):\n        The IPv4 or IPv6 address of the peer.\n    port (int):\n        The network port of the peer.",
      "attributes": {
        "ip": {
          "type": "str",
          "description": "The IPv4 or IPv6 address of the peer."
        },
        "port": {
          "type": "int",
          "description": "The network port of the peer."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Request",
      "docstring": "This message defines attributes for an HTTP request. If the\nactual request is not an HTTP request, the runtime system should\ntry to map the actual request to an equivalent HTTP request.\n\nAttributes:\n    receive_time (google.protobuf.timestamp_pb2.Timestamp):\n        Optional. The timestamp when the destination\n        service receives the first byte of the request.",
      "attributes": {
        "receive_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Optional. The timestamp when the destination service receives the first byte of the request."
        }
      }
    },
    {
      "type": "request_class",
      "name": "EffectiveTag",
      "docstring": "A tag that applies to a resource during policy evaluation. Tags can\nbe either directly bound to a resource or inherited from its\nancestor. ``EffectiveTag`` contains the ``name`` and\n``namespaced_name`` of the tag value and tag key, with additional\nfields of ``inherited`` to indicate the inheritance status of the\neffective tag.\n\nAttributes:\n    tag_value (str):\n        Output only. Resource name for TagValue in the format\n        ``tagValues/456``.\n    namespaced_tag_value (str):\n        Output only. The namespaced name of the TagValue. Can be in\n        the form\n        ``{organization_id}/{tag_key_short_name}/{tag_value_short_name}``\n        or\n        ``{project_id}/{tag_key_short_name}/{tag_value_short_name}``\n        or\n        ``{project_number}/{tag_key_short_name}/{tag_value_short_name}``.\n    tag_key (str):\n        Output only. The name of the TagKey, in the format\n        ``tagKeys/{id}``, such as ``tagKeys/123``.\n    namespaced_tag_key (str):\n        Output only. The namespaced name of the TagKey. C",
      "attributes": {
        "tag_value": {
          "type": "str",
          "description": "Output only. Resource name for TagValue in the format ``tagValues/456``."
        },
        "namespaced_tag_value": {
          "type": "str",
          "description": "Output only. The namespaced name of the TagValue. Can be in the form ``{organization_id}/{tag_key_short_name}/{tag_value_short_name}`` or ``{project_id}/{tag_key_short_name}/{tag_value_short_name}`` or ``{project_number}/{tag_key_short_name}/{tag_value_short_name}``."
        },
        "tag_key": {
          "type": "str",
          "description": "Output only. The name of the TagKey, in the format ``tagKeys/{id}``, such as ``tagKeys/123``."
        },
        "namespaced_tag_key": {
          "type": "str",
          "description": "Output only. The namespaced name of the TagKey. Can be in the form ``{organization_id}/{tag_key_short_name}`` or ``{project_id}/{tag_key_short_name}`` or ``{project_number}/{tag_key_short_name}``."
        },
        "tag_key_parent_name": {
          "type": "str",
          "description": "The parent name of the tag key. Must be in the format ``organizations/{organization_id}`` or ``projects/{project_number}``"
        },
        "inherited": {
          "type": "bool",
          "description": "Output only. Indicates the inheritance status of a tag value attached to the given resource. If the tag value is inherited from one of the resource's ancestors, inherited will be true. If false, then the tag value is directly attached to the resource, inherited will be false."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AnnotatedAllowMembership",
      "docstring": "Details about whether the role binding includes the\nprincipal.\n\nAttributes:\n    membership (google.cloud.policytroubleshooter_iam_v3.types.MembershipMatchingState):\n        Indicates whether the role binding includes\n        the principal.\n    relevance (google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance):\n        The relevance of the principal's status to\n        the overall determination for the role binding.",
      "attributes": {
        "membership": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.MembershipMatchingState",
          "description": "Indicates whether the role binding includes the principal."
        },
        "relevance": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance",
          "description": "The relevance of the principal's status to the overall determination for the role binding."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AnnotatedPermissionMatching",
      "docstring": "Details about whether the permission in the request is denied\nby the deny rule.\n\nAttributes:\n    permission_matching_state (google.cloud.policytroubleshooter_iam_v3.types.PermissionPatternMatchingState):\n        Indicates whether the permission in the\n        request is denied by the deny rule.\n    relevance (google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance):\n        The relevance of the permission status to the\n        overall determination for the rule.",
      "attributes": {
        "permission_matching_state": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.PermissionPatternMatchingState",
          "description": "Indicates whether the permission in the request is denied by the deny rule."
        },
        "relevance": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance",
          "description": "The relevance of the permission status to the overall determination for the rule."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AnnotatedDenyPrincipalMatching",
      "docstring": "Details about whether the principal in the request is listed\nas a denied principal in the deny rule, either directly or\nthrough membership in a principal set.\n\nAttributes:\n    membership (google.cloud.policytroubleshooter_iam_v3.types.MembershipMatchingState):\n        Indicates whether the principal is listed as\n        a denied principal in the deny rule, either\n        directly or through membership in a principal\n        set.\n    relevance (google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance):\n        The relevance of the principal's status to\n        the overall determination for the role binding.",
      "attributes": {
        "membership": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.MembershipMatchingState",
          "description": "Indicates whether the principal is listed as a denied principal in the deny rule, either directly or through membership in a principal set."
        },
        "relevance": {
          "type": "google.cloud.policytroubleshooter_iam_v3.types.HeuristicRelevance",
          "description": "The relevance of the principal's status to the overall determination for the role binding."
        }
      }
    },
    {
      "type": "request_class",
      "name": "EvaluationState",
      "docstring": "Evaluated state of a condition expression.\n\nAttributes:\n    start (int):\n        Start position of an expression in the\n        condition, by character.\n    end (int):\n        End position of an expression in the condition, by\n        character, end included, for example: the end position of\n        the first part of ``a==b || c==d`` would be 4.\n    value (google.protobuf.struct_pb2.Value):\n        Value of this expression.\n    errors (MutableSequence[google.rpc.status_pb2.Status]):\n        Any errors that prevented complete evaluation\n        of the condition expression.",
      "attributes": {
        "start": {
          "type": "int",
          "description": "Start position of an expression in the condition, by character."
        },
        "end": {
          "type": "int",
          "description": "End position of an expression in the condition, by character, end included, for example: the end position of the first part of ``a==b || c==d`` would be 4."
        },
        "value": {
          "type": "google.protobuf.struct_pb2.Value",
          "description": "Value of this expression."
        },
        "errors": {
          "type": "MutableSequence[google.rpc.status_pb2.Status]",
          "description": "Any errors that prevented complete evaluation of the condition expression."
        }
      }
    }
  ]
}