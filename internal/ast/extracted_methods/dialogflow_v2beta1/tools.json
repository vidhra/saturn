{
  "Agents": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_agent",
          "description": "Retrieves the specified agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_agent():\n        # Create a client\n        client = dialogflow_v2beta1.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetAgentRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.get_agent(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.GetAgentRequest, dict]]):\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project that the agent to fetch is associated with. Format: ``projects/<Project ID>`` or ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Agent: A Dialogflow agent is a virtual agent that handles conversations with your end-users. It is a natural language understanding module that understands the nuances of human language. Dialogflow translates end-user text or audio during a conversation to structured data that your apps and services can understand. You design and build a Dialogflow agent to handle the types of conversations required for your system.  For more information about agents, see the [Agent guide](\\ https://cloud.google.com/dialogflow/docs/agents-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_agent",
          "description": "Creates/updates the specified agent.\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_set_agent():\n        # Create a client\n        client = dialogflow_v2beta1.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        agent = dialogflow_v2beta1.Agent()\n        agent.parent = \"parent_value\"\n\n        request = dialogflow_v2beta1.SetAgentRequest(\n            agent=agent,\n        )\n\n        #",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "agent": {
                "type": "google.cloud.dialogflow_v2beta1.types.Agent",
                "description": "Required. The agent to update. This corresponds to the ``agent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Agent: A Dialogflow agent is a virtual agent that handles conversations with your end-users. It is a natural language understanding module that understands the nuances of human language. Dialogflow translates end-user text or audio during a conversation to structured data that your apps and services can understand. You design and build a Dialogflow agent to handle the types of conversations required for your system.  For more information about agents, see the [Agent guide](\\ https://cloud.google.com/dialogflow/docs/agents-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "agent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_agent",
          "description": "Deletes the specified agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_agent():\n        # Create a client\n        client = dialogflow_v2beta1.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteAgentRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        await client.delete_agent(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.DeleteAgentRequest, dict]]):\n        The request object. The request message for\n        [Ag",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project that the agent to delete is associated with. Format: ``projects/<Project ID>`` or ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_agents",
          "description": "Returns the list of agents. Since there is at most one\nconversational agent per project, this method is useful\nprimarily for listing all agents across projects the caller has\naccess to. One can achieve that with a wildcard project\ncollection id \"-\". Refer to `List\nSub-Collections <https://cloud.google.com/apis/design/design_patterns#list_sub-collections>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_search_agents():\n        # Create a client\n        client = dialogflow_v2beta1.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project to list agents from. Format: ``projects/<Project ID or '-'>`` or ``projects/<Project ID or '-'>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.agents.pagers.SearchAgentsAsyncPager: The response message for [Agents.SearchAgents][google.cloud.dialogflow.v2beta1.Agents.SearchAgents].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "train_agent",
          "description": "Trains the specified agent.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty>`__\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project that the agent to train is associated with. Format: ``projects/<Project ID>`` or ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_agent",
          "description": "Exports the specified agent to a ZIP file.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``:\n   [ExportAgentResponse][google.cloud.dialogflow.v2beta1.ExportAgentResponse]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_export_agent():\n        # Create a client\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project that the agent to export is associated with. Format: ``projects/<Project ID>`` or ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.dialogflow_v2beta1.types.ExportAgentResponse` The response message for [Agents.ExportAgent][google.cloud.dialogflow.v2beta1.Agents.ExportAgent]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_agent",
          "description": "Imports the specified agent from a ZIP file.\n\nUploads new intents and entity types without deleting the\nexisting ones. Intents and entity types with the same name are\nreplaced with the new versions from\n[ImportAgentRequest][google.cloud.dialogflow.v2beta1.ImportAgentRequest].\nAfter the import, the imported draft agent will be trained\nautomatically (unless disabled in agent settings). However, once\nthe import is done, training may not be completed yet. Please\ncall\n[TrainAgent][google.cloud.dialogflow.v2beta1.Agents.TrainAgent]\nand wait for the operation it returns in order to train\nexplicitly.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/ref",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "restore_agent",
          "description": "Restores the specified agent from a ZIP file.\n\nReplaces the current agent version with a new one. All the\nintents and entity types in the older version are deleted. After\nthe restore, the restored draft agent will be trained\nautomatically (unless disabled in agent settings). However, once\nthe restore is done, training may not be completed yet. Please\ncall\n[TrainAgent][google.cloud.dialogflow.v2beta1.Agents.TrainAgent]\nand wait for the operation it returns in order to train\nexplicitly.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty>`__\n\nThe operation only tracks when restoring is complete, not when\nit is done tr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_validation_result",
          "description": "Gets agent validation result. Agent validation is\nperformed during training time and is updated\nautomatically when training is completed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_validation_result():\n        # Create a client\n        client = dialogflow_v2beta1.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetValidationResultRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.get_validation_result(request=request)\n\n        # Handle t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "AnswerRecords": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_answer_record",
          "description": "Deprecated.\nRetrieves a specific answer record.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_answer_record():\n        # Create a client\n        client = dialogflow_v2beta1.AnswerRecordsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetAnswerRecordRequest(\n        )\n\n        # Make the request\n        response = await client.get_answer_record(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.GetAnswerRecordReques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_answer_records",
          "description": "Returns the list of all answer records in the\nspecified project in reverse chronological order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_answer_records():\n        # Create a client\n        client = dialogflow_v2beta1.AnswerRecordsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListAnswerRecordsRequest(\n        )\n\n        # Make the request\n        page_result = client.list_answer_records(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(respon",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project to list all answer records for in reverse chronological order. Format: ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.answer_records.pagers.ListAnswerRecordsAsyncPager: Response message for [AnswerRecords.ListAnswerRecords][google.cloud.dialogflow.v2beta1.AnswerRecords.ListAnswerRecords].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_answer_record",
          "description": "Updates the specified answer record.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_answer_record():\n        # Create a client\n        client = dialogflow_v2beta1.AnswerRecordsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.UpdateAnswerRecordRequest(\n        )\n\n        # Make the request\n        response = await client.update_answer_record(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.UpdateAnswerRecordReque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "answer_record": {
                "type": "google.cloud.dialogflow_v2beta1.types.AnswerRecord",
                "description": "Required. Answer record to update. This corresponds to the ``answer_record`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.AnswerRecord: Answer records are records to manage answer history and feedbacks for Dialogflow.  Currently, answer record includes:  -  human agent assistant article suggestion -  human agent assistant faq article  It doesn't include:  -  DetectIntent intent matching -  DetectIntent knowledge  Answer records are not related to the conversation history in the Dialogflow Console. A Record is generated even when the end-user disables conversation history in the console. Records are created when there's a human agent assistant suggestion generated.  A typical workflow for customers provide feedback to an answer is:  1. For human agent assistant, customers get suggestion via ListSuggestions API. Together with the answers, [AnswerRecord.name][google.cloud.dialogflow.v2beta1.AnswerRecord.name] are returned to the customers.  2. The customer uses the [AnswerRecord.name][google.cloud.dialogflow.v2beta1.AnswerRecord.name] to call the [UpdateAnswerRecord][] method to send feedback about a specific answer that they believe is wrong."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "answer_record",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Contexts": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_contexts",
          "description": "Returns the list of all contexts in the specified\nsession.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_contexts():\n        # Create a client\n        client = dialogflow_v2beta1.ContextsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListContextsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_contexts(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The session to list all contexts from. Supported formats:  -  \\`projects//agent/sessions/, -  ``projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session ID>``, -  ``projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``, -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``,  If ``Location ID`` is not specified we assume default 'us' location. If ``Environment ID`` is not specified, we assume default 'draft' environment. If ``User ID`` is not specified, we assume default '-' user.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.contexts.pagers.ListContextsAsyncPager: The response message for [Contexts.ListContexts][google.cloud.dialogflow.v2beta1.Contexts.ListContexts].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_context",
          "description": "Retrieves the specified context.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_context():\n        # Create a client\n        client = dialogflow_v2beta1.ContextsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetContextRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_context(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.GetContextRequest, dict]]):",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the context. Supported formats:  -  ``projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context ID>``, -  ``projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session ID>/contexts/<Context ID>``, -  ``projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>/contexts/<Context ID>``, -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>/contexts/<Context ID>``,  If ``Location ID`` is not specified we assume default 'us' location. If ``Environment ID`` is not specified, we assume default 'draft' environment. If ``User ID`` is not specified, we assume default '-' user.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Context: Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent.  Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts.  For more information about context, see the [Contexts guide](\\ https://cloud.google.com/dialogflow/docs/contexts-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_context",
          "description": "Creates a context.\n\nIf the specified context already exists, overrides the\ncontext.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_create_context():\n        # Create a client\n        client = dialogflow_v2beta1.ContextsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.CreateContextRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_context(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[g",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The session to create a context for. Supported formats:  -  \\`projects//agent/sessions/, -  ``projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session ID>``, -  ``projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``, -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``,  If ``Location ID`` is not specified we assume default 'us' location. If ``Environment ID`` is not specified, we assume default 'draft' environment. If ``User ID`` is not specified, we assume default '-' user.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "context": {
                "type": "google.cloud.dialogflow_v2beta1.types.Context",
                "description": "Required. The context to create. This corresponds to the ``context`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Context: Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent.  Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts.  For more information about context, see the [Contexts guide](\\ https://cloud.google.com/dialogflow/docs/contexts-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "context",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_context",
          "description": "Updates the specified context.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_context():\n        # Create a client\n        client = dialogflow_v2beta1.ContextsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.UpdateContextRequest(\n        )\n\n        # Make the request\n        response = await client.update_context(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.UpdateContextRequest, dict]]):\n        The request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "context": {
                "type": "google.cloud.dialogflow_v2beta1.types.Context",
                "description": "Required. The context to update. This corresponds to the ``context`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. The mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Context: Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent.  Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts.  For more information about context, see the [Contexts guide](\\ https://cloud.google.com/dialogflow/docs/contexts-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "context",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_context",
          "description": "Deletes the specified context.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_context():\n        # Create a client\n        client = dialogflow_v2beta1.ContextsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteContextRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_context(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.DeleteContextRequest, dict]]):\n        The request object. The request message for\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the context to delete. Supported formats:  -  ``projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context ID>``, -  ``projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session ID>/contexts/<Context ID>``, -  ``projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>/contexts/<Context ID>``, -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>/contexts/<Context ID>``,  If ``Location ID`` is not specified we assume default 'us' location. If ``Environment ID`` is not specified, we assume default 'draft' environment. If ``User ID`` is not specified, we assume default '-' user.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_all_contexts",
          "description": "Deletes all active contexts in the specified session.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_all_contexts():\n        # Create a client\n        client = dialogflow_v2beta1.ContextsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteAllContextsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        await client.delete_all_contexts(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.DeleteAllContextsRequest, dict]]):\n        Th",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the session to delete all contexts from. Supported formats:  -  \\`projects//agent/sessions/, -  ``projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session ID>``, -  ``projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``, -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``,  If ``Location ID`` is not specified we assume default 'us' location. If ``Environment ID`` is not specified we assume default 'draft' environment. If ``User ID`` is not specified, we assume default '-' user.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "ConversationProfiles": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_conversation_profiles",
          "description": "Returns the list of all conversation profiles in the\nspecified project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_conversation_profiles():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationProfilesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListConversationProfilesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_conversation_profiles(request=request)\n\n        # Handle the response\n        async for response i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project to list all conversation profiles from. Format: ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.conversation_profiles.pagers.ListConversationProfilesAsyncPager: The response message for [ConversationProfiles.ListConversationProfiles][google.cloud.dialogflow.v2beta1.ConversationProfiles.ListConversationProfiles].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_conversation_profile",
          "description": "Retrieves the specified conversation profile.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_conversation_profile():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationProfilesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetConversationProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_conversation_profile(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[go",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the conversation profile. Format: ``projects/<Project ID>/locations/<Location ID>/conversationProfiles/<Conversation Profile ID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.ConversationProfile: Defines the services to connect to incoming Dialogflow conversations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_conversation_profile",
          "description": "Creates a conversation profile in the specified project.\n\n[ConversationProfile.CreateTime][] and\n[ConversationProfile.UpdateTime][] aren't populated in the\nresponse. You can retrieve them via\n[GetConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfiles.GetConversationProfile]\nAPI.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_create_conversation_profile():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationProfilesAsyncClient()\n\n        # Initialize request argument(s)\n        conversation_profile = dialogflow_v2bet",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project to create a conversation profile for. Format: ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "conversation_profile": {
                "type": "google.cloud.dialogflow_v2beta1.types.ConversationProfile",
                "description": "Required. The conversation profile to create.  This corresponds to the ``conversation_profile`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.ConversationProfile: Defines the services to connect to incoming Dialogflow conversations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "conversation_profile",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_conversation_profile",
          "description": "Updates the specified conversation profile.\n\n[ConversationProfile.CreateTime][] and\n[ConversationProfile.UpdateTime][] aren't populated in the\nresponse. You can retrieve them via\n[GetConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfiles.GetConversationProfile]\nAPI.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_conversation_profile():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationProfilesAsyncClient()\n\n        # Initialize request argument(s)\n        conversation_profile = dialogflow_v2beta1.Conversati",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "conversation_profile": {
                "type": "google.cloud.dialogflow_v2beta1.types.ConversationProfile",
                "description": "Required. The conversation profile to update.  This corresponds to the ``conversation_profile`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The mask to control which fields to update.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.ConversationProfile: Defines the services to connect to incoming Dialogflow conversations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "conversation_profile",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_conversation_profile",
          "description": "Deletes the specified conversation profile.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_conversation_profile():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationProfilesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteConversationProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_conversation_profile(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.DeleteConversationProfi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the conversation profile to delete. Format: ``projects/<Project ID>/locations/<Location ID>/conversationProfiles/<Conversation Profile ID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_suggestion_feature_config",
          "description": "Adds or updates a suggestion feature in a conversation profile.\nIf the conversation profile contains the type of suggestion\nfeature for the participant role, it will update it. Otherwise\nit will insert the suggestion feature.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [SetSuggestionFeatureConfigOperationMetadata][google.cloud.dialogflow.v2beta1.SetSuggestionFeatureConfigOperationMetadata]\n-  ``response``:\n   [ConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfile]\n\nIf a long running operation to add or update suggestion feature\nconfig for the same conversation profile, participant role and\nsuggestion feature type exists, please cancel the existing long\nrunning operation before sending such request, otherwise the\nrequest will be rejected.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and shoul",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "conversation_profile": {
                "type": "str",
                "description": "Required. The Conversation Profile to add or update the suggestion feature config. Format: ``projects/<Project ID>/locations/<Location ID>/conversationProfiles/<Conversation Profile ID>``.  This corresponds to the ``conversation_profile`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "participant_role": {
                "type": "google.cloud.dialogflow_v2beta1.types.Participant.Role",
                "description": "Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.  This corresponds to the ``participant_role`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "suggestion_feature_config": {
                "type": "google.cloud.dialogflow_v2beta1.types.HumanAgentAssistantConfig.SuggestionFeatureConfig",
                "description": "Required. The suggestion feature config to add or update.  This corresponds to the ``suggestion_feature_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.dialogflow_v2beta1.types.ConversationProfile` Defines the services to connect to incoming Dialogflow conversations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "conversation_profile",
              "participant_role",
              "suggestion_feature_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "clear_suggestion_feature_config",
          "description": "Clears a suggestion feature from a conversation profile for the\ngiven participant role.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [ClearSuggestionFeatureConfigOperationMetadata][google.cloud.dialogflow.v2beta1.ClearSuggestionFeatureConfigOperationMetadata]\n-  ``response``:\n   [ConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfile]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async d",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "conversation_profile": {
                "type": "str",
                "description": "Required. The Conversation Profile to add or update the suggestion feature config. Format: ``projects/<Project ID>/locations/<Location ID>/conversationProfiles/<Conversation Profile ID>``.  This corresponds to the ``conversation_profile`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "participant_role": {
                "type": "google.cloud.dialogflow_v2beta1.types.Participant.Role",
                "description": "Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.  This corresponds to the ``participant_role`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "suggestion_feature_type": {
                "type": "google.cloud.dialogflow_v2beta1.types.SuggestionFeature.Type",
                "description": "Required. The type of the suggestion feature to remove.  This corresponds to the ``suggestion_feature_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.dialogflow_v2beta1.types.ConversationProfile` Defines the services to connect to incoming Dialogflow conversations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "conversation_profile",
              "participant_role",
              "suggestion_feature_type",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Conversations": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_conversation",
          "description": "Creates a new conversation. Conversations are auto-completed\nafter 24 hours.\n\nConversation Lifecycle: There are two stages during a\nconversation: Automated Agent Stage and Assist Stage.\n\nFor Automated Agent Stage, there will be a dialogflow agent\nresponding to user queries.\n\nFor Assist Stage, there's no dialogflow agent responding to user\nqueries. But we will provide suggestions which are generated\nfrom conversation.\n\nIf\n[Conversation.conversation_profile][google.cloud.dialogflow.v2beta1.Conversation.conversation_profile]\nis configured for a dialogflow agent, conversation will start\nfrom ``Automated Agent Stage``, otherwise, it will start from\n``Assist Stage``. And during ``Automated Agent Stage``, once an\n[Intent][google.cloud.dialogflow.v2beta1.Intent] with\n[Intent.live_agent_handoff][google.cloud.dialogflow.v2beta1.Intent.live_agent_handoff]\nis triggered, conversation will transfer to Assist Stage.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource identifier of the project creating the conversation. Format: ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "conversation": {
                "type": "google.cloud.dialogflow_v2beta1.types.Conversation",
                "description": "Required. The conversation to create. This corresponds to the ``conversation`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Conversation: Represents a conversation. A conversation is an interaction between an agent, including live agents and Dialogflow agents, and a support customer. Conversations can include phone calls and text-based chat sessions."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "conversation",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_conversations",
          "description": "Returns the list of all conversations in the\nspecified project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_conversations():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListConversationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_conversations(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project from which to list all conversation. Format: ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.conversations.pagers.ListConversationsAsyncPager: The response message for [Conversations.ListConversations][google.cloud.dialogflow.v2beta1.Conversations.ListConversations].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_conversation",
          "description": "Retrieves the specific conversation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_conversation():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetConversationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_conversation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.Get",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the conversation. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Conversation: Represents a conversation. A conversation is an interaction between an agent, including live agents and Dialogflow agents, and a support customer. Conversations can include phone calls and text-based chat sessions."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "complete_conversation",
          "description": "Completes the specified conversation. Finished\nconversations are purged from the database after 30\ndays.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_complete_conversation():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.CompleteConversationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.complete_conversation(request=request)\n\n        # Handle the response\n        print(res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource identifier of the conversation to close. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Conversation: Represents a conversation. A conversation is an interaction between an agent, including live agents and Dialogflow agents, and a support customer. Conversations can include phone calls and text-based chat sessions."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_create_messages",
          "description": "Batch ingests messages to conversation. Customers can\nuse this RPC to ingest historical messages to\nconversation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_batch_create_messages():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationsAsyncClient()\n\n        # Initialize request argument(s)\n        requests = dialogflow_v2beta1.CreateMessageRequest()\n        requests.parent = \"parent_value\"\n        requests.message.content = \"content_value\"\n\n        request = dialogflow_v2beta1.BatchCreateMessagesRequest(\n            parent=\"parent",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource identifier of the conversation to create message. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "requests": {
                "type": "MutableSequence[google.cloud.dialogflow_v2beta1.types.CreateMessageRequest]",
                "description": "Required. A maximum of 300 messages can be created in a batch. [CreateMessageRequest.message.send_time][] is required. All created messages will have identical [Message.create_time][google.cloud.dialogflow.v2beta1.Message.create_time].  This corresponds to the ``requests`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.BatchCreateMessagesResponse: The request message for [Conversations.BatchCreateMessagesResponse][]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_messages",
          "description": "Lists messages that belong to a given conversation. ``messages``\nare ordered by ``create_time`` in descending order. To fetch\nupdates without duplication, send request with filter\n``create_time_epoch_microseconds > [first item's create_time of previous request]``\nand empty page_token.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_messages():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListMessagesRequest(\n            parent=\"par",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the conversation to list messages for. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.conversations.pagers.ListMessagesAsyncPager: The response message for [Conversations.ListMessages][google.cloud.dialogflow.v2beta1.Conversations.ListMessages].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "suggest_conversation_summary",
          "description": "Suggest summary for a conversation based on specific\nhistorical messages. The range of the messages to be\nused for summary can be specified in the request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_suggest_conversation_summary():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.SuggestConversationSummaryRequest(\n            conversation=\"conversation_value\",\n        )\n\n        # Make the request\n        response = await client.suggest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "conversation": {
                "type": "str",
                "description": "Required. The conversation to fetch suggestion for. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>``.  This corresponds to the ``conversation`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.SuggestConversationSummaryResponse: The response message for [Conversations.SuggestConversationSummary][google.cloud.dialogflow.v2beta1.Conversations.SuggestConversationSummary]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "conversation",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_stateless_summary",
          "description": "Generates and returns a summary for a conversation\nthat does not have a resource created for it.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_generate_stateless_summary():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationsAsyncClient()\n\n        # Initialize request argument(s)\n        stateless_conversation = dialogflow_v2beta1.MinimalConversation()\n        stateless_conversation.messages.content = \"content_value\"\n        stateless_conversation.parent = \"parent_value\"\n\n        conversation_profile = dialogflow_v2beta1.Conversatio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_stateless_suggestion",
          "description": "Generates and returns a suggestion for a conversation\nthat does not have a resource created for it.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_generate_stateless_suggestion():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GenerateStatelessSuggestionRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.generate_stateless_suggestion(request=request)\n\n        # Handle the resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_knowledge",
          "description": "Get answers for the given query based on knowledge\ndocuments.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_search_knowledge():\n        # Create a client\n        client = dialogflow_v2beta1.ConversationsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.SearchKnowledgeRequest(\n            parent=\"parent_value\",\n            conversation_profile=\"conversation_profile_value\",\n            session_id=\"session_id_value\",\n        )\n\n        # Make the request\n        response = await client.search_knowledge(request=reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Documents": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_documents",
          "description": "Returns the list of all documents of the knowledge base.\n\nNote: The ``projects.agent.knowledgeBases.documents`` resource\nis deprecated; only use ``projects.knowledgeBases.documents``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_documents():\n        # Create a client\n        client = dialogflow_v2beta1.DocumentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListDocumentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_documents(request=re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The knowledge base to list all documents for. Format: ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.documents.pagers.ListDocumentsAsyncPager: Response message for [Documents.ListDocuments][google.cloud.dialogflow.v2beta1.Documents.ListDocuments].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_document",
          "description": "Retrieves the specified document.\n\nNote: The ``projects.agent.knowledgeBases.documents`` resource\nis deprecated; only use ``projects.knowledgeBases.documents``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_document():\n        # Create a client\n        client = dialogflow_v2beta1.DocumentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetDocumentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_document(request=request)\n\n        # Handle the r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the document to retrieve. Format ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Document: A knowledge document to be used by a [KnowledgeBase][google.cloud.dialogflow.v2beta1.KnowledgeBase].  For more information, see the [knowledge base guide](\\ https://cloud.google.com/dialogflow/docs/how/knowledge-bases).  Note: The projects.agent.knowledgeBases.documents resource is deprecated; only use projects.knowledgeBases.documents."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_document",
          "description": "Creates a new document.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [KnowledgeOperationMetadata][google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata]\n-  ``response``:\n   [Document][google.cloud.dialogflow.v2beta1.Document]\n\nNote: The ``projects.agent.knowledgeBases.documents`` resource\nis deprecated; only use ``projects.knowledgeBases.documents``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The knowledge base to create a document for. Format: ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "document": {
                "type": "google.cloud.dialogflow_v2beta1.types.Document",
                "description": "Required. The document to create. This corresponds to the ``document`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.dialogflow_v2beta1.types.Document` A knowledge document to be used by a [KnowledgeBase][google.cloud.dialogflow.v2beta1.KnowledgeBase].  For more information, see the [knowledge base guide](\\ https://cloud.google.com/dialogflow/docs/how/knowledge-bases).  Note: The projects.agent.knowledgeBases.documents resource is deprecated; only use projects.knowledgeBases.documents."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "document",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_documents",
          "description": "Create documents by importing data from external sources.\nDialogflow supports up to 350 documents in each request. If you\ntry to import more, Dialogflow will return an error.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [KnowledgeOperationMetadata][google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata]\n-  ``response``:\n   [ImportDocumentsResponse][google.cloud.dialogflow.v2beta1.ImportDocumentsResponse]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_document",
          "description": "Deletes the specified document.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [KnowledgeOperationMetadata][google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata]\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty>`__\n\nNote: The ``projects.agent.knowledgeBases.documents`` resource\nis deprecated; only use ``projects.knowledgeBases.documents``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.h",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the document to delete. Format: ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_document",
          "description": "Updates the specified document.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [KnowledgeOperationMetadata][google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata]\n-  ``response``:\n   [Document][google.cloud.dialogflow.v2beta1.Document]\n\nNote: The ``projects.agent.knowledgeBases.documents`` resource\nis deprecated; only use ``projects.knowledgeBases.documents``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "document": {
                "type": "google.cloud.dialogflow_v2beta1.types.Document",
                "description": "Required. The document to update. This corresponds to the ``document`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Not specified means ``update all``. Currently, only ``display_name`` can be updated, an InvalidArgument will be returned for attempting to update other fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.dialogflow_v2beta1.types.Document` A knowledge document to be used by a [KnowledgeBase][google.cloud.dialogflow.v2beta1.KnowledgeBase].  For more information, see the [knowledge base guide](\\ https://cloud.google.com/dialogflow/docs/how/knowledge-bases).  Note: The projects.agent.knowledgeBases.documents resource is deprecated; only use projects.knowledgeBases.documents."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "document",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reload_document",
          "description": "Reloads the specified document from its specified source,\ncontent_uri or content. The previously loaded content of the\ndocument will be deleted. Note: Even when the content of the\ndocument has not changed, there still may be side effects\nbecause of internal implementation changes. Note: If the\ndocument source is Google Cloud Storage URI, its metadata will\nbe replaced with the custom metadata from Google Cloud Storage\nif the ``import_gcs_custom_metadata`` field is set to true in\nthe request.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [KnowledgeOperationMetadata][google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata]\n-  ``response``:\n   [Document][google.cloud.dialogflow.v2beta1.Document]\n\nNote: The ``projects.agent.knowledgeBases.documents`` resource\nis deprecated; only use ``projects.knowledgeBases.documents``.\n\n.. code-block:: python\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the document to reload. Format: ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "gcs_source": {
                "type": "google.cloud.dialogflow_v2beta1.types.GcsSource",
                "description": "The path for a Cloud Storage source file for reloading document content. If not provided, the Document's existing source will be reloaded.  This corresponds to the ``gcs_source`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.dialogflow_v2beta1.types.Document` A knowledge document to be used by a [KnowledgeBase][google.cloud.dialogflow.v2beta1.KnowledgeBase].  For more information, see the [knowledge base guide](\\ https://cloud.google.com/dialogflow/docs/how/knowledge-bases).  Note: The projects.agent.knowledgeBases.documents resource is deprecated; only use projects.knowledgeBases.documents."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "gcs_source",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "EncryptionSpecService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_encryption_spec",
          "description": "Gets location-level encryption key specification.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_encryption_spec():\n        # Create a client\n        client = dialogflow_v2beta1.EncryptionSpecServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetEncryptionSpecRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_encryption_spec(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the encryption spec resource to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.EncryptionSpec: A customer-managed encryption key specification that can be applied to all created resources (e.g. Conversation)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "initialize_encryption_spec",
          "description": "Initializes a location-level encryption key\nspecification.  An error will be thrown if the location\nhas resources already created before the initialization.\nOnce the encryption specification is initialized at a\nlocation, it is immutable and all newly created\nresources under the location will be encrypted with the\nexisting specification.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_initialize_encryption_spec():\n        # Create a client\n        client = dialogflow_v2beta1.EncryptionSpecServiceAsyncClient()\n\n        # Initialize request argument(s)\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "encryption_spec": {
                "type": "google.cloud.dialogflow_v2beta1.types.EncryptionSpec",
                "description": "Required. The encryption spec used for CMEK encryption. It is required that the kms key is in the same region as the endpoint. The same key will be used for all provisioned resources, if encryption is available. If the kms_key_name is left empty, no encryption will be enforced.  This corresponds to the ``encryption_spec`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.dialogflow_v2beta1.types.InitializeEncryptionSpecResponse` The response to initialize a location-level encryption specification."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "encryption_spec",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "EntityTypes": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_entity_types",
          "description": "Returns the list of all entity types in the specified\nagent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_entity_types():\n        # Create a client\n        client = dialogflow_v2beta1.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListEntityTypesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_entity_types(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to list all entity types from. Supported formats:  -  ``projects/<Project ID>/agent`` -  ``projects/<Project ID>/locations/<Location ID>/agent``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see `Multilingual intent and entity data <https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity>`__.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.entity_types.pagers.ListEntityTypesAsyncPager: The response message for [EntityTypes.ListEntityTypes][google.cloud.dialogflow.v2beta1.EntityTypes.ListEntityTypes].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_entity_type",
          "description": "Retrieves the specified entity type.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_entity_type():\n        # Create a client\n        client = dialogflow_v2beta1.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetEntityTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_entity_type(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.GetEntity",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the entity type. Supported formats:  -  ``projects/<Project ID>/agent/entityTypes/<Entity Type ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/entityTypes/<Entity Type ID>``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see `Multilingual intent and entity data <https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity>`__.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.EntityType: Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted.  Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent.  For more information, see the [Entity guide](\\ https://cloud.google.com/dialogflow/docs/entities-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_entity_type",
          "description": "Creates an entity type in the specified agent.\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_create_entity_type():\n        # Create a client\n        client = dialogflow_v2beta1.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        entity_type = dialogflow_v2beta1.EntityType()\n        entity_type.display_name = \"display_name_value\"\n        entity_type.kind = \"KIND_REGEXP\"\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to create a entity type for. Supported formats:  -  ``projects/<Project ID>/agent`` -  ``projects/<Project ID>/locations/<Location ID>/agent``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "entity_type": {
                "type": "google.cloud.dialogflow_v2beta1.types.EntityType",
                "description": "Required. The entity type to create. This corresponds to the ``entity_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see `Multilingual intent and entity data <https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity>`__.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.EntityType: Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted.  Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent.  For more information, see the [Entity guide](\\ https://cloud.google.com/dialogflow/docs/entities-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "entity_type",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_entity_type",
          "description": "Updates the specified entity type.\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_entity_type():\n        # Create a client\n        client = dialogflow_v2beta1.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        entity_type = dialogflow_v2beta1.EntityType()\n        entity_type.display_name = \"display_name_value\"\n        entity_type.kind = \"KIND_REGEXP\"\n\n        request =",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "entity_type": {
                "type": "google.cloud.dialogflow_v2beta1.types.EntityType",
                "description": "Required. The entity type to update. This corresponds to the ``entity_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see `Multilingual intent and entity data <https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity>`__.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. The mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.EntityType: Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted.  Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent.  For more information, see the [Entity guide](\\ https://cloud.google.com/dialogflow/docs/entities-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "entity_type",
              "language_code",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_entity_type",
          "description": "Deletes the specified entity type.\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_entity_type():\n        # Create a client\n        client = dialogflow_v2beta1.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteEntityTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_entity_typ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the entity type to delete. Supported formats:  -  ``projects/<Project ID>/agent/entityTypes/<Entity Type ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/entityTypes/<Entity Type ID>``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_update_entity_types",
          "description": "Updates/Creates multiple entity types in the specified agent.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``:\n   [BatchUpdateEntityTypesResponse][google.cloud.dialogflow.v2beta1.BatchUpdateEntityTypesResponse]\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_delete_entity_types",
          "description": "Deletes entity types in the specified agent.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty>`__\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the agent to delete all entities types for. Supported formats:  -  ``projects/<Project ID>/agent``, -  ``projects/<Project ID>/locations/<Location ID>/agent``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "entity_type_names": {
                "type": "MutableSequence[str]",
                "description": "Required. The names entity types to delete. All names must point to the same agent as ``parent``.  This corresponds to the ``entity_type_names`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "entity_type_names",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_create_entities",
          "description": "Creates multiple new entities in the specified entity type.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty>`__\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the entity type to create entities in. Supported formats:  -  ``projects/<Project ID>/agent/entityTypes/<Entity Type ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/entityTypes/<Entity Type ID>``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "entities": {
                "type": "MutableSequence[google.cloud.dialogflow_v2beta1.types.EntityType.Entity]",
                "description": "Required. The entities to create. This corresponds to the ``entities`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see `Multilingual intent and entity data <https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity>`__.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "entities",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_update_entities",
          "description": "Updates or creates multiple entities in the specified entity\ntype. This method does not affect entities in the entity type\nthat aren't explicitly specified in the request.\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty>`__\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the entity type to update or create entities in. Supported formats:  -  ``projects/<Project ID>/agent/entityTypes/<Entity Type ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/entityTypes/<Entity Type ID>``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "entities": {
                "type": "MutableSequence[google.cloud.dialogflow_v2beta1.types.EntityType.Entity]",
                "description": "Required. The entities to update or create.  This corresponds to the ``entities`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see `Multilingual intent and entity data <https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity>`__.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "entities",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_delete_entities",
          "description": "Deletes entities in the specified entity type.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty>`__\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the entity type to delete entries for. Supported formats:  -  ``projects/<Project ID>/agent/entityTypes/<Entity Type ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/entityTypes/<Entity Type ID>``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "entity_values": {
                "type": "MutableSequence[str]",
                "description": "Required. The reference ``values`` of the entities to delete. Note that these are not fully-qualified names, i.e. they don't start with ``projects/<Project ID>``.  This corresponds to the ``entity_values`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see `Multilingual intent and entity data <https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity>`__.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "entity_values",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Environments": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_environments",
          "description": "Returns the list of all non-draft environments of the\nspecified agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_environments():\n        # Create a client\n        client = dialogflow_v2beta1.EnvironmentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListEnvironmentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_environments(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to list all environments from. Format:  -  ``projects/<Project ID>/agent`` -  ``projects/<Project ID>/locations/<Location ID>/agent``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.environments.pagers.ListEnvironmentsAsyncPager: The response message for [Environments.ListEnvironments][google.cloud.dialogflow.v2beta1.Environments.ListEnvironments].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_environment",
          "description": "Retrieves the specified agent environment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_environment():\n        # Create a client\n        client = dialogflow_v2beta1.EnvironmentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetEnvironmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_environment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.G",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_environment",
          "description": "Creates an agent environment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_create_environment():\n        # Create a client\n        client = dialogflow_v2beta1.EnvironmentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.CreateEnvironmentRequest(\n            parent=\"parent_value\",\n            environment_id=\"environment_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_environment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Opt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_environment",
          "description": "Updates the specified agent environment.\n\nThis method allows you to deploy new agent versions into the\nenvironment. When an environment is pointed to a new agent\nversion by setting ``environment.agent_version``, the\nenvironment is temporarily set to the ``LOADING`` state. During\nthat time, the environment keeps on serving the previous version\nof the agent. After the new agent version is done loading, the\nenvironment is set back to the ``RUNNING`` state. You can use\n\"-\" as Environment ID in environment name to update version in\n\"draft\" environment. WARNING: this will negate all recent\nchanges to draft and can't be undone. You may want to save the\ndraft to a version before calling this function.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_environment",
          "description": "Deletes the specified agent environment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_environment():\n        # Create a client\n        client = dialogflow_v2beta1.EnvironmentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteEnvironmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_environment(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.DeleteEnvironmentRequest, dict]]):\n        The request objec",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_environment_history",
          "description": "Gets the history of the specified environment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_environment_history():\n        # Create a client\n        client = dialogflow_v2beta1.EnvironmentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetEnvironmentHistoryRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.get_environment_history(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Fulfillments": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_fulfillment",
          "description": "Retrieves the fulfillment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_fulfillment():\n        # Create a client\n        client = dialogflow_v2beta1.FulfillmentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetFulfillmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_fulfillment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.GetFulfillmentReq",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the fulfillment. Supported formats:  -  ``projects/<Project ID>/agent/fulfillment`` -  ``projects/<Project ID>/locations/<Location ID>/agent/fulfillment``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Fulfillment: By default, your agent responds to a matched intent with a static response. As an alternative, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday.  For more information, see the [fulfillment guide](\\ https://cloud.google.com/dialogflow/docs/fulfillment-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_fulfillment",
          "description": "Updates the fulfillment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_fulfillment():\n        # Create a client\n        client = dialogflow_v2beta1.FulfillmentsAsyncClient()\n\n        # Initialize request argument(s)\n        fulfillment = dialogflow_v2beta1.Fulfillment()\n        fulfillment.generic_web_service.uri = \"uri_value\"\n        fulfillment.name = \"name_value\"\n\n        request = dialogflow_v2beta1.UpdateFulfillmentRequest(\n            fulfillment=fulfillment,\n        )\n\n        # Make the request\n        response = await client.update_fulfill",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "fulfillment": {
                "type": "google.cloud.dialogflow_v2beta1.types.Fulfillment",
                "description": "Required. The fulfillment to update. This corresponds to the ``fulfillment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Fulfillment: By default, your agent responds to a matched intent with a static response. As an alternative, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday.  For more information, see the [fulfillment guide](\\ https://cloud.google.com/dialogflow/docs/fulfillment-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "fulfillment",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Generators": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_generator",
          "description": "Creates a generator.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_create_generator():\n        # Create a client\n        client = dialogflow_v2beta1.GeneratorsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.CreateGeneratorRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_generator(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.CreateGeneratorReq",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project/location to create generator for. Format: ``projects/<Project ID>/locations/<Location ID>``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "generator": {
                "type": "google.cloud.dialogflow_v2beta1.types.Generator",
                "description": "Required. The generator to create. This corresponds to the ``generator`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "generator_id": {
                "type": "str",
                "description": "Optional. The ID to use for the generator, which will become the final component of the generator's resource name.  The generator ID must be compliant with the regression formula ``[a-zA-Z][a-zA-Z0-9_-]*`` with the characters length in range of [3,64]. If the field is not provided, an Id will be auto-generated. If the field is provided, the caller is responsible for  1. the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness.  This corresponds to the ``generator_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Generator: LLM generator."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "generator",
              "generator_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_generator",
          "description": "Retrieves a generator.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_generator():\n        # Create a client\n        client = dialogflow_v2beta1.GeneratorsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetGeneratorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_generator(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.GetGeneratorRequest, dict]]):",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The generator resource name to retrieve. Format: ``projects/<Project ID>/locations/<Location ID>``/generators/\\`  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Generator: LLM generator."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_generators",
          "description": "Lists generators.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_generators():\n        # Create a client\n        client = dialogflow_v2beta1.GeneratorsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListGeneratorsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_generators(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project/location to list generators for. Format: ``projects/<Project ID>/locations/<Location ID>``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.generators.pagers.ListGeneratorsAsyncPager: Response of ListGenerators.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_generator",
          "description": "Deletes a generator.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_generator():\n        # Create a client\n        client = dialogflow_v2beta1.GeneratorsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteGeneratorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_generator(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.DeleteGeneratorRequest, dict]]):\n        The request object. Request of DeleteGenerator.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The generator resource name to delete. Format: ``projects/<Project ID>/locations/<Location ID>/generators/<Generator ID>``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_generator",
          "description": "Updates a generator.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_generator():\n        # Create a client\n        client = dialogflow_v2beta1.GeneratorsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.UpdateGeneratorRequest(\n        )\n\n        # Make the request\n        response = await client.update_generator(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.UpdateGeneratorRequest, dict]]):\n        The request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "generator": {
                "type": "google.cloud.dialogflow_v2beta1.types.Generator",
                "description": "Required. The generator to update. The name field of generator is to identify the generator to update.  This corresponds to the ``generator`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. The list of fields to update.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Generator: LLM generator."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "generator",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Intents": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_intents",
          "description": "Returns the list of all intents in the specified\nagent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_intents():\n        # Create a client\n        client = dialogflow_v2beta1.IntentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListIntentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_intents(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optiona",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to list all intents from. Format: ``projects/<Project ID>/agent`` or ``projects/<Project ID>/locations/<Location ID>/agent``.  Alternatively, you can specify the environment to list intents for. Format: ``projects/<Project ID>/agent/environments/<Environment ID>`` or ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>``. Note: training phrases of the intents will not be returned for non-draft environment.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see `Multilingual intent and entity data <https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity>`__.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.intents.pagers.ListIntentsAsyncPager: The response message for [Intents.ListIntents][google.cloud.dialogflow.v2beta1.Intents.ListIntents].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_intent",
          "description": "Retrieves the specified intent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_intent():\n        # Create a client\n        client = dialogflow_v2beta1.IntentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetIntentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_intent(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.GetIntentRequest, dict]]):\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the intent. Supported formats:  -  ``projects/<Project ID>/agent/intents/<Intent ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/intents/<Intent ID>``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see `Multilingual intent and entity data <https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity>`__.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Intent: An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification.  For more information, see the [intent guide](\\ https://cloud.google.com/dialogflow/docs/intents-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_intent",
          "description": "Creates an intent in the specified agent.\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_create_intent():\n        # Create a client\n        client = dialogflow_v2beta1.IntentsAsyncClient()\n\n        # Initialize request argument(s)\n        intent = dialogflow_v2beta1.Intent()\n        intent.display_name = \"display_name_value\"\n\n        request = dialogflow_v2beta1.CreateIntentRequest(\n            pare",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to create a intent for. Supported formats:  -  ``projects/<Project ID>/agent`` -  ``projects/<Project ID>/locations/<Location ID>/agent``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "intent": {
                "type": "google.cloud.dialogflow_v2beta1.types.Intent",
                "description": "Required. The intent to create. This corresponds to the ``intent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see `Multilingual intent and entity data <https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity>`__.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Intent: An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification.  For more information, see the [intent guide](\\ https://cloud.google.com/dialogflow/docs/intents-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "intent",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_intent",
          "description": "Updates the specified intent.\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_intent():\n        # Create a client\n        client = dialogflow_v2beta1.IntentsAsyncClient()\n\n        # Initialize request argument(s)\n        intent = dialogflow_v2beta1.Intent()\n        intent.display_name = \"display_name_value\"\n\n        request = dialogflow_v2beta1.UpdateIntentRequest(\n            intent=intent,\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "intent": {
                "type": "google.cloud.dialogflow_v2beta1.types.Intent",
                "description": "Required. The intent to update. This corresponds to the ``intent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. The mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see `Multilingual intent and entity data <https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity>`__.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Intent: An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification.  For more information, see the [intent guide](\\ https://cloud.google.com/dialogflow/docs/intents-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "intent",
              "update_mask",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_intent",
          "description": "Deletes the specified intent and its direct or indirect followup\nintents.\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_intent():\n        # Create a client\n        client = dialogflow_v2beta1.IntentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteIntentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        awai",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the intent to delete. If this intent has direct or indirect followup intents, we also delete them.  Supported formats:  -  ``projects/<Project ID>/agent/intents/<Intent ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/intents/<Intent ID>``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_update_intents",
          "description": "Updates/Creates multiple intents in the specified agent.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``:\n   [BatchUpdateIntentsResponse][google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse]\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   ht",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the agent to update or create intents in. Supported formats:  -  ``projects/<Project ID>/agent`` -  ``projects/<Project ID>/locations/<Location ID>/agent``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "intent_batch_uri": {
                "type": "str",
                "description": "The URI to a Google Cloud Storage file containing intents to update or create. The file format can either be a serialized proto (of IntentBatch type) or JSON object. Note: The URI must start with \"gs://\".  This corresponds to the ``intent_batch_uri`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "intent_batch_inline": {
                "type": "google.cloud.dialogflow_v2beta1.types.IntentBatch",
                "description": "The collection of intents to update or create.  This corresponds to the ``intent_batch_inline`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.dialogflow_v2beta1.types.BatchUpdateIntentsResponse` The response message for [Intents.BatchUpdateIntents][google.cloud.dialogflow.v2beta1.Intents.BatchUpdateIntents]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "intent_batch_uri",
              "intent_batch_inline",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_delete_intents",
          "description": "Deletes intents in the specified agent.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/es/docs/how/long-running-operations>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty>`__\n\nNote: You should always train an agent prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/es/docs/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   h",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the agent to delete all entities types for. Supported formats:  -  ``projects/<Project ID>/agent`` -  ``projects/<Project ID>/locations/<Location ID>/agent``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "intents": {
                "type": "MutableSequence[google.cloud.dialogflow_v2beta1.types.Intent]",
                "description": "Required. The collection of intents to delete. Only intent ``name`` must be filled in.  This corresponds to the ``intents`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "intents",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "KnowledgeBases": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_knowledge_bases",
          "description": "Returns the list of all knowledge bases of the specified agent.\n\nNote: The ``projects.agent.knowledgeBases`` resource is\ndeprecated; only use ``projects.knowledgeBases``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_knowledge_bases():\n        # Create a client\n        client = dialogflow_v2beta1.KnowledgeBasesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListKnowledgeBasesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_knowledge_bases(r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project to list of knowledge bases for. Format: ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.knowledge_bases.pagers.ListKnowledgeBasesAsyncPager: Response message for [KnowledgeBases.ListKnowledgeBases][google.cloud.dialogflow.v2beta1.KnowledgeBases.ListKnowledgeBases].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_knowledge_base",
          "description": "Retrieves the specified knowledge base.\n\nNote: The ``projects.agent.knowledgeBases`` resource is\ndeprecated; only use ``projects.knowledgeBases``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_knowledge_base():\n        # Create a client\n        client = dialogflow_v2beta1.KnowledgeBasesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetKnowledgeBaseRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_knowledge_base(request=request)\n\n        # Hand",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the knowledge base to retrieve. Format ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.KnowledgeBase: A knowledge base represents a collection of knowledge documents that you provide to Dialogflow. Your knowledge documents contain information that may be useful during conversations with end-users. Some Dialogflow features use knowledge bases when looking for a response to an end-user input.  For more information, see the [knowledge base guide](\\ https://cloud.google.com/dialogflow/docs/how/knowledge-bases).  Note: The projects.agent.knowledgeBases resource is deprecated; only use projects.knowledgeBases."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_knowledge_base",
          "description": "Creates a knowledge base.\n\nNote: The ``projects.agent.knowledgeBases`` resource is\ndeprecated; only use ``projects.knowledgeBases``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_create_knowledge_base():\n        # Create a client\n        client = dialogflow_v2beta1.KnowledgeBasesAsyncClient()\n\n        # Initialize request argument(s)\n        knowledge_base = dialogflow_v2beta1.KnowledgeBase()\n        knowledge_base.display_name = \"display_name_value\"\n\n        request = dialogflow_v2beta1.CreateKnowledgeBaseRequest(\n            parent=\"parent_value\",\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project to create a knowledge base for. Format: ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "knowledge_base": {
                "type": "google.cloud.dialogflow_v2beta1.types.KnowledgeBase",
                "description": "Required. The knowledge base to create.  This corresponds to the ``knowledge_base`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.KnowledgeBase: A knowledge base represents a collection of knowledge documents that you provide to Dialogflow. Your knowledge documents contain information that may be useful during conversations with end-users. Some Dialogflow features use knowledge bases when looking for a response to an end-user input.  For more information, see the [knowledge base guide](\\ https://cloud.google.com/dialogflow/docs/how/knowledge-bases).  Note: The projects.agent.knowledgeBases resource is deprecated; only use projects.knowledgeBases."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "knowledge_base",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_knowledge_base",
          "description": "Deletes the specified knowledge base.\n\nNote: The ``projects.agent.knowledgeBases`` resource is\ndeprecated; only use ``projects.knowledgeBases``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_knowledge_base():\n        # Create a client\n        client = dialogflow_v2beta1.KnowledgeBasesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteKnowledgeBaseRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_knowledge_base(request=request)\n\nArgs:\n    request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the knowledge base to delete. Format: ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_knowledge_base",
          "description": "Updates the specified knowledge base.\n\nNote: The ``projects.agent.knowledgeBases`` resource is\ndeprecated; only use ``projects.knowledgeBases``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_knowledge_base():\n        # Create a client\n        client = dialogflow_v2beta1.KnowledgeBasesAsyncClient()\n\n        # Initialize request argument(s)\n        knowledge_base = dialogflow_v2beta1.KnowledgeBase()\n        knowledge_base.display_name = \"display_name_value\"\n\n        request = dialogflow_v2beta1.UpdateKnowledgeBaseRequest(\n            knowledge_base=k",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "knowledge_base": {
                "type": "google.cloud.dialogflow_v2beta1.types.KnowledgeBase",
                "description": "Required. The knowledge base to update.  This corresponds to the ``knowledge_base`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Not specified means ``update all``. Currently, only ``display_name`` can be updated, an InvalidArgument will be returned for attempting to update other fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.KnowledgeBase: A knowledge base represents a collection of knowledge documents that you provide to Dialogflow. Your knowledge documents contain information that may be useful during conversations with end-users. Some Dialogflow features use knowledge bases when looking for a response to an end-user input.  For more information, see the [knowledge base guide](\\ https://cloud.google.com/dialogflow/docs/how/knowledge-bases).  Note: The projects.agent.knowledgeBases resource is deprecated; only use projects.knowledgeBases."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "knowledge_base",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Participants": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_participant",
          "description": "Creates a new participant in a conversation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_create_participant():\n        # Create a client\n        client = dialogflow_v2beta1.ParticipantsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.CreateParticipantRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_participant(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource identifier of the conversation adding the participant. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "participant": {
                "type": "google.cloud.dialogflow_v2beta1.types.Participant",
                "description": "Required. The participant to create. This corresponds to the ``participant`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Participant: Represents a conversation participant (human agent, virtual agent, end-user)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "participant",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_participant",
          "description": "Retrieves a conversation participant.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_participant():\n        # Create a client\n        client = dialogflow_v2beta1.ParticipantsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetParticipantRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_participant(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.GetPar",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the participant. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>/participants/<Participant ID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Participant: Represents a conversation participant (human agent, virtual agent, end-user)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_participants",
          "description": "Returns the list of all participants in the specified\nconversation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_participants():\n        # Create a client\n        client = dialogflow_v2beta1.ParticipantsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListParticipantsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_participants(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The conversation to list all participants from. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.participants.pagers.ListParticipantsAsyncPager: The response message for [Participants.ListParticipants][google.cloud.dialogflow.v2beta1.Participants.ListParticipants].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_participant",
          "description": "Updates the specified participant.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_participant():\n        # Create a client\n        client = dialogflow_v2beta1.ParticipantsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.UpdateParticipantRequest(\n        )\n\n        # Make the request\n        response = await client.update_participant(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.UpdateParticipantRequest, dict]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "participant": {
                "type": "google.cloud.dialogflow_v2beta1.types.Participant",
                "description": "Required. The participant to update. This corresponds to the ``participant`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The mask to specify which fields to update.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Participant: Represents a conversation participant (human agent, virtual agent, end-user)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "participant",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "analyze_content",
          "description": "Adds a text (chat, for example), or audio (phone recording, for\nexample) message from a participant into the conversation.\n\nNote: Always use agent versions for production traffic sent to\nvirtual agents. See `Versions and\nenvironments <https://cloud.google.com/dialogflow/es/docs/agents-versions>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_analyze_content():\n        # Create a client\n        client = dialogflow_v2beta1.ParticipantsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.AnalyzeContentRequest(\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "participant": {
                "type": "str",
                "description": "Required. The name of the participant this text comes from. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>/participants/<Participant ID>``.  This corresponds to the ``participant`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "text_input": {
                "type": "google.cloud.dialogflow_v2beta1.types.TextInput",
                "description": "The natural language text to be processed.  This corresponds to the ``text_input`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "audio_input": {
                "type": "google.cloud.dialogflow_v2beta1.types.AudioInput",
                "description": "The natural language speech audio to be processed.  This corresponds to the ``audio_input`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "event_input": {
                "type": "google.cloud.dialogflow_v2beta1.types.EventInput",
                "description": "An input event to send to Dialogflow. This corresponds to the ``event_input`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.AnalyzeContentResponse: The response message for [Participants.AnalyzeContent][google.cloud.dialogflow.v2beta1.Participants.AnalyzeContent]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "participant",
              "text_input",
              "audio_input",
              "event_input",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "streaming_analyze_content",
          "description": "Adds a text (e.g., chat) or audio (e.g., phone recording)\nmessage from a participant into the conversation. Note: This\nmethod is only available through the gRPC API (not REST).\n\nThe top-level message sent to the client by the server is\n``StreamingAnalyzeContentResponse``. Multiple response messages\ncan be returned in order. The first one or more messages contain\nthe ``recognition_result`` field. Each result represents a more\ncomplete transcript of what the user said. The next message\ncontains the ``reply_text`` field, and potentially the\n``reply_audio`` and/or the ``automated_agent_reply`` fields.\n\nNote: Always use agent versions for production traffic sent to\nvirtual agents. See `Versions and\nenvironments <https://cloud.google.com/dialogflow/es/docs/agents-versions>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initial",
          "parameters": {
            "type": "object",
            "properties": {
              "requests": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "suggest_articles",
          "description": "Gets suggested articles for a participant based on specific\nhistorical messages.\n\nNote that\n[ListSuggestions][google.cloud.dialogflow.v2beta1.Participants.ListSuggestions]\nwill only list the auto-generated suggestions, while\n[CompileSuggestion][google.cloud.dialogflow.v2beta1.Participants.CompileSuggestion]\nwill try to compile suggestion based on the provided\nconversation context in the real time.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_suggest_articles():\n        # Create a client\n        client = dialogflow_v2beta1.ParticipantsAsyncClient()\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the participant to fetch suggestion for. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>/participants/<Participant ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.SuggestArticlesResponse: The response message for [Participants.SuggestArticles][google.cloud.dialogflow.v2beta1.Participants.SuggestArticles]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "suggest_faq_answers",
          "description": "Gets suggested faq answers for a participant based on\nspecific historical messages.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_suggest_faq_answers():\n        # Create a client\n        client = dialogflow_v2beta1.ParticipantsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.SuggestFaqAnswersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.suggest_faq_answers(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the participant to fetch suggestion for. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>/participants/<Participant ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.SuggestFaqAnswersResponse: The request message for [Participants.SuggestFaqAnswers][google.cloud.dialogflow.v2beta1.Participants.SuggestFaqAnswers]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "suggest_smart_replies",
          "description": "Gets smart replies for a participant based on\nspecific historical messages.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_suggest_smart_replies():\n        # Create a client\n        client = dialogflow_v2beta1.ParticipantsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.SuggestSmartRepliesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.suggest_smart_replies(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the participant to fetch suggestion for. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>/participants/<Participant ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.SuggestSmartRepliesResponse: The response message for [Participants.SuggestSmartReplies][google.cloud.dialogflow.v2beta1.Participants.SuggestSmartReplies]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "suggest_knowledge_assist",
          "description": "Gets knowledge assist suggestions based on historical\nmessages.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_suggest_knowledge_assist():\n        # Create a client\n        client = dialogflow_v2beta1.ParticipantsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.SuggestKnowledgeAssistRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.suggest_knowledge_assist(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Opt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_suggestions",
          "description": "Deprecated: Use inline suggestion, event based suggestion or\nSuggestion\\* API instead. See\n[HumanAgentAssistantConfig.name][google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.name]\nfor more details. Removal Date: 2020-09-01.\n\nRetrieves suggestions for live agents.\n\nThis method should be used by human agent client software to\nfetch auto generated suggestions in real-time, while the\nconversation with an end user is in progress. The functionality\nis implemented in terms of the `list\npagination <https://cloud.google.com/apis/design/design_patterns#list_pagination>`__\ndesign pattern. The client app should use the\n``next_page_token`` field to fetch the next batch of\nsuggestions. ``suggestions`` are sorted by ``create_time`` in\ndescending order. To fetch latest suggestion, just set\n``page_size`` to 1. To fetch new suggestions without\nduplication, send request with filter\n``create_time_epoch_microseconds > [first item's create_time of previous request]``\nand empty page_token.\n\n.. code-block:: python\n\n    # Thi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "compile_suggestion",
          "description": "Deprecated. use\n[SuggestArticles][google.cloud.dialogflow.v2beta1.Participants.SuggestArticles]\nand\n[SuggestFaqAnswers][google.cloud.dialogflow.v2beta1.Participants.SuggestFaqAnswers]\ninstead.\n\nGets suggestions for a participant based on specific historical\nmessages.\n\nNote that\n[ListSuggestions][google.cloud.dialogflow.v2beta1.Participants.ListSuggestions]\nwill only list the auto-generated suggestions, while\n[CompileSuggestion][google.cloud.dialogflow.v2beta1.Participants.CompileSuggestion]\nwill try to compile suggestion based on the provided\nconversation context in the real time.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.ht",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "SessionEntityTypes": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_session_entity_types",
          "description": "Returns the list of all session entity types in the\nspecified session.\nThis method doesn't work with Google Assistant\nintegration. Contact Dialogflow support if you need to\nuse session entities with Google Assistant integration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_session_entity_types():\n        # Create a client\n        client = dialogflow_v2beta1.SessionEntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListSessionEntityTypesRequest(\n            parent=\"parent_value\",\n        )\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The session to list all session entity types from. Supported formats:  -  \\`projects//agent/sessions/, -  ``projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session ID>``, -  ``projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``, -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``,  If ``Location ID`` is not specified we assume default 'us' location. If ``Environment ID`` is not specified, we assume default 'draft' environment. If ``User ID`` is not specified, we assume default '-' user.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.session_entity_types.pagers.ListSessionEntityTypesAsyncPager: The response message for [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.v2beta1.SessionEntityTypes.ListSessionEntityTypes].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_session_entity_type",
          "description": "Retrieves the specified session entity type.\n\nThis method doesn't work with Google Assistant\nintegration. Contact Dialogflow support if you need to\nuse session entities with Google Assistant integration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_session_entity_type():\n        # Create a client\n        client = dialogflow_v2beta1.SessionEntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetSessionEntityTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the session entity type. Supported formats:  -  ``projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type Display Name>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type Display Name>`` -  ``projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>/entityTypes/<Entity Type Display Name>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/ <Environment ID>/users/<User ID>/sessions/<Session ID>/entityTypes/<Entity Type Display Name>``  If ``Location ID`` is not specified we assume default 'us' location. If ``Environment ID`` is not specified, we assume default 'draft' environment. If ``User ID`` is not specified, we assume default '-' user.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.SessionEntityType: A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes.  For more information, see the [session entity guide](\\ https://cloud.google.com/dialogflow/docs/entities-session)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_session_entity_type",
          "description": "Creates a session entity type.\n\nIf the specified session entity type already exists,\noverrides the session entity type.\n\nThis method doesn't work with Google Assistant\nintegration. Contact Dialogflow support if you need to\nuse session entities with Google Assistant integration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_create_session_entity_type():\n        # Create a client\n        client = dialogflow_v2beta1.SessionEntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.CreateSessionEntityTypeRequest(\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The session to create a session entity type for. Supported formats:  -  \\`projects//agent/sessions/, -  ``projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session ID>``, -  ``projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``, -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``,  If ``Location ID`` is not specified we assume default 'us' location. If ``Environment ID`` is not specified, we assume default 'draft' environment. If ``User ID`` is not specified, we assume default '-' user.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "session_entity_type": {
                "type": "google.cloud.dialogflow_v2beta1.types.SessionEntityType",
                "description": "Required. The session entity type to create.  This corresponds to the ``session_entity_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.SessionEntityType: A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes.  For more information, see the [session entity guide](\\ https://cloud.google.com/dialogflow/docs/entities-session)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "session_entity_type",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_session_entity_type",
          "description": "Updates the specified session entity type.\n\nThis method doesn't work with Google Assistant\nintegration. Contact Dialogflow support if you need to\nuse session entities with Google Assistant integration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_session_entity_type():\n        # Create a client\n        client = dialogflow_v2beta1.SessionEntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.UpdateSessionEntityTypeRequest(\n        )\n\n        # Make the request\n        response = await client.update_s",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "session_entity_type": {
                "type": "google.cloud.dialogflow_v2beta1.types.SessionEntityType",
                "description": "Required. The session entity type to update.  This corresponds to the ``session_entity_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. The mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.SessionEntityType: A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes.  For more information, see the [session entity guide](\\ https://cloud.google.com/dialogflow/docs/entities-session)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "session_entity_type",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_session_entity_type",
          "description": "Deletes the specified session entity type.\n\nThis method doesn't work with Google Assistant\nintegration. Contact Dialogflow support if you need to\nuse session entities with Google Assistant integration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_session_entity_type():\n        # Create a client\n        client = dialogflow_v2beta1.SessionEntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteSessionEntityTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the entity type to delete. Supported formats:  -  ``projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type Display Name>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type Display Name>`` -  ``projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>/entityTypes/<Entity Type Display Name>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/ <Environment ID>/users/<User ID>/sessions/<Session ID>/entityTypes/<Entity Type Display Name>``  If ``Location ID`` is not specified we assume default 'us' location. If ``Environment ID`` is not specified, we assume default 'draft' environment. If ``User ID`` is not specified, we assume default '-' user.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Sessions": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "detect_intent",
          "description": "Processes a natural language query and returns structured,\nactionable data as a result. This method is not idempotent,\nbecause it may cause contexts and session entity types to be\nupdated, which in turn might affect results of future queries.\n\nIf you might use `Agent\nAssist <https://cloud.google.com/dialogflow/docs/#aa>`__ or\nother CCAI products now or in the future, consider using\n[AnalyzeContent][google.cloud.dialogflow.v2beta1.Participants.AnalyzeContent]\ninstead of ``DetectIntent``. ``AnalyzeContent`` has additional\nfunctionality for Agent Assist and other CCAI products.\n\nNote: Always use agent versions for production traffic. See\n`Versions and\nenvironments <https://cloud.google.com/dialogflow/es/docs/agents-versions>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying reg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "session": {
                "type": "str",
                "description": "Required. The name of the session this query is sent to. Supported formats:  -  \\`projects//agent/sessions/, -  ``projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session ID>``, -  ``projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``, -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session ID>``,  If ``Location ID`` is not specified we assume default 'us' location. If ``Environment ID`` is not specified, we assume default 'draft' environment (``Environment ID`` might be referred to as environment name at some places). If ``User ID`` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate ``Session ID`` and ``User Id``. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the ``Session ID`` and ``User ID`` must not exceed 36 characters. For more information, see the `API interactions guide <https://cloud.google.com/dialogflow/docs/api-overview>`__.  Note: Always use agent versions for production traffic. See `Versions and environments <https://cloud.google.com/dialogflow/es/docs/agents-versions>`__.  This corresponds to the ``session`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query_input": {
                "type": "google.cloud.dialogflow_v2beta1.types.QueryInput",
                "description": "Required. The input specification. It can be set to:  1. an audio config which instructs the speech recognizer how to process the speech audio,  2. a conversational query in the form of text, or  3. an event that specifies which intent to trigger.  This corresponds to the ``query_input`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.DetectIntentResponse: The message returned from the DetectIntent method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "session",
              "query_input",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "streaming_detect_intent",
          "description": "Processes a natural language query in audio format in a\nstreaming fashion and returns structured, actionable data as a\nresult. This method is only available via the gRPC API (not\nREST).\n\nIf you might use `Agent\nAssist <https://cloud.google.com/dialogflow/docs/#aa>`__ or\nother CCAI products now or in the future, consider using\n[StreamingAnalyzeContent][google.cloud.dialogflow.v2beta1.Participants.StreamingAnalyzeContent]\ninstead of ``StreamingDetectIntent``.\n``StreamingAnalyzeContent`` has additional functionality for\nAgent Assist and other CCAI products.\n\nNote: Always use agent versions for production traffic. See\n`Versions and\nenvironments <https://cloud.google.com/dialogflow/es/docs/agents-versions>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when ",
          "parameters": {
            "type": "object",
            "properties": {
              "requests": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "SipTrunks": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_sip_trunk",
          "description": "Creates a SipTrunk for a specified location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_create_sip_trunk():\n        # Create a client\n        client = dialogflow_v2beta1.SipTrunksAsyncClient()\n\n        # Initialize request argument(s)\n        sip_trunk = dialogflow_v2beta1.SipTrunk()\n        sip_trunk.expected_hostname = ['expected_hostname_value1', 'expected_hostname_value2']\n\n        request = dialogflow_v2beta1.CreateSipTrunkRequest(\n            parent=\"parent_value\",\n            sip_trunk=sip_trunk,\n        )\n\n        # Make the request\n        res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location to create a SIP trunk for. Format: ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "sip_trunk": {
                "type": "google.cloud.dialogflow_v2beta1.types.SipTrunk",
                "description": "Required. The SIP trunk to create. This corresponds to the ``sip_trunk`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.SipTrunk: SipTrunk is the resource that represents a SIP trunk to connect to Google Telephony platform SIP trunking service."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "sip_trunk",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_sip_trunk",
          "description": "Deletes a specified SipTrunk.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_sip_trunk():\n        # Create a client\n        client = dialogflow_v2beta1.SipTrunksAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteSipTrunkRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_sip_trunk(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.DeleteSipTrunkRequest, dict]]):\n        The request object. The request message f",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the SIP trunk to delete. Format: ``projects/<Project ID>/locations/<Location ID>/sipTrunks/<SipTrunk ID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_sip_trunks",
          "description": "Returns a list of SipTrunks in the specified\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_sip_trunks():\n        # Create a client\n        client = dialogflow_v2beta1.SipTrunksAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListSipTrunksRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_sip_trunks(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location to list SIP trunks from. Format: ``projects/<Project ID>/locations/<Location ID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.sip_trunks.pagers.ListSipTrunksAsyncPager: The response message for [SipTrunks.ListSipTrunks][google.cloud.dialogflow.v2beta1.SipTrunks.ListSipTrunks].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_sip_trunk",
          "description": "Retrieves the specified SipTrunk.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_sip_trunk():\n        # Create a client\n        client = dialogflow_v2beta1.SipTrunksAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetSipTrunkRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_sip_trunk(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.GetSipTrunkRequest, ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the SIP trunk to delete. Format: ``projects/<Project ID>/locations/<Location ID>/sipTrunks/<SipTrunk ID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.SipTrunk: SipTrunk is the resource that represents a SIP trunk to connect to Google Telephony platform SIP trunking service."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_sip_trunk",
          "description": "Updates the specified SipTrunk.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_sip_trunk():\n        # Create a client\n        client = dialogflow_v2beta1.SipTrunksAsyncClient()\n\n        # Initialize request argument(s)\n        sip_trunk = dialogflow_v2beta1.SipTrunk()\n        sip_trunk.expected_hostname = ['expected_hostname_value1', 'expected_hostname_value2']\n\n        request = dialogflow_v2beta1.UpdateSipTrunkRequest(\n            sip_trunk=sip_trunk,\n        )\n\n        # Make the request\n        response = await client.update_sip_trunk(request=re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "sip_trunk": {
                "type": "google.cloud.dialogflow_v2beta1.types.SipTrunk",
                "description": "Required. The SipTrunk to update. This corresponds to the ``sip_trunk`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. The mask to control which fields get updated. If the mask is not present, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.SipTrunk: SipTrunk is the resource that represents a SIP trunk to connect to Google Telephony platform SIP trunking service."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "sip_trunk",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Versions": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_versions",
          "description": "Returns the list of all versions of the specified\nagent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_list_versions():\n        # Create a client\n        client = dialogflow_v2beta1.VersionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.ListVersionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_versions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to list all versions from. Supported formats:  -  ``projects/<Project ID>/agent`` -  ``projects/<Project ID>/locations/<Location ID>/agent``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.services.versions.pagers.ListVersionsAsyncPager: The response message for [Versions.ListVersions][google.cloud.dialogflow.v2beta1.Versions.ListVersions].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_version",
          "description": "Retrieves the specified agent version.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_get_version():\n        # Create a client\n        client = dialogflow_v2beta1.VersionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.GetVersionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_version(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.GetVersionRequest, di",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the version. Supported formats:  -  ``projects/<Project ID>/agent/versions/<Version ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/versions/<Version ID>``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Version: You can create multiple versions of your agent and publish them to separate environments.  When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent.  When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for:  -  testing -  development -  production -  etc.  For more information, see the [versions and environments guide](\\ https://cloud.google.com/dialogflow/docs/agents-versions)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_version",
          "description": "Creates an agent version.\n\nThe new version points to the agent instance in the\n\"default\" environment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_create_version():\n        # Create a client\n        client = dialogflow_v2beta1.VersionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.CreateVersionRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_version(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to create a version for. Supported formats:  -  ``projects/<Project ID>/agent`` -  ``projects/<Project ID>/locations/<Location ID>/agent``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "version": {
                "type": "google.cloud.dialogflow_v2beta1.types.Version",
                "description": "Required. The version to create. This corresponds to the ``version`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Version: You can create multiple versions of your agent and publish them to separate environments.  When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent.  When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for:  -  testing -  development -  production -  etc.  For more information, see the [versions and environments guide](\\ https://cloud.google.com/dialogflow/docs/agents-versions)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "version",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_version",
          "description": "Updates the specified agent version.\n\nNote that this method does not allow you to update the\nstate of the agent the given version points to. It\nallows you to update only mutable properties of the\nversion resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_update_version():\n        # Create a client\n        client = dialogflow_v2beta1.VersionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.UpdateVersionRequest(\n        )\n\n        # Make the request\n        response = await client.update_version(request=reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "version": {
                "type": "google.cloud.dialogflow_v2beta1.types.Version",
                "description": "Required. The version to update. Supported formats:  -  ``projects/<Project ID>/agent/versions/<Version ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/versions/<Version ID>``  This corresponds to the ``version`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflow_v2beta1.types.Version: You can create multiple versions of your agent and publish them to separate environments.  When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent.  When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for:  -  testing -  development -  production -  etc.  For more information, see the [versions and environments guide](\\ https://cloud.google.com/dialogflow/docs/agents-versions)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "version",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_version",
          "description": "Delete the specified agent version.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflow_v2beta1\n\n    async def sample_delete_version():\n        # Create a client\n        client = dialogflow_v2beta1.VersionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflow_v2beta1.DeleteVersionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_version(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflow_v2beta1.types.DeleteVersionRequest, dict]]):\n        The request object. The request message fo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the version to delete. Supported formats:  -  ``projects/<Project ID>/agent/versions/<Version ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/versions/<Version ID>``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}