{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-trace\\google\\cloud\\trace_v2\\types\\trace.py": [
    {
      "type": "request_class",
      "name": "Span",
      "docstring": "A span represents a single operation within a trace. Spans\ncan be nested to form a trace tree. Often, a trace contains a\nroot span that describes the end-to-end latency, and one or more\nsubspans for its sub-operations.\n\nA trace can also contain multiple root spans, or none at all.\nSpans do not need to be contiguous. There might be\ngaps or overlaps between spans in a trace.\n\nAttributes:\n    name (str):\n        Required. The resource name of the span in the following\n        format:\n\n        -  ``projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/[SPAN_ID]``\n\n        ``[TRACE_ID]`` is a unique identifier for a trace within a\n        project; it is a 32-character hexadecimal encoding of a\n        16-byte array. It should not be zero.\n\n        ``[SPAN_ID]`` is a unique identifier for a span within a\n        trace; it is a 16-character hexadecimal encoding of an\n        8-byte array. It should not be zero. .\n    span_id (str):\n        Required. The ``[SPAN_ID]`` portion of the span's resource\n        name.\n    parent_s",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The resource name of the span in the following format:  -  ``projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/[SPAN_ID]``  ``[TRACE_ID]`` is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array. It should not be zero.  ``[SPAN_ID]`` is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array. It should not be zero. ."
        },
        "span_id": {
          "type": "str",
          "description": "Required. The ``[SPAN_ID]`` portion of the span's resource name."
        },
        "parent_span_id": {
          "type": "str",
          "description": "The ``[SPAN_ID]`` of this span's parent span. If this is a root span, then this field must be empty."
        },
        "display_name": {
          "type": "google.cloud.trace_v2.types.TruncatableString",
          "description": "Required. A description of the span's operation (up to 128 bytes). Cloud Trace displays the description in the Cloud console. For example, the display name can be a qualified method name or a file name and a line number where the operation is called. A best practice is to use the same display name within an application and at the same call point. This makes it easier to correlate spans in different traces."
        },
        "start_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Required. The start time of the span. On the client side, this is the time kept by the local machine where the span execution starts. On the server side, this is the time when the server's application handler starts running."
        },
        "end_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Required. The end time of the span. On the client side, this is the time kept by the local machine where the span execution ends. On the server side, this is the time when the server application handler stops running."
        },
        "attributes": {
          "type": "google.cloud.trace_v2.types.Span.Attributes",
          "description": "A set of attributes on the span. You can have up to 32 attributes per span."
        },
        "stack_trace": {
          "type": "google.cloud.trace_v2.types.StackTrace",
          "description": "Stack trace captured at the start of the span."
        },
        "time_events": {
          "type": "google.cloud.trace_v2.types.Span.TimeEvents",
          "description": "A set of time events. You can have up to 32 annotations and 128 message events per span."
        },
        "links": {
          "type": "google.cloud.trace_v2.types.Span.Links",
          "description": "Links associated with the span. You can have up to 128 links per Span."
        },
        "status": {
          "type": "google.rpc.status_pb2.Status",
          "description": "Optional. The final status for this span."
        },
        "same_process_as_parent_span": {
          "type": "google.protobuf.wrappers_pb2.BoolValue",
          "description": "Optional. Set this parameter to indicate whether this span is in the same process as its parent. If you do not set this parameter, Trace is unable to take advantage of this helpful information."
        },
        "child_span_count": {
          "type": "google.protobuf.wrappers_pb2.Int32Value",
          "description": "Optional. The number of child spans that were generated while this span was active. If set, allows implementation to detect missing child spans."
        },
        "span_kind": {
          "type": "google.cloud.trace_v2.types.Span.SpanKind",
          "description": "Optional. Distinguishes between spans generated in a particular context. For example, two spans with the same name may be distinguished using ``CLIENT`` (caller) and ``SERVER`` (callee) to identify an RPC call."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AttributeValue",
      "docstring": "The allowed types for ``[VALUE]`` in a ``[KEY]:[VALUE]`` attribute.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    string_value (google.cloud.trace_v2.types.TruncatableString):\n        A string up to 256 bytes long.\n\n        This field is a member of `oneof`_ ``value``.\n    int_value (int):\n        A 64-bit signed integer.\n\n        This field is a member of `oneof`_ ``value``.\n    bool_value (bool):\n        A Boolean value represented by ``true`` or ``false``.\n\n        This field is a member of `oneof`_ ``value``.",
      "attributes": {
        "string_value": {
          "type": "google.cloud.trace_v2.types.TruncatableString",
          "description": "A string up to 256 bytes long.  This field is a member of `oneof`_ ``value``."
        },
        "int_value": {
          "type": "int",
          "description": "A 64-bit signed integer.  This field is a member of `oneof`_ ``value``."
        },
        "bool_value": {
          "type": "bool",
          "description": "A Boolean value represented by ``true`` or ``false``.  This field is a member of `oneof`_ ``value``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "StackTrace",
      "docstring": "A call stack appearing in a trace.\n\nAttributes:\n    stack_frames (google.cloud.trace_v2.types.StackTrace.StackFrames):\n        Stack frames in this stack trace. A maximum\n        of 128 frames are allowed.\n    stack_trace_hash_id (int):\n        The hash ID is used to conserve network bandwidth for\n        duplicate stack traces within a single trace.\n\n        Often multiple spans will have identical stack traces. The\n        first occurrence of a stack trace should contain both the\n        ``stackFrame`` content and a value in ``stackTraceHashId``.\n\n        Subsequent spans within the same request can refer to that\n        stack trace by only setting ``stackTraceHashId``.",
      "attributes": {
        "stack_frames": {
          "type": "google.cloud.trace_v2.types.StackTrace.StackFrames",
          "description": "Stack frames in this stack trace. A maximum of 128 frames are allowed."
        },
        "stack_trace_hash_id": {
          "type": "int",
          "description": "The hash ID is used to conserve network bandwidth for duplicate stack traces within a single trace.  Often multiple spans will have identical stack traces. The first occurrence of a stack trace should contain both the ``stackFrame`` content and a value in ``stackTraceHashId``.  Subsequent spans within the same request can refer to that stack trace by only setting ``stackTraceHashId``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Module",
      "docstring": "Binary module.\n\nAttributes:\n    module (google.cloud.trace_v2.types.TruncatableString):\n        For example: main binary, kernel modules, and\n        dynamic libraries such as libc.so, sharedlib.so\n        (up to 256 bytes).\n    build_id (google.cloud.trace_v2.types.TruncatableString):\n        A unique identifier for the module, usually a\n        hash of its contents (up to 128 bytes).",
      "attributes": {
        "module": {
          "type": "google.cloud.trace_v2.types.TruncatableString",
          "description": "For example: main binary, kernel modules, and dynamic libraries such as libc.so, sharedlib.so (up to 256 bytes)."
        },
        "build_id": {
          "type": "google.cloud.trace_v2.types.TruncatableString",
          "description": "A unique identifier for the module, usually a hash of its contents (up to 128 bytes)."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TruncatableString",
      "docstring": "Represents a string that might be shortened to a specified\nlength.\n\nAttributes:\n    value (str):\n        The shortened string. For example, if the original string is\n        500 bytes long and the limit of the string is 128 bytes,\n        then ``value`` contains the first 128 bytes of the 500-byte\n        string.\n\n        Truncation always happens on a UTF8 character boundary. If\n        there are multi-byte characters in the string, then the\n        length of the shortened string might be less than the size\n        limit.\n    truncated_byte_count (int):\n        The number of bytes removed from the original\n        string. If this value is 0, then the string was\n        not shortened.",
      "attributes": {
        "value": {
          "type": "str",
          "description": "The shortened string. For example, if the original string is 500 bytes long and the limit of the string is 128 bytes, then ``value`` contains the first 128 bytes of the 500-byte string.  Truncation always happens on a UTF8 character boundary. If there are multi-byte characters in the string, then the length of the shortened string might be less than the size limit."
        },
        "truncated_byte_count": {
          "type": "int",
          "description": "The number of bytes removed from the original string. If this value is 0, then the string was not shortened."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Attributes",
      "docstring": "A set of attributes as key-value pairs.\n\nAttributes:\n    attribute_map (MutableMapping[str, google.cloud.trace_v2.types.AttributeValue]):\n        A set of attributes. Each attribute's key can be up to 128\n        bytes long. The value can be a string up to 256 bytes, a\n        signed 64-bit integer, or the boolean values ``true`` or\n        ``false``. For example:\n\n        ::\n\n            \"/instance_id\": { \"string_value\": { \"value\": \"my-instance\" } }\n            \"/http/request_bytes\": { \"int_value\": 300 }\n            \"abc.com/myattribute\": { \"bool_value\": false }\n    dropped_attributes_count (int):\n        The number of attributes that were discarded.\n        Attributes can be discarded because their keys\n        are too long or because there are too many\n        attributes. If this value is 0 then all\n        attributes are valid.",
      "attributes": {
        "attribute_map": {
          "type": "MutableMapping[str, google.cloud.trace_v2.types.AttributeValue]",
          "description": "A set of attributes. Each attribute's key can be up to 128 bytes long. The value can be a string up to 256 bytes, a signed 64-bit integer, or the boolean values ``true`` or ``false``. For example:  ::  \"/instance_id\": { \"string_value\": { \"value\": \"my-instance\" } } \"/http/request_bytes\": { \"int_value\": 300 } \"abc.com/myattribute\": { \"bool_value\": false }"
        },
        "dropped_attributes_count": {
          "type": "int",
          "description": "The number of attributes that were discarded. Attributes can be discarded because their keys are too long or because there are too many attributes. If this value is 0 then all attributes are valid."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TimeEvent",
      "docstring": "A time-stamped annotation or message event in the Span.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    time (google.protobuf.timestamp_pb2.Timestamp):\n        The timestamp indicating the time the event\n        occurred.\n    annotation (google.cloud.trace_v2.types.Span.TimeEvent.Annotation):\n        Text annotation with a set of attributes.\n\n        This field is a member of `oneof`_ ``value``.\n    message_event (google.cloud.trace_v2.types.Span.TimeEvent.MessageEvent):\n        An event describing a message sent/received\n        between Spans.\n\n        This field is a member of `oneof`_ ``value``.",
      "attributes": {
        "time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The timestamp indicating the time the event occurred."
        },
        "annotation": {
          "type": "google.cloud.trace_v2.types.Span.TimeEvent.Annotation",
          "description": "Text annotation with a set of attributes.  This field is a member of `oneof`_ ``value``."
        },
        "message_event": {
          "type": "google.cloud.trace_v2.types.Span.TimeEvent.MessageEvent",
          "description": "An event describing a message sent/received between Spans.  This field is a member of `oneof`_ ``value``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TimeEvents",
      "docstring": "A collection of ``TimeEvent``\\ s. A ``TimeEvent`` is a time-stamped\nannotation on the span, consisting of either user-supplied key:value\npairs, or details of a message sent/received between Spans.\n\nAttributes:\n    time_event (MutableSequence[google.cloud.trace_v2.types.Span.TimeEvent]):\n        A collection of ``TimeEvent``\\ s.\n    dropped_annotations_count (int):\n        The number of dropped annotations in all the\n        included time events. If the value is 0, then no\n        annotations were dropped.\n    dropped_message_events_count (int):\n        The number of dropped message events in all\n        the included time events. If the value is 0,\n        then no message events were dropped.",
      "attributes": {
        "time_event": {
          "type": "MutableSequence[google.cloud.trace_v2.types.Span.TimeEvent]",
          "description": "A collection of ``TimeEvent``\\ s."
        },
        "dropped_annotations_count": {
          "type": "int",
          "description": "The number of dropped annotations in all the included time events. If the value is 0, then no annotations were dropped."
        },
        "dropped_message_events_count": {
          "type": "int",
          "description": "The number of dropped message events in all the included time events. If the value is 0, then no message events were dropped."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Link",
      "docstring": "A pointer from the current span to another span in the same\ntrace or in a different trace. For example, this can be used in\nbatching operations, where a single batch handler processes\nmultiple requests from different traces or when the handler\nreceives a request from a different project.\n\nAttributes:\n    trace_id (str):\n        The ``[TRACE_ID]`` for a trace within a project.\n    span_id (str):\n        The ``[SPAN_ID]`` for a span within a trace.\n    type (google.cloud.trace_v2.types.Span.Link.Type):\n        The relationship of the current span relative\n        to the linked span.\n    attributes (google.cloud.trace_v2.types.Span.Attributes):\n        A set of attributes on the link. Up to 32\n        attributes can be specified per link.",
      "attributes": {
        "trace_id": {
          "type": "str",
          "description": "The ``[TRACE_ID]`` for a trace within a project."
        },
        "span_id": {
          "type": "str",
          "description": "The ``[SPAN_ID]`` for a span within a trace."
        },
        "type": {
          "type": "google.cloud.trace_v2.types.Span.Link.Type",
          "description": "The relationship of the current span relative to the linked span."
        },
        "attributes": {
          "type": "google.cloud.trace_v2.types.Span.Attributes",
          "description": "A set of attributes on the link. Up to 32 attributes can be specified per link."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Links",
      "docstring": "A collection of links, which are references from this span to\na span in the same or different trace.\n\nAttributes:\n    link (MutableSequence[google.cloud.trace_v2.types.Span.Link]):\n        A collection of links.\n    dropped_links_count (int):\n        The number of dropped links after the maximum\n        size was enforced. If this value is 0, then no\n        links were dropped.",
      "attributes": {
        "link": {
          "type": "MutableSequence[google.cloud.trace_v2.types.Span.Link]",
          "description": "A collection of links."
        },
        "dropped_links_count": {
          "type": "int",
          "description": "The number of dropped links after the maximum size was enforced. If this value is 0, then no links were dropped."
        }
      }
    },
    {
      "type": "request_class",
      "name": "StackFrame",
      "docstring": "Represents a single stack frame in a stack trace.\n\nAttributes:\n    function_name (google.cloud.trace_v2.types.TruncatableString):\n        The fully-qualified name that uniquely\n        identifies the function or method that is active\n        in this frame (up to 1024 bytes).\n    original_function_name (google.cloud.trace_v2.types.TruncatableString):\n        An un-mangled function name, if ``function_name`` is\n        mangled. To get information about name mangling, run `this\n        search <https://www.google.com/search?q=cxx+name+mangling>`__.\n        The name can be fully-qualified (up to 1024 bytes).\n    file_name (google.cloud.trace_v2.types.TruncatableString):\n        The name of the source file where the\n        function call appears (up to 256 bytes).\n    line_number (int):\n        The line number in ``file_name`` where the function call\n        appears.\n    column_number (int):\n        The column number where the function call\n        appears, if available. This is important in\n        JavaScript beca",
      "attributes": {
        "function_name": {
          "type": "google.cloud.trace_v2.types.TruncatableString",
          "description": "The fully-qualified name that uniquely identifies the function or method that is active in this frame (up to 1024 bytes)."
        },
        "original_function_name": {
          "type": "google.cloud.trace_v2.types.TruncatableString",
          "description": "An un-mangled function name, if ``function_name`` is mangled. To get information about name mangling, run `this search <https://www.google.com/search?q=cxx+name+mangling>`__. The name can be fully-qualified (up to 1024 bytes)."
        },
        "file_name": {
          "type": "google.cloud.trace_v2.types.TruncatableString",
          "description": "The name of the source file where the function call appears (up to 256 bytes)."
        },
        "line_number": {
          "type": "int",
          "description": "The line number in ``file_name`` where the function call appears."
        },
        "column_number": {
          "type": "int",
          "description": "The column number where the function call appears, if available. This is important in JavaScript because of its anonymous functions."
        },
        "load_module": {
          "type": "google.cloud.trace_v2.types.Module",
          "description": "The binary module from where the code was loaded."
        },
        "source_version": {
          "type": "google.cloud.trace_v2.types.TruncatableString",
          "description": "The version of the deployed source code (up to 128 bytes)."
        }
      }
    },
    {
      "type": "request_class",
      "name": "StackFrames",
      "docstring": "A collection of stack frames, which can be truncated.\n\nAttributes:\n    frame (MutableSequence[google.cloud.trace_v2.types.StackTrace.StackFrame]):\n        Stack frames in this call stack.\n    dropped_frames_count (int):\n        The number of stack frames that were dropped\n        because there were too many stack frames.\n        If this value is 0, then no stack frames were\n        dropped.",
      "attributes": {
        "frame": {
          "type": "MutableSequence[google.cloud.trace_v2.types.StackTrace.StackFrame]",
          "description": "Stack frames in this call stack."
        },
        "dropped_frames_count": {
          "type": "int",
          "description": "The number of stack frames that were dropped because there were too many stack frames. If this value is 0, then no stack frames were dropped."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Annotation",
      "docstring": "Text annotation with a set of attributes.\n\nAttributes:\n    description (google.cloud.trace_v2.types.TruncatableString):\n        A user-supplied message describing the event.\n        The maximum length for the description is 256\n        bytes.\n    attributes (google.cloud.trace_v2.types.Span.Attributes):\n        A set of attributes on the annotation. You\n        can have up to 4 attributes per Annotation.",
      "attributes": {
        "description": {
          "type": "google.cloud.trace_v2.types.TruncatableString",
          "description": "A user-supplied message describing the event. The maximum length for the description is 256 bytes."
        },
        "attributes": {
          "type": "google.cloud.trace_v2.types.Span.Attributes",
          "description": "A set of attributes on the annotation. You can have up to 4 attributes per Annotation."
        }
      }
    },
    {
      "type": "request_class",
      "name": "MessageEvent",
      "docstring": "An event describing a message sent/received between Spans.\n\nAttributes:\n    type (google.cloud.trace_v2.types.Span.TimeEvent.MessageEvent.Type):\n        Type of MessageEvent. Indicates whether the\n        message was sent or received.\n    id (int):\n        An identifier for the MessageEvent's message that can be\n        used to match ``SENT`` and ``RECEIVED`` MessageEvents.\n    uncompressed_size_bytes (int):\n        The number of uncompressed bytes sent or\n        received.\n    compressed_size_bytes (int):\n        The number of compressed bytes sent or\n        received. If missing, the compressed size is\n        assumed to be the same size as the uncompressed\n        size.",
      "attributes": {
        "type": {
          "type": "google.cloud.trace_v2.types.Span.TimeEvent.MessageEvent.Type",
          "description": "Type of MessageEvent. Indicates whether the message was sent or received."
        },
        "id": {
          "type": "int",
          "description": "An identifier for the MessageEvent's message that can be used to match ``SENT`` and ``RECEIVED`` MessageEvents."
        },
        "uncompressed_size_bytes": {
          "type": "int",
          "description": "The number of uncompressed bytes sent or received."
        },
        "compressed_size_bytes": {
          "type": "int",
          "description": "The number of compressed bytes sent or received. If missing, the compressed size is assumed to be the same size as the uncompressed size."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-trace\\google\\cloud\\trace_v2\\types\\tracing.py": [
    {
      "type": "request_class",
      "name": "BatchWriteSpansRequest",
      "docstring": "The request message for the ``BatchWriteSpans`` method.\n\nAttributes:\n    name (str):\n        Required. The name of the project where the spans belong.\n        The format is ``projects/[PROJECT_ID]``.\n    spans (MutableSequence[google.cloud.trace_v2.types.Span]):\n        Required. A list of new spans. The span names\n        must not match existing spans, otherwise the\n        results are undefined.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the project where the spans belong. The format is ``projects/[PROJECT_ID]``."
        },
        "spans": {
          "type": "MutableSequence[google.cloud.trace_v2.types.Span]",
          "description": "Required. A list of new spans. The span names must not match existing spans, otherwise the results are undefined."
        }
      }
    }
  ]
}