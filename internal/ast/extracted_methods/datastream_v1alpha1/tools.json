{
  "Datastream": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_connection_profiles",
          "description": "Use this method to list connection profiles created\nin a project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_list_connection_profiles():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.ListConnectionProfilesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_connection_profiles(request=request)\n\n        # Handle the response\n        async for response in page",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent that owns the collection of connection profiles.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datastream_v1alpha1.services.datastream.pagers.ListConnectionProfilesAsyncPager: Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.ListConnectionProfilesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_connection_profile",
          "description": "Use this method to get details about a connection\nprofile.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_get_connection_profile():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.GetConnectionProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_connection_profile(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[go",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the connection profile resource to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datastream_v1alpha1.types.ConnectionProfile:"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.GetConnectionProfileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_connection_profile",
          "description": "Use this method to create a connection profile in a\nproject and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_create_connection_profile():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        connection_profile = datastream_v1alpha1.ConnectionProfile()\n        connection_profile.oracle_profile.hostname = \"hostname_value\"\n        connection_profile.oracle_profile.username = \"username_value\"\n        connection_profile.oracle_profile.password = \"password_value\"\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent that owns the collection of ConnectionProfiles.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "connection_profile": {
                "type": "google.cloud.datastream_v1alpha1.types.ConnectionProfile",
                "description": "Required. The connection profile resource to create.  This corresponds to the ``connection_profile`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "connection_profile_id": {
                "type": "str",
                "description": "Required. The connection profile identifier.  This corresponds to the ``connection_profile_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datastream_v1alpha1.types.ConnectionProfile`"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "connection_profile",
              "connection_profile_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.CreateConnectionProfileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_connection_profile",
          "description": "Use this method to update the parameters of a\nconnection profile.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_update_connection_profile():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        connection_profile = datastream_v1alpha1.ConnectionProfile()\n        connection_profile.oracle_profile.hostname = \"hostname_value\"\n        connection_profile.oracle_profile.username = \"username_value\"\n        connection_profile.oracle_profile.password = \"password_value\"\n        con",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "connection_profile": {
                "type": "google.cloud.datastream_v1alpha1.types.ConnectionProfile",
                "description": "Required. The ConnectionProfile to update.  This corresponds to the ``connection_profile`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datastream_v1alpha1.types.ConnectionProfile`"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "connection_profile",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.UpdateConnectionProfileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_connection_profile",
          "description": "Use this method to delete a connection profile..\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_delete_connection_profile():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.DeleteConnectionProfileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_connection_profile(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).resul",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the connection profile resource to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.DeleteConnectionProfileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "discover_connection_profile",
          "description": "Use this method to discover a connection profile.\nThe discover API call exposes the data objects and\nmetadata belonging to the profile. Typically, a request\nreturns children data objects under a parent data object\nthat's optionally supplied in the request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_discover_connection_profile():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        connection_profile = datastream_v1alpha1.ConnectionProfile()\n        connection_profile.o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.DiscoverConnectionProfileRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_streams",
          "description": "Use this method to list streams in a project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_list_streams():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.ListStreamsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_streams(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent that owns the collection of streams.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datastream_v1alpha1.services.datastream.pagers.ListStreamsAsyncPager: Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.ListStreamsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_stream",
          "description": "Use this method to get details about a stream.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_get_stream():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.GetStreamRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_stream(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datastream_v1alpha1.types.GetStreamR",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the stream resource to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datastream_v1alpha1.types.Stream:"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.GetStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_stream",
          "description": "Use this method to create a stream.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_create_stream():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        stream = datastream_v1alpha1.Stream()\n        stream.display_name = \"display_name_value\"\n        stream.source_config.source_connection_profile_name = \"source_connection_profile_name_value\"\n        stream.destination_config.destination_connection_profile_name = \"destination_connection_profile_name_value\"\n\n        request =",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent that owns the collection of streams.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "stream": {
                "type": "google.cloud.datastream_v1alpha1.types.Stream",
                "description": "Required. The stream resource to create.  This corresponds to the ``stream`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "stream_id": {
                "type": "str",
                "description": "Required. The stream identifier. This corresponds to the ``stream_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datastream_v1alpha1.types.Stream`"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "stream",
              "stream_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.CreateStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_stream",
          "description": "Use this method to update the configuration of a\nstream.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_update_stream():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        stream = datastream_v1alpha1.Stream()\n        stream.display_name = \"display_name_value\"\n        stream.source_config.source_connection_profile_name = \"source_connection_profile_name_value\"\n        stream.destination_config.destination_connection_profile_name = \"destination_connection_profile_name_valu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "stream": {
                "type": "google.cloud.datastream_v1alpha1.types.Stream",
                "description": "Required. The stream resource to update.  This corresponds to the ``stream`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datastream_v1alpha1.types.Stream`"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "stream",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.UpdateStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_stream",
          "description": "Use this method to delete a stream.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_delete_stream():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.DeleteStreamRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_stream(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the stream resource to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.DeleteStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_errors",
          "description": "Use this method to fetch any errors associated with a\nstream.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_fetch_errors():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.FetchErrorsRequest(\n        )\n\n        # Make the request\n        operation = client.fetch_errors(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.FetchErrorsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_static_ips",
          "description": "The FetchStaticIps API call exposes the static ips\nused by Datastream. Typically, a request returns\nchildren data objects under a parent data object that's\noptionally supplied in the request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_fetch_static_ips():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.FetchStaticIpsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        page_result = client.fetch_static_i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name resource of the Response type. Must be in the format ``projects/*/locations/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datastream_v1alpha1.services.datastream.pagers.FetchStaticIpsAsyncPager: Response message for a 'FetchStaticIps' response. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.FetchStaticIpsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_private_connection",
          "description": "Use this method to create a private connectivity\nconfiguration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_create_private_connection():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        private_connection = datastream_v1alpha1.PrivateConnection()\n        private_connection.display_name = \"display_name_value\"\n\n        request = datastream_v1alpha1.CreatePrivateConnectionRequest(\n            parent=\"parent_value\",\n            private_connection_id=\"private_connection_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent that owns the collection of PrivateConnections.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "private_connection": {
                "type": "google.cloud.datastream_v1alpha1.types.PrivateConnection",
                "description": "Required. The Private Connectivity resource to create.  This corresponds to the ``private_connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "private_connection_id": {
                "type": "str",
                "description": "Required. The private connectivity identifier.  This corresponds to the ``private_connection_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datastream_v1alpha1.types.PrivateConnection` The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "private_connection",
              "private_connection_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.CreatePrivateConnectionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_private_connection",
          "description": "Use this method to get details about a private\nconnectivity configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_get_private_connection():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.GetPrivateConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_private_connection(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (O",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the  private connectivity configuration to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datastream_v1alpha1.types.PrivateConnection: The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.GetPrivateConnectionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_private_connections",
          "description": "Use this method to list private connectivity\nconfigurations in a project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_list_private_connections():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.ListPrivateConnectionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_private_connections(request=request)\n\n        # Handle the response\n        async for response",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent that owns the collection of private connectivity configurations.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datastream_v1alpha1.services.datastream.pagers.ListPrivateConnectionsAsyncPager: Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.ListPrivateConnectionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_private_connection",
          "description": "Use this method to delete a private connectivity\nconfiguration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_delete_private_connection():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.DeletePrivateConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_private_connection(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the private connectivity configuration to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.DeletePrivateConnectionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_route",
          "description": "Use this method to create a route for a private\nconnectivity in a project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_create_route():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        route = datastream_v1alpha1.Route()\n        route.display_name = \"display_name_value\"\n        route.destination_address = \"destination_address_value\"\n\n        request = datastream_v1alpha1.CreateRouteRequest(\n            parent=\"parent_value\",\n            route_id=\"route_i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent that owns the collection of Routes.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "route": {
                "type": "google.cloud.datastream_v1alpha1.types.Route",
                "description": "Required. The Route resource to create.  This corresponds to the ``route`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "route_id": {
                "type": "str",
                "description": "Required. The Route identifier. This corresponds to the ``route_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datastream_v1alpha1.types.Route` The Route resource is the child of the PrivateConnection resource. It used to define a route for a PrivateConnection setup."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "route",
              "route_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.CreateRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_route",
          "description": "Use this method to get details about a route.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_get_route():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.GetRouteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_route(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datastream_v1alpha1.types.GetRouteReques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Route resource to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datastream_v1alpha1.types.Route: The Route resource is the child of the PrivateConnection resource. It used to define a route for a PrivateConnection setup."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.GetRouteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_routes",
          "description": "Use this method to list routes created for a private\nconnectivity in a project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_list_routes():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.ListRoutesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_routes(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            pri",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent that owns the collection of Routess.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datastream_v1alpha1.services.datastream.pagers.ListRoutesAsyncPager: route list response  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.ListRoutesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_route",
          "description": "Use this method to delete a route.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datastream_v1alpha1\n\n    async def sample_delete_route():\n        # Create a client\n        client = datastream_v1alpha1.DatastreamAsyncClient()\n\n        # Initialize request argument(s)\n        request = datastream_v1alpha1.DeleteRouteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_route(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Route resource to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "datastream.DeleteRouteRequest"
          ]
        }
      }
    ]
  }
}