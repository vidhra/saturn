{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-dataproc-metastore/google/cloud/metastore_v1alpha/types/metastore_federation.py": [
    {
      "type": "function",
      "name": "ListFederationsRequest",
      "description": "Request message for ListFederations.\n\nAttributes:\n    parent (str):\n        Required. The relative resource name of the location of\n        metastore federations to list, in the following form:\n        ``projects/{project_number}/locations/{location_id}``.\n    page_size (int):\n        Optional. The maximum number of federations\n        to return. The response may contain less than\n        the maximum number. If unspecified, no more than\n        500 services are returned. The maximum value is\n        1000; values above 1000 are changed to 1000.\n    page_token (str):\n        Optional. A page token, received from a\n        previous ListFederationServices call. Provide\n        this token to retrieve the subsequent page.\n\n        To retrieve the first page, supply an empty page\n        token.\n\n        When paginating, other parameters provided to\n        ListFederationServices must match the call that\n        provided the page token.\n    filter (str):\n        Optional. The filter to apply to list\n        results.\n",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The relative resource name of the location of metastore federations to list, in the following form: ``projects/{project_number}/locations/{location_id}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of federations to return. The response may contain less than the maximum number. If unspecified, no more than 500 services are returned. The maximum value is 1000; values above 1000 are changed to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ListFederationServices call. Provide this token to retrieve the subsequent page.  To retrieve the first page, supply an empty page token.  When paginating, other parameters provided to ListFederationServices must match the call that provided the page token.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. The filter to apply to list results.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. Specify the ordering of results as described in `Sorting Order <https://cloud.google.com/apis/design/design_patterns#sorting_order>`__. If not specified, the results will be sorted in the default order.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetFederationRequest",
      "description": "Request message for GetFederation.\n\nAttributes:\n    name (str):\n        Required. The relative resource name of the metastore\n        federation to retrieve, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}/federations/{federation_id}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the metastore federation to retrieve, in the following form:  ``projects/{project_number}/locations/{location_id}/federations/{federation_id}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateFederationRequest",
      "description": "Request message for CreateFederation.\n\nAttributes:\n    parent (str):\n        Required. The relative resource name of the location in\n        which to create a federation service, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}``.\n    federation_id (str):\n        Required. The ID of the metastore federation,\n        which is used as the final component of the\n        metastore federation's name.\n\n        This value must be between 2 and 63 characters\n        long inclusive, begin with a letter, end with a\n        letter or number, and consist of alpha-numeric\n        ASCII characters or hyphens.\n    federation (google.cloud.metastore_v1alpha.types.Federation):\n        Required. The Metastore Federation to create. The ``name``\n        field is ignored. The ID of the created metastore federation\n        must be provided in the request's ``federation_id`` field.\n    request_id (str):\n        Optional. A request ID. Specify a unique request ID to allow\n        the server to igno",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The relative resource name of the location in which to create a federation service, in the following form:  ``projects/{project_number}/locations/{location_id}``.",
            "type": "string"
          },
          "federation_id": {
            "description": "Required. The ID of the metastore federation, which is used as the final component of the metastore federation's name.  This value must be between 2 and 63 characters long inclusive, begin with a letter, end with a letter or number, and consist of alpha-numeric ASCII characters or hyphens.",
            "type": "string"
          },
          "federation": {
            "description": "Required. The Metastore Federation to create. The ``name`` field is ignored. The ID of the created metastore federation must be provided in the request's ``federation_id`` field.",
            "reference": "google.cloud.metastore_v1alpha.types.Federation",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Immutable. The relative resource name of the federation, of the form: projects/{project_number}/locations/{location_id}/federations/{federation_id}`.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The time when the metastore federation was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The time when the metastore federation was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "User-defined labels for the metastore federation.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "version": {
                  "description": "Immutable. The Apache Hive metastore version of the federation. All backend metastore versions must be compatible with the federation version.",
                  "type": "string"
                },
                "backend_metastores": {
                  "description": "A map from ``BackendMetastore`` rank to ``BackendMetastore``\\ s from which the federation service serves metadata at query time. The map key represents the order in which ``BackendMetastore``\\ s should be evaluated to resolve database names at query time and should be greater than or equal to zero. A ``BackendMetastore`` with a lower number will be evaluated before a ``BackendMetastore`` with a higher number.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "reference": "google.cloud.metastore_v1alpha.types.BackendMetastore",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The relative resource name of the metastore that is being federated. The formats of the relative resource names for the currently supported metastores are listed below:  -  BigQuery  -  ``projects/{project_id}``  -  Dataproc Metastore  -  ``projects/{project_id}/locations/{location}/services/{service_id}``",
                          "type": "string"
                        },
                        "metastore_type": {
                          "description": "The type of the backend metastore.",
                          "type": "object",
                          "reference": "google.cloud.metastore_v1alpha.types.BackendMetastore.MetastoreType"
                        }
                      }
                    }
                  }
                },
                "endpoint_uri": {
                  "description": "Output only. The federation endpoint.",
                  "type": "string",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. The current state of the federation.",
                  "type": "object",
                  "reference": "google.cloud.metastore_v1alpha.types.Federation.State",
                  "output_only": true
                },
                "state_message": {
                  "description": "Output only. Additional information about the current state of the metastore federation, if available.",
                  "type": "string",
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. The globally unique resource identifier of the metastore federation.",
                  "type": "string",
                  "output_only": true
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__ A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "federation_id",
          "federation"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateFederationRequest",
      "description": "Request message for UpdateFederation.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. A field mask used to specify the fields to be\n        overwritten in the metastore federation resource by the\n        update. Fields specified in the ``update_mask`` are relative\n        to the resource (not to the full request). A field is\n        overwritten if it is in the mask.\n    federation (google.cloud.metastore_v1alpha.types.Federation):\n        Required. The metastore federation to update. The server\n        only merges fields in the service if they are specified in\n        ``update_mask``.\n\n        The metastore federation's ``name`` field is used to\n        identify the metastore service to be updated.\n    request_id (str):\n        Optional. A request ID. Specify a unique request ID to allow\n        the server to ignore the request if it has completed. The\n        server will ignore subsequent requests that provide a\n        duplicate request ID for at least 60 minutes a",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. A field mask used to specify the fields to be overwritten in the metastore federation resource by the update. Fields specified in the ``update_mask`` are relative to the resource (not to the full request). A field is overwritten if it is in the mask.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "federation": {
            "description": "Required. The metastore federation to update. The server only merges fields in the service if they are specified in ``update_mask``.  The metastore federation's ``name`` field is used to identify the metastore service to be updated.",
            "reference": "google.cloud.metastore_v1alpha.types.Federation",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Immutable. The relative resource name of the federation, of the form: projects/{project_number}/locations/{location_id}/federations/{federation_id}`.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The time when the metastore federation was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The time when the metastore federation was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "User-defined labels for the metastore federation.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "version": {
                  "description": "Immutable. The Apache Hive metastore version of the federation. All backend metastore versions must be compatible with the federation version.",
                  "type": "string"
                },
                "backend_metastores": {
                  "description": "A map from ``BackendMetastore`` rank to ``BackendMetastore``\\ s from which the federation service serves metadata at query time. The map key represents the order in which ``BackendMetastore``\\ s should be evaluated to resolve database names at query time and should be greater than or equal to zero. A ``BackendMetastore`` with a lower number will be evaluated before a ``BackendMetastore`` with a higher number.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "reference": "google.cloud.metastore_v1alpha.types.BackendMetastore",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The relative resource name of the metastore that is being federated. The formats of the relative resource names for the currently supported metastores are listed below:  -  BigQuery  -  ``projects/{project_id}``  -  Dataproc Metastore  -  ``projects/{project_id}/locations/{location}/services/{service_id}``",
                          "type": "string"
                        },
                        "metastore_type": {
                          "description": "The type of the backend metastore.",
                          "type": "object",
                          "reference": "google.cloud.metastore_v1alpha.types.BackendMetastore.MetastoreType"
                        }
                      }
                    }
                  }
                },
                "endpoint_uri": {
                  "description": "Output only. The federation endpoint.",
                  "type": "string",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. The current state of the federation.",
                  "type": "object",
                  "reference": "google.cloud.metastore_v1alpha.types.Federation.State",
                  "output_only": true
                },
                "state_message": {
                  "description": "Output only. Additional information about the current state of the metastore federation, if available.",
                  "type": "string",
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. The globally unique resource identifier of the metastore federation.",
                  "type": "string",
                  "output_only": true
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__ A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          }
        },
        "required": [
          "update_mask",
          "federation"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteFederationRequest",
      "description": "Request message for DeleteFederation.\n\nAttributes:\n    name (str):\n        Required. The relative resource name of the metastore\n        federation to delete, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}/federations/{federation_id}``.\n    request_id (str):\n        Optional. A request ID. Specify a unique request ID to allow\n        the server to ignore the request if it has completed. The\n        server will ignore subsequent requests that provide a\n        duplicate request ID for at least 60 minutes after the first\n        request.\n\n        For example, if an initial request times out, followed by\n        another request with the same request ID, the server ignores\n        the second request to prevent the creation of duplicate\n        commitments.\n\n        The request ID must be a valid\n        `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__\n        A zero UUID (00000000-0000-0000-0000-000000000000) is not\n        supported.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the metastore federation to delete, in the following form:  ``projects/{project_number}/locations/{location_id}/federations/{federation_id}``.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__ A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-dataproc-metastore/google/cloud/metastore_v1alpha/types/metastore.py": [
    {
      "type": "function",
      "name": "ListServicesRequest",
      "description": "Request message for\n[DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices].\n\nAttributes:\n    parent (str):\n        Required. The relative resource name of the location of\n        metastore services to list, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}``.\n    page_size (int):\n        Optional. The maximum number of services to\n        return. The response may contain less than the\n        maximum number. If unspecified, no more than 500\n        services are returned. The maximum value is\n        1000; values above 1000 are changed to 1000.\n    page_token (str):\n        Optional. A page token, received from a previous\n        [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices]\n        call. Provide this token to retrieve the subsequent page.\n\n        To retrieve the first page, supply an empty page token.\n\n        When paginating, other parameters provided to\n        [DataprocMetastore.Lis",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The relative resource name of the location of metastore services to list, in the following form:  ``projects/{project_number}/locations/{location_id}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of services to return. The response may contain less than the maximum number. If unspecified, no more than 500 services are returned. The maximum value is 1000; values above 1000 are changed to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices] call. Provide this token to retrieve the subsequent page.  To retrieve the first page, supply an empty page token.  When paginating, other parameters provided to [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices] must match the call that provided the page token.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. The filter to apply to list results.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. Specify the ordering of results as described in `Sorting Order <https://cloud.google.com/apis/design/design_patterns#sorting_order>`__. If not specified, the results will be sorted in the default order.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetServiceRequest",
      "description": "Request message for\n[DataprocMetastore.GetService][google.cloud.metastore.v1alpha.DataprocMetastore.GetService].\n\nAttributes:\n    name (str):\n        Required. The relative resource name of the metastore\n        service to retrieve, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}/services/{service_id}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the metastore service to retrieve, in the following form:  ``projects/{project_number}/locations/{location_id}/services/{service_id}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateServiceRequest",
      "description": "Request message for\n[DataprocMetastore.CreateService][google.cloud.metastore.v1alpha.DataprocMetastore.CreateService].\n\nAttributes:\n    parent (str):\n        Required. The relative resource name of the location in\n        which to create a metastore service, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}``.\n    service_id (str):\n        Required. The ID of the metastore service,\n        which is used as the final component of the\n        metastore service's name.\n\n        This value must be between 2 and 63 characters\n        long inclusive, begin with a letter, end with a\n        letter or number, and consist of alpha-numeric\n        ASCII characters or hyphens.\n    service (google.cloud.metastore_v1alpha.types.Service):\n        Required. The Metastore service to create. The ``name``\n        field is ignored. The ID of the created metastore service\n        must be provided in the request's ``service_id`` field.\n    request_id (str):\n        Optional. A request ID. Specify",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The relative resource name of the location in which to create a metastore service, in the following form:  ``projects/{project_number}/locations/{location_id}``.",
            "type": "string"
          },
          "service_id": {
            "description": "Required. The ID of the metastore service, which is used as the final component of the metastore service's name.  This value must be between 2 and 63 characters long inclusive, begin with a letter, end with a letter or number, and consist of alpha-numeric ASCII characters or hyphens.",
            "type": "string"
          },
          "service": {
            "description": "Required. The Metastore service to create. The ``name`` field is ignored. The ID of the created metastore service must be provided in the request's ``service_id`` field.",
            "reference": "google.cloud.metastore_v1alpha.types.Service",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Immutable. The resource name for the service in the format ``projects/*/locations/*/namespaces/*/services/*``.",
                  "type": "string"
                },
                "annotations": {
                  "description": "Optional. Annotations for the service. This data can be consumed by service clients.  Restrictions:  -  The entire annotations dictionary may contain up to 2000 characters, spread accoss all key-value pairs. Annotations that go beyond this limit are rejected -  Valid annotation keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Annotations that fails to meet these requirements are rejected  Note: This field is equivalent to the ``metadata`` field in the v1beta1 API. They have the same syntax and read/write to the same location in Service Directory.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "endpoints": {
                  "description": "Output only. Endpoints associated with this service. Returned on [LookupService.ResolveService][google.cloud.servicedirectory.v1.LookupService.ResolveService]. Control plane clients should use [RegistrationService.ListEndpoints][google.cloud.servicedirectory.v1.RegistrationService.ListEndpoints].",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.servicedirectory_v1.types.Endpoint",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "ip_address": {
                          "description": "The IP address of the endpoint, which can be an external or internal IP.",
                          "type": "string"
                        },
                        "port": {
                          "description": "The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.",
                          "type": "integer"
                        },
                        "instance": {
                          "description": "A Compute Engine instance URI.",
                          "type": "string"
                        },
                        "forwarding_rule": {
                          "description": "A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format:  projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}",
                          "type": "string"
                        },
                        "forwarding_rule_target": {
                          "description": "Output only. Specifies the type of the target of the forwarding rule.  This field is a member of `oneof`_ ``_forwarding_rule_target``.",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.Endpoint.ForwardingRuleTarget",
                          "output_only": true
                        },
                        "load_balancer_id": {
                          "description": "Output only. ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.  This field is a member of `oneof`_ ``_load_balancer_id``.",
                          "type": "string",
                          "output_only": true
                        },
                        "load_balancer_type": {
                          "description": "Output only. Type of the load balancer the forwarding rule points to.  This field is a member of `oneof`_ ``_load_balancer_type``.",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.LoadBalancerType",
                          "output_only": true
                        },
                        "gke_master_cluster": {
                          "description": "A cluster URI for `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__.",
                          "type": "string"
                        },
                        "fqdn": {
                          "description": "DNS endpoint of `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__. Requires gke_master_cluster to be set, can't be used simultaneoulsly with ip_address or network. Applicable only to destination endpoint.",
                          "type": "string"
                        },
                        "cloud_sql_instance": {
                          "description": "A `Cloud SQL <https://cloud.google.com/sql>`__ instance URI.",
                          "type": "string"
                        },
                        "redis_instance": {
                          "description": "A `Redis Instance <https://cloud.google.com/memorystore/docs/redis>`__ URI.",
                          "type": "string"
                        },
                        "redis_cluster": {
                          "description": "A `Redis Cluster <https://cloud.google.com/memorystore/docs/cluster>`__ URI.",
                          "type": "string"
                        },
                        "cloud_function": {
                          "description": "A `Cloud Function <https://cloud.google.com/functions>`__.",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.Endpoint.CloudFunctionEndpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "A `Cloud Function <https://cloud.google.com/functions>`__ name.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "app_engine_version": {
                          "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__.",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.Endpoint.AppEngineVersionEndpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__ name.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "cloud_run_revision": {
                          "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.Endpoint.CloudRunRevisionEndpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__ URI. The format is: projects/{project}/locations/{location}/revisions/{revision}",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "network": {
                          "description": "A Compute Engine network URI.",
                          "type": "string"
                        },
                        "network_type": {
                          "description": "Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.Endpoint.NetworkType"
                        },
                        "project_id": {
                          "description": "Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID:  1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. The globally unique identifier of the service in the UUID4 format.",
                  "type": "string",
                  "output_only": true
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__ A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "service_id",
          "service"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateServiceRequest",
      "description": "Request message for\n[DataprocMetastore.UpdateService][google.cloud.metastore.v1alpha.DataprocMetastore.UpdateService].\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. A field mask used to specify the fields to be\n        overwritten in the metastore service resource by the update.\n        Fields specified in the ``update_mask`` are relative to the\n        resource (not to the full request). A field is overwritten\n        if it is in the mask.\n    service (google.cloud.metastore_v1alpha.types.Service):\n        Required. The metastore service to update. The server only\n        merges fields in the service if they are specified in\n        ``update_mask``.\n\n        The metastore service's ``name`` field is used to identify\n        the metastore service to be updated.\n    request_id (str):\n        Optional. A request ID. Specify a unique request ID to allow\n        the server to ignore the request if it has completed. The\n        server will ignore subsequent requests tha",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. A field mask used to specify the fields to be overwritten in the metastore service resource by the update. Fields specified in the ``update_mask`` are relative to the resource (not to the full request). A field is overwritten if it is in the mask.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "service": {
            "description": "Required. The metastore service to update. The server only merges fields in the service if they are specified in ``update_mask``.  The metastore service's ``name`` field is used to identify the metastore service to be updated.",
            "reference": "google.cloud.metastore_v1alpha.types.Service",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Immutable. The resource name for the service in the format ``projects/*/locations/*/namespaces/*/services/*``.",
                  "type": "string"
                },
                "annotations": {
                  "description": "Optional. Annotations for the service. This data can be consumed by service clients.  Restrictions:  -  The entire annotations dictionary may contain up to 2000 characters, spread accoss all key-value pairs. Annotations that go beyond this limit are rejected -  Valid annotation keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Annotations that fails to meet these requirements are rejected  Note: This field is equivalent to the ``metadata`` field in the v1beta1 API. They have the same syntax and read/write to the same location in Service Directory.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "endpoints": {
                  "description": "Output only. Endpoints associated with this service. Returned on [LookupService.ResolveService][google.cloud.servicedirectory.v1.LookupService.ResolveService]. Control plane clients should use [RegistrationService.ListEndpoints][google.cloud.servicedirectory.v1.RegistrationService.ListEndpoints].",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.servicedirectory_v1.types.Endpoint",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "ip_address": {
                          "description": "The IP address of the endpoint, which can be an external or internal IP.",
                          "type": "string"
                        },
                        "port": {
                          "description": "The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.",
                          "type": "integer"
                        },
                        "instance": {
                          "description": "A Compute Engine instance URI.",
                          "type": "string"
                        },
                        "forwarding_rule": {
                          "description": "A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format:  projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}",
                          "type": "string"
                        },
                        "forwarding_rule_target": {
                          "description": "Output only. Specifies the type of the target of the forwarding rule.  This field is a member of `oneof`_ ``_forwarding_rule_target``.",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.Endpoint.ForwardingRuleTarget",
                          "output_only": true
                        },
                        "load_balancer_id": {
                          "description": "Output only. ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.  This field is a member of `oneof`_ ``_load_balancer_id``.",
                          "type": "string",
                          "output_only": true
                        },
                        "load_balancer_type": {
                          "description": "Output only. Type of the load balancer the forwarding rule points to.  This field is a member of `oneof`_ ``_load_balancer_type``.",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.LoadBalancerType",
                          "output_only": true
                        },
                        "gke_master_cluster": {
                          "description": "A cluster URI for `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__.",
                          "type": "string"
                        },
                        "fqdn": {
                          "description": "DNS endpoint of `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__. Requires gke_master_cluster to be set, can't be used simultaneoulsly with ip_address or network. Applicable only to destination endpoint.",
                          "type": "string"
                        },
                        "cloud_sql_instance": {
                          "description": "A `Cloud SQL <https://cloud.google.com/sql>`__ instance URI.",
                          "type": "string"
                        },
                        "redis_instance": {
                          "description": "A `Redis Instance <https://cloud.google.com/memorystore/docs/redis>`__ URI.",
                          "type": "string"
                        },
                        "redis_cluster": {
                          "description": "A `Redis Cluster <https://cloud.google.com/memorystore/docs/cluster>`__ URI.",
                          "type": "string"
                        },
                        "cloud_function": {
                          "description": "A `Cloud Function <https://cloud.google.com/functions>`__.",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.Endpoint.CloudFunctionEndpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "A `Cloud Function <https://cloud.google.com/functions>`__ name.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "app_engine_version": {
                          "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__.",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.Endpoint.AppEngineVersionEndpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__ name.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "cloud_run_revision": {
                          "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.Endpoint.CloudRunRevisionEndpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__ URI. The format is: projects/{project}/locations/{location}/revisions/{revision}",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "network": {
                          "description": "A Compute Engine network URI.",
                          "type": "string"
                        },
                        "network_type": {
                          "description": "Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.",
                          "type": "object",
                          "reference": "google.cloud.network_management_v1.types.Endpoint.NetworkType"
                        },
                        "project_id": {
                          "description": "Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID:  1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. The globally unique identifier of the service in the UUID4 format.",
                  "type": "string",
                  "output_only": true
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__ A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          }
        },
        "required": [
          "update_mask",
          "service"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteServiceRequest",
      "description": "Request message for\n[DataprocMetastore.DeleteService][google.cloud.metastore.v1alpha.DataprocMetastore.DeleteService].\n\nAttributes:\n    name (str):\n        Required. The relative resource name of the metastore\n        service to delete, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}/services/{service_id}``.\n    request_id (str):\n        Optional. A request ID. Specify a unique request ID to allow\n        the server to ignore the request if it has completed. The\n        server will ignore subsequent requests that provide a\n        duplicate request ID for at least 60 minutes after the first\n        request.\n\n        For example, if an initial request times out, followed by\n        another request with the same request ID, the server ignores\n        the second request to prevent the creation of duplicate\n        commitments.\n\n        The request ID must be a valid\n        `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__\n        A zero UUID (00000",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the metastore service to delete, in the following form:  ``projects/{project_number}/locations/{location_id}/services/{service_id}``.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__ A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListMetadataImportsRequest",
      "description": "Request message for\n[DataprocMetastore.ListMetadataImports][google.cloud.metastore.v1alpha.DataprocMetastore.ListMetadataImports].\n\nAttributes:\n    parent (str):\n        Required. The relative resource name of the service whose\n        metadata imports to list, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports``.\n    page_size (int):\n        Optional. The maximum number of imports to\n        return. The response may contain less than the\n        maximum number. If unspecified, no more than 500\n        imports are returned. The maximum value is 1000;\n        values above 1000 are changed to 1000.\n    page_token (str):\n        Optional. A page token, received from a previous\n        [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices]\n        call. Provide this token to retrieve the subsequent page.\n\n        To retrieve the first page, supply an empty page token.\n\n        When paginating, other par",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The relative resource name of the service whose metadata imports to list, in the following form:  ``projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of imports to return. The response may contain less than the maximum number. If unspecified, no more than 500 imports are returned. The maximum value is 1000; values above 1000 are changed to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices] call. Provide this token to retrieve the subsequent page.  To retrieve the first page, supply an empty page token.  When paginating, other parameters provided to [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices] must match the call that provided the page token.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. The filter to apply to list results.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. Specify the ordering of results as described in `Sorting Order <https://cloud.google.com/apis/design/design_patterns#sorting_order>`__. If not specified, the results will be sorted in the default order.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetMetadataImportRequest",
      "description": "Request message for\n[DataprocMetastore.GetMetadataImport][google.cloud.metastore.v1alpha.DataprocMetastore.GetMetadataImport].\n\nAttributes:\n    name (str):\n        Required. The relative resource name of the metadata import\n        to retrieve, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{import_id}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the metadata import to retrieve, in the following form:  ``projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{import_id}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateMetadataImportRequest",
      "description": "Request message for\n[DataprocMetastore.CreateMetadataImport][google.cloud.metastore.v1alpha.DataprocMetastore.CreateMetadataImport].\n\nAttributes:\n    parent (str):\n        Required. The relative resource name of the service in which\n        to create a metastore import, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}/services/{service_id}``.\n    metadata_import_id (str):\n        Required. The ID of the metadata import,\n        which is used as the final component of the\n        metadata import's name.\n\n        This value must be between 1 and 64 characters\n        long, begin with a letter, end with a letter or\n        number, and consist of alpha-numeric ASCII\n        characters or hyphens.\n    metadata_import (google.cloud.metastore_v1alpha.types.MetadataImport):\n        Required. The metadata import to create. The ``name`` field\n        is ignored. The ID of the created metadata import must be\n        provided in the request's ``metadata_import_id`` field.\n    request_id",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The relative resource name of the service in which to create a metastore import, in the following form:  ``projects/{project_number}/locations/{location_id}/services/{service_id}``.",
            "type": "string"
          },
          "metadata_import_id": {
            "description": "Required. The ID of the metadata import, which is used as the final component of the metadata import's name.  This value must be between 1 and 64 characters long, begin with a letter, end with a letter or number, and consist of alpha-numeric ASCII characters or hyphens.",
            "type": "string"
          },
          "metadata_import": {
            "description": "Required. The metadata import to create. The ``name`` field is ignored. The ID of the created metadata import must be provided in the request's ``metadata_import_id`` field.",
            "reference": "google.cloud.metastore_v1alpha.types.MetadataImport",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "database_dump": {
                  "description": "Immutable. A database dump from a pre-existing metastore's database.  This field is a member of `oneof`_ ``metadata``.",
                  "type": "object",
                  "reference": "google.cloud.metastore_v1alpha.types.MetadataImport.DatabaseDump",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "database_type": {
                        "description": "The type of the database.",
                        "type": "object",
                        "reference": "google.cloud.metastore_v1alpha.types.MetadataImport.DatabaseDump.DatabaseType",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "description": "The database provider.",
                              "type": "object",
                              "reference": "google.cloud.clouddms_v1.types.DatabaseProvider"
                            },
                            "engine": {
                              "description": "The database engine.",
                              "type": "object",
                              "reference": "google.cloud.clouddms_v1.types.DatabaseEngine"
                            }
                          }
                        }
                      },
                      "gcs_uri": {
                        "description": "A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with ``gs://``.",
                        "type": "string"
                      },
                      "source_database": {
                        "description": "The name of the source database.",
                        "type": "string"
                      },
                      "type_": {
                        "description": "Optional. The type of the database dump. If unspecified, defaults to ``MYSQL``.",
                        "type": "object",
                        "reference": "google.cloud.metastore_v1alpha.types.DatabaseDumpSpec.Type"
                      }
                    }
                  }
                },
                "name": {
                  "description": "Immutable. The relative resource name of the metadata import, of the form:  ``projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}``.",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the metadata import.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The time when the metadata import was started.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The time when the metadata import was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "end_time": {
                  "description": "Output only. The time when the metadata import finished.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. The current state of the metadata import.",
                  "type": "object",
                  "reference": "google.cloud.metastore_v1alpha.types.MetadataImport.State",
                  "output_only": true
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__ A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "metadata_import_id",
          "metadata_import"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateMetadataImportRequest",
      "description": "Request message for\n[DataprocMetastore.UpdateMetadataImport][google.cloud.metastore.v1alpha.DataprocMetastore.UpdateMetadataImport].\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. A field mask used to specify the fields to be\n        overwritten in the metadata import resource by the update.\n        Fields specified in the ``update_mask`` are relative to the\n        resource (not to the full request). A field is overwritten\n        if it is in the mask.\n    metadata_import (google.cloud.metastore_v1alpha.types.MetadataImport):\n        Required. The metadata import to update. The server only\n        merges fields in the import if they are specified in\n        ``update_mask``.\n\n        The metadata import's ``name`` field is used to identify the\n        metastore import to be updated.\n    request_id (str):\n        Optional. A request ID. Specify a unique request ID to allow\n        the server to ignore the request if it has completed. The\n        server will ignore su",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. A field mask used to specify the fields to be overwritten in the metadata import resource by the update. Fields specified in the ``update_mask`` are relative to the resource (not to the full request). A field is overwritten if it is in the mask.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "metadata_import": {
            "description": "Required. The metadata import to update. The server only merges fields in the import if they are specified in ``update_mask``.  The metadata import's ``name`` field is used to identify the metastore import to be updated.",
            "reference": "google.cloud.metastore_v1alpha.types.MetadataImport",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "database_dump": {
                  "description": "Immutable. A database dump from a pre-existing metastore's database.  This field is a member of `oneof`_ ``metadata``.",
                  "type": "object",
                  "reference": "google.cloud.metastore_v1alpha.types.MetadataImport.DatabaseDump",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "database_type": {
                        "description": "The type of the database.",
                        "type": "object",
                        "reference": "google.cloud.metastore_v1alpha.types.MetadataImport.DatabaseDump.DatabaseType",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "description": "The database provider.",
                              "type": "object",
                              "reference": "google.cloud.clouddms_v1.types.DatabaseProvider"
                            },
                            "engine": {
                              "description": "The database engine.",
                              "type": "object",
                              "reference": "google.cloud.clouddms_v1.types.DatabaseEngine"
                            }
                          }
                        }
                      },
                      "gcs_uri": {
                        "description": "A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with ``gs://``.",
                        "type": "string"
                      },
                      "source_database": {
                        "description": "The name of the source database.",
                        "type": "string"
                      },
                      "type_": {
                        "description": "Optional. The type of the database dump. If unspecified, defaults to ``MYSQL``.",
                        "type": "object",
                        "reference": "google.cloud.metastore_v1alpha.types.DatabaseDumpSpec.Type"
                      }
                    }
                  }
                },
                "name": {
                  "description": "Immutable. The relative resource name of the metadata import, of the form:  ``projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}``.",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the metadata import.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The time when the metadata import was started.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The time when the metadata import was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "end_time": {
                  "description": "Output only. The time when the metadata import finished.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. The current state of the metadata import.",
                  "type": "object",
                  "reference": "google.cloud.metastore_v1alpha.types.MetadataImport.State",
                  "output_only": true
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__ A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          }
        },
        "required": [
          "update_mask",
          "metadata_import"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListBackupsRequest",
      "description": "Request message for\n[DataprocMetastore.ListBackups][google.cloud.metastore.v1alpha.DataprocMetastore.ListBackups].\n\nAttributes:\n    parent (str):\n        Required. The relative resource name of the service whose\n        backups to list, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}/services/{service_id}/backups``.\n    page_size (int):\n        Optional. The maximum number of backups to\n        return. The response may contain less than the\n        maximum number. If unspecified, no more than 500\n        backups are returned. The maximum value is 1000;\n        values above 1000 are changed to 1000.\n    page_token (str):\n        Optional. A page token, received from a previous\n        [DataprocMetastore.ListBackups][google.cloud.metastore.v1alpha.DataprocMetastore.ListBackups]\n        call. Provide this token to retrieve the subsequent page.\n\n        To retrieve the first page, supply an empty page token.\n\n        When paginating, other parameters provided to\n        [Datapr",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The relative resource name of the service whose backups to list, in the following form:  ``projects/{project_number}/locations/{location_id}/services/{service_id}/backups``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of backups to return. The response may contain less than the maximum number. If unspecified, no more than 500 backups are returned. The maximum value is 1000; values above 1000 are changed to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous [DataprocMetastore.ListBackups][google.cloud.metastore.v1alpha.DataprocMetastore.ListBackups] call. Provide this token to retrieve the subsequent page.  To retrieve the first page, supply an empty page token.  When paginating, other parameters provided to [DataprocMetastore.ListBackups][google.cloud.metastore.v1alpha.DataprocMetastore.ListBackups] must match the call that provided the page token.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. The filter to apply to list results.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. Specify the ordering of results as described in `Sorting Order <https://cloud.google.com/apis/design/design_patterns#sorting_order>`__. If not specified, the results will be sorted in the default order.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetBackupRequest",
      "description": "Request message for\n[DataprocMetastore.GetBackup][google.cloud.metastore.v1alpha.DataprocMetastore.GetBackup].\n\nAttributes:\n    name (str):\n        Required. The relative resource name of the backup to\n        retrieve, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the backup to retrieve, in the following form:  ``projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateBackupRequest",
      "description": "Request message for\n[DataprocMetastore.CreateBackup][google.cloud.metastore.v1alpha.DataprocMetastore.CreateBackup].\n\nAttributes:\n    parent (str):\n        Required. The relative resource name of the service in which\n        to create a backup of the following form:\n\n        ``projects/{project_number}/locations/{location_id}/services/{service_id}``.\n    backup_id (str):\n        Required. The ID of the backup, which is used\n        as the final component of the backup's name.\n\n        This value must be between 1 and 64 characters\n        long, begin with a letter, end with a letter or\n        number, and consist of alpha-numeric ASCII\n        characters or hyphens.\n    backup (google.cloud.metastore_v1alpha.types.Backup):\n        Required. The backup to create. The ``name`` field is\n        ignored. The ID of the created backup must be provided in\n        the request's ``backup_id`` field.\n    request_id (str):\n        Optional. A request ID. Specify a unique request ID to allow\n        the server to ignore ",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The relative resource name of the service in which to create a backup of the following form:  ``projects/{project_number}/locations/{location_id}/services/{service_id}``.",
            "type": "string"
          },
          "backup_id": {
            "description": "Required. The ID of the backup, which is used as the final component of the backup's name.  This value must be between 1 and 64 characters long, begin with a letter, end with a letter or number, and consist of alpha-numeric ASCII characters or hyphens.",
            "type": "string"
          },
          "backup": {
            "description": "Required. The backup to create. The ``name`` field is ignored. The ID of the created backup must be provided in the request's ``backup_id`` field.",
            "reference": "google.cloud.metastore_v1alpha.types.Backup",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The resource name of the backup. Format: ``projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup_id}``.",
                  "type": "string"
                },
                "state": {
                  "description": "Output only. The backup state.",
                  "type": "object",
                  "reference": "google.cloud.netapp_v1.types.Backup.State",
                  "output_only": true
                },
                "description": {
                  "description": "A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.",
                  "type": "string"
                },
                "volume_usage_bytes": {
                  "description": "Output only. Size of the file system when the backup was created. When creating a new volume from the backup, the volume capacity will have to be at least as big.",
                  "type": "integer",
                  "output_only": true
                },
                "backup_type": {
                  "description": "Output only. Type of backup, manually created or created by a backup policy.",
                  "type": "object",
                  "reference": "google.cloud.netapp_v1.types.Backup.Type",
                  "output_only": true
                },
                "source_volume": {
                  "description": "Volume full name of this backup belongs to. Format: ``projects/{projects_id}/locations/{location}/volumes/{volume_id}``",
                  "type": "string"
                },
                "source_snapshot": {
                  "description": "If specified, backup will be created from the given snapshot. If not specified, there will be a new snapshot taken to initiate the backup creation. Format: ``projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}``  This field is a member of `oneof`_ ``_source_snapshot``.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The time when the backup was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Resource labels to represent user provided metadata.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "chain_storage_bytes": {
                  "description": "Output only. Total size of all backups in a chain in bytes = baseline backup size + sum(incremental backup size)",
                  "type": "integer",
                  "output_only": true
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__ A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "backup_id",
          "backup"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteBackupRequest",
      "description": "Request message for\n[DataprocMetastore.DeleteBackup][google.cloud.metastore.v1alpha.DataprocMetastore.DeleteBackup].\n\nAttributes:\n    name (str):\n        Required. The relative resource name of the backup to\n        delete, in the following form:\n\n        ``projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}``.\n    request_id (str):\n        Optional. A request ID. Specify a unique request ID to allow\n        the server to ignore the request if it has completed. The\n        server will ignore subsequent requests that provide a\n        duplicate request ID for at least 60 minutes after the first\n        request.\n\n        For example, if an initial request times out, followed by\n        another request with the same request ID, the server ignores\n        the second request to prevent the creation of duplicate\n        commitments.\n\n        The request ID must be a valid\n        `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__\n        A zero UUID",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The relative resource name of the backup to delete, in the following form:  ``projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}``.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__ A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ExportMetadataRequest",
      "description": "Request message for\n[DataprocMetastore.ExportMetadata][google.cloud.metastore.v1alpha.DataprocMetastore.ExportMetadata].\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    destination_gcs_folder (str):\n        A Cloud Storage URI of a folder, in the format\n        ``gs://<bucket_name>/<path_inside_bucket>``. A sub-folder\n        ``<export_folder>`` containing exported files will be\n        created below it.\n\n        This field is a member of `oneof`_ ``destination``.\n    service (str):\n        Required. The relative resource name of the metastore\n        service to run export, in the following form:\n\n        ``projects/{project_id}/locations/{location_id}/services/{service_id}``.\n    request_id (str):\n        Optional. A request ID. Specify a unique request ID to allow\n        the server to ignore the request if it has completed. The\n        server will ignore subsequent requests that provide a\n        duplicate request ID for at least",
      "parameters": {
        "type": "object",
        "properties": {
          "destination_gcs_folder": {
            "description": "A Cloud Storage URI of a folder, in the format ``gs://<bucket_name>/<path_inside_bucket>``. A sub-folder ``<export_folder>`` containing exported files will be created below it.  This field is a member of `oneof`_ ``destination``.",
            "type": "string"
          },
          "service": {
            "description": "Required. The relative resource name of the metastore service to run export, in the following form:  ``projects/{project_id}/locations/{location_id}/services/{service_id}``.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__. A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          },
          "database_dump_type": {
            "description": "Optional. The type of the database dump. If unspecified, defaults to ``MYSQL``.",
            "type": "object",
            "reference": "google.cloud.metastore_v1alpha.types.DatabaseDumpSpec.Type"
          }
        },
        "required": [
          "service"
        ]
      }
    },
    {
      "type": "function",
      "name": "RestoreServiceRequest",
      "description": "Request message for [DataprocMetastore.Restore][].\n\nAttributes:\n    service (str):\n        Required. The relative resource name of the metastore\n        service to run restore, in the following form:\n\n        ``projects/{project_id}/locations/{location_id}/services/{service_id}``.\n    backup (str):\n        Required. The relative resource name of the metastore\n        service backup to restore from, in the following form:\n\n        ``projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}``.\n    restore_type (google.cloud.metastore_v1alpha.types.Restore.RestoreType):\n        Optional. The type of restore. If unspecified, defaults to\n        ``METADATA_ONLY``.\n    request_id (str):\n        Optional. A request ID. Specify a unique request ID to allow\n        the server to ignore the request if it has completed. The\n        server will ignore subsequent requests that provide a\n        duplicate request ID for at least 60 minutes after the first\n        request.\n\n        For example,",
      "parameters": {
        "type": "object",
        "properties": {
          "service": {
            "description": "Required. The relative resource name of the metastore service to run restore, in the following form:  ``projects/{project_id}/locations/{location_id}/services/{service_id}``.",
            "type": "string"
          },
          "backup": {
            "description": "Required. The relative resource name of the metastore service backup to restore from, in the following form:  ``projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}``.",
            "type": "string"
          },
          "restore_type": {
            "description": "Optional. The type of restore. If unspecified, defaults to ``METADATA_ONLY``.",
            "type": "object",
            "reference": "google.cloud.metastore_v1alpha.types.Restore.RestoreType"
          },
          "request_id": {
            "description": "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.  For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.  The request ID must be a valid `UUID <https://en.wikipedia.org/wiki/Universally_unique_identifier#Format>`__. A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
            "type": "string"
          }
        },
        "required": [
          "service",
          "backup"
        ]
      }
    },
    {
      "type": "function",
      "name": "RemoveIamPolicyRequest",
      "description": "Request message for\n[DataprocMetastore.RemoveIamPolicy][google.cloud.metastore.v1alpha.DataprocMetastore.RemoveIamPolicy].\n\nAttributes:\n    resource (str):\n        Required. The relative resource name of the dataplane\n        resource to remove IAM policy, in the following form:\n\n        ``projects/{project_id}/locations/{location_id}/services/{service_id}/databases/{database_id}``\n        or\n        ``projects/{project_id}/locations/{location_id}/services/{service_id}/databases/{database_id}/tables/{table_id}``.\n    asynchronous (bool):\n        Optional. Removes IAM policy attached to\n        database or table asynchronously when it is set.\n        The default is false.",
      "parameters": {
        "type": "object",
        "properties": {
          "resource": {
            "description": "Required. The relative resource name of the dataplane resource to remove IAM policy, in the following form:  ``projects/{project_id}/locations/{location_id}/services/{service_id}/databases/{database_id}`` or ``projects/{project_id}/locations/{location_id}/services/{service_id}/databases/{database_id}/tables/{table_id}``.",
            "type": "string"
          },
          "asynchronous": {
            "description": "Optional. Removes IAM policy attached to database or table asynchronously when it is set. The default is false.",
            "type": "boolean"
          }
        },
        "required": [
          "resource"
        ]
      }
    },
    {
      "type": "function",
      "name": "QueryMetadataRequest",
      "description": "Request message for\n[DataprocMetastore.QueryMetadata][google.cloud.metastore.v1alpha.DataprocMetastore.QueryMetadata].\n\nAttributes:\n    service (str):\n        Required. The relative resource name of the metastore\n        service to query metadata, in the following format:\n\n        ``projects/{project_id}/locations/{location_id}/services/{service_id}``.\n    query (str):\n        Required. A read-only SQL query to execute\n        against the metadata database. The query cannot\n        change or mutate the data.",
      "parameters": {
        "type": "object",
        "properties": {
          "service": {
            "description": "Required. The relative resource name of the metastore service to query metadata, in the following format:  ``projects/{project_id}/locations/{location_id}/services/{service_id}``.",
            "type": "string"
          },
          "query": {
            "description": "Required. A read-only SQL query to execute against the metadata database. The query cannot change or mutate the data.",
            "type": "string",
            "output_only": true
          }
        },
        "required": [
          "service",
          "query"
        ]
      }
    },
    {
      "type": "function",
      "name": "MoveTableToDatabaseRequest",
      "description": "Request message for\n[DataprocMetastore.MoveTableToDatabase][google.cloud.metastore.v1alpha.DataprocMetastore.MoveTableToDatabase].\n\nAttributes:\n    service (str):\n        Required. The relative resource name of the metastore\n        service to mutate metadata, in the following format:\n\n        ``projects/{project_id}/locations/{location_id}/services/{service_id}``.\n    table_name (str):\n        Required. The name of the table to be moved.\n    db_name (str):\n        Required. The name of the database where the\n        table resides.\n    destination_db_name (str):\n        Required. The name of the database where the\n        table should be moved.",
      "parameters": {
        "type": "object",
        "properties": {
          "service": {
            "description": "Required. The relative resource name of the metastore service to mutate metadata, in the following format:  ``projects/{project_id}/locations/{location_id}/services/{service_id}``.",
            "type": "string"
          },
          "table_name": {
            "description": "Required. The name of the table to be moved.",
            "type": "string"
          },
          "db_name": {
            "description": "Required. The name of the database where the table resides.",
            "type": "string"
          },
          "destination_db_name": {
            "description": "Required. The name of the database where the table should be moved.",
            "type": "string"
          }
        },
        "required": [
          "service",
          "table_name",
          "db_name",
          "destination_db_name"
        ]
      }
    },
    {
      "type": "function",
      "name": "AlterMetadataResourceLocationRequest",
      "description": "Request message for\n[DataprocMetastore.AlterMetadataResourceLocation][google.cloud.metastore.v1alpha.DataprocMetastore.AlterMetadataResourceLocation].\n\nAttributes:\n    service (str):\n        Required. The relative resource name of the metastore\n        service to mutate metadata, in the following format:\n\n        ``projects/{project_id}/locations/{location_id}/services/{service_id}``.\n    resource_name (str):\n        Required. The relative metadata resource name in the\n        following format.\n\n        ``databases/{database_id}`` or\n        ``databases/{database_id}/tables/{table_id}`` or\n        ``databases/{database_id}/tables/{table_id}/partitions/{partition_id}``\n    location_uri (str):\n        Required. The new location URI for the\n        metadata resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "service": {
            "description": "Required. The relative resource name of the metastore service to mutate metadata, in the following format:  ``projects/{project_id}/locations/{location_id}/services/{service_id}``.",
            "type": "string"
          },
          "resource_name": {
            "description": "Required. The relative metadata resource name in the following format.  ``databases/{database_id}`` or ``databases/{database_id}/tables/{table_id}`` or ``databases/{database_id}/tables/{table_id}/partitions/{partition_id}``",
            "type": "string"
          },
          "location_uri": {
            "description": "Required. The new location URI for the metadata resource.",
            "type": "string"
          }
        },
        "required": [
          "service",
          "resource_name",
          "location_uri"
        ]
      }
    }
  ]
}