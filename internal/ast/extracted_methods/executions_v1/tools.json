{
  "Executions": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_executions",
          "description": "Returns a list of executions which belong to the\nworkflow with the given name. The method returns\nexecutions of all workflow revisions. Returned\nexecutions are ordered by their start time (newest\nfirst).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.workflows import executions_v1\n\n    async def sample_list_executions():\n        # Create a client\n        client = executions_v1.ExecutionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = executions_v1.ListExecutionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_ex",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the workflow for which the executions should be listed. Format: projects/{project}/locations/{location}/workflows/{workflow}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workflows.executions_v1.services.executions.pagers.ListExecutionsAsyncPager: Response for the [ListExecutions][google.cloud.workflows.executions.v1.Executions.ListExecutions] method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "executions.ListExecutionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_execution",
          "description": "Creates a new execution using the latest revision of\nthe given workflow.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.workflows import executions_v1\n\n    async def sample_create_execution():\n        # Create a client\n        client = executions_v1.ExecutionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = executions_v1.CreateExecutionRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_execution(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the workflow for which an execution should be created. Format: projects/{project}/locations/{location}/workflows/{workflow} The latest revision of the workflow will be used.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "execution": {
                "type": "google.cloud.workflows.executions_v1.types.Execution",
                "description": "Required. Execution to be created. This corresponds to the ``execution`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workflows.executions_v1.types.Execution: A running instance of a [Workflow](/workflows/docs/reference/rest/v1/projects.locations.workflows)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "execution",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "executions.CreateExecutionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_execution",
          "description": "Returns an execution of the given name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.workflows import executions_v1\n\n    async def sample_get_execution():\n        # Create a client\n        client = executions_v1.ExecutionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = executions_v1.GetExecutionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_execution(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.workflows.executions_v1.types.GetExecution",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the execution to be retrieved. Format:  projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workflows.executions_v1.types.Execution: A running instance of a [Workflow](/workflows/docs/reference/rest/v1/projects.locations.workflows)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "executions.GetExecutionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_execution",
          "description": "Cancels an execution of the given name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.workflows import executions_v1\n\n    async def sample_cancel_execution():\n        # Create a client\n        client = executions_v1.ExecutionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = executions_v1.CancelExecutionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.cancel_execution(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.workflows.executions_v1.types.Can",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the execution to be cancelled. Format:  projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.workflows.executions_v1.types.Execution: A running instance of a [Workflow](/workflows/docs/reference/rest/v1/projects.locations.workflows)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "executions.CancelExecutionRequest"
          ]
        }
      }
    ]
  }
}