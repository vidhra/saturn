{
  "ServiceManager": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_services",
          "description": "Lists managed services.\n\nReturns all public services. For authenticated users,\nalso returns all services the calling user has\n\"servicemanagement.services.get\" permission for.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicemanagement_v1\n\n    async def sample_list_services():\n        # Create a client\n        client = servicemanagement_v1.ServiceManagerAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicemanagement_v1.ListServicesRequest(\n        )\n\n        # Make the request\n        page_result = client.list_services(request=request)\n\n        # Handle the respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "producer_project_id": {
                "type": "str",
                "description": "Include services produced by the specified project.  This corresponds to the ``producer_project_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "consumer_id": {
                "type": "str",
                "description": "Include services consumed by the specified consumer.  The Google Service Management implementation accepts the following forms:  -  project:<project_id>  This corresponds to the ``consumer_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicemanagement_v1.services.service_manager.pagers.ListServicesAsyncPager: Response message for ListServices method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "producer_project_id",
              "consumer_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "ListServicesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_service",
          "description": "Gets a managed service. Authentication is required\nunless the service is public.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicemanagement_v1\n\n    async def sample_get_service():\n        # Create a client\n        client = servicemanagement_v1.ServiceManagerAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicemanagement_v1.GetServiceRequest(\n            service_name=\"service_name_value\",\n        )\n\n        # Make the request\n        response = await client.get_service(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Opti",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "service_name": {
                "type": "str",
                "description": "Required. The name of the service. See the ``ServiceManager`` overview for naming requirements. For example: ``example.googleapis.com``.  This corresponds to the ``service_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicemanagement_v1.types.ManagedService: The full representation of a Service that is managed by Google Service Management."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "service_name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GetServiceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_service",
          "description": "Creates a new managed service.\n\nA managed service is immutable, and is subject to\nmandatory 30-day data retention. You cannot move a\nservice or recreate it within 30 days after deletion.\n\nOne producer project can own no more than 500 services.\nFor security and reliability purposes, a production\nservice should be hosted in a dedicated producer\nproject.\n\nOperation<response: ManagedService>\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicemanagement_v1\n\n    async def sample_create_service():\n        # Create a client\n        client = servicemanagement_v1.ServiceManagerAsyncClient()\n\n        # I",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "service": {
                "type": "google.cloud.servicemanagement_v1.types.ManagedService",
                "description": "Required. Initial values for the service resource.  This corresponds to the ``service`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.servicemanagement_v1.types.ManagedService` The full representation of a Service that is managed by Google Service Management."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "service",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_service",
          "description": "Deletes a managed service. This method will change the service\nto the ``Soft-Delete`` state for 30 days. Within this period,\nservice producers may call\n[UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService]\nto restore the service. After 30 days, the service will be\npermanently deleted.\n\nOperation<response: google.protobuf.Empty>\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicemanagement_v1\n\n    async def sample_delete_service():\n        # Create a client\n        client = servicemanagement_v1.ServiceManagerAsyncClient()\n\n        # Initialize request argument(s)\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "service_name": {
                "type": "str",
                "description": "Required. The name of the service. See the `overview <https://cloud.google.com/service-management/overview>`__ for naming requirements. For example: ``example.googleapis.com``.  This corresponds to the ``service_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "service_name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undelete_service",
          "description": "Revives a previously deleted managed service. The\nmethod restores the service using the configuration at\nthe time the service was deleted. The target service\nmust exist and must have been deleted within the last 30\ndays.\n\nOperation<response: UndeleteServiceResponse>\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicemanagement_v1\n\n    async def sample_undelete_service():\n        # Create a client\n        client = servicemanagement_v1.ServiceManagerAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicemanagement_v1.UndeleteServiceRequest(\n            service_name=\"ser",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "service_name": {
                "type": "str",
                "description": "Required. The name of the service. See the `overview <https://cloud.google.com/service-management/overview>`__ for naming requirements. For example: ``example.googleapis.com``.  This corresponds to the ``service_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.servicemanagement_v1.types.UndeleteServiceResponse` Response message for UndeleteService method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "service_name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_service_configs",
          "description": "Lists the history of the service configuration for a\nmanaged service, from the newest to the oldest.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicemanagement_v1\n\n    async def sample_list_service_configs():\n        # Create a client\n        client = servicemanagement_v1.ServiceManagerAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicemanagement_v1.ListServiceConfigsRequest(\n            service_name=\"service_name_value\",\n        )\n\n        # Make the request\n        page_result = client.list_service_configs(request=request)\n\n        # Handle the response\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "service_name": {
                "type": "str",
                "description": "Required. The name of the service. See the `overview <https://cloud.google.com/service-management/overview>`__ for naming requirements. For example: ``example.googleapis.com``.  This corresponds to the ``service_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicemanagement_v1.services.service_manager.pagers.ListServiceConfigsAsyncPager: Response message for ListServiceConfigs method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "service_name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_service_config",
          "description": "Gets a service configuration (version) for a managed\nservice.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicemanagement_v1\n\n    async def sample_get_service_config():\n        # Create a client\n        client = servicemanagement_v1.ServiceManagerAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicemanagement_v1.GetServiceConfigRequest(\n            service_name=\"service_name_value\",\n            config_id=\"config_id_value\",\n        )\n\n        # Make the request\n        response = await client.get_service_config(request=request)\n\n        # Handle the response\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "service_name": {
                "type": "str",
                "description": "Required. The name of the service. See the `overview <https://cloud.google.com/service-management/overview>`__ for naming requirements. For example: ``example.googleapis.com``.  This corresponds to the ``service_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "config_id": {
                "type": "str",
                "description": "Required. The id of the service configuration resource.  This field must be specified for the server to return all fields, including ``SourceInfo``.  This corresponds to the ``config_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "view": {
                "type": "google.cloud.servicemanagement_v1.types.GetServiceConfigRequest.ConfigView",
                "description": "Specifies which parts of the Service Config should be returned in the response.  This corresponds to the ``view`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api.service_pb2.Service: Service is the root object of Google API service configuration (service config). It describes the basic information about a logical service, such as the service name and the user-facing title, and delegates other aspects to sub-sections. Each sub-section is either a proto message or a repeated proto message that configures a specific aspect, such as auth. For more information, see each proto message definition.  Example:  type: google.api.Service name: calendar.googleapis.com title: Google Calendar API apis: - name: google.calendar.v3.Calendar  visibility: rules: - selector: \"google.calendar.v3.*\" restriction: PREVIEW  backend: rules: - selector: \"google.calendar.v3.*\" address: calendar.example.com  authentication: providers: - id: google_calendar_auth jwks_uri: https://www.googleapis.com/oauth2/v1/certs issuer: https://securetoken.google.com rules: - selector: \"*\" requirements: provider_id: google_calendar_auth"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "service_name",
              "config_id",
              "view",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_service_config",
          "description": "Creates a new service configuration (version) for a managed\nservice. This method only stores the service configuration. To\nroll out the service configuration to backend systems please\ncall\n[CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].\n\nOnly the 100 most recent service configurations and ones\nreferenced by existing rollouts are kept for each service. The\nrest will be deleted eventually.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicemanagement_v1\n\n    async def sample_create_service_config():\n        # Create a client\n        client = servicema",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "service_name": {
                "type": "str",
                "description": "Required. The name of the service. See the `overview <https://cloud.google.com/service-management/overview>`__ for naming requirements. For example: ``example.googleapis.com``.  This corresponds to the ``service_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "service_config": {
                "type": "google.api.service_pb2.Service",
                "description": "Required. The service configuration resource.  This corresponds to the ``service_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api.service_pb2.Service: Service is the root object of Google API service configuration (service config). It describes the basic information about a logical service, such as the service name and the user-facing title, and delegates other aspects to sub-sections. Each sub-section is either a proto message or a repeated proto message that configures a specific aspect, such as auth. For more information, see each proto message definition.  Example:  type: google.api.Service name: calendar.googleapis.com title: Google Calendar API apis: - name: google.calendar.v3.Calendar  visibility: rules: - selector: \"google.calendar.v3.*\" restriction: PREVIEW  backend: rules: - selector: \"google.calendar.v3.*\" address: calendar.example.com  authentication: providers: - id: google_calendar_auth jwks_uri: https://www.googleapis.com/oauth2/v1/certs issuer: https://securetoken.google.com rules: - selector: \"*\" requirements: provider_id: google_calendar_auth"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "service_name",
              "service_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "submit_config_source",
          "description": "Creates a new service configuration (version) for a managed\nservice based on user-supplied configuration source files (for\nexample: OpenAPI Specification). This method stores the source\nconfigurations as well as the generated service configuration.\nTo rollout the service configuration to other services, please\ncall\n[CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].\n\nOnly the 100 most recent configuration sources and ones\nreferenced by existing service configurtions are kept for each\nservice. The rest will be deleted eventually.\n\nOperation<response: SubmitConfigSourceResponse>\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "service_name": {
                "type": "str",
                "description": "Required. The name of the service. See the `overview <https://cloud.google.com/service-management/overview>`__ for naming requirements. For example: ``example.googleapis.com``.  This corresponds to the ``service_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "config_source": {
                "type": "google.cloud.servicemanagement_v1.types.ConfigSource",
                "description": "Required. The source configuration for the service.  This corresponds to the ``config_source`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "validate_only": {
                "type": "bool",
                "description": "Optional. If set, this will result in the generation of a ``google.api.Service`` configuration based on the ``ConfigSource`` provided, but the generated config and the sources will NOT be persisted.  This corresponds to the ``validate_only`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.servicemanagement_v1.types.SubmitConfigSourceResponse` Response message for SubmitConfigSource method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "service_name",
              "config_source",
              "validate_only",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_service_rollouts",
          "description": "Lists the history of the service configuration\nrollouts for a managed service, from the newest to the\noldest.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicemanagement_v1\n\n    async def sample_list_service_rollouts():\n        # Create a client\n        client = servicemanagement_v1.ServiceManagerAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicemanagement_v1.ListServiceRolloutsRequest(\n            service_name=\"service_name_value\",\n            filter=\"filter_value\",\n        )\n\n        # Make the request\n        page_result = client.list_service_rollouts(reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "service_name": {
                "type": "str",
                "description": "Required. The name of the service. See the `overview <https://cloud.google.com/service-management/overview>`__ for naming requirements. For example: ``example.googleapis.com``.  This corresponds to the ``service_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Required. Use ``filter`` to return subset of rollouts. The following filters are supported:  -- By [status] [google.api.servicemanagement.v1.Rollout.RolloutStatus]. For example, ``filter='status=SUCCESS'``  -- By [strategy] [google.api.servicemanagement.v1.Rollout.strategy]. For example, ``filter='strategy=TrafficPercentStrategy'``  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicemanagement_v1.services.service_manager.pagers.ListServiceRolloutsAsyncPager: Response message for ListServiceRollouts method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "service_name",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_service_rollout",
          "description": "Gets a service configuration\n[rollout][google.api.servicemanagement.v1.Rollout].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicemanagement_v1\n\n    async def sample_get_service_rollout():\n        # Create a client\n        client = servicemanagement_v1.ServiceManagerAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicemanagement_v1.GetServiceRolloutRequest(\n            service_name=\"service_name_value\",\n            rollout_id=\"rollout_id_value\",\n        )\n\n        # Make the request\n        response = await client.get_service_rollout(request=request)\n\n        # Ha",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "service_name": {
                "type": "str",
                "description": "Required. The name of the service. See the `overview <https://cloud.google.com/service-management/overview>`__ for naming requirements. For example: ``example.googleapis.com``.  This corresponds to the ``service_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "rollout_id": {
                "type": "str",
                "description": "Required. The id of the rollout resource.  This corresponds to the ``rollout_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicemanagement_v1.types.Rollout: A rollout resource that defines how service configuration versions are pushed to control plane systems. Typically, you create a new version of the service config, and then create a Rollout to push the service config."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "service_name",
              "rollout_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_service_rollout",
          "description": "Creates a new service configuration rollout. Based on\nrollout, the Google Service Management will roll out the\nservice configurations to different backend services.\nFor example, the logging configuration will be pushed to\nGoogle Cloud Logging.\n\nPlease note that any previous pending and running\nRollouts and associated Operations will be automatically\ncancelled so that the latest Rollout will not be blocked\nby previous Rollouts.\n\nOnly the 100 most recent (in any state) and the last 10\nsuccessful (if not already part of the set of 100 most\nrecent) rollouts are kept for each service. The rest\nwill be deleted eventually.\n\nOperation<response: Rollout>\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   http",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "service_name": {
                "type": "str",
                "description": "Required. The name of the service. See the `overview <https://cloud.google.com/service-management/overview>`__ for naming requirements. For example: ``example.googleapis.com``.  This corresponds to the ``service_name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "rollout": {
                "type": "google.cloud.servicemanagement_v1.types.Rollout",
                "description": "Required. The rollout resource. The ``service_name`` field is output only.  This corresponds to the ``rollout`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.servicemanagement_v1.types.Rollout` A rollout resource that defines how service configuration versions are pushed to control plane systems. Typically, you create a new version of the service config, and then create a Rollout to push the service config."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "service_name",
              "rollout",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_config_report",
          "description": "Generates and returns a report (errors, warnings and changes\nfrom existing configurations) associated with\nGenerateConfigReportRequest.new_value\n\nIf GenerateConfigReportRequest.old_value is specified,\nGenerateConfigReportRequest will contain a single ChangeReport\nbased on the comparison between\nGenerateConfigReportRequest.new_value and\nGenerateConfigReportRequest.old_value. If\nGenerateConfigReportRequest.old_value is not specified, this\nmethod will compare GenerateConfigReportRequest.new_value with\nthe last pushed service configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicemanage",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "new_config": {
                "type": "google.protobuf.any_pb2.Any",
                "description": "Required. Service configuration for which we want to generate the report. For this version of API, the supported types are [google.api.servicemanagement.v1.ConfigRef][google.api.servicemanagement.v1.ConfigRef], [google.api.servicemanagement.v1.ConfigSource][google.api.servicemanagement.v1.ConfigSource], and [google.api.Service][google.api.Service]  This corresponds to the ``new_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "old_config": {
                "type": "google.protobuf.any_pb2.Any",
                "description": "Optional. Service configuration against which the comparison will be done. For this version of API, the supported types are [google.api.servicemanagement.v1.ConfigRef][google.api.servicemanagement.v1.ConfigRef], [google.api.servicemanagement.v1.ConfigSource][google.api.servicemanagement.v1.ConfigSource], and [google.api.Service][google.api.Service]  This corresponds to the ``old_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicemanagement_v1.types.GenerateConfigReportResponse: Response message for GenerateConfigReport method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "new_config",
              "old_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}