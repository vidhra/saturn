{
  "CloudControlsPartnerCore": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_workload",
          "description": "Gets details of a single workload\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import cloudcontrolspartner_v1beta\n\n    async def sample_get_workload():\n        # Create a client\n        client = cloudcontrolspartner_v1beta.CloudControlsPartnerCoreAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudcontrolspartner_v1beta.GetWorkloadRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_workload(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.cloud",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: ``organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.cloudcontrolspartner_v1beta.types.Workload: Contains metadata around the [Workload resource](\\ https://cloud.google.com/assured-workloads/docs/reference/rest/Shared.Types/Workload) in the Assured Workloads API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_workloads",
          "description": "Lists customer workloads for a given customer org id\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import cloudcontrolspartner_v1beta\n\n    async def sample_list_workloads():\n        # Create a client\n        client = cloudcontrolspartner_v1beta.CloudControlsPartnerCoreAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudcontrolspartner_v1beta.ListWorkloadsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_workloads(request=request)\n\n        # Handle the response\n        async for response in page_result:\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource Format: ``organizations/{organization}/locations/{location}/customers/{customer}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.cloudcontrolspartner_v1beta.services.cloud_controls_partner_core.pagers.ListWorkloadsAsyncPager: Response message for list customer workloads requests. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_customer",
          "description": "Gets details of a single customer\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import cloudcontrolspartner_v1beta\n\n    async def sample_get_customer():\n        # Create a client\n        client = cloudcontrolspartner_v1beta.CloudControlsPartnerCoreAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudcontrolspartner_v1beta.GetCustomerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_customer(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.cloud",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: ``organizations/{organization}/locations/{location}/customers/{customer}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.cloudcontrolspartner_v1beta.types.Customer: Contains metadata around a Cloud Controls Partner Customer"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_customers",
          "description": "Lists customers of a partner identified by its Google\nCloud organization ID\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import cloudcontrolspartner_v1beta\n\n    async def sample_list_customers():\n        # Create a client\n        client = cloudcontrolspartner_v1beta.CloudControlsPartnerCoreAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudcontrolspartner_v1beta.ListCustomersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_customers(request=request)\n\n        # Handle the response\n        async for response i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource Format: ``organizations/{organization}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.cloudcontrolspartner_v1beta.services.cloud_controls_partner_core.pagers.ListCustomersAsyncPager: Response message for list customer Customers requests Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_ekm_connections",
          "description": "Gets the EKM connections associated with a workload\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import cloudcontrolspartner_v1beta\n\n    async def sample_get_ekm_connections():\n        # Create a client\n        client = cloudcontrolspartner_v1beta.CloudControlsPartnerCoreAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudcontrolspartner_v1beta.GetEkmConnectionsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_ekm_connections(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: ``organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/ekmConnections``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.cloudcontrolspartner_v1beta.types.EkmConnections: The EKM connections associated with a workload"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_partner_permissions",
          "description": "Gets the partner permissions granted for a workload\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import cloudcontrolspartner_v1beta\n\n    async def sample_get_partner_permissions():\n        # Create a client\n        client = cloudcontrolspartner_v1beta.CloudControlsPartnerCoreAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudcontrolspartner_v1beta.GetPartnerPermissionsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_partner_permissions(request=request)\n\n        # Handle the response\n        print(response)\n\nAr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource to get in the format: ``organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/partnerPermissions``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.cloudcontrolspartner_v1beta.types.PartnerPermissions: The permissions granted to the partner for a workload"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_access_approval_requests",
          "description": "Deprecated: Only returns access approval requests\ndirectly associated with an assured workload folder.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import cloudcontrolspartner_v1beta\n\n    async def sample_list_access_approval_requests():\n        # Create a client\n        client = cloudcontrolspartner_v1beta.CloudControlsPartnerCoreAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudcontrolspartner_v1beta.ListAccessApprovalRequestsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_access_approval_requests(reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource Format: ``organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.cloudcontrolspartner_v1beta.services.cloud_controls_partner_core.pagers.ListAccessApprovalRequestsAsyncPager: Response message for list access requests. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_partner",
          "description": "Get details of a Partner.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import cloudcontrolspartner_v1beta\n\n    async def sample_get_partner():\n        # Create a client\n        client = cloudcontrolspartner_v1beta.CloudControlsPartnerCoreAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudcontrolspartner_v1beta.GetPartnerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_partner(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.cloudcontrolspar",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: ``organizations/{organization}/locations/{location}/partner``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.cloudcontrolspartner_v1beta.types.Partner: Message describing Partner resource"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "CloudControlsPartnerMonitoring": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_violations",
          "description": "Lists Violations for a workload Callers may also choose to read\nacross multiple Customers or for a single customer as per\n`AIP-159 <https://google.aip.dev/159>`__ by using '-' (the\nhyphen or dash character) as a wildcard character instead of\n{customer} & {workload}. Format:\n``organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}``\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import cloudcontrolspartner_v1beta\n\n    async def sample_list_violations():\n        # Create a client\n        client = cloudcontrolspartner_v1beta.CloudControlsPartnerMonitoringAsyncClient()\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent resource Format ``organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.cloudcontrolspartner_v1beta.services.cloud_controls_partner_monitoring.pagers.ListViolationsAsyncPager: Response message for list customer violation requests Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_violation",
          "description": "Gets details of a single Violation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import cloudcontrolspartner_v1beta\n\n    async def sample_get_violation():\n        # Create a client\n        client = cloudcontrolspartner_v1beta.CloudControlsPartnerMonitoringAsyncClient()\n\n        # Initialize request argument(s)\n        request = cloudcontrolspartner_v1beta.GetViolationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_violation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: ``organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/violations/{violation}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.cloudcontrolspartner_v1beta.types.Violation: Details of resource Violation"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}