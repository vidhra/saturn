{
  "BinauthzManagementServiceV1Beta1": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_policy",
          "description": "A [policy][google.cloud.binaryauthorization.v1beta1.Policy]\nspecifies the\n[attestors][google.cloud.binaryauthorization.v1beta1.Attestor]\nthat must attest to a container image, before the project is\nallowed to deploy that image. There is at most one policy per\nproject. All image admission requests are permitted if a project\nhas no policy.\n\nGets the\n[policy][google.cloud.binaryauthorization.v1beta1.Policy] for\nthis project. Returns a default\n[policy][google.cloud.binaryauthorization.v1beta1.Policy] if the\nproject does not have one.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import binaryauthorization_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [policy][google.cloud.binaryauthorization.v1beta1.Policy] to retrieve, in the format ``projects/*/policy``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.binaryauthorization_v1beta1.types.Policy: A [policy][google.cloud.binaryauthorization.v1beta1.Policy] for Binary Authorization."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_policy",
          "description": "Creates or updates a project's\n[policy][google.cloud.binaryauthorization.v1beta1.Policy], and\nreturns a copy of the new\n[policy][google.cloud.binaryauthorization.v1beta1.Policy]. A\npolicy is always updated as a whole, to avoid race conditions\nwith concurrent policy enforcement (or management!) requests.\nReturns NOT_FOUND if the project does not exist,\nINVALID_ARGUMENT if the request is malformed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import binaryauthorization_v1beta1\n\n    async def sample_update_policy():\n        # Create a client\n        client = binaryauthorization_v1beta1.BinauthzManagement",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "policy": {
                "type": "google.cloud.binaryauthorization_v1beta1.types.Policy",
                "description": "Required. A new or updated [policy][google.cloud.binaryauthorization.v1beta1.Policy] value. The service will overwrite the [policy name][google.cloud.binaryauthorization.v1beta1.Policy.name] field with the resource name in the request URL, in the format ``projects/*/policy``.  This corresponds to the ``policy`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.binaryauthorization_v1beta1.types.Policy: A [policy][google.cloud.binaryauthorization.v1beta1.Policy] for Binary Authorization."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "policy",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_attestor",
          "description": "Creates an\n[attestor][google.cloud.binaryauthorization.v1beta1.Attestor],\nand returns a copy of the new\n[attestor][google.cloud.binaryauthorization.v1beta1.Attestor].\nReturns NOT_FOUND if the project does not exist,\nINVALID_ARGUMENT if the request is malformed, ALREADY_EXISTS if\nthe\n[attestor][google.cloud.binaryauthorization.v1beta1.Attestor]\nalready exists.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import binaryauthorization_v1beta1\n\n    async def sample_create_attestor():\n        # Create a client\n        client = binaryauthorization_v1beta1.BinauthzManagementServiceV1Beta1AsyncClient()\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent of this [attestor][google.cloud.binaryauthorization.v1beta1.Attestor].  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "attestor_id": {
                "type": "str",
                "description": "Required. The [attestors][google.cloud.binaryauthorization.v1beta1.Attestor] ID.  This corresponds to the ``attestor_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "attestor": {
                "type": "google.cloud.binaryauthorization_v1beta1.types.Attestor",
                "description": "Required. The initial [attestor][google.cloud.binaryauthorization.v1beta1.Attestor] value. The service will overwrite the [attestor name][google.cloud.binaryauthorization.v1beta1.Attestor.name] field with the resource name, in the format ``projects/*/attestors/*``.  This corresponds to the ``attestor`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.binaryauthorization_v1beta1.types.Attestor: An [attestor][google.cloud.binaryauthorization.v1beta1.Attestor] that attests to container image artifacts. An existing attestor cannot be modified except where indicated."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "attestor_id",
              "attestor",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_attestor",
          "description": "Gets an\n[attestor][google.cloud.binaryauthorization.v1beta1.Attestor].\nReturns NOT_FOUND if the\n[attestor][google.cloud.binaryauthorization.v1beta1.Attestor]\ndoes not exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import binaryauthorization_v1beta1\n\n    async def sample_get_attestor():\n        # Create a client\n        client = binaryauthorization_v1beta1.BinauthzManagementServiceV1Beta1AsyncClient()\n\n        # Initialize request argument(s)\n        request = binaryauthorization_v1beta1.GetAttestorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = awa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [attestor][google.cloud.binaryauthorization.v1beta1.Attestor] to retrieve, in the format ``projects/*/attestors/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.binaryauthorization_v1beta1.types.Attestor: An [attestor][google.cloud.binaryauthorization.v1beta1.Attestor] that attests to container image artifacts. An existing attestor cannot be modified except where indicated."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_attestor",
          "description": "Updates an\n[attestor][google.cloud.binaryauthorization.v1beta1.Attestor].\nReturns NOT_FOUND if the\n[attestor][google.cloud.binaryauthorization.v1beta1.Attestor]\ndoes not exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import binaryauthorization_v1beta1\n\n    async def sample_update_attestor():\n        # Create a client\n        client = binaryauthorization_v1beta1.BinauthzManagementServiceV1Beta1AsyncClient()\n\n        # Initialize request argument(s)\n        attestor = binaryauthorization_v1beta1.Attestor()\n        attestor.user_owned_drydock_note.note_reference = \"note_reference_value\"\n        atte",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "attestor": {
                "type": "google.cloud.binaryauthorization_v1beta1.types.Attestor",
                "description": "Required. The updated [attestor][google.cloud.binaryauthorization.v1beta1.Attestor] value. The service will overwrite the [attestor name][google.cloud.binaryauthorization.v1beta1.Attestor.name] field with the resource name in the request URL, in the format ``projects/*/attestors/*``.  This corresponds to the ``attestor`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.binaryauthorization_v1beta1.types.Attestor: An [attestor][google.cloud.binaryauthorization.v1beta1.Attestor] that attests to container image artifacts. An existing attestor cannot be modified except where indicated."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "attestor",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_attestors",
          "description": "Lists\n[attestors][google.cloud.binaryauthorization.v1beta1.Attestor].\nReturns INVALID_ARGUMENT if the project does not exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import binaryauthorization_v1beta1\n\n    async def sample_list_attestors():\n        # Create a client\n        client = binaryauthorization_v1beta1.BinauthzManagementServiceV1Beta1AsyncClient()\n\n        # Initialize request argument(s)\n        request = binaryauthorization_v1beta1.ListAttestorsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_attestors(request=request)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the project associated with the [attestors][google.cloud.binaryauthorization.v1beta1.Attestor], in the format ``projects/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.binaryauthorization_v1beta1.services.binauthz_management_service_v1_beta1.pagers.ListAttestorsAsyncPager: Response message for [BinauthzManagementService.ListAttestors][].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_attestor",
          "description": "Deletes an\n[attestor][google.cloud.binaryauthorization.v1beta1.Attestor].\nReturns NOT_FOUND if the\n[attestor][google.cloud.binaryauthorization.v1beta1.Attestor]\ndoes not exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import binaryauthorization_v1beta1\n\n    async def sample_delete_attestor():\n        # Create a client\n        client = binaryauthorization_v1beta1.BinauthzManagementServiceV1Beta1AsyncClient()\n\n        # Initialize request argument(s)\n        request = binaryauthorization_v1beta1.DeleteAttestorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [attestors][google.cloud.binaryauthorization.v1beta1.Attestor] to delete, in the format ``projects/*/attestors/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "SystemPolicyV1Beta1": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_system_policy",
          "description": "Gets the current system policy in the specified\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import binaryauthorization_v1beta1\n\n    async def sample_get_system_policy():\n        # Create a client\n        client = binaryauthorization_v1beta1.SystemPolicyV1Beta1AsyncClient()\n\n        # Initialize request argument(s)\n        request = binaryauthorization_v1beta1.GetSystemPolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_system_policy(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name, in the format ``locations/*/policy``. Note that the system policy is not associated with a project.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.binaryauthorization_v1beta1.types.Policy: A [policy][google.cloud.binaryauthorization.v1beta1.Policy] for Binary Authorization."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}