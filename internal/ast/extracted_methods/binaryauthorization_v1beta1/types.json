{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-binary-authorization/google/cloud/binaryauthorization_v1beta1/types/service.py": [
    {
      "type": "function",
      "name": "GetPolicyRequest",
      "description": "Request message for [BinauthzManagementService.GetPolicy][].\n\nAttributes:\n    name (str):\n        Required. The resource name of the\n        [policy][google.cloud.binaryauthorization.v1beta1.Policy] to\n        retrieve, in the format ``projects/*/policy``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the [policy][google.cloud.binaryauthorization.v1beta1.Policy] to retrieve, in the format ``projects/*/policy``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdatePolicyRequest",
      "description": "Request message for [BinauthzManagementService.UpdatePolicy][].\n\nAttributes:\n    policy (google.cloud.binaryauthorization_v1beta1.types.Policy):\n        Required. A new or updated\n        [policy][google.cloud.binaryauthorization.v1beta1.Policy]\n        value. The service will overwrite the [policy\n        name][google.cloud.binaryauthorization.v1beta1.Policy.name]\n        field with the resource name in the request URL, in the\n        format ``projects/*/policy``.",
      "parameters": {
        "type": "object",
        "properties": {
          "policy": {
            "description": "Required. A new or updated [policy][google.cloud.binaryauthorization.v1beta1.Policy] value. The service will overwrite the [policy name][google.cloud.binaryauthorization.v1beta1.Policy.name] field with the resource name in the request URL, in the format ``projects/*/policy``.",
            "reference": "google.cloud.binaryauthorization_v1beta1.types.Policy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "type_": {
                  "description": "Policy type.",
                  "type": "object",
                  "reference": "google.shopping.merchant_accounts_v1beta.types.OnlineReturnPolicy.Policy.Type"
                },
                "days": {
                  "description": "The number of days items can be returned after delivery, where one day is defined as 24 hours after the delivery timestamp. Required for ``NUMBER_OF_DAYS_AFTER_DELIVERY`` returns.",
                  "type": "integer"
                }
              }
            }
          }
        },
        "required": [
          "policy"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateAttestorRequest",
      "description": "Request message for [BinauthzManagementService.CreateAttestor][].\n\nAttributes:\n    parent (str):\n        Required. The parent of this\n        [attestor][google.cloud.binaryauthorization.v1beta1.Attestor].\n    attestor_id (str):\n        Required. The\n        [attestors][google.cloud.binaryauthorization.v1beta1.Attestor]\n        ID.\n    attestor (google.cloud.binaryauthorization_v1beta1.types.Attestor):\n        Required. The initial\n        [attestor][google.cloud.binaryauthorization.v1beta1.Attestor]\n        value. The service will overwrite the [attestor\n        name][google.cloud.binaryauthorization.v1beta1.Attestor.name]\n        field with the resource name, in the format\n        ``projects/*/attestors/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent of this [attestor][google.cloud.binaryauthorization.v1beta1.Attestor].",
            "type": "string"
          },
          "attestor_id": {
            "description": "Required. The [attestors][google.cloud.binaryauthorization.v1beta1.Attestor] ID.",
            "type": "string"
          },
          "attestor": {
            "description": "Required. The initial [attestor][google.cloud.binaryauthorization.v1beta1.Attestor] value. The service will overwrite the [attestor name][google.cloud.binaryauthorization.v1beta1.Attestor.name] field with the resource name, in the format ``projects/*/attestors/*``.",
            "reference": "google.cloud.binaryauthorization_v1beta1.types.Attestor",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. The resource name, in the format: ``projects/*/attestors/*``. This field may not be updated.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. A descriptive comment.  This field may be updated. The field may be displayed in chooser dialogs.",
                  "type": "string"
                },
                "user_owned_drydock_note": {
                  "description": "A Drydock ATTESTATION_AUTHORITY Note, created by the user.  This field is a member of `oneof`_ ``attestor_type``.",
                  "type": "object",
                  "reference": "google.cloud.binaryauthorization_v1beta1.types.UserOwnedDrydockNote",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "note_reference": {
                        "description": "Required. The Drydock resource name of a ATTESTATION_AUTHORITY Note, created by the user, in the format: ``projects/*/notes/*`` (or the legacy ``providers/*/notes/*``). This field may not be updated.  An attestation by this attestor is stored as a Drydock ATTESTATION_AUTHORITY Occurrence that names a container image and that links to this Note. Drydock is an external dependency.",
                        "type": "string"
                      },
                      "public_keys": {
                        "description": "Optional. Public keys that verify attestations signed by this attestor.  This field may be updated.  If this field is non-empty, one of the specified public keys must verify that an attestation was signed by this attestor for the image specified in the admission request.  If this field is empty, this attestor always returns that no valid attestations exist.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.binaryauthorization_v1beta1.types.AttestorPublicKey",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "comment": {
                                "description": "Optional. A descriptive comment. This field may be updated.",
                                "type": "string"
                              },
                              "id": {
                                "description": "The ID of this public key. Signatures verified by BinAuthz must include the ID of the public key that can be used to verify them, and that ID must match the contents of this field exactly. Additional restrictions on this field can be imposed based on which public key type is encapsulated. See the documentation on ``public_key`` cases below for details.",
                                "type": "string"
                              },
                              "ascii_armored_pgp_public_key": {
                                "description": "ASCII-armored representation of a PGP public key, as the entire output by the command ``gpg --export --armor foo@example.com`` (either LF or CRLF line endings). When using this field, ``id`` should be left blank. The BinAuthz API handlers will calculate the ID and fill it in automatically. BinAuthz computes this ID as the OpenPGP RFC4880 V4 fingerprint, represented as upper-case hex. If ``id`` is provided by the caller, it will be overwritten by the API-calculated ID.  This field is a member of `oneof`_ ``public_key``.",
                                "type": "string"
                              },
                              "pkix_public_key": {
                                "description": "A raw PKIX SubjectPublicKeyInfo format public key.  NOTE: ``id`` may be explicitly provided by the caller when using this type of public key, but it MUST be a valid RFC3986 URI. If ``id`` is left blank, a default one will be computed based on the digest of the DER encoding of the public key.  This field is a member of `oneof`_ ``public_key``.",
                                "type": "object",
                                "reference": "google.cloud.binaryauthorization_v1beta1.types.PkixPublicKey",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "public_key_pem": {
                                      "description": "A PEM-encoded public key, as described in https://tools.ietf.org/html/rfc7468#section-13",
                                      "type": "string"
                                    },
                                    "signature_algorithm": {
                                      "description": "The signature algorithm used to verify a message against a signature using this key. These signature algorithm must match the structure and any object identifiers encoded in ``public_key_pem`` (i.e. this algorithm must match that of the public key).",
                                      "type": "object",
                                      "reference": "google.cloud.binaryauthorization_v1beta1.types.PkixPublicKey.SignatureAlgorithm"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "delegation_service_account_email": {
                        "description": "Output only. This field will contain the service account email address that this Attestor will use as the principal when querying Container Analysis. Attestor administrators must grant this service account the IAM role needed to read attestations from the [note_reference][Note] in Container Analysis (``containeranalysis.notes.occurrences.viewer``).  This email address is fixed for the lifetime of the Attestor, but callers should not make any other assumptions about the service account email; future versions may use an email based on a different naming pattern.",
                        "type": "string",
                        "output_only": true
                      }
                    },
                    "required": [
                      "note_reference"
                    ]
                  }
                },
                "update_time": {
                  "description": "Output only. Time when the attestor was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "required": [
          "parent",
          "attestor_id",
          "attestor"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetAttestorRequest",
      "description": "Request message for [BinauthzManagementService.GetAttestor][].\n\nAttributes:\n    name (str):\n        Required. The name of the\n        [attestor][google.cloud.binaryauthorization.v1beta1.Attestor]\n        to retrieve, in the format ``projects/*/attestors/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the [attestor][google.cloud.binaryauthorization.v1beta1.Attestor] to retrieve, in the format ``projects/*/attestors/*``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateAttestorRequest",
      "description": "Request message for [BinauthzManagementService.UpdateAttestor][].\n\nAttributes:\n    attestor (google.cloud.binaryauthorization_v1beta1.types.Attestor):\n        Required. The updated\n        [attestor][google.cloud.binaryauthorization.v1beta1.Attestor]\n        value. The service will overwrite the [attestor\n        name][google.cloud.binaryauthorization.v1beta1.Attestor.name]\n        field with the resource name in the request URL, in the\n        format ``projects/*/attestors/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "attestor": {
            "description": "Required. The updated [attestor][google.cloud.binaryauthorization.v1beta1.Attestor] value. The service will overwrite the [attestor name][google.cloud.binaryauthorization.v1beta1.Attestor.name] field with the resource name in the request URL, in the format ``projects/*/attestors/*``.",
            "reference": "google.cloud.binaryauthorization_v1beta1.types.Attestor",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. The resource name, in the format: ``projects/*/attestors/*``. This field may not be updated.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. A descriptive comment.  This field may be updated. The field may be displayed in chooser dialogs.",
                  "type": "string"
                },
                "user_owned_drydock_note": {
                  "description": "A Drydock ATTESTATION_AUTHORITY Note, created by the user.  This field is a member of `oneof`_ ``attestor_type``.",
                  "type": "object",
                  "reference": "google.cloud.binaryauthorization_v1beta1.types.UserOwnedDrydockNote",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "note_reference": {
                        "description": "Required. The Drydock resource name of a ATTESTATION_AUTHORITY Note, created by the user, in the format: ``projects/*/notes/*`` (or the legacy ``providers/*/notes/*``). This field may not be updated.  An attestation by this attestor is stored as a Drydock ATTESTATION_AUTHORITY Occurrence that names a container image and that links to this Note. Drydock is an external dependency.",
                        "type": "string"
                      },
                      "public_keys": {
                        "description": "Optional. Public keys that verify attestations signed by this attestor.  This field may be updated.  If this field is non-empty, one of the specified public keys must verify that an attestation was signed by this attestor for the image specified in the admission request.  If this field is empty, this attestor always returns that no valid attestations exist.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.binaryauthorization_v1beta1.types.AttestorPublicKey",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "comment": {
                                "description": "Optional. A descriptive comment. This field may be updated.",
                                "type": "string"
                              },
                              "id": {
                                "description": "The ID of this public key. Signatures verified by BinAuthz must include the ID of the public key that can be used to verify them, and that ID must match the contents of this field exactly. Additional restrictions on this field can be imposed based on which public key type is encapsulated. See the documentation on ``public_key`` cases below for details.",
                                "type": "string"
                              },
                              "ascii_armored_pgp_public_key": {
                                "description": "ASCII-armored representation of a PGP public key, as the entire output by the command ``gpg --export --armor foo@example.com`` (either LF or CRLF line endings). When using this field, ``id`` should be left blank. The BinAuthz API handlers will calculate the ID and fill it in automatically. BinAuthz computes this ID as the OpenPGP RFC4880 V4 fingerprint, represented as upper-case hex. If ``id`` is provided by the caller, it will be overwritten by the API-calculated ID.  This field is a member of `oneof`_ ``public_key``.",
                                "type": "string"
                              },
                              "pkix_public_key": {
                                "description": "A raw PKIX SubjectPublicKeyInfo format public key.  NOTE: ``id`` may be explicitly provided by the caller when using this type of public key, but it MUST be a valid RFC3986 URI. If ``id`` is left blank, a default one will be computed based on the digest of the DER encoding of the public key.  This field is a member of `oneof`_ ``public_key``.",
                                "type": "object",
                                "reference": "google.cloud.binaryauthorization_v1beta1.types.PkixPublicKey",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "public_key_pem": {
                                      "description": "A PEM-encoded public key, as described in https://tools.ietf.org/html/rfc7468#section-13",
                                      "type": "string"
                                    },
                                    "signature_algorithm": {
                                      "description": "The signature algorithm used to verify a message against a signature using this key. These signature algorithm must match the structure and any object identifiers encoded in ``public_key_pem`` (i.e. this algorithm must match that of the public key).",
                                      "type": "object",
                                      "reference": "google.cloud.binaryauthorization_v1beta1.types.PkixPublicKey.SignatureAlgorithm"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "delegation_service_account_email": {
                        "description": "Output only. This field will contain the service account email address that this Attestor will use as the principal when querying Container Analysis. Attestor administrators must grant this service account the IAM role needed to read attestations from the [note_reference][Note] in Container Analysis (``containeranalysis.notes.occurrences.viewer``).  This email address is fixed for the lifetime of the Attestor, but callers should not make any other assumptions about the service account email; future versions may use an email based on a different naming pattern.",
                        "type": "string",
                        "output_only": true
                      }
                    },
                    "required": [
                      "note_reference"
                    ]
                  }
                },
                "update_time": {
                  "description": "Output only. Time when the attestor was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "required": [
          "attestor"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListAttestorsRequest",
      "description": "Request message for [BinauthzManagementService.ListAttestors][].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the project associated with\n        the\n        [attestors][google.cloud.binaryauthorization.v1beta1.Attestor],\n        in the format ``projects/*``.\n    page_size (int):\n        Requested page size. The server may return\n        fewer results than requested. If unspecified,\n        the server will pick an appropriate default.\n    page_token (str):\n        A token identifying a page of results the server should\n        return. Typically, this is the value of\n        [ListAttestorsResponse.next_page_token][google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse.next_page_token]\n        returned from the previous call to the ``ListAttestors``\n        method.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the project associated with the [attestors][google.cloud.binaryauthorization.v1beta1.Attestor], in the format ``projects/*``.",
            "type": "string"
          },
          "page_size": {
            "description": "Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token identifying a page of results the server should return. Typically, this is the value of [ListAttestorsResponse.next_page_token][google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse.next_page_token] returned from the previous call to the ``ListAttestors`` method.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteAttestorRequest",
      "description": "Request message for [BinauthzManagementService.DeleteAttestor][].\n\nAttributes:\n    name (str):\n        Required. The name of the\n        [attestors][google.cloud.binaryauthorization.v1beta1.Attestor]\n        to delete, in the format ``projects/*/attestors/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the [attestors][google.cloud.binaryauthorization.v1beta1.Attestor] to delete, in the format ``projects/*/attestors/*``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetSystemPolicyRequest",
      "description": "Request to read the current system policy.\n\nAttributes:\n    name (str):\n        Required. The resource name, in the format\n        ``locations/*/policy``. Note that the system policy is not\n        associated with a project.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name, in the format ``locations/*/policy``. Note that the system policy is not associated with a project.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}