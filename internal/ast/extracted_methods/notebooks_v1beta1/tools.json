{
  "NotebookService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_instances",
          "description": "Lists instances in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_list_instances():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.ListInstancesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_instances(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Opt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.notebooks_v1beta1.services.notebook_service.pagers.ListInstancesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_instance",
          "description": "Gets details of a single Instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_get_instance():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.GetInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_instance(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.notebooks_v1beta1.types.GetInstanceRequest,",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.notebooks_v1beta1.types.Instance"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_instance",
          "description": "Creates a new Instance in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_create_instance():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        instance = notebooks_v1beta1.Instance()\n        instance.vm_image.image_name = \"image_name_value\"\n        instance.vm_image.project = \"project_value\"\n        instance.machine_type = \"machine_type_value\"\n\n        request = notebooks_v1beta1.CreateInstanceRequest(\n            parent=\"parent_value\",\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "register_instance",
          "description": "Registers an existing legacy notebook instance to the\nNotebooks API server. Legacy instances are instances\ncreated with the legacy Compute Engine calls. They are\nnot manageable by the Notebooks API out of the box. This\ncall makes these instances manageable by the Notebooks\nAPI.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_register_instance():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.RegisterInstanceRequest(\n            parent=\"par",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_instance_accelerator",
          "description": "Updates the guest accelerators of a single Instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_set_instance_accelerator():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.SetInstanceAcceleratorRequest(\n            name=\"name_value\",\n            type_=\"TPU_V3\",\n            core_count=1073,\n        )\n\n        # Make the request\n        operation = client.set_instance_accelerator(request=request)\n\n        print(\"Waiting for operation to ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_instance_machine_type",
          "description": "Updates the machine type of a single Instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_set_instance_machine_type():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.SetInstanceMachineTypeRequest(\n            name=\"name_value\",\n            machine_type=\"machine_type_value\",\n        )\n\n        # Make the request\n        operation = client.set_instance_machine_type(request=request)\n\n        print(\"Waiting for operation to complete...\")\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_instance_labels",
          "description": "Updates the labels of an Instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_set_instance_labels():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.SetInstanceLabelsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.set_instance_labels(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_instance",
          "description": "Deletes a single Instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_delete_instance():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.DeleteInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_instance",
          "description": "Starts a notebook instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_start_instance():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.StartInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.start_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "stop_instance",
          "description": "Stops a notebook instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_stop_instance():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.StopInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.stop_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reset_instance",
          "description": "Resets a notebook instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_reset_instance():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.ResetInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.reset_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "report_instance_info",
          "description": "Allows notebook instances to\nreport their latest instance information to the\nNotebooks API server. The server will merge the reported\ninformation to the instance metadata store. Do not use\nthis method directly.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_report_instance_info():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.ReportInstanceInfoRequest(\n            name=\"name_value\",\n            vm_id=\"vm_id_value\",\n        )\n\n        # M",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "is_instance_upgradeable",
          "description": "Check if a notebook instance is upgradable.\nDeprecated. Please consider using v1.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_is_instance_upgradeable():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.IsInstanceUpgradeableRequest(\n            notebook_instance=\"notebook_instance_value\",\n        )\n\n        # Make the request\n        response = await client.is_instance_upgradeable(request=request)\n\n        # Handle the response\n        pr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.notebooks_v1beta1.types.IsInstanceUpgradeableResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "upgrade_instance",
          "description": "Upgrades a notebook instance to the latest version.\nDeprecated. Please consider using v1.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_upgrade_instance():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.UpgradeInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.upgrade_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "upgrade_instance_internal",
          "description": "Allows notebook instances to\ncall this endpoint to upgrade themselves. Do not use\nthis method directly. Deprecated. Please consider using\nv1.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_upgrade_instance_internal():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.UpgradeInstanceInternalRequest(\n            name=\"name_value\",\n            vm_id=\"vm_id_value\",\n        )\n\n        # Make the request\n        operation = client.upgrade_instance",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_environments",
          "description": "Lists environments in a project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_list_environments():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.ListEnvironmentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_environments(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[U",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.notebooks_v1beta1.services.notebook_service.pagers.ListEnvironmentsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_environment",
          "description": "Gets details of a single Environment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_get_environment():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.GetEnvironmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_environment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.notebooks_v1beta1.types.GetEnvi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.notebooks_v1beta1.types.Environment"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_environment",
          "description": "Creates a new Environment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_create_environment():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        environment = notebooks_v1beta1.Environment()\n        environment.vm_image.image_name = \"image_name_value\"\n        environment.vm_image.project = \"project_value\"\n\n        request = notebooks_v1beta1.CreateEnvironmentRequest(\n            parent=\"parent_value\",\n            environment_id=\"environment_id_value\",\n            envi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_environment",
          "description": "Deletes a single Environment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import notebooks_v1beta1\n\n    async def sample_delete_environment():\n        # Create a client\n        client = notebooks_v1beta1.NotebookServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = notebooks_v1beta1.DeleteEnvironmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_environment(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      }
    ]
  }
}