{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1beta1\\types\\service.py": [
    {
      "type": "function",
      "name": "ListInstancesRequest",
      "description": "Request for listing notebook instances.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum return size of the list call.",
            "type": "integer"
          },
          "page_token": {
            "description": "A previous returned page token that can be used to continue listing from the last result.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetInstanceRequest",
      "description": "Request for getting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateInstanceRequest",
      "description": "Request for creating a notebook instance.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    instance_id (str):\n        Required. User-defined unique ID of this\n        instance.\n    instance (google.cloud.notebooks_v1beta1.types.Instance):\n        Required. The instance to be created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "instance_id": {
            "description": "Required. User-defined unique ID of this instance.",
            "type": "string"
          },
          "instance": {
            "description": "Required. The instance to be created.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Output only. name of resource",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. [Output only] Create timestamp",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. [Output only] Update timestamp",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "labels": {
                "description": "Labels as key value pairs",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "display_name": {
                "description": "Required. A user friendly display name for the solution.",
                "type": "string"
              },
              "description": {
                "description": "A description for this application.",
                "type": "string"
              },
              "input_resources": {
                "description": "The input resources for the current application instance. For example: input_resources: visionai.googleapis.com/v1/projects/123/locations/us-central1/clusters/456/streams/stream-a",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "input_resource": {
                      "description": "The direct input resource name.  This field is a member of `oneof`_ ``input_resource_information``.",
                      "type": "string"
                    },
                    "annotated_stream": {
                      "type": "object",
                      "properties": {
                        "stream": {
                          "description": "Vision AI Stream resource name.",
                          "type": "string"
                        },
                        "application_annotations": {
                          "description": "Annotations that will be applied to the whole application.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "active_zone": {
                                "type": "object",
                                "properties": {
                                  "normalized_vertices": {
                                    "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "description": "X coordinate.",
                                          "type": "number"
                                        },
                                        "y": {
                                          "description": "Y coordinate.",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "crossing_line": {
                                "type": "object",
                                "properties": {
                                  "normalized_vertices": {
                                    "description": "A sequence of vertices connected by straight lines.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "description": "X coordinate.",
                                          "type": "number"
                                        },
                                        "y": {
                                          "description": "Y coordinate.",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "id": {
                                "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "User-friendly name for the annotation.",
                                "type": "string"
                              },
                              "source_stream": {
                                "description": "The Vision AI stream resource name.",
                                "type": "string"
                              },
                              "type_": {
                                "type": "enum",
                                "name": "StreamAnnotationType",
                                "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                                "values": {
                                  "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                    "value": 0
                                  },
                                  "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                    "value": 1
                                  },
                                  "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                    "value": 2
                                  }
                                }
                              }
                            }
                          }
                        },
                        "node_annotations": {
                          "description": "Annotations that will be applied to the specific node of the application. If the same type of the annotations is applied to both application and node, the node annotation will be added in addition to the global application one. For example, if there is one active zone annotation for the whole application and one active zone annotation for the Occupancy Analytic processor, then the Occupancy Analytic processor will have two active zones defined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "node": {
                                "description": "The node name of the application graph.",
                                "type": "string"
                              },
                              "annotations": {
                                "description": "The node specific stream annotations.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "active_zone": {
                                      "type": "object",
                                      "properties": {
                                        "normalized_vertices": {
                                          "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "x": {
                                                "description": "X coordinate.",
                                                "type": "number"
                                              },
                                              "y": {
                                                "description": "Y coordinate.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "crossing_line": {
                                      "type": "object",
                                      "properties": {
                                        "normalized_vertices": {
                                          "description": "A sequence of vertices connected by straight lines.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "x": {
                                                "description": "X coordinate.",
                                                "type": "number"
                                              },
                                              "y": {
                                                "description": "Y coordinate.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "id": {
                                      "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                                      "type": "string"
                                    },
                                    "display_name": {
                                      "description": "User-friendly name for the annotation.",
                                      "type": "string"
                                    },
                                    "source_stream": {
                                      "description": "The Vision AI stream resource name.",
                                      "type": "string"
                                    },
                                    "type_": {
                                      "type": "enum",
                                      "name": "StreamAnnotationType",
                                      "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                                      "values": {
                                        "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                          "value": 0
                                        },
                                        "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                          "value": 1
                                        },
                                        "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                          "value": 2
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "consumer_node": {
                      "description": "The name of graph node who receives the input resource. For example: input_resource: visionai.googleapis.com/v1/projects/123/locations/us-central1/clusters/456/streams/input-stream-a consumer_node: stream-input",
                      "type": "string"
                    },
                    "input_resource_binding": {
                      "description": "The specific input resource binding which will consume the current Input Resource, can be ignored is there is only 1 input binding.",
                      "type": "string"
                    },
                    "annotations": {
                      "type": "object",
                      "properties": {
                        "application_annotations": {
                          "description": "Annotations that will be applied to the whole application.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "active_zone": {
                                "type": "object",
                                "properties": {
                                  "normalized_vertices": {
                                    "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "description": "X coordinate.",
                                          "type": "number"
                                        },
                                        "y": {
                                          "description": "Y coordinate.",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "crossing_line": {
                                "type": "object",
                                "properties": {
                                  "normalized_vertices": {
                                    "description": "A sequence of vertices connected by straight lines.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "description": "X coordinate.",
                                          "type": "number"
                                        },
                                        "y": {
                                          "description": "Y coordinate.",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "id": {
                                "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "User-friendly name for the annotation.",
                                "type": "string"
                              },
                              "source_stream": {
                                "description": "The Vision AI stream resource name.",
                                "type": "string"
                              },
                              "type_": {
                                "type": "enum",
                                "name": "StreamAnnotationType",
                                "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                                "values": {
                                  "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                    "value": 0
                                  },
                                  "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                    "value": 1
                                  },
                                  "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                    "value": 2
                                  }
                                }
                              }
                            }
                          }
                        },
                        "node_annotations": {
                          "description": "Annotations that will be applied to the specific node of the application. If the same type of the annotations is applied to both application and node, the node annotation will be added in addition to the global application one. For example, if there is one active zone annotation for the whole application and one active zone annotation for the Occupancy Analytic processor, then the Occupancy Analytic processor will have two active zones defined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "node": {
                                "description": "The node name of the application graph.",
                                "type": "string"
                              },
                              "annotations": {
                                "description": "The node specific stream annotations.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "active_zone": {
                                      "type": "object",
                                      "properties": {
                                        "normalized_vertices": {
                                          "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "x": {
                                                "description": "X coordinate.",
                                                "type": "number"
                                              },
                                              "y": {
                                                "description": "Y coordinate.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "crossing_line": {
                                      "type": "object",
                                      "properties": {
                                        "normalized_vertices": {
                                          "description": "A sequence of vertices connected by straight lines.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "x": {
                                                "description": "X coordinate.",
                                                "type": "number"
                                              },
                                              "y": {
                                                "description": "Y coordinate.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "id": {
                                      "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                                      "type": "string"
                                    },
                                    "display_name": {
                                      "description": "User-friendly name for the annotation.",
                                      "type": "string"
                                    },
                                    "source_stream": {
                                      "description": "The Vision AI stream resource name.",
                                      "type": "string"
                                    },
                                    "type_": {
                                      "type": "enum",
                                      "name": "StreamAnnotationType",
                                      "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                                      "values": {
                                        "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                          "value": 0
                                        },
                                        "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                          "value": 1
                                        },
                                        "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                          "value": 2
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "output_resources": {
                "description": "All the output resources associated to one application instance.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "output_resource": {
                      "description": "The output resource name for the current application instance.",
                      "type": "string"
                    },
                    "producer_node": {
                      "description": "The name of graph node who produces the output resource name. For example: output_resource: /projects/123/locations/us-central1/clusters/456/streams/output-application-789-stream-a-occupancy-counting producer_node: occupancy-counting",
                      "type": "string"
                    },
                    "output_resource_binding": {
                      "description": "The specific output resource binding which produces the current OutputResource.",
                      "type": "string"
                    },
                    "is_temporary": {
                      "description": "Output only. Whether the output resource is temporary which means the resource is generated during the deployment of the application. Temporary resource will be deleted during the undeployment of the application.",
                      "type": "boolean"
                    },
                    "autogen": {
                      "description": "Output only. Whether the output resource is created automatically by the Vision AI App Platform.",
                      "type": "boolean"
                    }
                  }
                }
              },
              "state": {
                "type": "enum",
                "name": "State",
                "description": "Provides the state of this Vulnerability assessment.\n\nValues:\n    STATE_UNSPECIFIED (0):\n        No state is specified.\n    AFFECTED (1):\n        This product is known to be affected by this\n        vulnerability.\n    NOT_AFFECTED (2):\n        This product is known to be not affected by\n        this vulnerability.\n    FIXED (3):\n        This product contains a fix for this\n        vulnerability.\n    UNDER_INVESTIGATION (4):\n        It is not known yet whether these versions\n        are or are not affected by the vulnerability.\n        However, it is still under investigation.",
                "values": {
                  "STATE_UNSPECIFIED": {
                    "value": 0
                  },
                  "AFFECTED": {
                    "value": 1
                  },
                  "NOT_AFFECTED": {
                    "value": 2
                  },
                  "FIXED": {
                    "value": 3
                  },
                  "UNDER_INVESTIGATION": {
                    "value": 4
                  }
                }
              }
            },
            "required": [
              "display_name"
            ]
          }
        },
        "required": [
          "parent",
          "instance_id",
          "instance"
        ]
      }
    },
    {
      "type": "function",
      "name": "RegisterInstanceRequest",
      "description": "Request for registering a notebook instance.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    instance_id (str):\n        Required. User defined unique ID of this instance. The\n        ``instance_id`` must be 1 to 63 characters long and contain\n        only lowercase letters, numeric characters, and dashes. The\n        first character must be a lowercase letter and the last\n        character cannot be a dash.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "instance_id": {
            "description": "Required. User defined unique ID of this instance. The ``instance_id`` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "instance_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetInstanceAcceleratorRequest",
      "description": "Request for setting instance accelerator.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    type_ (google.cloud.notebooks_v1beta1.types.Instance.AcceleratorType):\n        Required. Type of this accelerator.\n    core_count (int):\n        Required. Count of cores of this accelerator. Note that not\n        all combinations of ``type`` and ``core_count`` are valid.\n        Check `GPUs on Compute\n        Engine <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__\n        to find a valid combination. TPUs are not supported.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "type_": {
            "description": "Represents a hardware accelerator type.\n\nValues:\n    ACCELERATOR_TYPE_UNSPECIFIED (0):\n        Unspecified accelerator type, which means no\n        accelerator.\n    NVIDIA_TESLA_K80 (1):\n        Nvidia Tesla K80 GPU.\n    NVIDIA_TESLA_P100 (2):\n        Nvidia Tesla P100 GPU.\n    NVIDIA_TESLA_V100 (3):\n        Nvidia Tesla V100 GPU.\n    NVIDIA_TESLA_P4 (4):\n        Nvidia Tesla P4 GPU.\n    NVIDIA_TESLA_T4 (5):\n        Nvidia Tesla T4 GPU.\n    NVIDIA_TESLA_A100 (8):\n        Nvidia Tesla A100 GPU.\n    TPU_V2 (6):\n        TPU v2.\n    TPU_V3 (7):\n        TPU v3.",
            "type": "enum",
            "name": "AcceleratorType",
            "values": {
              "ACCELERATOR_TYPE_UNSPECIFIED": {
                "value": 0
              },
              "NVIDIA_TESLA_K80": {
                "value": 1
              },
              "NVIDIA_TESLA_P100": {
                "value": 2
              },
              "NVIDIA_TESLA_V100": {
                "value": 3
              },
              "NVIDIA_TESLA_P4": {
                "value": 4
              },
              "NVIDIA_TESLA_T4": {
                "value": 5
              },
              "NVIDIA_TESLA_A100": {
                "value": 8
              },
              "TPU_V2": {
                "value": 6
              },
              "TPU_V3": {
                "value": 7
              }
            }
          },
          "core_count": {
            "description": "Required. Count of cores of this accelerator. Note that not all combinations of ``type`` and ``core_count`` are valid. Check `GPUs on Compute Engine <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__ to find a valid combination. TPUs are not supported.",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "type_",
          "core_count"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetInstanceMachineTypeRequest",
      "description": "Request for setting instance machine type.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    machine_type (str):\n        Required. The `Compute Engine machine\n        type <https://cloud.google.com/compute/docs/machine-types>`__.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "machine_type": {
            "description": "Required. The `Compute Engine machine type <https://cloud.google.com/compute/docs/machine-types>`__.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "machine_type"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetInstanceLabelsRequest",
      "description": "Request for setting instance labels.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    labels (MutableMapping[str, str]):\n        Labels to apply to this instance.\n        These can be later modified by the setLabels\n        method",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "labels": {
            "description": "Labels to apply to this instance. These can be later modified by the setLabels method",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteInstanceRequest",
      "description": "Request for deleting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StartInstanceRequest",
      "description": "Request for starting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StopInstanceRequest",
      "description": "Request for stopping a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ResetInstanceRequest",
      "description": "Request for reseting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ReportInstanceInfoRequest",
      "description": "Request for notebook instances to report information to\nNotebooks API.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity\n    metadata (MutableMapping[str, str]):\n        The metadata reported to Notebooks API. This\n        will be merged to the instance metadata store",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "vm_id": {
            "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
            "type": "string"
          },
          "metadata": {
            "description": "The metadata reported to Notebooks API. This will be merged to the instance metadata store",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "vm_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "IsInstanceUpgradeableRequest",
      "description": "Request for checking if a notebook instance is upgradeable.\n\nAttributes:\n    notebook_instance (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "notebook_instance": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "notebook_instance"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpgradeInstanceRequest",
      "description": "Request for upgrading a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpgradeInstanceInternalRequest",
      "description": "Request for upgrading a notebook instance from within the VM\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "vm_id": {
            "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
            "type": "string"
          }
        },
        "required": [
          "name",
          "vm_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListEnvironmentsRequest",
      "description": "Request for listing environments.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum return size of the list call.",
            "type": "integer"
          },
          "page_token": {
            "description": "A previous returned page token that can be used to continue listing from the last result.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetEnvironmentRequest",
      "description": "Request for getting a notebook environment.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateEnvironmentRequest",
      "description": "Request for creating a notebook environment.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}``\n    environment_id (str):\n        Required. User-defined unique ID of this environment. The\n        ``environment_id`` must be 1 to 63 characters long and\n        contain only lowercase letters, numeric characters, and\n        dashes. The first character must be a lowercase letter and\n        the last character cannot be a dash.\n    environment (google.cloud.notebooks_v1beta1.types.Environment):\n        Required. The environment to be created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "environment_id": {
            "description": "Required. User-defined unique ID of this environment. The ``environment_id`` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash.",
            "type": "string"
          },
          "environment": {
            "description": "Required. The environment to be created.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Immutable. Full name of this resource, in the format ``users/{owner_email}/environments/{environment_id}``. ``{owner_email}`` is the email address of the user to whom this environment belongs, and ``{environment_id}`` is the identifier of this environment. For example, ``users/someone@example.com/environments/default``.",
                "type": "string"
              },
              "id": {
                "description": "Output only. The environment's identifier, unique among the user's environments.",
                "type": "string"
              },
              "docker_image": {
                "description": "Required. Immutable. Full path to the Docker image used to run this environment, e.g. \"gcr.io/dev-con/cloud-devshell:latest\".",
                "type": "string"
              },
              "state": {
                "type": "enum",
                "name": "State",
                "description": "Provides the state of this Vulnerability assessment.\n\nValues:\n    STATE_UNSPECIFIED (0):\n        No state is specified.\n    AFFECTED (1):\n        This product is known to be affected by this\n        vulnerability.\n    NOT_AFFECTED (2):\n        This product is known to be not affected by\n        this vulnerability.\n    FIXED (3):\n        This product contains a fix for this\n        vulnerability.\n    UNDER_INVESTIGATION (4):\n        It is not known yet whether these versions\n        are or are not affected by the vulnerability.\n        However, it is still under investigation.",
                "values": {
                  "STATE_UNSPECIFIED": {
                    "value": 0
                  },
                  "AFFECTED": {
                    "value": 1
                  },
                  "NOT_AFFECTED": {
                    "value": 2
                  },
                  "FIXED": {
                    "value": 3
                  },
                  "UNDER_INVESTIGATION": {
                    "value": 4
                  }
                }
              },
              "web_host": {
                "description": "Output only. Host to which clients can connect to initiate HTTPS or WSS connections with the environment.",
                "type": "string"
              },
              "ssh_username": {
                "description": "Output only. Username that clients should use when initiating SSH sessions with the environment.",
                "type": "string"
              },
              "ssh_host": {
                "description": "Output only. Host to which clients can connect to initiate SSH sessions with the environment.",
                "type": "string"
              },
              "ssh_port": {
                "description": "Output only. Port to which clients can connect to initiate SSH sessions with the environment.",
                "type": "integer"
              },
              "public_keys": {
                "description": "Output only. Public keys associated with the environment. Clients can connect to this environment via SSH only if they possess a private key corresponding to at least one of these public keys. Keys can be added to or removed from the environment using the AddPublicKey and RemovePublicKey methods.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "docker_image"
            ]
          }
        },
        "required": [
          "parent",
          "environment_id",
          "environment"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteEnvironmentRequest",
      "description": "Request for deleting a notebook environment.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}