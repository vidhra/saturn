{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-notebooks/google/cloud/notebooks_v1beta1/types/service.py": [
    {
      "type": "function",
      "name": "ListInstancesRequest",
      "description": "Request for listing notebook instances.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum return size of the list call.",
            "type": "integer"
          },
          "page_token": {
            "description": "A previous returned page token that can be used to continue listing from the last result.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetInstanceRequest",
      "description": "Request for getting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateInstanceRequest",
      "description": "Request for creating a notebook instance.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    instance_id (str):\n        Required. User-defined unique ID of this\n        instance.\n    instance (google.cloud.notebooks_v1beta1.types.Instance):\n        Required. The instance to be created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "instance_id": {
            "description": "Required. User-defined unique ID of this instance.",
            "type": "string"
          },
          "instance": {
            "description": "Required. The instance to be created.",
            "reference": "google.cloud.notebooks_v1beta1.types.Instance",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. A unique identifier for an instance. The name should be of the format: ``projects/{project_number}/locations/{location_id}/instances/{instance_id}``  ``project_number``: Maps to a unique int64 id assigned to each project.  ``location_id``: Refers to the region where the instance will be deployed. Since Secure Source Manager is a regional service, it must be one of the valid GCP regions.  ``instance_id``: User provided name for the instance, must be unique for a project_number and location_id combination.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. Create timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. Update timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Labels as key value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "private_config": {
                  "description": "Optional. Private settings for private instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.PrivateConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "is_private": {
                        "description": "Required. Immutable. Indicate if it's private instance.",
                        "type": "boolean"
                      },
                      "ca_pool": {
                        "description": "Required. Immutable. CA pool resource, resource must in the format of ``projects/{project}/locations/{location}/caPools/{ca_pool}``.",
                        "type": "string"
                      },
                      "http_service_attachment": {
                        "description": "Output only. Service Attachment for HTTP, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string",
                        "output_only": true
                      },
                      "ssh_service_attachment": {
                        "description": "Output only. Service Attachment for SSH, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string",
                        "output_only": true
                      },
                      "psc_allowed_projects": {
                        "description": "Optional. Additional allowed projects for setting up PSC connections. Instance host project is automatically allowed and does not need to be included in this list.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "is_private",
                      "ca_pool"
                    ]
                  }
                },
                "state": {
                  "description": "Output only. Current state of the instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.State",
                  "output_only": true
                },
                "state_note": {
                  "description": "Output only. An optional field providing information about the current instance state.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.StateNote",
                  "output_only": true
                },
                "kms_key": {
                  "description": "Optional. Immutable. Customer-managed encryption key name, in the format projects/\\ */locations/*/keyRings/*/cryptoKeys/*.",
                  "type": "string"
                },
                "host_config": {
                  "description": "Output only. A list of hostnames for this instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.HostConfig",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "html": {
                        "description": "Output only. HTML hostname.",
                        "type": "string",
                        "output_only": true
                      },
                      "api": {
                        "description": "Output only. API hostname. This is the hostname to use for **Host: Data Plane** endpoints.",
                        "type": "string",
                        "output_only": true
                      },
                      "git_http": {
                        "description": "Output only. Git HTTP hostname.",
                        "type": "string",
                        "output_only": true
                      },
                      "git_ssh": {
                        "description": "Output only. Git SSH hostname.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "instance_id",
          "instance"
        ]
      }
    },
    {
      "type": "function",
      "name": "RegisterInstanceRequest",
      "description": "Request for registering a notebook instance.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    instance_id (str):\n        Required. User defined unique ID of this instance. The\n        ``instance_id`` must be 1 to 63 characters long and contain\n        only lowercase letters, numeric characters, and dashes. The\n        first character must be a lowercase letter and the last\n        character cannot be a dash.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "instance_id": {
            "description": "Required. User defined unique ID of this instance. The ``instance_id`` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "instance_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetInstanceAcceleratorRequest",
      "description": "Request for setting instance accelerator.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    type_ (google.cloud.notebooks_v1beta1.types.Instance.AcceleratorType):\n        Required. Type of this accelerator.\n    core_count (int):\n        Required. Count of cores of this accelerator. Note that not\n        all combinations of ``type`` and ``core_count`` are valid.\n        Check `GPUs on Compute\n        Engine <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__\n        to find a valid combination. TPUs are not supported.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "type_": {
            "description": "Required. Type of this accelerator.",
            "reference": "google.cloud.notebooks_v1beta1.types.Instance.AcceleratorType",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "creation_timestamp": {
                  "description": "[Output Only] Creation timestamp in RFC3339 text format.  This field is a member of `oneof`_ ``_creation_timestamp``.",
                  "type": "string",
                  "output_only": true
                },
                "deprecated": {
                  "description": "[Output Only] The deprecation status associated with this accelerator type.  This field is a member of `oneof`_ ``_deprecated``.",
                  "type": "object",
                  "reference": "google.cloud.compute_v1.types.DeprecationStatus",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "deleted": {
                        "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deleted``.",
                        "type": "string"
                      },
                      "deprecated": {
                        "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deprecated``.",
                        "type": "string"
                      },
                      "obsolete": {
                        "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_obsolete``.",
                        "type": "string"
                      },
                      "replacement": {
                        "description": "The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.  This field is a member of `oneof`_ ``_replacement``.",
                        "type": "string"
                      },
                      "state": {
                        "description": "The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error. Check the State enum for the list of possible values.  This field is a member of `oneof`_ ``_state``.",
                        "type": "string"
                      }
                    }
                  }
                },
                "description": {
                  "description": "[Output Only] An optional textual description of the resource.  This field is a member of `oneof`_ ``_description``.",
                  "type": "string",
                  "output_only": true
                },
                "id": {
                  "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.  This field is a member of `oneof`_ ``_id``.",
                  "type": "integer",
                  "output_only": true
                },
                "kind": {
                  "description": "[Output Only] The type of the resource. Always compute#acceleratorType for accelerator types.  This field is a member of `oneof`_ ``_kind``.",
                  "type": "string",
                  "output_only": true
                },
                "maximum_cards_per_instance": {
                  "description": "[Output Only] Maximum number of accelerator cards allowed per instance.  This field is a member of `oneof`_ ``_maximum_cards_per_instance``.",
                  "type": "integer",
                  "output_only": true
                },
                "name": {
                  "description": "[Output Only] Name of the resource.  This field is a member of `oneof`_ ``_name``.",
                  "type": "string",
                  "output_only": true
                },
                "self_link": {
                  "description": "[Output Only] Server-defined, fully qualified URL for this resource.  This field is a member of `oneof`_ ``_self_link``.",
                  "type": "string",
                  "output_only": true
                },
                "zone": {
                  "description": "[Output Only] The name of the zone where the accelerator type resides, such as us-central1-a. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.  This field is a member of `oneof`_ ``_zone``.",
                  "type": "string",
                  "output_only": true
                }
              }
            }
          },
          "core_count": {
            "description": "Required. Count of cores of this accelerator. Note that not all combinations of ``type`` and ``core_count`` are valid. Check `GPUs on Compute Engine <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__ to find a valid combination. TPUs are not supported.",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "type_",
          "core_count"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetInstanceMachineTypeRequest",
      "description": "Request for setting instance machine type.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    machine_type (str):\n        Required. The `Compute Engine machine\n        type <https://cloud.google.com/compute/docs/machine-types>`__.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "machine_type": {
            "description": "Required. The `Compute Engine machine type <https://cloud.google.com/compute/docs/machine-types>`__.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "machine_type"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetInstanceLabelsRequest",
      "description": "Request for setting instance labels.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    labels (MutableMapping[str, str]):\n        Labels to apply to this instance.\n        These can be later modified by the setLabels\n        method",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "labels": {
            "description": "Labels to apply to this instance. These can be later modified by the setLabels method",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteInstanceRequest",
      "description": "Request for deleting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StartInstanceRequest",
      "description": "Request for starting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StopInstanceRequest",
      "description": "Request for stopping a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ResetInstanceRequest",
      "description": "Request for reseting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ReportInstanceInfoRequest",
      "description": "Request for notebook instances to report information to\nNotebooks API.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity\n    metadata (MutableMapping[str, str]):\n        The metadata reported to Notebooks API. This\n        will be merged to the instance metadata store",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "vm_id": {
            "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
            "type": "string"
          },
          "metadata": {
            "description": "The metadata reported to Notebooks API. This will be merged to the instance metadata store",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "vm_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "IsInstanceUpgradeableRequest",
      "description": "Request for checking if a notebook instance is upgradeable.\n\nAttributes:\n    notebook_instance (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "notebook_instance": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "notebook_instance"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpgradeInstanceRequest",
      "description": "Request for upgrading a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpgradeInstanceInternalRequest",
      "description": "Request for upgrading a notebook instance from within the VM\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "vm_id": {
            "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
            "type": "string"
          }
        },
        "required": [
          "name",
          "vm_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListEnvironmentsRequest",
      "description": "Request for listing environments.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum return size of the list call.",
            "type": "integer"
          },
          "page_token": {
            "description": "A previous returned page token that can be used to continue listing from the last result.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetEnvironmentRequest",
      "description": "Request for getting a notebook environment.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateEnvironmentRequest",
      "description": "Request for creating a notebook environment.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}``\n    environment_id (str):\n        Required. User-defined unique ID of this environment. The\n        ``environment_id`` must be 1 to 63 characters long and\n        contain only lowercase letters, numeric characters, and\n        dashes. The first character must be a lowercase letter and\n        the last character cannot be a dash.\n    environment (google.cloud.notebooks_v1beta1.types.Environment):\n        Required. The environment to be created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "environment_id": {
            "description": "Required. User-defined unique ID of this environment. The ``environment_id`` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash.",
            "type": "string"
          },
          "environment": {
            "description": "Required. The environment to be created.",
            "reference": "google.cloud.notebooks_v1beta1.types.Environment",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. The unique identifier of this agent environment. Supported formats:  -  ``projects/<Project ID>/agent/environments/<Environment ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID>``  The environment ID for the default environment is ``-``.",
                  "type": "string",
                  "output_only": true
                },
                "description": {
                  "description": "Optional. The developer-provided description for this environment. The maximum length is 500 characters. If exceeded, the request is rejected.",
                  "type": "string"
                },
                "agent_version": {
                  "description": "Optional. The agent version loaded into this environment. Supported formats:  -  ``projects/<Project ID>/agent/versions/<Version ID>`` -  ``projects/<Project ID>/locations/<Location ID>/agent/versions/<Version ID>``",
                  "type": "string"
                },
                "state": {
                  "description": "Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Environment.State",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The last update time of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "text_to_speech_settings": {
                  "description": "Optional. Text to speech settings for this environment.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.TextToSpeechSettings",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "enable_text_to_speech": {
                        "description": "Optional. Indicates whether text to speech is enabled. Even when this field is false, other settings in this proto are still retained.",
                        "type": "boolean"
                      },
                      "output_audio_encoding": {
                        "description": "Required. Audio encoding of the synthesized audio content.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.OutputAudioEncoding"
                      },
                      "sample_rate_hertz": {
                        "description": "Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
                        "type": "integer"
                      },
                      "synthesize_speech_configs": {
                        "description": "Optional. Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/docs/reference/language) to SynthesizeSpeechConfig.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.SynthesizeSpeechConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "speaking_rate": {
                                "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.",
                                "type": "number"
                              },
                              "pitch": {
                                "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
                                "type": "number"
                              },
                              "volume_gain_db": {
                                "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
                                "type": "number"
                              },
                              "effects_profile_id": {
                                "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "voice": {
                                "description": "Optional. The desired voice of the synthesized audio.",
                                "type": "object",
                                "reference": "google.cloud.dialogflow_v2.types.VoiceSelectionParams",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and [ssml_gender][google.cloud.dialogflow.v2.VoiceSelectionParams.ssml_gender].",
                                      "type": "string"
                                    },
                                    "ssml_gender": {
                                      "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and [name][google.cloud.dialogflow.v2.VoiceSelectionParams.name]. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
                                      "type": "object",
                                      "reference": "google.cloud.dialogflow_v2.types.SsmlVoiceGender"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "output_audio_encoding"
                    ]
                  }
                },
                "fulfillment": {
                  "description": "Optional. The fulfillment settings to use for this environment.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Fulfillment",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Required. The unique identifier of the fulfillment. Supported formats:  -  ``projects/<Project ID>/agent/fulfillment`` -  ``projects/<Project ID>/locations/<Location ID>/agent/fulfillment``  This field is not used for Fulfillment in an Environment.",
                        "type": "string"
                      },
                      "display_name": {
                        "description": "Optional. The human-readable name of the fulfillment, unique within the agent.  This field is not used for Fulfillment in an Environment.",
                        "type": "string"
                      },
                      "generic_web_service": {
                        "description": "Configuration for a generic web service.  This field is a member of `oneof`_ ``fulfillment``.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.Fulfillment.GenericWebService",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "uri": {
                              "description": "Required. The fulfillment URI for receiving POST requests. It must use https protocol.",
                              "type": "string"
                            },
                            "username": {
                              "description": "Optional. The user name for HTTP Basic authentication.",
                              "type": "string"
                            },
                            "password": {
                              "description": "Optional. The password for HTTP Basic authentication.",
                              "type": "string"
                            },
                            "request_headers": {
                              "description": "Optional. The HTTP request headers to send together with fulfillment requests.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "is_cloud_function": {
                              "description": "Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false.  is_cloud_function is deprecated. Cloud functions can be configured by its uri as a regular web service now.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "uri"
                          ]
                        }
                      },
                      "enabled": {
                        "description": "Optional. Whether fulfillment is enabled.",
                        "type": "boolean"
                      },
                      "features": {
                        "description": "Optional. The field defines whether the fulfillment is enabled for certain features.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.Fulfillment.Feature",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "type_": {
                                "description": "The type of the feature that enabled for fulfillment.",
                                "type": "object",
                                "reference": "google.cloud.dialogflow_v2.types.Fulfillment.Feature.Type"
                              }
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "environment_id",
          "environment"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteEnvironmentRequest",
      "description": "Request for deleting a notebook environment.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}