{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-vision\\google\\cloud\\vision_v1p2beta1\\types\\geometry.py": [
    {
      "type": "request_class",
      "name": "Vertex",
      "docstring": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the\noriginal image.\n\nAttributes:\n    x (int):\n        X coordinate.\n    y (int):\n        Y coordinate.",
      "attributes": {
        "x": {
          "type": "int",
          "description": "X coordinate."
        },
        "y": {
          "type": "int",
          "description": "Y coordinate."
        }
      }
    },
    {
      "type": "request_class",
      "name": "NormalizedVertex",
      "docstring": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the\noriginal image and range from 0 to 1.\n\nAttributes:\n    x (float):\n        X coordinate.\n    y (float):\n        Y coordinate.",
      "attributes": {
        "x": {
          "type": "float",
          "description": "X coordinate."
        },
        "y": {
          "type": "float",
          "description": "Y coordinate."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BoundingPoly",
      "docstring": "A bounding polygon for the detected image annotation.\n\nAttributes:\n    vertices (MutableSequence[google.cloud.vision_v1p2beta1.types.Vertex]):\n        The bounding polygon vertices.\n    normalized_vertices (MutableSequence[google.cloud.vision_v1p2beta1.types.NormalizedVertex]):\n        The bounding polygon normalized vertices.",
      "attributes": {
        "vertices": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.Vertex]",
          "description": "The bounding polygon vertices."
        },
        "normalized_vertices": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.NormalizedVertex]",
          "description": "The bounding polygon normalized vertices."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Position",
      "docstring": "A 3D position in the image, used primarily for Face detection\nlandmarks. A valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original\nimage.\n\nAttributes:\n    x (float):\n        X coordinate.\n    y (float):\n        Y coordinate.\n    z (float):\n        Z coordinate (or depth).",
      "attributes": {
        "x": {
          "type": "float",
          "description": "X coordinate."
        },
        "y": {
          "type": "float",
          "description": "Y coordinate."
        },
        "z": {
          "type": "float",
          "description": "Z coordinate (or depth)."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-vision\\google\\cloud\\vision_v1p2beta1\\types\\image_annotator.py": [
    {
      "type": "request_class",
      "name": "Feature",
      "docstring": "The type of Google Cloud Vision API detection to perform, and the\nmaximum number of results to return for that type. Multiple\n``Feature`` objects can be specified in the ``features`` list.\n\nAttributes:\n    type_ (google.cloud.vision_v1p2beta1.types.Feature.Type):\n        The feature type.\n    max_results (int):\n        Maximum number of results of this type. Does not apply to\n        ``TEXT_DETECTION``, ``DOCUMENT_TEXT_DETECTION``, or\n        ``CROP_HINTS``.\n    model (str):\n        Model to use for the feature. Supported values:\n        \"builtin/stable\" (the default if unset) and\n        \"builtin/latest\". ``DOCUMENT_TEXT_DETECTION`` and\n        ``TEXT_DETECTION`` also support \"builtin/weekly\" for the\n        bleeding edge release updated weekly.",
      "attributes": {
        "type_": {
          "type": "google.cloud.vision_v1p2beta1.types.Feature.Type",
          "description": "The feature type."
        },
        "max_results": {
          "type": "int",
          "description": "Maximum number of results of this type. Does not apply to ``TEXT_DETECTION``, ``DOCUMENT_TEXT_DETECTION``, or ``CROP_HINTS``."
        },
        "model": {
          "type": "str",
          "description": "Model to use for the feature. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\". ``DOCUMENT_TEXT_DETECTION`` and ``TEXT_DETECTION`` also support \"builtin/weekly\" for the bleeding edge release updated weekly."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ImageSource",
      "docstring": "External image source (Google Cloud Storage or web URL image\nlocation).\n\nAttributes:\n    gcs_image_uri (str):\n        **Use ``image_uri`` instead.**\n\n        The Google Cloud Storage URI of the form\n        ``gs://bucket_name/object_name``. Object versioning is not\n        supported. See `Google Cloud Storage Request\n        URIs <https://cloud.google.com/storage/docs/reference-uris>`__\n        for more info.\n    image_uri (str):\n        The URI of the source image. Can be either:\n\n        1. A Google Cloud Storage URI of the form\n           ``gs://bucket_name/object_name``. Object versioning is\n           not supported. See `Google Cloud Storage Request\n           URIs <https://cloud.google.com/storage/docs/reference-uris>`__\n           for more info.\n\n        2. A publicly-accessible image HTTP/HTTPS URL. When fetching\n           images from HTTP/HTTPS URLs, Google cannot guarantee that\n           the request will be completed. Your request may fail if\n           the specified host denies the request (e.g. ",
      "attributes": {
        "gcs_image_uri": {
          "type": "str",
          "description": "**Use ``image_uri`` instead.**  The Google Cloud Storage URI of the form ``gs://bucket_name/object_name``. Object versioning is not supported. See `Google Cloud Storage Request URIs <https://cloud.google.com/storage/docs/reference-uris>`__ for more info."
        },
        "image_uri": {
          "type": "str",
          "description": "The URI of the source image. Can be either:  1. A Google Cloud Storage URI of the form ``gs://bucket_name/object_name``. Object versioning is not supported. See `Google Cloud Storage Request URIs <https://cloud.google.com/storage/docs/reference-uris>`__ for more info.  2. A publicly-accessible image HTTP/HTTPS URL. When fetching images from HTTP/HTTPS URLs, Google cannot guarantee that the request will be completed. Your request may fail if the specified host denies the request (e.g. due to request throttling or DOS prevention), or if Google throttles requests to the site for abuse prevention. You should not depend on externally-hosted images for production applications.  When both ``gcs_image_uri`` and ``image_uri`` are specified, ``image_uri`` takes precedence."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Image",
      "docstring": "Client image to perform Google Cloud Vision API tasks over.\n\nAttributes:\n    content (bytes):\n        Image content, represented as a stream of bytes. Note: As\n        with all ``bytes`` fields, protobuffers use a pure binary\n        representation, whereas JSON representations use base64.\n    source (google.cloud.vision_v1p2beta1.types.ImageSource):\n        Google Cloud Storage image location, or publicly-accessible\n        image URL. If both ``content`` and ``source`` are provided\n        for an image, ``content`` takes precedence and is used to\n        perform the image annotation request.",
      "attributes": {
        "content": {
          "type": "bytes",
          "description": "Image content, represented as a stream of bytes. Note: As with all ``bytes`` fields, protobuffers use a pure binary representation, whereas JSON representations use base64."
        },
        "source": {
          "type": "google.cloud.vision_v1p2beta1.types.ImageSource",
          "description": "Google Cloud Storage image location, or publicly-accessible image URL. If both ``content`` and ``source`` are provided for an image, ``content`` takes precedence and is used to perform the image annotation request."
        }
      }
    },
    {
      "type": "request_class",
      "name": "FaceAnnotation",
      "docstring": "A face annotation object contains the results of face\ndetection.\n\nAttributes:\n    bounding_poly (google.cloud.vision_v1p2beta1.types.BoundingPoly):\n        The bounding polygon around the face. The coordinates of the\n        bounding box are in the original image's scale, as returned\n        in ``ImageParams``. The bounding box is computed to \"frame\"\n        the face in accordance with human expectations. It is based\n        on the landmarker results. Note that one or more x and/or y\n        coordinates may not be generated in the ``BoundingPoly``\n        (the polygon will be unbounded) if only a partial face\n        appears in the image to be annotated.\n    fd_bounding_poly (google.cloud.vision_v1p2beta1.types.BoundingPoly):\n        The ``fd_bounding_poly`` bounding polygon is tighter than\n        the ``boundingPoly``, and encloses only the skin part of the\n        face. Typically, it is used to eliminate the face from any\n        image analysis that detects the \"amount of skin\" visible in\n        an image. ",
      "attributes": {
        "bounding_poly": {
          "type": "google.cloud.vision_v1p2beta1.types.BoundingPoly",
          "description": "The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale, as returned in ``ImageParams``. The bounding box is computed to \"frame\" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the ``BoundingPoly`` (the polygon will be unbounded) if only a partial face appears in the image to be annotated."
        },
        "fd_bounding_poly": {
          "type": "google.cloud.vision_v1p2beta1.types.BoundingPoly",
          "description": "The ``fd_bounding_poly`` bounding polygon is tighter than the ``boundingPoly``, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the \"amount of skin\" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix."
        },
        "landmarks": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.FaceAnnotation.Landmark]",
          "description": "Detected face landmarks."
        },
        "roll_angle": {
          "type": "float",
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180]."
        },
        "pan_angle": {
          "type": "float",
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180]."
        },
        "tilt_angle": {
          "type": "float",
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image's horizontal plane. Range [-180,180]."
        },
        "detection_confidence": {
          "type": "float",
          "description": "Detection confidence. Range [0, 1]."
        },
        "landmarking_confidence": {
          "type": "float",
          "description": "Face landmarking confidence. Range [0, 1]."
        },
        "joy_likelihood": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Joy likelihood."
        },
        "sorrow_likelihood": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Sorrow likelihood."
        },
        "anger_likelihood": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Anger likelihood."
        },
        "surprise_likelihood": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Surprise likelihood."
        },
        "under_exposed_likelihood": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Under-exposed likelihood."
        },
        "blurred_likelihood": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Blurred likelihood."
        },
        "headwear_likelihood": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Headwear likelihood."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LocationInfo",
      "docstring": "Detected entity location information.\n\nAttributes:\n    lat_lng (google.type.latlng_pb2.LatLng):\n        lat/long location coordinates.",
      "attributes": {
        "lat_lng": {
          "type": "google.type.latlng_pb2.LatLng",
          "description": "lat/long location coordinates."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Property",
      "docstring": "A ``Property`` consists of a user-supplied name/value pair.\n\nAttributes:\n    name (str):\n        Name of the property.\n    value (str):\n        Value of the property.\n    uint64_value (int):\n        Value of numeric properties.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Name of the property."
        },
        "value": {
          "type": "str",
          "description": "Value of the property."
        },
        "uint64_value": {
          "type": "int",
          "description": "Value of numeric properties."
        }
      }
    },
    {
      "type": "request_class",
      "name": "EntityAnnotation",
      "docstring": "Set of detected entity features.\n\nAttributes:\n    mid (str):\n        Opaque entity ID. Some IDs may be available in `Google\n        Knowledge Graph Search\n        API <https://developers.google.com/knowledge-graph/>`__.\n    locale (str):\n        The language code for the locale in which the entity textual\n        ``description`` is expressed.\n    description (str):\n        Entity textual description, expressed in its ``locale``\n        language.\n    score (float):\n        Overall score of the result. Range [0, 1].\n    confidence (float):\n        **Deprecated. Use ``score`` instead.** The accuracy of the\n        entity detection in an image. For example, for an image in\n        which the \"Eiffel Tower\" entity is detected, this field\n        represents the confidence that there is a tower in the query\n        image. Range [0, 1].\n    topicality (float):\n        The relevancy of the ICA (Image Content Annotation) label to\n        the image. For example, the relevancy of \"tower\" is likely\n        higher to an ima",
      "attributes": {
        "mid": {
          "type": "str",
          "description": "Opaque entity ID. Some IDs may be available in `Google Knowledge Graph Search API <https://developers.google.com/knowledge-graph/>`__."
        },
        "locale": {
          "type": "str",
          "description": "The language code for the locale in which the entity textual ``description`` is expressed."
        },
        "description": {
          "type": "str",
          "description": "Entity textual description, expressed in its ``locale`` language."
        },
        "score": {
          "type": "float",
          "description": "Overall score of the result. Range [0, 1]."
        },
        "confidence": {
          "type": "float",
          "description": "**Deprecated. Use ``score`` instead.** The accuracy of the entity detection in an image. For example, for an image in which the \"Eiffel Tower\" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1]."
        },
        "topicality": {
          "type": "float",
          "description": "The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of \"tower\" is likely higher to an image containing the detected \"Eiffel Tower\" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1]."
        },
        "bounding_poly": {
          "type": "google.cloud.vision_v1p2beta1.types.BoundingPoly",
          "description": "Image region to which this entity belongs. Not produced for ``LABEL_DETECTION`` features."
        },
        "locations": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.LocationInfo]",
          "description": "The location information for the detected entity. Multiple ``LocationInfo`` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks."
        },
        "properties": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.Property]",
          "description": "Some entities may have optional user-supplied ``Property`` (name/value) fields, such a score or string that qualifies the entity."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SafeSearchAnnotation",
      "docstring": "Set of features pertaining to the image, computed by computer\nvision methods over safe-search verticals (for example, adult,\nspoof, medical, violence).\n\nAttributes:\n    adult (google.cloud.vision_v1p2beta1.types.Likelihood):\n        Represents the adult content likelihood for\n        the image. Adult content may contain elements\n        such as nudity, pornographic images or cartoons,\n        or sexual activities.\n    spoof (google.cloud.vision_v1p2beta1.types.Likelihood):\n        Spoof likelihood. The likelihood that an\n        modification was made to the image's canonical\n        version to make it appear funny or offensive.\n    medical (google.cloud.vision_v1p2beta1.types.Likelihood):\n        Likelihood that this is a medical image.\n    violence (google.cloud.vision_v1p2beta1.types.Likelihood):\n        Likelihood that this image contains violent\n        content.\n    racy (google.cloud.vision_v1p2beta1.types.Likelihood):\n        Likelihood that the request image contains\n        racy content. Racy content ",
      "attributes": {
        "adult": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities."
        },
        "spoof": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive."
        },
        "medical": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Likelihood that this is a medical image."
        },
        "violence": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Likelihood that this image contains violent content."
        },
        "racy": {
          "type": "google.cloud.vision_v1p2beta1.types.Likelihood",
          "description": "Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LatLongRect",
      "docstring": "Rectangle determined by min and max ``LatLng`` pairs.\n\nAttributes:\n    min_lat_lng (google.type.latlng_pb2.LatLng):\n        Min lat/long pair.\n    max_lat_lng (google.type.latlng_pb2.LatLng):\n        Max lat/long pair.",
      "attributes": {
        "min_lat_lng": {
          "type": "google.type.latlng_pb2.LatLng",
          "description": "Min lat/long pair."
        },
        "max_lat_lng": {
          "type": "google.type.latlng_pb2.LatLng",
          "description": "Max lat/long pair."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ColorInfo",
      "docstring": "Color information consists of RGB channels, score, and the\nfraction of the image that the color occupies in the image.\n\nAttributes:\n    color (google.type.color_pb2.Color):\n        RGB components of the color.\n    score (float):\n        Image-specific score for this color. Value in range [0, 1].\n    pixel_fraction (float):\n        The fraction of pixels the color occupies in the image.\n        Value in range [0, 1].",
      "attributes": {
        "color": {
          "type": "google.type.color_pb2.Color",
          "description": "RGB components of the color."
        },
        "score": {
          "type": "float",
          "description": "Image-specific score for this color. Value in range [0, 1]."
        },
        "pixel_fraction": {
          "type": "float",
          "description": "The fraction of pixels the color occupies in the image. Value in range [0, 1]."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DominantColorsAnnotation",
      "docstring": "Set of dominant colors and their corresponding scores.\n\nAttributes:\n    colors (MutableSequence[google.cloud.vision_v1p2beta1.types.ColorInfo]):\n        RGB color values with their score and pixel\n        fraction.",
      "attributes": {
        "colors": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.ColorInfo]",
          "description": "RGB color values with their score and pixel fraction."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ImageProperties",
      "docstring": "Stores image properties, such as dominant colors.\n\nAttributes:\n    dominant_colors (google.cloud.vision_v1p2beta1.types.DominantColorsAnnotation):\n        If present, dominant colors completed\n        successfully.",
      "attributes": {
        "dominant_colors": {
          "type": "google.cloud.vision_v1p2beta1.types.DominantColorsAnnotation",
          "description": "If present, dominant colors completed successfully."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CropHint",
      "docstring": "Single crop hint that is used to generate a new crop when\nserving an image.\n\nAttributes:\n    bounding_poly (google.cloud.vision_v1p2beta1.types.BoundingPoly):\n        The bounding polygon for the crop region. The coordinates of\n        the bounding box are in the original image's scale, as\n        returned in ``ImageParams``.\n    confidence (float):\n        Confidence of this being a salient region. Range [0, 1].\n    importance_fraction (float):\n        Fraction of importance of this salient region\n        with respect to the original image.",
      "attributes": {
        "bounding_poly": {
          "type": "google.cloud.vision_v1p2beta1.types.BoundingPoly",
          "description": "The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale, as returned in ``ImageParams``."
        },
        "confidence": {
          "type": "float",
          "description": "Confidence of this being a salient region. Range [0, 1]."
        },
        "importance_fraction": {
          "type": "float",
          "description": "Fraction of importance of this salient region with respect to the original image."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CropHintsAnnotation",
      "docstring": "Set of crop hints that are used to generate new crops when\nserving images.\n\nAttributes:\n    crop_hints (MutableSequence[google.cloud.vision_v1p2beta1.types.CropHint]):\n        Crop hint results.",
      "attributes": {
        "crop_hints": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.CropHint]",
          "description": "Crop hint results."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CropHintsParams",
      "docstring": "Parameters for crop hints annotation request.\n\nAttributes:\n    aspect_ratios (MutableSequence[float]):\n        Aspect ratios in floats, representing the\n        ratio of the width to the height of the image.\n        For example, if the desired aspect ratio is 4/3,\n        the corresponding float value should be 1.33333.\n        If not specified, the best possible crop is\n        returned. The number of provided aspect ratios\n        is limited to a maximum of 16; any aspect ratios\n        provided after the 16th are ignored.",
      "attributes": {
        "aspect_ratios": {
          "type": "MutableSequence[float]",
          "description": "Aspect ratios in floats, representing the ratio of the width to the height of the image. For example, if the desired aspect ratio is 4/3, the corresponding float value should be 1.33333. If not specified, the best possible crop is returned. The number of provided aspect ratios is limited to a maximum of 16; any aspect ratios provided after the 16th are ignored."
        }
      }
    },
    {
      "type": "request_class",
      "name": "WebDetectionParams",
      "docstring": "Parameters for web detection request.\n\nAttributes:\n    include_geo_results (bool):\n        Whether to include results derived from the\n        geo information in the image.",
      "attributes": {
        "include_geo_results": {
          "type": "bool",
          "description": "Whether to include results derived from the geo information in the image."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TextDetectionParams",
      "docstring": "Parameters for text detections. This is used to control\nTEXT_DETECTION and DOCUMENT_TEXT_DETECTION features.\n\nAttributes:\n    enable_text_detection_confidence_score (bool):\n        By default, Cloud Vision API only includes confidence score\n        for DOCUMENT_TEXT_DETECTION result. Set the flag to true to\n        include confidence score for TEXT_DETECTION as well.\n    advanced_ocr_options (MutableSequence[str]):\n        A list of advanced OCR options to fine-tune\n        OCR behavior.",
      "attributes": {
        "enable_text_detection_confidence_score": {
          "type": "bool",
          "description": "By default, Cloud Vision API only includes confidence score for DOCUMENT_TEXT_DETECTION result. Set the flag to true to include confidence score for TEXT_DETECTION as well."
        },
        "advanced_ocr_options": {
          "type": "MutableSequence[str]",
          "description": "A list of advanced OCR options to fine-tune OCR behavior."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ImageContext",
      "docstring": "Image context and/or feature-specific parameters.\n\nAttributes:\n    lat_long_rect (google.cloud.vision_v1p2beta1.types.LatLongRect):\n        Not used.\n    language_hints (MutableSequence[str]):\n        List of languages to use for TEXT_DETECTION. In most cases,\n        an empty value yields the best results since it enables\n        automatic language detection. For languages based on the\n        Latin alphabet, setting ``language_hints`` is not needed. In\n        rare cases, when the language of the text in the image is\n        known, setting a hint will help get better results (although\n        it will be a significant hindrance if the hint is wrong).\n        Text detection returns an error if one or more of the\n        specified languages is not one of the `supported\n        languages <https://cloud.google.com/vision/docs/languages>`__.\n    crop_hints_params (google.cloud.vision_v1p2beta1.types.CropHintsParams):\n        Parameters for crop hints annotation request.\n    web_detection_params (google.cloud.visi",
      "attributes": {
        "lat_long_rect": {
          "type": "google.cloud.vision_v1p2beta1.types.LatLongRect",
          "description": "Not used."
        },
        "language_hints": {
          "type": "MutableSequence[str]",
          "description": "List of languages to use for TEXT_DETECTION. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting ``language_hints`` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Text detection returns an error if one or more of the specified languages is not one of the `supported languages <https://cloud.google.com/vision/docs/languages>`__."
        },
        "crop_hints_params": {
          "type": "google.cloud.vision_v1p2beta1.types.CropHintsParams",
          "description": "Parameters for crop hints annotation request."
        },
        "web_detection_params": {
          "type": "google.cloud.vision_v1p2beta1.types.WebDetectionParams",
          "description": "Parameters for web detection."
        },
        "text_detection_params": {
          "type": "google.cloud.vision_v1p2beta1.types.TextDetectionParams",
          "description": "Parameters for text detection and document text detection."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AnnotateImageRequest",
      "docstring": "Request for performing Google Cloud Vision API tasks over a\nuser-provided image, with user-requested features.\n\nAttributes:\n    image (google.cloud.vision_v1p2beta1.types.Image):\n        The image to be processed.\n    features (MutableSequence[google.cloud.vision_v1p2beta1.types.Feature]):\n        Requested features.\n    image_context (google.cloud.vision_v1p2beta1.types.ImageContext):\n        Additional context that may accompany the\n        image.",
      "attributes": {
        "image": {
          "type": "google.cloud.vision_v1p2beta1.types.Image",
          "description": "The image to be processed."
        },
        "features": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.Feature]",
          "description": "Requested features."
        },
        "image_context": {
          "type": "google.cloud.vision_v1p2beta1.types.ImageContext",
          "description": "Additional context that may accompany the image."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ImageAnnotationContext",
      "docstring": "If an image was produced from a file (e.g. a PDF), this\nmessage gives information about the source of that image.\n\nAttributes:\n    uri (str):\n        The URI of the file used to produce the\n        image.\n    page_number (int):\n        If the file was a PDF or TIFF, this field\n        gives the page number within the file used to\n        produce the image.",
      "attributes": {
        "uri": {
          "type": "str",
          "description": "The URI of the file used to produce the image."
        },
        "page_number": {
          "type": "int",
          "description": "If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AnnotateImageResponse",
      "docstring": "Response to an image annotation request.\n\nAttributes:\n    face_annotations (MutableSequence[google.cloud.vision_v1p2beta1.types.FaceAnnotation]):\n        If present, face detection has completed\n        successfully.\n    landmark_annotations (MutableSequence[google.cloud.vision_v1p2beta1.types.EntityAnnotation]):\n        If present, landmark detection has completed\n        successfully.\n    logo_annotations (MutableSequence[google.cloud.vision_v1p2beta1.types.EntityAnnotation]):\n        If present, logo detection has completed\n        successfully.\n    label_annotations (MutableSequence[google.cloud.vision_v1p2beta1.types.EntityAnnotation]):\n        If present, label detection has completed\n        successfully.\n    text_annotations (MutableSequence[google.cloud.vision_v1p2beta1.types.EntityAnnotation]):\n        If present, text (OCR) detection has\n        completed successfully.\n    full_text_annotation (google.cloud.vision_v1p2beta1.types.TextAnnotation):\n        If present, text (OCR) detection or document",
      "attributes": {
        "face_annotations": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.FaceAnnotation]",
          "description": "If present, face detection has completed successfully."
        },
        "landmark_annotations": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.EntityAnnotation]",
          "description": "If present, landmark detection has completed successfully."
        },
        "logo_annotations": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.EntityAnnotation]",
          "description": "If present, logo detection has completed successfully."
        },
        "label_annotations": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.EntityAnnotation]",
          "description": "If present, label detection has completed successfully."
        },
        "text_annotations": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.EntityAnnotation]",
          "description": "If present, text (OCR) detection has completed successfully."
        },
        "full_text_annotation": {
          "type": "google.cloud.vision_v1p2beta1.types.TextAnnotation",
          "description": "If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text."
        },
        "safe_search_annotation": {
          "type": "google.cloud.vision_v1p2beta1.types.SafeSearchAnnotation",
          "description": "If present, safe-search annotation has completed successfully."
        },
        "image_properties_annotation": {
          "type": "google.cloud.vision_v1p2beta1.types.ImageProperties",
          "description": "If present, image properties were extracted successfully."
        },
        "crop_hints_annotation": {
          "type": "google.cloud.vision_v1p2beta1.types.CropHintsAnnotation",
          "description": "If present, crop hints have completed successfully."
        },
        "web_detection": {
          "type": "google.cloud.vision_v1p2beta1.types.WebDetection",
          "description": "If present, web detection has completed successfully."
        },
        "error": {
          "type": "google.rpc.status_pb2.Status",
          "description": "If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when ``error`` is set."
        },
        "context": {
          "type": "google.cloud.vision_v1p2beta1.types.ImageAnnotationContext",
          "description": "If present, contextual information is needed to understand where this image comes from."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AnnotateFileResponse",
      "docstring": "Response to a single file annotation request. A file may\ncontain one or more images, which individually have their own\nresponses.\n\nAttributes:\n    input_config (google.cloud.vision_v1p2beta1.types.InputConfig):\n        Information about the file for which this\n        response is generated.\n    responses (MutableSequence[google.cloud.vision_v1p2beta1.types.AnnotateImageResponse]):\n        Individual responses to images found within\n        the file.",
      "attributes": {
        "input_config": {
          "type": "google.cloud.vision_v1p2beta1.types.InputConfig",
          "description": "Information about the file for which this response is generated."
        },
        "responses": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.AnnotateImageResponse]",
          "description": "Individual responses to images found within the file."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BatchAnnotateImagesRequest",
      "docstring": "Multiple image annotation requests are batched into a single\nservice call.\n\nAttributes:\n    requests (MutableSequence[google.cloud.vision_v1p2beta1.types.AnnotateImageRequest]):\n        Required. Individual image annotation\n        requests for this batch.",
      "attributes": {
        "requests": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.AnnotateImageRequest]",
          "description": "Required. Individual image annotation requests for this batch."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BatchAnnotateImagesResponse",
      "docstring": "Response to a batch image annotation request.\n\nAttributes:\n    responses (MutableSequence[google.cloud.vision_v1p2beta1.types.AnnotateImageResponse]):\n        Individual responses to image annotation\n        requests within the batch.",
      "attributes": {
        "responses": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.AnnotateImageResponse]",
          "description": "Individual responses to image annotation requests within the batch."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AsyncAnnotateFileRequest",
      "docstring": "An offline file annotation request.\n\nAttributes:\n    input_config (google.cloud.vision_v1p2beta1.types.InputConfig):\n        Required. Information about the input file.\n    features (MutableSequence[google.cloud.vision_v1p2beta1.types.Feature]):\n        Required. Requested features.\n    image_context (google.cloud.vision_v1p2beta1.types.ImageContext):\n        Additional context that may accompany the\n        image(s) in the file.\n    output_config (google.cloud.vision_v1p2beta1.types.OutputConfig):\n        Required. The desired output location and\n        metadata (e.g. format).",
      "attributes": {
        "input_config": {
          "type": "google.cloud.vision_v1p2beta1.types.InputConfig",
          "description": "Required. Information about the input file."
        },
        "features": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.Feature]",
          "description": "Required. Requested features."
        },
        "image_context": {
          "type": "google.cloud.vision_v1p2beta1.types.ImageContext",
          "description": "Additional context that may accompany the image(s) in the file."
        },
        "output_config": {
          "type": "google.cloud.vision_v1p2beta1.types.OutputConfig",
          "description": "Required. The desired output location and metadata (e.g. format)."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AsyncAnnotateFileResponse",
      "docstring": "The response for a single offline file annotation request.\n\nAttributes:\n    output_config (google.cloud.vision_v1p2beta1.types.OutputConfig):\n        The output location and metadata from\n        AsyncAnnotateFileRequest.",
      "attributes": {
        "output_config": {
          "type": "google.cloud.vision_v1p2beta1.types.OutputConfig",
          "description": "The output location and metadata from AsyncAnnotateFileRequest."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AsyncBatchAnnotateFilesRequest",
      "docstring": "Multiple async file annotation requests are batched into a\nsingle service call.\n\nAttributes:\n    requests (MutableSequence[google.cloud.vision_v1p2beta1.types.AsyncAnnotateFileRequest]):\n        Required. Individual async file annotation\n        requests for this batch.",
      "attributes": {
        "requests": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.AsyncAnnotateFileRequest]",
          "description": "Required. Individual async file annotation requests for this batch."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AsyncBatchAnnotateFilesResponse",
      "docstring": "Response to an async batch file annotation request.\n\nAttributes:\n    responses (MutableSequence[google.cloud.vision_v1p2beta1.types.AsyncAnnotateFileResponse]):\n        The list of file annotation responses, one\n        for each request in\n        AsyncBatchAnnotateFilesRequest.",
      "attributes": {
        "responses": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.AsyncAnnotateFileResponse]",
          "description": "The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest."
        }
      }
    },
    {
      "type": "request_class",
      "name": "InputConfig",
      "docstring": "The desired input location and metadata.\n\nAttributes:\n    gcs_source (google.cloud.vision_v1p2beta1.types.GcsSource):\n        The Google Cloud Storage location to read the\n        input from.\n    mime_type (str):\n        The type of the file. Currently only\n        \"application/pdf\" and \"image/tiff\" are\n        supported. Wildcards are not supported.",
      "attributes": {
        "gcs_source": {
          "type": "google.cloud.vision_v1p2beta1.types.GcsSource",
          "description": "The Google Cloud Storage location to read the input from."
        },
        "mime_type": {
          "type": "str",
          "description": "The type of the file. Currently only \"application/pdf\" and \"image/tiff\" are supported. Wildcards are not supported."
        }
      }
    },
    {
      "type": "request_class",
      "name": "OutputConfig",
      "docstring": "The desired output location and metadata.\n\nAttributes:\n    gcs_destination (google.cloud.vision_v1p2beta1.types.GcsDestination):\n        The Google Cloud Storage location to write\n        the output(s) to.\n    batch_size (int):\n        The max number of response protos to put into each output\n        JSON file on GCS. The valid range is [1, 100]. If not\n        specified, the default value is 20.\n\n        For example, for one pdf file with 100 pages, 100 response\n        protos will be generated. If ``batch_size`` = 20, then 5\n        json files each containing 20 response protos will be\n        written under the prefix ``gcs_destination``.\\ ``uri``.\n\n        Currently, batch_size only applies to GcsDestination, with\n        potential future support for other output configurations.",
      "attributes": {
        "gcs_destination": {
          "type": "google.cloud.vision_v1p2beta1.types.GcsDestination",
          "description": "The Google Cloud Storage location to write the output(s) to."
        },
        "batch_size": {
          "type": "int",
          "description": "The max number of response protos to put into each output JSON file on GCS. The valid range is [1, 100]. If not specified, the default value is 20.  For example, for one pdf file with 100 pages, 100 response protos will be generated. If ``batch_size`` = 20, then 5 json files each containing 20 response protos will be written under the prefix ``gcs_destination``.\\ ``uri``.  Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GcsSource",
      "docstring": "The Google Cloud Storage location where the input will be\nread from.\n\nAttributes:\n    uri (str):\n        Google Cloud Storage URI for the input file.\n        This must only be a GCS object. Wildcards are\n        not currently supported.",
      "attributes": {
        "uri": {
          "type": "str",
          "description": "Google Cloud Storage URI for the input file. This must only be a GCS object. Wildcards are not currently supported."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GcsDestination",
      "docstring": "The Google Cloud Storage location where the output will be\nwritten to.\n\nAttributes:\n    uri (str):\n        Google Cloud Storage URI where the results will be stored.\n        Results will be in JSON format and preceded by its\n        corresponding input URI. This field can either represent a\n        single file, or a prefix for multiple outputs. Prefixes must\n        end in a ``/``.\n\n        Examples:\n\n        -  File: gs://bucket-name/filename.json\n        -  Prefix: gs://bucket-name/prefix/here/\n        -  File: gs://bucket-name/prefix/here\n\n        If multiple outputs, each response is still\n        AnnotateFileResponse, each of which contains some subset of\n        the full list of AnnotateImageResponse. Multiple outputs can\n        happen if, for example, the output JSON is too large and\n        overflows into multiple sharded files.",
      "attributes": {
        "uri": {
          "type": "str",
          "description": "Google Cloud Storage URI where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI. This field can either represent a single file, or a prefix for multiple outputs. Prefixes must end in a ``/``.  Examples:  -  File: gs://bucket-name/filename.json -  Prefix: gs://bucket-name/prefix/here/ -  File: gs://bucket-name/prefix/here  If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files."
        }
      }
    },
    {
      "type": "request_class",
      "name": "OperationMetadata",
      "docstring": "Contains metadata for the BatchAnnotateImages operation.\n\nAttributes:\n    state (google.cloud.vision_v1p2beta1.types.OperationMetadata.State):\n        Current state of the batch operation.\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time when the batch request was received.\n    update_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time when the operation result was last\n        updated.",
      "attributes": {
        "state": {
          "type": "google.cloud.vision_v1p2beta1.types.OperationMetadata.State",
          "description": "Current state of the batch operation."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The time when the batch request was received."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The time when the operation result was last updated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Landmark",
      "docstring": "A face-specific landmark (for example, a face feature).\n\nAttributes:\n    type_ (google.cloud.vision_v1p2beta1.types.FaceAnnotation.Landmark.Type):\n        Face landmark type.\n    position (google.cloud.vision_v1p2beta1.types.Position):\n        Face landmark position.",
      "attributes": {
        "type_": {
          "type": "google.cloud.vision_v1p2beta1.types.FaceAnnotation.Landmark.Type",
          "description": "Face landmark type."
        },
        "position": {
          "type": "google.cloud.vision_v1p2beta1.types.Position",
          "description": "Face landmark position."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-vision\\google\\cloud\\vision_v1p2beta1\\types\\text_annotation.py": [
    {
      "type": "request_class",
      "name": "TextAnnotation",
      "docstring": "TextAnnotation contains a structured representation of OCR extracted\ntext. The hierarchy of an OCR extracted text structure is like this:\nTextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each\nstructural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc..\nPlease refer to the\n[TextAnnotation.TextProperty][google.cloud.vision.v1p2beta1.TextAnnotation.TextProperty]\nmessage definition below for more detail.\n\nAttributes:\n    pages (MutableSequence[google.cloud.vision_v1p2beta1.types.Page]):\n        List of pages detected by OCR.\n    text (str):\n        UTF-8 text detected on the pages.",
      "attributes": {
        "pages": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.Page]",
          "description": "List of pages detected by OCR."
        },
        "text": {
          "type": "str",
          "description": "UTF-8 text detected on the pages."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Page",
      "docstring": "Detected page from OCR.\n\nAttributes:\n    property (google.cloud.vision_v1p2beta1.types.TextAnnotation.TextProperty):\n        Additional information detected on the page.\n    width (int):\n        Page width. For PDFs the unit is points. For\n        images (including TIFFs) the unit is pixels.\n    height (int):\n        Page height. For PDFs the unit is points. For\n        images (including TIFFs) the unit is pixels.\n    blocks (MutableSequence[google.cloud.vision_v1p2beta1.types.Block]):\n        List of blocks of text, images etc on this\n        page.\n    confidence (float):\n        Confidence of the OCR results on the page. Range [0, 1].",
      "attributes": {
        "property": {
          "type": "google.cloud.vision_v1p2beta1.types.TextAnnotation.TextProperty",
          "description": "Additional information detected on the page."
        },
        "width": {
          "type": "int",
          "description": "Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels."
        },
        "height": {
          "type": "int",
          "description": "Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels."
        },
        "blocks": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.Block]",
          "description": "List of blocks of text, images etc on this page."
        },
        "confidence": {
          "type": "float",
          "description": "Confidence of the OCR results on the page. Range [0, 1]."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Block",
      "docstring": "Logical element on the page.\n\nAttributes:\n    property (google.cloud.vision_v1p2beta1.types.TextAnnotation.TextProperty):\n        Additional information detected for the\n        block.\n    bounding_box (google.cloud.vision_v1p2beta1.types.BoundingPoly):\n        The bounding box for the block. The vertices are in the\n        order of top-left, top-right, bottom-right, bottom-left.\n        When a rotation of the bounding box is detected the rotation\n        is represented as around the top-left corner as defined when\n        the text is read in the 'natural' orientation. For example:\n\n        -  when the text is horizontal it might look like:\n\n           ::\n\n                0----1\n                |    |\n                3----2\n\n        -  when it's rotated 180 degrees around the top-left corner\n           it becomes:\n\n           ::\n\n                2----3\n                |    |\n                1----0\n\n           and the vertice order will still be (0, 1, 2, 3).\n    paragraphs (MutableSequence[google.cloud.vision",
      "attributes": {
        "property": {
          "type": "google.cloud.vision_v1p2beta1.types.TextAnnotation.TextProperty",
          "description": "Additional information detected for the block."
        },
        "bounding_box": {
          "type": "google.cloud.vision_v1p2beta1.types.BoundingPoly",
          "description": "The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example:  -  when the text is horizontal it might look like:  ::  0----1 |    | 3----2  -  when it's rotated 180 degrees around the top-left corner it becomes:  ::  2----3 |    | 1----0  and the vertice order will still be (0, 1, 2, 3)."
        },
        "paragraphs": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.Paragraph]",
          "description": "List of paragraphs in this block (if this blocks is of type text)."
        },
        "block_type": {
          "type": "google.cloud.vision_v1p2beta1.types.Block.BlockType",
          "description": "Detected block type (text, image etc) for this block."
        },
        "confidence": {
          "type": "float",
          "description": "Confidence of the OCR results on the block. Range [0, 1]."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Paragraph",
      "docstring": "Structural unit of text representing a number of words in\ncertain order.\n\nAttributes:\n    property (google.cloud.vision_v1p2beta1.types.TextAnnotation.TextProperty):\n        Additional information detected for the\n        paragraph.\n    bounding_box (google.cloud.vision_v1p2beta1.types.BoundingPoly):\n        The bounding box for the paragraph. The vertices are in the\n        order of top-left, top-right, bottom-right, bottom-left.\n        When a rotation of the bounding box is detected the rotation\n        is represented as around the top-left corner as defined when\n        the text is read in the 'natural' orientation. For example:\n\n        -  when the text is horizontal it might look like: 0----1 \\|\n           \\| 3----2\n        -  when it's rotated 180 degrees around the top-left corner\n           it becomes: 2----3 \\| \\| 1----0 and the vertice order\n           will still be (0, 1, 2, 3).\n    words (MutableSequence[google.cloud.vision_v1p2beta1.types.Word]):\n        List of words in this paragraph.\n    conf",
      "attributes": {
        "property": {
          "type": "google.cloud.vision_v1p2beta1.types.TextAnnotation.TextProperty",
          "description": "Additional information detected for the paragraph."
        },
        "bounding_box": {
          "type": "google.cloud.vision_v1p2beta1.types.BoundingPoly",
          "description": "The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example:  -  when the text is horizontal it might look like: 0----1 \\| \\| 3----2 -  when it's rotated 180 degrees around the top-left corner it becomes: 2----3 \\| \\| 1----0 and the vertice order will still be (0, 1, 2, 3)."
        },
        "words": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.Word]",
          "description": "List of words in this paragraph."
        },
        "confidence": {
          "type": "float",
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1]."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Word",
      "docstring": "A word representation.\n\nAttributes:\n    property (google.cloud.vision_v1p2beta1.types.TextAnnotation.TextProperty):\n        Additional information detected for the word.\n    bounding_box (google.cloud.vision_v1p2beta1.types.BoundingPoly):\n        The bounding box for the word. The vertices are in the order\n        of top-left, top-right, bottom-right, bottom-left. When a\n        rotation of the bounding box is detected the rotation is\n        represented as around the top-left corner as defined when\n        the text is read in the 'natural' orientation. For example:\n\n        -  when the text is horizontal it might look like: 0----1 \\|\n           \\| 3----2\n        -  when it's rotated 180 degrees around the top-left corner\n           it becomes: 2----3 \\| \\| 1----0 and the vertice order\n           will still be (0, 1, 2, 3).\n    symbols (MutableSequence[google.cloud.vision_v1p2beta1.types.Symbol]):\n        List of symbols in the word.\n        The order of the symbols follows the natural\n        reading order.\n",
      "attributes": {
        "property": {
          "type": "google.cloud.vision_v1p2beta1.types.TextAnnotation.TextProperty",
          "description": "Additional information detected for the word."
        },
        "bounding_box": {
          "type": "google.cloud.vision_v1p2beta1.types.BoundingPoly",
          "description": "The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example:  -  when the text is horizontal it might look like: 0----1 \\| \\| 3----2 -  when it's rotated 180 degrees around the top-left corner it becomes: 2----3 \\| \\| 1----0 and the vertice order will still be (0, 1, 2, 3)."
        },
        "symbols": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.Symbol]",
          "description": "List of symbols in the word. The order of the symbols follows the natural reading order."
        },
        "confidence": {
          "type": "float",
          "description": "Confidence of the OCR results for the word. Range [0, 1]."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Symbol",
      "docstring": "A single symbol representation.\n\nAttributes:\n    property (google.cloud.vision_v1p2beta1.types.TextAnnotation.TextProperty):\n        Additional information detected for the\n        symbol.\n    bounding_box (google.cloud.vision_v1p2beta1.types.BoundingPoly):\n        The bounding box for the symbol. The vertices are in the\n        order of top-left, top-right, bottom-right, bottom-left.\n        When a rotation of the bounding box is detected the rotation\n        is represented as around the top-left corner as defined when\n        the text is read in the 'natural' orientation. For example:\n\n        -  when the text is horizontal it might look like: 0----1 \\|\n           \\| 3----2\n        -  when it's rotated 180 degrees around the top-left corner\n           it becomes: 2----3 \\| \\| 1----0 and the vertice order\n           will still be (0, 1, 2, 3).\n    text (str):\n        The actual UTF-8 representation of the\n        symbol.\n    confidence (float):\n        Confidence of the OCR results for the symbol. Range [0, ",
      "attributes": {
        "property": {
          "type": "google.cloud.vision_v1p2beta1.types.TextAnnotation.TextProperty",
          "description": "Additional information detected for the symbol."
        },
        "bounding_box": {
          "type": "google.cloud.vision_v1p2beta1.types.BoundingPoly",
          "description": "The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example:  -  when the text is horizontal it might look like: 0----1 \\| \\| 3----2 -  when it's rotated 180 degrees around the top-left corner it becomes: 2----3 \\| \\| 1----0 and the vertice order will still be (0, 1, 2, 3)."
        },
        "text": {
          "type": "str",
          "description": "The actual UTF-8 representation of the symbol."
        },
        "confidence": {
          "type": "float",
          "description": "Confidence of the OCR results for the symbol. Range [0, 1]."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DetectedLanguage",
      "docstring": "Detected language for a structural component.\n\nAttributes:\n    language_code (str):\n        The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For\n        more information, see\n        http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\n    confidence (float):\n        Confidence of detected language. Range [0, 1].",
      "attributes": {
        "language_code": {
          "type": "str",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "confidence": {
          "type": "float",
          "description": "Confidence of detected language. Range [0, 1]."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DetectedBreak",
      "docstring": "Detected start or end of a structural component.\n\nAttributes:\n    type_ (google.cloud.vision_v1p2beta1.types.TextAnnotation.DetectedBreak.BreakType):\n        Detected break type.\n    is_prefix (bool):\n        True if break prepends the element.",
      "attributes": {
        "type_": {
          "type": "google.cloud.vision_v1p2beta1.types.TextAnnotation.DetectedBreak.BreakType",
          "description": "Detected break type."
        },
        "is_prefix": {
          "type": "bool",
          "description": "True if break prepends the element."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TextProperty",
      "docstring": "Additional information detected on the structural component.\n\nAttributes:\n    detected_languages (MutableSequence[google.cloud.vision_v1p2beta1.types.TextAnnotation.DetectedLanguage]):\n        A list of detected languages together with\n        confidence.\n    detected_break (google.cloud.vision_v1p2beta1.types.TextAnnotation.DetectedBreak):\n        Detected start or end of a text segment.",
      "attributes": {
        "detected_languages": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.TextAnnotation.DetectedLanguage]",
          "description": "A list of detected languages together with confidence."
        },
        "detected_break": {
          "type": "google.cloud.vision_v1p2beta1.types.TextAnnotation.DetectedBreak",
          "description": "Detected start or end of a text segment."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-vision\\google\\cloud\\vision_v1p2beta1\\types\\web_detection.py": [
    {
      "type": "request_class",
      "name": "WebDetection",
      "docstring": "Relevant information for the image from the Internet.\n\nAttributes:\n    web_entities (MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebEntity]):\n        Deduced entities from similar images on the\n        Internet.\n    full_matching_images (MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebImage]):\n        Fully matching images from the Internet.\n        Can include resized copies of the query image.\n    partial_matching_images (MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebImage]):\n        Partial matching images from the Internet.\n        Those images are similar enough to share some\n        key-point features. For example an original\n        image will likely have partial matching for its\n        crops.\n    pages_with_matching_images (MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebPage]):\n        Web pages containing the matching images from\n        the Internet.\n    visually_similar_images (MutableSequence[google.cloud.vision_v",
      "attributes": {
        "web_entities": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebEntity]",
          "description": "Deduced entities from similar images on the Internet."
        },
        "full_matching_images": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebImage]",
          "description": "Fully matching images from the Internet. Can include resized copies of the query image."
        },
        "partial_matching_images": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebImage]",
          "description": "Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops."
        },
        "pages_with_matching_images": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebPage]",
          "description": "Web pages containing the matching images from the Internet."
        },
        "visually_similar_images": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebImage]",
          "description": "The visually similar image results."
        },
        "best_guess_labels": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebLabel]",
          "description": "Best guess text labels for the request image."
        }
      }
    },
    {
      "type": "request_class",
      "name": "WebEntity",
      "docstring": "Entity deduced from similar images on the Internet.\n\nAttributes:\n    entity_id (str):\n        Opaque entity ID.\n    score (float):\n        Overall relevancy score for the entity.\n        Not normalized and not comparable across\n        different image queries.\n    description (str):\n        Canonical description of the entity, in\n        English.",
      "attributes": {
        "entity_id": {
          "type": "str",
          "description": "Opaque entity ID."
        },
        "score": {
          "type": "float",
          "description": "Overall relevancy score for the entity. Not normalized and not comparable across different image queries."
        },
        "description": {
          "type": "str",
          "description": "Canonical description of the entity, in English."
        }
      }
    },
    {
      "type": "request_class",
      "name": "WebImage",
      "docstring": "Metadata for online images.\n\nAttributes:\n    url (str):\n        The result image URL.\n    score (float):\n        (Deprecated) Overall relevancy score for the\n        image.",
      "attributes": {
        "url": {
          "type": "str",
          "description": "The result image URL."
        },
        "score": {
          "type": "float",
          "description": "(Deprecated) Overall relevancy score for the image."
        }
      }
    },
    {
      "type": "request_class",
      "name": "WebPage",
      "docstring": "Metadata for web pages.\n\nAttributes:\n    url (str):\n        The result web page URL.\n    score (float):\n        (Deprecated) Overall relevancy score for the\n        web page.\n    page_title (str):\n        Title for the web page, may contain HTML\n        markups.\n    full_matching_images (MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebImage]):\n        Fully matching images on the page.\n        Can include resized copies of the query image.\n    partial_matching_images (MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebImage]):\n        Partial matching images on the page.\n        Those images are similar enough to share some\n        key-point features. For example an original\n        image will likely have partial matching for its\n        crops.",
      "attributes": {
        "url": {
          "type": "str",
          "description": "The result web page URL."
        },
        "score": {
          "type": "float",
          "description": "(Deprecated) Overall relevancy score for the web page."
        },
        "page_title": {
          "type": "str",
          "description": "Title for the web page, may contain HTML markups."
        },
        "full_matching_images": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebImage]",
          "description": "Fully matching images on the page. Can include resized copies of the query image."
        },
        "partial_matching_images": {
          "type": "MutableSequence[google.cloud.vision_v1p2beta1.types.WebDetection.WebImage]",
          "description": "Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops."
        }
      }
    },
    {
      "type": "request_class",
      "name": "WebLabel",
      "docstring": "Label to provide extra metadata for the web detection.\n\nAttributes:\n    label (str):\n        Label for extra metadata.\n    language_code (str):\n        The BCP-47 language code for ``label``, such as \"en-US\" or\n        \"sr-Latn\". For more information, see\n        http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
      "attributes": {
        "label": {
          "type": "str",
          "description": "Label for extra metadata."
        },
        "language_code": {
          "type": "str",
          "description": "The BCP-47 language code for ``label``, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      }
    }
  ]
}