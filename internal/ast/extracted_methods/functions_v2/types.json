{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-functions\\google\\cloud\\functions_v2\\types\\functions.py": [
    {
      "type": "request_class",
      "name": "Function",
      "docstring": "Describes a Cloud Function that contains user computation\nexecuted in response to an event. It encapsulates function and\ntrigger configurations.\n\nAttributes:\n    name (str):\n        A user-defined name of the function. Function names must be\n        unique globally and match pattern\n        ``projects/*/locations/*/functions/*``\n    description (str):\n        User-provided description of a function.\n    build_config (google.cloud.functions_v2.types.BuildConfig):\n        Describes the Build step of the function that\n        builds a container from the given source.\n    service_config (google.cloud.functions_v2.types.ServiceConfig):\n        Describes the Service being deployed.\n        Currently deploys services to Cloud Run (fully\n        managed).\n    event_trigger (google.cloud.functions_v2.types.EventTrigger):\n        An Eventarc trigger managed by Google Cloud\n        Functions that fires events in response to a\n        condition in another service.\n    state (google.cloud.functions_v2.types.Function.State",
      "attributes": {
        "name": {
          "type": "str",
          "description": "A user-defined name of the function. Function names must be unique globally and match pattern ``projects/*/locations/*/functions/*``"
        },
        "description": {
          "type": "str",
          "description": "User-provided description of a function."
        },
        "build_config": {
          "type": "google.cloud.functions_v2.types.BuildConfig",
          "description": "Describes the Build step of the function that builds a container from the given source."
        },
        "service_config": {
          "type": "google.cloud.functions_v2.types.ServiceConfig",
          "description": "Describes the Service being deployed. Currently deploys services to Cloud Run (fully managed)."
        },
        "event_trigger": {
          "type": "google.cloud.functions_v2.types.EventTrigger",
          "description": "An Eventarc trigger managed by Google Cloud Functions that fires events in response to a condition in another service."
        },
        "state": {
          "type": "google.cloud.functions_v2.types.Function.State",
          "description": "Output only. State of the function."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The last update timestamp of a Cloud Function."
        },
        "labels": {
          "type": "MutableMapping[str, str]",
          "description": "Labels associated with this Cloud Function."
        },
        "state_messages": {
          "type": "MutableSequence[google.cloud.functions_v2.types.StateMessage]",
          "description": "Output only. State Messages for this Cloud Function."
        },
        "environment": {
          "type": "google.cloud.functions_v2.types.Environment",
          "description": "Describe whether the function is 1st Gen or 2nd Gen."
        },
        "url": {
          "type": "str",
          "description": "Output only. The deployed url for the function."
        },
        "kms_key_name": {
          "type": "str",
          "description": "[Preview] Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.  It must match the pattern ``projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}``."
        },
        "satisfies_pzs": {
          "type": "bool",
          "description": "Output only. Reserved for future use."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The create timestamp of a Cloud Function. This is only applicable to 2nd Gen functions."
        }
      }
    },
    {
      "type": "request_class",
      "name": "StateMessage",
      "docstring": "Informational messages about the state of the Cloud Function\nor Operation.\n\nAttributes:\n    severity (google.cloud.functions_v2.types.StateMessage.Severity):\n        Severity of the state message.\n    type_ (str):\n        One-word CamelCase type of the state message.\n    message (str):\n        The message.",
      "attributes": {
        "severity": {
          "type": "google.cloud.functions_v2.types.StateMessage.Severity",
          "description": "Severity of the state message."
        },
        "type_": {
          "type": "str",
          "description": "One-word CamelCase type of the state message."
        },
        "message": {
          "type": "str",
          "description": "The message."
        }
      }
    },
    {
      "type": "request_class",
      "name": "StorageSource",
      "docstring": "Location of the source in an archive file in Google Cloud\nStorage.\n\nAttributes:\n    bucket (str):\n        Google Cloud Storage bucket containing the source (see\n        `Bucket Name\n        Requirements <https://cloud.google.com/storage/docs/bucket-naming#requirements>`__).\n    object_ (str):\n        Google Cloud Storage object containing the source.\n\n        This object must be a gzipped archive file (``.tar.gz``)\n        containing source to build.\n    generation (int):\n        Google Cloud Storage generation for the\n        object. If the generation is omitted, the latest\n        generation will be used.\n    source_upload_url (str):\n        When the specified storage bucket is a 1st\n        gen function uploard url bucket, this field\n        should be set as the generated upload url for\n        1st gen deployment.",
      "attributes": {
        "bucket": {
          "type": "str",
          "description": "Google Cloud Storage bucket containing the source (see `Bucket Name Requirements <https://cloud.google.com/storage/docs/bucket-naming#requirements>`__)."
        },
        "object_": {
          "type": "str",
          "description": "Google Cloud Storage object containing the source.  This object must be a gzipped archive file (``.tar.gz``) containing source to build."
        },
        "generation": {
          "type": "int",
          "description": "Google Cloud Storage generation for the object. If the generation is omitted, the latest generation will be used."
        },
        "source_upload_url": {
          "type": "str",
          "description": "When the specified storage bucket is a 1st gen function uploard url bucket, this field should be set as the generated upload url for 1st gen deployment."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RepoSource",
      "docstring": "Location of the source in a Google Cloud Source Repository.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    branch_name (str):\n        Regex matching branches to build.\n\n        The syntax of the regular expressions accepted\n        is the syntax accepted by RE2 and described at\n        https://github.com/google/re2/wiki/Syntax\n\n        This field is a member of `oneof`_ ``revision``.\n    tag_name (str):\n        Regex matching tags to build.\n\n        The syntax of the regular expressions accepted\n        is the syntax accepted by RE2 and described at\n        https://github.com/google/re2/wiki/Syntax\n\n        This field is a member of `oneof`_ ``revision``.\n    commit_sha (str):\n        Explicit commit SHA to build.\n\n        This fie",
      "attributes": {
        "branch_name": {
          "type": "str",
          "description": "Regex matching branches to build.  The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax  This field is a member of `oneof`_ ``revision``."
        },
        "tag_name": {
          "type": "str",
          "description": "Regex matching tags to build.  The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax  This field is a member of `oneof`_ ``revision``."
        },
        "commit_sha": {
          "type": "str",
          "description": "Explicit commit SHA to build.  This field is a member of `oneof`_ ``revision``."
        },
        "project_id": {
          "type": "str",
          "description": "ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed."
        },
        "repo_name": {
          "type": "str",
          "description": "Name of the Cloud Source Repository."
        },
        "dir_": {
          "type": "str",
          "description": "Directory, relative to the source root, in which to run the build.  This must be a relative path. If a step's ``dir`` is specified and is an absolute path, this value is ignored for that step's execution. eg. helloworld (no leading slash allowed)"
        },
        "invert_regex": {
          "type": "bool",
          "description": "Only trigger a build if the revision regex does NOT match the revision regex."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Source",
      "docstring": "The location of the function source code.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    storage_source (google.cloud.functions_v2.types.StorageSource):\n        If provided, get the source from this\n        location in Google Cloud Storage.\n\n        This field is a member of `oneof`_ ``source``.\n    repo_source (google.cloud.functions_v2.types.RepoSource):\n        If provided, get the source from this\n        location in a Cloud Source Repository.\n\n        This field is a member of `oneof`_ ``source``.\n    git_uri (str):\n        If provided, get the source from GitHub\n        repository. This option is valid only for GCF\n        1st Gen function. Example:\n        https://github.com/<user>/<repo>/blob/<commit>/<path-to-code>\n\n      ",
      "attributes": {
        "storage_source": {
          "type": "google.cloud.functions_v2.types.StorageSource",
          "description": "If provided, get the source from this location in Google Cloud Storage.  This field is a member of `oneof`_ ``source``."
        },
        "repo_source": {
          "type": "google.cloud.functions_v2.types.RepoSource",
          "description": "If provided, get the source from this location in a Cloud Source Repository.  This field is a member of `oneof`_ ``source``."
        },
        "git_uri": {
          "type": "str",
          "description": "If provided, get the source from GitHub repository. This option is valid only for GCF 1st Gen function. Example: https://github.com/<user>/<repo>/blob/<commit>/<path-to-code>  This field is a member of `oneof`_ ``source``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SourceProvenance",
      "docstring": "Provenance of the source. Ways to find the original source,\nor verify that some source was used for this build.\n\nAttributes:\n    resolved_storage_source (google.cloud.functions_v2.types.StorageSource):\n        A copy of the build's ``source.storage_source``, if exists,\n        with any generations resolved.\n    resolved_repo_source (google.cloud.functions_v2.types.RepoSource):\n        A copy of the build's ``source.repo_source``, if exists,\n        with any revisions resolved.\n    git_uri (str):\n        A copy of the build's ``source.git_uri``, if exists, with\n        any commits resolved.",
      "attributes": {
        "resolved_storage_source": {
          "type": "google.cloud.functions_v2.types.StorageSource",
          "description": "A copy of the build's ``source.storage_source``, if exists, with any generations resolved."
        },
        "resolved_repo_source": {
          "type": "google.cloud.functions_v2.types.RepoSource",
          "description": "A copy of the build's ``source.repo_source``, if exists, with any revisions resolved."
        },
        "git_uri": {
          "type": "str",
          "description": "A copy of the build's ``source.git_uri``, if exists, with any commits resolved."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BuildConfig",
      "docstring": "Describes the Build step of the function that builds a\ncontainer from the given source.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    automatic_update_policy (google.cloud.functions_v2.types.AutomaticUpdatePolicy):\n\n        This field is a member of `oneof`_ ``runtime_update_policy``.\n    on_deploy_update_policy (google.cloud.functions_v2.types.OnDeployUpdatePolicy):\n\n        This field is a member of `oneof`_ ``runtime_update_policy``.\n    build (str):\n        Output only. The Cloud Build name of the\n        latest successful deployment of the function.\n    runtime (str):\n        The runtime in which to run the function. Required when\n        deploying a new function, optional when updating an existing\n        function. For a com",
      "attributes": {
        "automatic_update_policy": {
          "type": "google.cloud.functions_v2.types.AutomaticUpdatePolicy",
          "description": "This field is a member of `oneof`_ ``runtime_update_policy``."
        },
        "on_deploy_update_policy": {
          "type": "google.cloud.functions_v2.types.OnDeployUpdatePolicy",
          "description": "This field is a member of `oneof`_ ``runtime_update_policy``."
        },
        "build": {
          "type": "str",
          "description": "Output only. The Cloud Build name of the latest successful deployment of the function."
        },
        "runtime": {
          "type": "str",
          "description": "The runtime in which to run the function. Required when deploying a new function, optional when updating an existing function. For a complete list of possible choices, see the ```gcloud`` command reference <https://cloud.google.com/sdk/gcloud/reference/functions/deploy#--runtime>`__."
        },
        "entry_point": {
          "type": "str",
          "description": "The name of the function (as defined in source code) that will be executed. Defaults to the resource name suffix, if not specified. For backward compatibility, if function with given name is not found, then the system will try to use function named \"function\". For Node.js this is name of a function exported by the module specified in ``source_location``."
        },
        "source": {
          "type": "google.cloud.functions_v2.types.Source",
          "description": "The location of the function source code."
        },
        "source_provenance": {
          "type": "google.cloud.functions_v2.types.SourceProvenance",
          "description": "Output only. A permanent fixed identifier for source."
        },
        "worker_pool": {
          "type": "str",
          "description": "Name of the Cloud Build Custom Worker Pool that should be used to build the function. The format of this field is ``projects/{project}/locations/{region}/workerPools/{workerPool}`` where {project} and {region} are the project id and region respectively where the worker pool is defined and {workerPool} is the short name of the worker pool.  If the project id is not the same as the function, then the Cloud Functions Service Agent (service-<project_number>@gcf-admin-robot.iam.gserviceaccount.com) must be granted the role Cloud Build Custom Workers Builder (roles/cloudbuild.customworkers.builder) in the project."
        },
        "environment_variables": {
          "type": "MutableMapping[str, str]",
          "description": "User-provided build-time environment variables for the function"
        },
        "docker_registry": {
          "type": "google.cloud.functions_v2.types.BuildConfig.DockerRegistry",
          "description": "Docker Registry to use for this deployment. This configuration is only applicable to 1st Gen functions, 2nd Gen functions can only use Artifact Registry.  If unspecified, it defaults to ``ARTIFACT_REGISTRY``. If ``docker_repository`` field is specified, this field should either be left unspecified or set to ``ARTIFACT_REGISTRY``."
        },
        "docker_repository": {
          "type": "str",
          "description": "Repository in Artifact Registry to which the function docker image will be pushed after it is built by Cloud Build. If specified by user, it is created and managed by user with a customer managed encryption key. Otherwise, GCF will create and use a repository named 'gcf-artifacts' for every deployed region.  It must match the pattern ``projects/{project}/locations/{location}/repositories/{repository}``.  Cross-project repositories are not supported. Cross-location repositories are not supported. Repository format must be 'DOCKER'."
        },
        "service_account": {
          "type": "str",
          "description": "Service account to be used for building the container. The format of this field is ``projects/{projectId}/serviceAccounts/{serviceAccountEmail}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ServiceConfig",
      "docstring": "Describes the Service being deployed.\nCurrently Supported : Cloud Run (fully managed).\n\nAttributes:\n    service (str):\n        Output only. Name of the service associated with a Function.\n        The format of this field is\n        ``projects/{project}/locations/{region}/services/{service}``\n    timeout_seconds (int):\n        The function execution timeout. Execution is\n        considered failed and can be terminated if the\n        function is not completed at the end of the\n        timeout period. Defaults to 60 seconds.\n    available_memory (str):\n        The amount of memory available for a\n        function. Defaults to 256M. Supported units are\n        k, M, G, Mi, Gi. If no unit is supplied the\n        value is interpreted as bytes.\n        See\n        https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go\n        a full description.\n    available_cpu (str):\n        The number of CPUs used in a single container\n        instance. Default value is ",
      "attributes": {
        "service": {
          "type": "str",
          "description": "Output only. Name of the service associated with a Function. The format of this field is ``projects/{project}/locations/{region}/services/{service}``"
        },
        "timeout_seconds": {
          "type": "int",
          "description": "The function execution timeout. Execution is considered failed and can be terminated if the function is not completed at the end of the timeout period. Defaults to 60 seconds."
        },
        "available_memory": {
          "type": "str",
          "description": "The amount of memory available for a function. Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is supplied the value is interpreted as bytes. See https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go a full description."
        },
        "available_cpu": {
          "type": "str",
          "description": "The number of CPUs used in a single container instance. Default value is calculated from available memory. Supports the same values as Cloud Run, see https://cloud.google.com/run/docs/reference/rest/v1/Container#resourcerequirements Example: \"1\" indicates 1 vCPU"
        },
        "environment_variables": {
          "type": "MutableMapping[str, str]",
          "description": "Environment variables that shall be available during function execution."
        },
        "max_instance_count": {
          "type": "int",
          "description": "The limit on the maximum number of function instances that may coexist at a given time.  In some cases, such as rapid traffic surges, Cloud Functions may, for a short period of time, create more instances than the specified max instances limit. If your function cannot tolerate this temporary behavior, you may want to factor in a safety margin and set a lower max instances value than your function can tolerate.  See the `Max Instances <https://cloud.google.com/functions/docs/max-instances>`__ Guide for more details."
        },
        "min_instance_count": {
          "type": "int",
          "description": "The limit on the minimum number of function instances that may coexist at a given time.  Function instances are kept in idle state for a short period after they finished executing the request to reduce cold start time for subsequent requests. Setting a minimum instance count will ensure that the given number of instances are kept running in idle state always. This can help with cold start times when jump in incoming request count occurs after the idle instance would have been stopped in the default case."
        },
        "vpc_connector": {
          "type": "str",
          "description": "The Serverless VPC Access connector that this cloud function can connect to. The format of this field is ``projects/*/locations/*/connectors/*``."
        },
        "vpc_connector_egress_settings": {
          "type": "google.cloud.functions_v2.types.ServiceConfig.VpcConnectorEgressSettings",
          "description": "The egress settings for the connector, controlling what traffic is diverted through it."
        },
        "ingress_settings": {
          "type": "google.cloud.functions_v2.types.ServiceConfig.IngressSettings",
          "description": "The ingress settings for the function, controlling what traffic can reach it."
        },
        "uri": {
          "type": "str",
          "description": "Output only. URI of the Service deployed."
        },
        "service_account_email": {
          "type": "str",
          "description": "The email of the service's service account. If empty, defaults to ``{project_number}-compute@developer.gserviceaccount.com``."
        },
        "all_traffic_on_latest_revision": {
          "type": "bool",
          "description": "Whether 100% of traffic is routed to the latest revision. On CreateFunction and UpdateFunction, when set to true, the revision being deployed will serve 100% of traffic, ignoring any traffic split settings, if any. On GetFunction, true will be returned if the latest revision is serving 100% of traffic."
        },
        "secret_environment_variables": {
          "type": "MutableSequence[google.cloud.functions_v2.types.SecretEnvVar]",
          "description": "Secret environment variables configuration."
        },
        "secret_volumes": {
          "type": "MutableSequence[google.cloud.functions_v2.types.SecretVolume]",
          "description": "Secret volumes configuration."
        },
        "revision": {
          "type": "str",
          "description": "Output only. The name of service revision."
        },
        "max_instance_request_concurrency": {
          "type": "int",
          "description": "Sets the maximum number of concurrent requests that each instance can receive. Defaults to 1."
        },
        "security_level": {
          "type": "google.cloud.functions_v2.types.ServiceConfig.SecurityLevel",
          "description": "Security level configure whether the function only accepts https. This configuration is only applicable to 1st Gen functions with Http trigger. By default https is optional for 1st Gen functions; 2nd Gen functions are https ONLY."
        },
        "binary_authorization_policy": {
          "type": "str",
          "description": "Optional. The binary authorization policy to be checked when deploying the Cloud Run service."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SecretEnvVar",
      "docstring": "Configuration for a secret environment variable. It has the\ninformation necessary to fetch the secret value from secret\nmanager and expose it as an environment variable.\n\nAttributes:\n    key (str):\n        Name of the environment variable.\n    project_id (str):\n        Project identifier (preferably project number\n        but can also be the project ID) of the project\n        that contains the secret. If not set, it is\n        assumed that the secret is in the same project\n        as the function.\n    secret (str):\n        Name of the secret in secret manager (not the\n        full resource name).\n    version (str):\n        Version of the secret (version number or the\n        string 'latest'). It is recommended to use a\n        numeric version for secret environment variables\n        as any updates to the secret value is not\n        reflected until new instances start.",
      "attributes": {
        "key": {
          "type": "str",
          "description": "Name of the environment variable."
        },
        "project_id": {
          "type": "str",
          "description": "Project identifier (preferably project number but can also be the project ID) of the project that contains the secret. If not set, it is assumed that the secret is in the same project as the function."
        },
        "secret": {
          "type": "str",
          "description": "Name of the secret in secret manager (not the full resource name)."
        },
        "version": {
          "type": "str",
          "description": "Version of the secret (version number or the string 'latest'). It is recommended to use a numeric version for secret environment variables as any updates to the secret value is not reflected until new instances start."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SecretVolume",
      "docstring": "Configuration for a secret volume. It has the information\nnecessary to fetch the secret value from secret manager and make\nit available as files mounted at the requested paths within the\napplication container.\n\nAttributes:\n    mount_path (str):\n        The path within the container to mount the secret volume.\n        For example, setting the mount_path as ``/etc/secrets``\n        would mount the secret value files under the\n        ``/etc/secrets`` directory. This directory will also be\n        completely shadowed and unavailable to mount any other\n        secrets. Recommended mount path: /etc/secrets\n    project_id (str):\n        Project identifier (preferably project number\n        but can also be the project ID) of the project\n        that contains the secret. If not set, it is\n        assumed that the secret is in the same project\n        as the function.\n    secret (str):\n        Name of the secret in secret manager (not the\n        full resource name).\n    versions (MutableSequence[google.cloud.function",
      "attributes": {
        "mount_path": {
          "type": "str",
          "description": "The path within the container to mount the secret volume. For example, setting the mount_path as ``/etc/secrets`` would mount the secret value files under the ``/etc/secrets`` directory. This directory will also be completely shadowed and unavailable to mount any other secrets. Recommended mount path: /etc/secrets"
        },
        "project_id": {
          "type": "str",
          "description": "Project identifier (preferably project number but can also be the project ID) of the project that contains the secret. If not set, it is assumed that the secret is in the same project as the function."
        },
        "secret": {
          "type": "str",
          "description": "Name of the secret in secret manager (not the full resource name)."
        },
        "versions": {
          "type": "MutableSequence[google.cloud.functions_v2.types.SecretVolume.SecretVersion]",
          "description": "List of secret versions to mount for this secret. If empty, the ``latest`` version of the secret will be made available in a file named after the secret under the mount point."
        }
      }
    },
    {
      "type": "request_class",
      "name": "EventTrigger",
      "docstring": "Describes EventTrigger, used to request events to be sent\nfrom another service.\n\nAttributes:\n    trigger (str):\n        Output only. The resource name of the Eventarc trigger. The\n        format of this field is\n        ``projects/{project}/locations/{region}/triggers/{trigger}``.\n    trigger_region (str):\n        The region that the trigger will be in. The\n        trigger will only receive events originating in\n        this region. It can be the same region as the\n        function, a different region or multi-region, or\n        the global region. If not provided, defaults to\n        the same region as the function.\n    event_type (str):\n        Required. The type of event to observe. For example:\n        ``google.cloud.audit.log.v1.written`` or\n        ``google.cloud.pubsub.topic.v1.messagePublished``.\n    event_filters (MutableSequence[google.cloud.functions_v2.types.EventFilter]):\n        Criteria used to filter events.\n    pubsub_topic (str):\n        Optional. The name of a Pub/Sub topic in the same proje",
      "attributes": {
        "trigger": {
          "type": "str",
          "description": "Output only. The resource name of the Eventarc trigger. The format of this field is ``projects/{project}/locations/{region}/triggers/{trigger}``."
        },
        "trigger_region": {
          "type": "str",
          "description": "The region that the trigger will be in. The trigger will only receive events originating in this region. It can be the same region as the function, a different region or multi-region, or the global region. If not provided, defaults to the same region as the function."
        },
        "event_type": {
          "type": "str",
          "description": "Required. The type of event to observe. For example: ``google.cloud.audit.log.v1.written`` or ``google.cloud.pubsub.topic.v1.messagePublished``."
        },
        "event_filters": {
          "type": "MutableSequence[google.cloud.functions_v2.types.EventFilter]",
          "description": "Criteria used to filter events."
        },
        "pubsub_topic": {
          "type": "str",
          "description": "Optional. The name of a Pub/Sub topic in the same project that will be used as the transport topic for the event delivery. Format: ``projects/{project}/topics/{topic}``.  This is only valid for events of type ``google.cloud.pubsub.topic.v1.messagePublished``. The topic provided here will not be deleted at function deletion."
        },
        "service_account_email": {
          "type": "str",
          "description": "Optional. The email of the trigger's service account. The service account must have permission to invoke Cloud Run services, the permission is ``run.routes.invoke``. If empty, defaults to the Compute Engine default service account: ``{project_number}-compute@developer.gserviceaccount.com``."
        },
        "retry_policy": {
          "type": "google.cloud.functions_v2.types.EventTrigger.RetryPolicy",
          "description": "Optional. If unset, then defaults to ignoring failures (i.e. not retrying them)."
        },
        "channel": {
          "type": "str",
          "description": "Optional. The name of the channel associated with the trigger in ``projects/{project}/locations/{location}/channels/{channel}`` format. You must provide a channel to receive events from Eventarc SaaS partners."
        },
        "service": {
          "type": "str",
          "description": "Optional. The hostname of the service that 1st Gen function should be observed.  If no string is provided, the default service implementing the API will be used. For example, ``storage.googleapis.com`` is the default for all event types in the ``google.storage`` namespace.  The field is only applicable to 1st Gen functions."
        }
      }
    },
    {
      "type": "request_class",
      "name": "EventFilter",
      "docstring": "Filters events based on exact matches on the CloudEvents\nattributes.\n\nAttributes:\n    attribute (str):\n        Required. The name of a CloudEvents\n        attribute.\n    value (str):\n        Required. The value for the attribute.\n    operator (str):\n        Optional. The operator used for matching the events with the\n        value of the filter. If not specified, only events that have\n        an exact key-value pair specified in the filter are matched.\n        The only allowed value is ``match-path-pattern``.",
      "attributes": {
        "attribute": {
          "type": "str",
          "description": "Required. The name of a CloudEvents attribute."
        },
        "value": {
          "type": "str",
          "description": "Required. The value for the attribute."
        },
        "operator": {
          "type": "str",
          "description": "Optional. The operator used for matching the events with the value of the filter. If not specified, only events that have an exact key-value pair specified in the filter are matched. The only allowed value is ``match-path-pattern``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetFunctionRequest",
      "docstring": "Request for the ``GetFunction`` method.\n\nAttributes:\n    name (str):\n        Required. The name of the function which\n        details should be obtained.\n    revision (str):\n        Optional. The version of the 1st gen function\n        whose details should be obtained. The version of\n        a 1st gen function is an integer that starts\n        from 1 and gets incremented on redeployments.\n        GCF may keep historical configs for old versions\n        of 1st gen function. This field can be specified\n        to fetch the historical configs. This field is\n        valid only for GCF 1st gen function.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the function which details should be obtained."
        },
        "revision": {
          "type": "str",
          "description": "Optional. The version of the 1st gen function whose details should be obtained. The version of a 1st gen function is an integer that starts from 1 and gets incremented on redeployments. GCF may keep historical configs for old versions of 1st gen function. This field can be specified to fetch the historical configs. This field is valid only for GCF 1st gen function."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListFunctionsRequest",
      "docstring": "Request for the ``ListFunctions`` method.\n\nAttributes:\n    parent (str):\n        Required. The project and location from which the function\n        should be listed, specified in the format\n        ``projects/*/locations/*`` If you want to list functions in\n        all locations, use \"-\" in place of a location. When listing\n        functions in all locations, if one or more location(s) are\n        unreachable, the response will contain functions from all\n        reachable locations along with the names of any unreachable\n        locations.\n    page_size (int):\n        Maximum number of functions to return per call. The largest\n        allowed page_size is 1,000, if the page_size is omitted or\n        specified as greater than 1,000 then it will be replaced as\n        1,000. The size of the list response can be less than\n        specified when used with filters.\n    page_token (str):\n        The value returned by the last ``ListFunctionsResponse``;\n        indicates that this is a continuation of a prior\n     ",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project and location from which the function should be listed, specified in the format ``projects/*/locations/*`` If you want to list functions in all locations, use \"-\" in place of a location. When listing functions in all locations, if one or more location(s) are unreachable, the response will contain functions from all reachable locations along with the names of any unreachable locations."
        },
        "page_size": {
          "type": "int",
          "description": "Maximum number of functions to return per call. The largest allowed page_size is 1,000, if the page_size is omitted or specified as greater than 1,000 then it will be replaced as 1,000. The size of the list response can be less than specified when used with filters."
        },
        "page_token": {
          "type": "str",
          "description": "The value returned by the last ``ListFunctionsResponse``; indicates that this is a continuation of a prior ``ListFunctions`` call, and that the system should return the next page of data."
        },
        "filter": {
          "type": "str",
          "description": "The filter for Functions that match the filter expression, following the syntax outlined in https://google.aip.dev/160."
        },
        "order_by": {
          "type": "str",
          "description": "The sorting order of the resources returned. Value should be a comma separated list of fields. The default sorting oder is ascending. See https://google.aip.dev/132#ordering."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListFunctionsResponse",
      "docstring": "Response for the ``ListFunctions`` method.\n\nAttributes:\n    functions (MutableSequence[google.cloud.functions_v2.types.Function]):\n        The functions that match the request.\n    next_page_token (str):\n        A token, which can be sent as ``page_token`` to retrieve the\n        next page. If this field is omitted, there are no subsequent\n        pages.\n    unreachable (MutableSequence[str]):\n        Locations that could not be reached. The\n        response does not include any functions from\n        these locations.",
      "attributes": {
        "functions": {
          "type": "MutableSequence[google.cloud.functions_v2.types.Function]",
          "description": "The functions that match the request."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token, which can be sent as ``page_token`` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Locations that could not be reached. The response does not include any functions from these locations."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateFunctionRequest",
      "docstring": "Request for the ``CreateFunction`` method.\n\nAttributes:\n    parent (str):\n        Required. The project and location in which the function\n        should be created, specified in the format\n        ``projects/*/locations/*``\n    function (google.cloud.functions_v2.types.Function):\n        Required. Function to be created.\n    function_id (str):\n        The ID to use for the function, which will become the final\n        component of the function's resource name.\n\n        This value should be 4-63 characters, and valid characters\n        are /[a-z][0-9]-/.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project and location in which the function should be created, specified in the format ``projects/*/locations/*``"
        },
        "function": {
          "type": "google.cloud.functions_v2.types.Function",
          "description": "Required. Function to be created."
        },
        "function_id": {
          "type": "str",
          "description": "The ID to use for the function, which will become the final component of the function's resource name.  This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateFunctionRequest",
      "docstring": "Request for the ``UpdateFunction`` method.\n\nAttributes:\n    function (google.cloud.functions_v2.types.Function):\n        Required. New version of the function.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to be updated.\n        If no field mask is provided, all fields will be\n        updated.",
      "attributes": {
        "function": {
          "type": "google.cloud.functions_v2.types.Function",
          "description": "Required. New version of the function."
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "The list of fields to be updated. If no field mask is provided, all fields will be updated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteFunctionRequest",
      "docstring": "Request for the ``DeleteFunction`` method.\n\nAttributes:\n    name (str):\n        Required. The name of the function which\n        should be deleted.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the function which should be deleted."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GenerateUploadUrlRequest",
      "docstring": "Request of ``GenerateSourceUploadUrl`` method.\n\nAttributes:\n    parent (str):\n        Required. The project and location in which the Google Cloud\n        Storage signed URL should be generated, specified in the\n        format ``projects/*/locations/*``.\n    kms_key_name (str):\n        [Preview] Resource name of a KMS crypto key (managed by the\n        user) used to encrypt/decrypt function source code objects\n        in intermediate Cloud Storage buckets. When you generate an\n        upload url and upload your source code, it gets copied to an\n        intermediate Cloud Storage bucket. The source code is then\n        copied to a versioned directory in the sources bucket in the\n        consumer project during the function deployment.\n\n        It must match the pattern\n        ``projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}``.\n\n        The Google Cloud Functions service account\n        (service-{project_number}@gcf-admin-robot.iam.gserviceaccount.com)\n        must be grant",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project and location in which the Google Cloud Storage signed URL should be generated, specified in the format ``projects/*/locations/*``."
        },
        "kms_key_name": {
          "type": "str",
          "description": "[Preview] Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function source code objects in intermediate Cloud Storage buckets. When you generate an upload url and upload your source code, it gets copied to an intermediate Cloud Storage bucket. The source code is then copied to a versioned directory in the sources bucket in the consumer project during the function deployment.  It must match the pattern ``projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}``.  The Google Cloud Functions service account (service-{project_number}@gcf-admin-robot.iam.gserviceaccount.com) must be granted the role 'Cloud KMS CryptoKey Encrypter/Decrypter (roles/cloudkms.cryptoKeyEncrypterDecrypter)' on the Key/KeyRing/Project/Organization (least access preferred)."
        },
        "environment": {
          "type": "google.cloud.functions_v2.types.Environment",
          "description": "The function environment the generated upload url will be used for. The upload url for 2nd Gen functions can also be used for 1st gen functions, but not vice versa. If not specified, 2nd generation-style upload URLs are generated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GenerateUploadUrlResponse",
      "docstring": "Response of ``GenerateSourceUploadUrl`` method.\n\nAttributes:\n    upload_url (str):\n        The generated Google Cloud Storage signed URL\n        that should be used for a function source code\n        upload. The uploaded file should be a zip\n        archive which contains a function.\n    storage_source (google.cloud.functions_v2.types.StorageSource):\n        The location of the source code in the upload bucket.\n\n        Once the archive is uploaded using the ``upload_url`` use\n        this field to set the\n        ``function.build_config.source.storage_source`` during\n        CreateFunction and UpdateFunction.\n\n        Generation defaults to 0, as Cloud Storage provides a new\n        generation only upon uploading a new object or version of an\n        object.",
      "attributes": {
        "upload_url": {
          "type": "str",
          "description": "The generated Google Cloud Storage signed URL that should be used for a function source code upload. The uploaded file should be a zip archive which contains a function."
        },
        "storage_source": {
          "type": "google.cloud.functions_v2.types.StorageSource",
          "description": "The location of the source code in the upload bucket.  Once the archive is uploaded using the ``upload_url`` use this field to set the ``function.build_config.source.storage_source`` during CreateFunction and UpdateFunction.  Generation defaults to 0, as Cloud Storage provides a new generation only upon uploading a new object or version of an object."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GenerateDownloadUrlRequest",
      "docstring": "Request of ``GenerateDownloadUrl`` method.\n\nAttributes:\n    name (str):\n        Required. The name of function for which\n        source code Google Cloud Storage signed URL\n        should be generated.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of function for which source code Google Cloud Storage signed URL should be generated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GenerateDownloadUrlResponse",
      "docstring": "Response of ``GenerateDownloadUrl`` method.\n\nAttributes:\n    download_url (str):\n        The generated Google Cloud Storage signed URL\n        that should be used for function source code\n        download.",
      "attributes": {
        "download_url": {
          "type": "str",
          "description": "The generated Google Cloud Storage signed URL that should be used for function source code download."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListRuntimesRequest",
      "docstring": "Request for the ``ListRuntimes`` method.\n\nAttributes:\n    parent (str):\n        Required. The project and location from which the runtimes\n        should be listed, specified in the format\n        ``projects/*/locations/*``\n    filter (str):\n        The filter for Runtimes that match the filter\n        expression, following the syntax outlined in\n        https://google.aip.dev/160.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project and location from which the runtimes should be listed, specified in the format ``projects/*/locations/*``"
        },
        "filter": {
          "type": "str",
          "description": "The filter for Runtimes that match the filter expression, following the syntax outlined in https://google.aip.dev/160."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListRuntimesResponse",
      "docstring": "Response for the ``ListRuntimes`` method.\n\nAttributes:\n    runtimes (MutableSequence[google.cloud.functions_v2.types.ListRuntimesResponse.Runtime]):\n        The runtimes that match the request.",
      "attributes": {
        "runtimes": {
          "type": "MutableSequence[google.cloud.functions_v2.types.ListRuntimesResponse.Runtime]",
          "description": "The runtimes that match the request."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AutomaticUpdatePolicy",
      "docstring": "Security patches are applied automatically to the runtime\nwithout requiring the function to be redeployed.",
      "attributes": {}
    },
    {
      "type": "request_class",
      "name": "OnDeployUpdatePolicy",
      "docstring": "Security patches are only applied when a function is\nredeployed.\n\nAttributes:\n    runtime_version (str):\n        Output only. contains the runtime version\n        which was used during latest function\n        deployment.",
      "attributes": {
        "runtime_version": {
          "type": "str",
          "description": "Output only. contains the runtime version which was used during latest function deployment."
        }
      }
    },
    {
      "type": "request_class",
      "name": "OperationMetadata",
      "docstring": "Represents the metadata of the long-running operation.\n\nAttributes:\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time the operation was created.\n    end_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time the operation finished running.\n    target (str):\n        Server-defined resource path for the target\n        of the operation.\n    verb (str):\n        Name of the verb executed by the operation.\n    status_detail (str):\n        Human-readable status of the operation, if\n        any.\n    cancel_requested (bool):\n        Identifies whether the user has requested cancellation of\n        the operation. Operations that have successfully been\n        cancelled have\n        [google.longrunning.Operation.error][google.longrunning.Operation.error]\n        value with a\n        [google.rpc.Status.code][google.rpc.Status.code] of 1,\n        corresponding to ``Code.CANCELLED``.\n    api_version (str):\n        API version used to start the operation.\n    request_resource (google.prot",
      "attributes": {
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The time the operation was created."
        },
        "end_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The time the operation finished running."
        },
        "target": {
          "type": "str",
          "description": "Server-defined resource path for the target of the operation."
        },
        "verb": {
          "type": "str",
          "description": "Name of the verb executed by the operation."
        },
        "status_detail": {
          "type": "str",
          "description": "Human-readable status of the operation, if any."
        },
        "cancel_requested": {
          "type": "bool",
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have [google.longrunning.Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to ``Code.CANCELLED``."
        },
        "api_version": {
          "type": "str",
          "description": "API version used to start the operation."
        },
        "request_resource": {
          "type": "google.protobuf.any_pb2.Any",
          "description": "The original request that started the operation."
        },
        "stages": {
          "type": "MutableSequence[google.cloud.functions_v2.types.Stage]",
          "description": "Mechanism for reporting in-progress stages"
        },
        "source_token": {
          "type": "str",
          "description": "An identifier for Firebase function sources. Disclaimer: This field is only supported for Firebase function deployments."
        },
        "build_name": {
          "type": "str",
          "description": "The build name of the function for create and update operations."
        },
        "operation_type": {
          "type": "google.cloud.functions_v2.types.OperationType",
          "description": "The operation type."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LocationMetadata",
      "docstring": "Extra GCF specific location information.\n\nAttributes:\n    environments (MutableSequence[google.cloud.functions_v2.types.Environment]):\n        The Cloud Function environments this location\n        supports.",
      "attributes": {
        "environments": {
          "type": "MutableSequence[google.cloud.functions_v2.types.Environment]",
          "description": "The Cloud Function environments this location supports."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Stage",
      "docstring": "Each Stage of the deployment process\n\nAttributes:\n    name (google.cloud.functions_v2.types.Stage.Name):\n        Name of the Stage. This will be unique for\n        each Stage.\n    message (str):\n        Message describing the Stage\n    state (google.cloud.functions_v2.types.Stage.State):\n        Current state of the Stage\n    resource (str):\n        Resource of the Stage\n    resource_uri (str):\n        Link to the current Stage resource\n    state_messages (MutableSequence[google.cloud.functions_v2.types.StateMessage]):\n        State messages from the current Stage.",
      "attributes": {
        "name": {
          "type": "google.cloud.functions_v2.types.Stage.Name",
          "description": "Name of the Stage. This will be unique for each Stage."
        },
        "message": {
          "type": "str",
          "description": "Message describing the Stage"
        },
        "state": {
          "type": "google.cloud.functions_v2.types.Stage.State",
          "description": "Current state of the Stage"
        },
        "resource": {
          "type": "str",
          "description": "Resource of the Stage"
        },
        "resource_uri": {
          "type": "str",
          "description": "Link to the current Stage resource"
        },
        "state_messages": {
          "type": "MutableSequence[google.cloud.functions_v2.types.StateMessage]",
          "description": "State messages from the current Stage."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SecretVersion",
      "docstring": "Configuration for a single version.\n\nAttributes:\n    version (str):\n        Version of the secret (version number or the string\n        'latest'). It is preferable to use ``latest`` version with\n        secret volumes as secret value changes are reflected\n        immediately.\n    path (str):\n        Relative path of the file under the mount path where the\n        secret value for this version will be fetched and made\n        available. For example, setting the mount_path as\n        '/etc/secrets' and path as ``secret_foo`` would mount the\n        secret value file at ``/etc/secrets/secret_foo``.",
      "attributes": {
        "version": {
          "type": "str",
          "description": "Version of the secret (version number or the string 'latest'). It is preferable to use ``latest`` version with secret volumes as secret value changes are reflected immediately."
        },
        "path": {
          "type": "str",
          "description": "Relative path of the file under the mount path where the secret value for this version will be fetched and made available. For example, setting the mount_path as '/etc/secrets' and path as ``secret_foo`` would mount the secret value file at ``/etc/secrets/secret_foo``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Runtime",
      "docstring": "Describes a runtime and any special information (e.g.,\ndeprecation status) related to it.\n\nAttributes:\n    name (str):\n        The name of the runtime, e.g., 'go113',\n        'nodejs12', etc.\n    display_name (str):\n        The user facing name, eg 'Go 1.13', 'Node.js\n        12', etc.\n    stage (google.cloud.functions_v2.types.ListRuntimesResponse.RuntimeStage):\n        The stage of life this runtime is in, e.g.,\n        BETA, GA, etc.\n    warnings (MutableSequence[str]):\n        Warning messages, e.g., a deprecation\n        warning.\n    environment (google.cloud.functions_v2.types.Environment):\n        The environment for the runtime.\n    deprecation_date (google.type.date_pb2.Date):\n        Deprecation date for the runtime.\n    decommission_date (google.type.date_pb2.Date):\n        Decommission date for the runtime.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The name of the runtime, e.g., 'go113', 'nodejs12', etc."
        },
        "display_name": {
          "type": "str",
          "description": "The user facing name, eg 'Go 1.13', 'Node.js 12', etc."
        },
        "stage": {
          "type": "google.cloud.functions_v2.types.ListRuntimesResponse.RuntimeStage",
          "description": "The stage of life this runtime is in, e.g., BETA, GA, etc."
        },
        "warnings": {
          "type": "MutableSequence[str]",
          "description": "Warning messages, e.g., a deprecation warning."
        },
        "environment": {
          "type": "google.cloud.functions_v2.types.Environment",
          "description": "The environment for the runtime."
        },
        "deprecation_date": {
          "type": "google.type.date_pb2.Date",
          "description": "Deprecation date for the runtime."
        },
        "decommission_date": {
          "type": "google.type.date_pb2.Date",
          "description": "Decommission date for the runtime."
        }
      }
    }
  ]
}