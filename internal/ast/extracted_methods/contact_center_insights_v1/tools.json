{
  "ContactCenterInsights": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_conversation",
          "description": "Creates a conversation. Note that this method does not support\naudio transcription or redaction. Use ``conversations.upload``\ninstead.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_create_conversation():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.CreateConversationRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_conversation(reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the conversation.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "conversation": {
                "type": "google.cloud.contact_center_insights_v1.types.Conversation",
                "description": "Required. The conversation resource to create.  This corresponds to the ``conversation`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "conversation_id": {
                "type": "str",
                "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used.  This value should be 4-64 characters and must match the regular expression ``^[a-z0-9-]{4,64}$``. Valid characters are ``[a-z][0-9]-``  This corresponds to the ``conversation_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.Conversation: The conversation resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "conversation",
              "conversation_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "upload_conversation",
          "description": "Create a long-running conversation upload operation. This method\ndiffers from ``CreateConversation`` by allowing audio\ntranscription and optional DLP redaction.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_upload_conversation():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.UploadConversationRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.uplo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_conversation",
          "description": "Updates a conversation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_update_conversation():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.UpdateConversationRequest(\n        )\n\n        # Make the request\n        response = await client.update_conversation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.type",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "conversation": {
                "type": "google.cloud.contact_center_insights_v1.types.Conversation",
                "description": "Required. The new values for the conversation.  This corresponds to the ``conversation`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. All possible fields can be updated by passing ``*``, or a subset of the following updateable fields can be provided:  -  ``agent_id`` -  ``language_code`` -  ``labels`` -  ``metadata`` -  ``quality_metadata`` -  ``call_metadata`` -  ``start_time`` -  ``expire_time`` or ``ttl`` -  ``data_source.gcs_source.audio_uri`` or ``data_source.dialogflow_source.audio_uri``  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.Conversation: The conversation resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "conversation",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_conversation",
          "description": "Gets a conversation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_conversation():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetConversationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_conversation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_cent",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the conversation to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.Conversation: The conversation resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_conversations",
          "description": "Lists conversations.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_conversations():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListConversationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_conversations(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the conversation.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.services.contact_center_insights.pagers.ListConversationsAsyncPager: The response of listing conversations. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_conversation",
          "description": "Deletes a conversation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_delete_conversation():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeleteConversationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_conversation(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.DeleteConversationRequest, dict]]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the conversation to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_analysis",
          "description": "Creates an analysis. The long running operation is\ndone when the analysis has completed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_create_analysis():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.CreateAnalysisRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_analysis(request=request)\n\n        print(\"Waiting for operation to complete..",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the analysis.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "analysis": {
                "type": "google.cloud.contact_center_insights_v1.types.Analysis",
                "description": "Required. The analysis to create. This corresponds to the ``analysis`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.Analysis` The analysis resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "analysis",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_analysis",
          "description": "Gets an analysis.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_analysis():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetAnalysisRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_analysis(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the analysis to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.Analysis: The analysis resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_analyses",
          "description": "Lists analyses.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_analyses():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListAnalysesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_analyses(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Option",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the analyses.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.services.contact_center_insights.pagers.ListAnalysesAsyncPager: The response to list analyses.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_analysis",
          "description": "Deletes an analysis.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_delete_analysis():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeleteAnalysisRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_analysis(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.DeleteAnalysisRequest, dict]]):\n        The requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the analysis to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "bulk_analyze_conversations",
          "description": "Analyzes multiple conversations in a single request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_bulk_analyze_conversations():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.BulkAnalyzeConversationsRequest(\n            parent=\"parent_value\",\n            filter=\"filter_value\",\n            analysis_percentage=0.20170000000000002,\n        )\n\n        # Make the request\n        operation = client.bulk_analyz",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource to create analyses in.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Required. Filter used to select the subset of conversations to analyze.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "analysis_percentage": {
                "type": "float",
                "description": "Required. Percentage of selected conversation to analyze, between [0, 100].  This corresponds to the ``analysis_percentage`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.BulkAnalyzeConversationsResponse` The response for a bulk analyze conversations operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "analysis_percentage",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "bulk_delete_conversations",
          "description": "Deletes multiple conversations in a single request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_bulk_delete_conversations():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.BulkDeleteConversationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.bulk_delete_conversations(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource to delete conversations from. Format:  projects/{project}/locations/{location}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Filter used to select the subset of conversations to delete.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.BulkDeleteConversationsResponse` The response for a bulk delete conversations operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "ingest_conversations",
          "description": "Imports conversations and processes them according to\nthe user's configuration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_ingest_conversations():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        gcs_source = contact_center_insights_v1.GcsSource()\n        gcs_source.bucket_uri = \"bucket_uri_value\"\n\n        transcript_object_config = contact_center_insights_v1.TranscriptObjectConfig()\n        transcript_object_config.medium = \"CHAT\"\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource for new conversations.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.IngestConversationsResponse` The response to an IngestConversations operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_insights_data",
          "description": "Export insights data to a destination defined in the\nrequest body.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_export_insights_data():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        big_query_destination = contact_center_insights_v1.BigQueryDestination()\n        big_query_destination.dataset = \"dataset_value\"\n\n        request = contact_center_insights_v1.ExportInsightsDataRequest(\n            big_query_destination=big_query_destination,\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource to export data from.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.ExportInsightsDataResponse` Response for an export insights operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_issue_model",
          "description": "Creates an issue model.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_create_issue_model():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.CreateIssueModelRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_issue_model(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the issue model.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "issue_model": {
                "type": "google.cloud.contact_center_insights_v1.types.IssueModel",
                "description": "Required. The issue model to create. This corresponds to the ``issue_model`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.IssueModel` The issue model resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "issue_model",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_issue_model",
          "description": "Updates an issue model.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_update_issue_model():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.UpdateIssueModelRequest(\n        )\n\n        # Make the request\n        response = await client.update_issue_model(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.Up",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "issue_model": {
                "type": "google.cloud.contact_center_insights_v1.types.IssueModel",
                "description": "Required. The new values for the issue model.  This corresponds to the ``issue_model`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.IssueModel: The issue model resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "issue_model",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_issue_model",
          "description": "Gets an issue model.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_issue_model():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetIssueModelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_issue_model(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the issue model to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.IssueModel: The issue model resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_issue_models",
          "description": "Lists issue models.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_issue_models():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListIssueModelsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.list_issue_models(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the issue model.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.ListIssueModelsResponse: The response of listing issue models."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_issue_model",
          "description": "Deletes an issue model.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_delete_issue_model():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeleteIssueModelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_issue_model(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        #",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the issue model to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "deploy_issue_model",
          "description": "Deploys an issue model. Returns an error if a model\nis already deployed. An issue model can only be used in\nanalysis after it has been deployed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_deploy_issue_model():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeployIssueModelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.deploy_issue_model(request=",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The issue model to deploy. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.DeployIssueModelResponse` The response to deploy an issue model."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undeploy_issue_model",
          "description": "Undeploys an issue model.\nAn issue model can not be used in analysis after it has\nbeen undeployed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_undeploy_issue_model():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.UndeployIssueModelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.undeploy_issue_model(request=request)\n\n        print(\"Waiting for ope",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The issue model to undeploy.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.UndeployIssueModelResponse` The response to undeploy an issue model."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_issue_model",
          "description": "Exports an issue model to the provided destination.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_export_issue_model():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        gcs_destination = contact_center_insights_v1.GcsDestination()\n        gcs_destination.object_uri = \"object_uri_value\"\n\n        request = contact_center_insights_v1.ExportIssueModelRequest(\n            gcs_destination=gcs_destination,\n            name=\"name_value\",\n        )\n\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The issue model to export. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.ExportIssueModelResponse` Response from export issue model"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_issue_model",
          "description": "Imports an issue model from a Cloud Storage bucket.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_import_issue_model():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        gcs_source = contact_center_insights_v1.GcsSource()\n        gcs_source.object_uri = \"object_uri_value\"\n\n        request = contact_center_insights_v1.ImportIssueModelRequest(\n            gcs_source=gcs_source,\n            parent=\"parent_value\",\n        )\n\n        # Make the requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the issue model.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.ImportIssueModelResponse` Response from import issue model"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_issue",
          "description": "Gets an issue.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_issue():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetIssueRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_issue(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.GetIss",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the issue to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.Issue: The issue resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_issues",
          "description": "Lists issues.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_issues():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListIssuesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.list_issues(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.typ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the issue.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.ListIssuesResponse: The response of listing issues."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_issue",
          "description": "Updates an issue.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_update_issue():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.UpdateIssueRequest(\n        )\n\n        # Make the request\n        response = await client.update_issue(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.UpdateIssueRequest, dict]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "issue": {
                "type": "google.cloud.contact_center_insights_v1.types.Issue",
                "description": "Required. The new values for the issue.  This corresponds to the ``issue`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.Issue: The issue resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "issue",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_issue",
          "description": "Deletes an issue.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_delete_issue():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeleteIssueRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_issue(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.DeleteIssueRequest, dict]]):\n        The request object. The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the issue to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "calculate_issue_model_stats",
          "description": "Gets an issue model's statistics.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_calculate_issue_model_stats():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.CalculateIssueModelStatsRequest(\n            issue_model=\"issue_model_value\",\n        )\n\n        # Make the request\n        response = await client.calculate_issue_model_stats(request=request)\n\n        # Handle the response\n        print(response)\n\nA",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "issue_model": {
                "type": "str",
                "description": "Required. The resource name of the issue model to query against.  This corresponds to the ``issue_model`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.CalculateIssueModelStatsResponse: Response of querying an issue model's statistics."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "issue_model",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_phrase_matcher",
          "description": "Creates a phrase matcher.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_create_phrase_matcher():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        phrase_matcher = contact_center_insights_v1.PhraseMatcher()\n        phrase_matcher.type_ = \"ANY_OF\"\n\n        request = contact_center_insights_v1.CreatePhraseMatcherRequest(\n            parent=\"parent_value\",\n            phrase_matcher=phrase_matcher,\n        )\n\n        # Make the request\n        res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: ``projects/<Project ID>/locations/<Location ID>`` or ``projects/<Project Number>/locations/<Location ID>``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "phrase_matcher": {
                "type": "google.cloud.contact_center_insights_v1.types.PhraseMatcher",
                "description": "Required. The phrase matcher resource to create.  This corresponds to the ``phrase_matcher`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.PhraseMatcher: The phrase matcher resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "phrase_matcher",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_phrase_matcher",
          "description": "Gets a phrase matcher.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_phrase_matcher():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetPhraseMatcherRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_phrase_matcher(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.conta",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the phrase matcher to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.PhraseMatcher: The phrase matcher resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_phrase_matchers",
          "description": "Lists phrase matchers.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_phrase_matchers():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListPhraseMatchersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_phrase_matchers(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the phrase matcher.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.services.contact_center_insights.pagers.ListPhraseMatchersAsyncPager: The response of listing phrase matchers. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_phrase_matcher",
          "description": "Deletes a phrase matcher.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_delete_phrase_matcher():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeletePhraseMatcherRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_phrase_matcher(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.DeletePhraseMatcherRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the phrase matcher to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_phrase_matcher",
          "description": "Updates a phrase matcher.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_update_phrase_matcher():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        phrase_matcher = contact_center_insights_v1.PhraseMatcher()\n        phrase_matcher.type_ = \"ANY_OF\"\n\n        request = contact_center_insights_v1.UpdatePhraseMatcherRequest(\n            phrase_matcher=phrase_matcher,\n        )\n\n        # Make the request\n        response = await client.update_phrase_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "phrase_matcher": {
                "type": "google.cloud.contact_center_insights_v1.types.PhraseMatcher",
                "description": "Required. The new values for the phrase matcher.  This corresponds to the ``phrase_matcher`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.PhraseMatcher: The phrase matcher resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "phrase_matcher",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "calculate_stats",
          "description": "Gets conversation statistics.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_calculate_stats():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.CalculateStatsRequest(\n            location=\"location_value\",\n        )\n\n        # Make the request\n        response = await client.calculate_stats(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.clou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "location": {
                "type": "str",
                "description": "Required. The location of the conversations.  This corresponds to the ``location`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.CalculateStatsResponse: The response for calculating conversation statistics."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "location",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_settings",
          "description": "Gets project-level settings.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_settings():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetSettingsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_i",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the settings resource to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.Settings: The CCAI Insights project wide settings. Use these settings to configure the behavior of Insights. View these settings with [getsettings](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/getSettings) and change the settings with [updateSettings](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/updateSettings)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_settings",
          "description": "Updates project-level settings.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_update_settings():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.UpdateSettingsRequest(\n        )\n\n        # Make the request\n        response = await client.update_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.Up",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "settings": {
                "type": "google.cloud.contact_center_insights_v1.types.Settings",
                "description": "Required. The new settings values. This corresponds to the ``settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.Settings: The CCAI Insights project wide settings. Use these settings to configure the behavior of Insights. View these settings with [getsettings](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/getSettings) and change the settings with [updateSettings](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/updateSettings)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_analysis_rule",
          "description": "Creates a analysis rule.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_create_analysis_rule():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.CreateAnalysisRuleRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_analysis_rule(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the analysis rule. Required. The location to create a analysis rule for. Format: ``projects/<Project ID>/locations/<Location ID>`` or ``projects/<Project Number>/locations/<Location ID>``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "analysis_rule": {
                "type": "google.cloud.contact_center_insights_v1.types.AnalysisRule",
                "description": "Required. The analysis rule resource to create.  This corresponds to the ``analysis_rule`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.AnalysisRule: The CCAI Insights project wide analysis rule. This rule will be applied to all conversations that match the filter defined in the rule. For a conversation matches the filter, the annotators specified in the rule will be run. If a conversation matches multiple rules, a union of all the annotators will be run. One project can have multiple analysis rules."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "analysis_rule",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_analysis_rule",
          "description": "Get a analysis rule.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_analysis_rule():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetAnalysisRuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_analysis_rule(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_ce",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the AnalysisRule to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.AnalysisRule: The CCAI Insights project wide analysis rule. This rule will be applied to all conversations that match the filter defined in the rule. For a conversation matches the filter, the annotators specified in the rule will be run. If a conversation matches multiple rules, a union of all the annotators will be run. One project can have multiple analysis rules."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_analysis_rules",
          "description": "Lists analysis rules.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_analysis_rules():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListAnalysisRulesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_analysis_rules(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nAr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the analysis rules.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.services.contact_center_insights.pagers.ListAnalysisRulesAsyncPager: The response of listing views.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_analysis_rule",
          "description": "Updates a analysis rule.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_update_analysis_rule():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.UpdateAnalysisRuleRequest(\n        )\n\n        # Make the request\n        response = await client.update_analysis_rule(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "analysis_rule": {
                "type": "google.cloud.contact_center_insights_v1.types.AnalysisRule",
                "description": "Required. The new analysis rule. This corresponds to the ``analysis_rule`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. The list of fields to be updated. If the update_mask is not provided, the update will be applied to all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.AnalysisRule: The CCAI Insights project wide analysis rule. This rule will be applied to all conversations that match the filter defined in the rule. For a conversation matches the filter, the annotators specified in the rule will be run. If a conversation matches multiple rules, a union of all the annotators will be run. One project can have multiple analysis rules."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "analysis_rule",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_analysis_rule",
          "description": "Deletes a analysis rule.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_delete_analysis_rule():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeleteAnalysisRuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_analysis_rule(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.DeleteAnalysisRuleRequest, dic",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the analysis rule to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_encryption_spec",
          "description": "Gets location-level encryption key specification.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_encryption_spec():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetEncryptionSpecRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_encryption_spec(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Opt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the encryption spec resource to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.EncryptionSpec: A customer-managed encryption key specification that can be applied to all created resources (e.g. Conversation)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "initialize_encryption_spec",
          "description": "Initializes a location-level encryption key\nspecification. An error will result if the location has\nresources already created before the initialization.\nAfter the encryption specification is initialized at a\nlocation, it is immutable and all newly created\nresources under the location will be encrypted with the\nexisting specification.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_initialize_encryption_spec():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argume",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "encryption_spec": {
                "type": "google.cloud.contact_center_insights_v1.types.EncryptionSpec",
                "description": "Required. The encryption spec used for CMEK encryption. It is required that the kms key is in the same region as the endpoint. The same key will be used for all provisioned resources, if encryption is available. If the ``kms_key_name`` field is left empty, no encryption will be enforced.  This corresponds to the ``encryption_spec`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.InitializeEncryptionSpecResponse` The response to initialize a location-level encryption specification."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "encryption_spec",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_view",
          "description": "Creates a view.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_create_view():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.CreateViewRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_view(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the view. Required. The location to create a view for. Format: ``projects/<Project ID>/locations/<Location ID>`` or ``projects/<Project Number>/locations/<Location ID>``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "view": {
                "type": "google.cloud.contact_center_insights_v1.types.View",
                "description": "Required. The view resource to create.  This corresponds to the ``view`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.View: The View resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "view",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_view",
          "description": "Gets a view.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_view():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetViewRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_view(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.GetViewRequ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the view to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.View: The View resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_views",
          "description": "Lists views.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_views():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListViewsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_views(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the views.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.services.contact_center_insights.pagers.ListViewsAsyncPager: The response of listing views.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_view",
          "description": "Updates a view.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_update_view():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.UpdateViewRequest(\n        )\n\n        # Make the request\n        response = await client.update_view(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.UpdateViewRequest, dict]]):\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "view": {
                "type": "google.cloud.contact_center_insights_v1.types.View",
                "description": "Required. The new view. This corresponds to the ``view`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.View: The View resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "view",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_view",
          "description": "Deletes a view.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_delete_view():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeleteViewRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_view(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.DeleteViewRequest, dict]]):\n        The request object. The reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the view to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "query_metrics",
          "description": "Query metrics.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_query_metrics():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.QueryMetricsRequest(\n            location=\"location_value\",\n            filter=\"filter_value\",\n        )\n\n        # Make the request\n        operation = client.query_metrics(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_qa_question",
          "description": "Create a QaQuestion.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_create_qa_question():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.CreateQaQuestionRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_qa_question(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.con",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the QaQuestion.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "qa_question": {
                "type": "google.cloud.contact_center_insights_v1.types.QaQuestion",
                "description": "Required. The QaQuestion to create. This corresponds to the ``qa_question`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "qa_question_id": {
                "type": "str",
                "description": "Optional. A unique ID for the new question. This ID will become the final component of the question's resource name. If no ID is specified, a server-generated ID will be used.  This value should be 4-64 characters and must match the regular expression ``^[a-z0-9-]{4,64}$``. Valid characters are ``[a-z][0-9]-``.  This corresponds to the ``qa_question_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.QaQuestion: A single question to be scored by the Insights QA feature."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "qa_question",
              "qa_question_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_qa_question",
          "description": "Gets a QaQuestion.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_qa_question():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetQaQuestionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_qa_question(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_ins",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the QaQuestion to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.QaQuestion: A single question to be scored by the Insights QA feature."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_qa_question",
          "description": "Updates a QaQuestion.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_update_qa_question():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.UpdateQaQuestionRequest(\n        )\n\n        # Make the request\n        response = await client.update_qa_question(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.Upda",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "qa_question": {
                "type": "google.cloud.contact_center_insights_v1.types.QaQuestion",
                "description": "Required. The QaQuestion to update. This corresponds to the ``qa_question`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. All possible fields can be updated by passing ``*``, or a subset of the following updateable fields can be provided:  -  ``abbreviation`` -  ``answer_choices`` -  ``answer_instructions`` -  ``order`` -  ``question_body`` -  ``tags``  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.QaQuestion: A single question to be scored by the Insights QA feature."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "qa_question",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_qa_question",
          "description": "Deletes a QaQuestion.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_delete_qa_question():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeleteQaQuestionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_qa_question(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.DeleteQaQuestionRequest, dict]]):\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the QaQuestion to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_qa_questions",
          "description": "Lists QaQuestions.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_qa_questions():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListQaQuestionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_qa_questions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the questions.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.services.contact_center_insights.pagers.ListQaQuestionsAsyncPager: The response from a ListQaQuestions request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_qa_scorecard",
          "description": "Create a QaScorecard.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_create_qa_scorecard():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.CreateQaScorecardRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_qa_scorecard(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the QaScorecard.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "qa_scorecard": {
                "type": "google.cloud.contact_center_insights_v1.types.QaScorecard",
                "description": "Required. The QaScorecard to create. This corresponds to the ``qa_scorecard`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "qa_scorecard_id": {
                "type": "str",
                "description": "Optional. A unique ID for the new QaScorecard. This ID will become the final component of the QaScorecard's resource name. If no ID is specified, a server-generated ID will be used.  This value should be 4-64 characters and must match the regular expression ``^[a-z0-9-]{4,64}$``. Valid characters are ``[a-z][0-9]-``.  This corresponds to the ``qa_scorecard_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.QaScorecard: A QaScorecard represents a collection of questions to be scored during analysis."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "qa_scorecard",
              "qa_scorecard_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_qa_scorecard",
          "description": "Gets a QaScorecard.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_qa_scorecard():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetQaScorecardRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_qa_scorecard(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the QaScorecard to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.QaScorecard: A QaScorecard represents a collection of questions to be scored during analysis."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_qa_scorecard",
          "description": "Updates a QaScorecard.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_update_qa_scorecard():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.UpdateQaScorecardRequest(\n        )\n\n        # Make the request\n        response = await client.update_qa_scorecard(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "qa_scorecard": {
                "type": "google.cloud.contact_center_insights_v1.types.QaScorecard",
                "description": "Required. The QaScorecard to update. This corresponds to the ``qa_scorecard`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. All possible fields can be updated by passing ``*``, or a subset of the following updateable fields can be provided:  -  ``description`` -  ``display_name``  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.QaScorecard: A QaScorecard represents a collection of questions to be scored during analysis."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "qa_scorecard",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_qa_scorecard",
          "description": "Deletes a QaScorecard.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_delete_qa_scorecard():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeleteQaScorecardRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_qa_scorecard(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.DeleteQaScorecardRequest, dict]]):\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the QaScorecard to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_qa_scorecards",
          "description": "Lists QaScorecards.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_qa_scorecards():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListQaScorecardsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_qa_scorecards(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the scorecards.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.services.contact_center_insights.pagers.ListQaScorecardsAsyncPager: The response from a ListQaScorecards request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_qa_scorecard_revision",
          "description": "Creates a QaScorecardRevision.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_create_qa_scorecard_revision():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.CreateQaScorecardRevisionRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_qa_scorecard_revision(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the QaScorecardRevision.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "qa_scorecard_revision": {
                "type": "google.cloud.contact_center_insights_v1.types.QaScorecardRevision",
                "description": "Required. The QaScorecardRevision to create.  This corresponds to the ``qa_scorecard_revision`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "qa_scorecard_revision_id": {
                "type": "str",
                "description": "Optional. A unique ID for the new QaScorecardRevision. This ID will become the final component of the QaScorecardRevision's resource name. If no ID is specified, a server-generated ID will be used.  This value should be 4-64 characters and must match the regular expression ``^[a-z0-9-]{4,64}$``. Valid characters are ``[a-z][0-9]-``.  This corresponds to the ``qa_scorecard_revision_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.QaScorecardRevision: A revision of a QaScorecard.  Modifying published scorecard fields would invalidate existing scorecard results \u2014 the questions may have changed, or the score weighting will make existing scores impossible to understand. So changes must create a new revision, rather than modifying the existing resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "qa_scorecard_revision",
              "qa_scorecard_revision_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_qa_scorecard_revision",
          "description": "Gets a QaScorecardRevision.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_qa_scorecard_revision():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetQaScorecardRevisionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_qa_scorecard_revision(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the QaScorecardRevision to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.QaScorecardRevision: A revision of a QaScorecard.  Modifying published scorecard fields would invalidate existing scorecard results \u2014 the questions may have changed, or the score weighting will make existing scores impossible to understand. So changes must create a new revision, rather than modifying the existing resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "tune_qa_scorecard_revision",
          "description": "Fine tune one or more QaModels.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_tune_qa_scorecard_revision():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.TuneQaScorecardRevisionRequest(\n            parent=\"parent_value\",\n            filter=\"filter_value\",\n        )\n\n        # Make the request\n        operation = client.tune_qa_scorecard_revision(request=request)\n\n        print(\"Waiting for operation to c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource for new fine tuning job instance.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Required. Filter for selecting the feedback labels that needs to be used for training. This filter can be used to limit the feedback labels used for tuning to a feedback labels created or updated for a specific time-window etc.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "validate_only": {
                "type": "bool",
                "description": "Optional. Run in validate only mode, no fine tuning will actually run. Data quality validations like training data distributions will run. Even when set to false, the data quality validations will still run but once the validations complete we will proceed with the fine tune, if applicable.  This corresponds to the ``validate_only`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.TuneQaScorecardRevisionResponse` Response for TuneQaScorecardRevision endpoint."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "validate_only",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "deploy_qa_scorecard_revision",
          "description": "Deploy a QaScorecardRevision.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_deploy_qa_scorecard_revision():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeployQaScorecardRevisionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.deploy_qa_scorecard_revision(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undeploy_qa_scorecard_revision",
          "description": "Undeploy a QaScorecardRevision.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_undeploy_qa_scorecard_revision():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.UndeployQaScorecardRevisionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.undeploy_qa_scorecard_revision(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_qa_scorecard_revision",
          "description": "Deletes a QaScorecardRevision.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_delete_qa_scorecard_revision():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeleteQaScorecardRevisionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_qa_scorecard_revision(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.D",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the QaScorecardRevision to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_qa_scorecard_revisions",
          "description": "Lists all revisions under the parent QaScorecard.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_qa_scorecard_revisions():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListQaScorecardRevisionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_qa_scorecard_revisions(request=request)\n\n        # Handle the response\n        async for respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the scorecard revisions. To list all revisions of all scorecards, substitute the QaScorecard ID with a '-' character.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.services.contact_center_insights.pagers.ListQaScorecardRevisionsAsyncPager: The response from a ListQaScorecardRevisions request. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_feedback_label",
          "description": "Create feedback label.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_create_feedback_label():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        feedback_label = contact_center_insights_v1.FeedbackLabel()\n        feedback_label.label = \"label_value\"\n\n        request = contact_center_insights_v1.CreateFeedbackLabelRequest(\n            parent=\"parent_value\",\n            feedback_label=feedback_label,\n        )\n\n        # Make the request\n        r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the feedback label.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "feedback_label": {
                "type": "google.cloud.contact_center_insights_v1.types.FeedbackLabel",
                "description": "Required. The feedback label to create.  This corresponds to the ``feedback_label`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "feedback_label_id": {
                "type": "str",
                "description": "Optional. The ID of the feedback label to create. If one is not specified it will be generated by the server.  This corresponds to the ``feedback_label_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.FeedbackLabel: Represents a conversation, resource, and label provided by the user."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "feedback_label",
              "feedback_label_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_feedback_labels",
          "description": "List feedback labels.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_feedback_labels():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListFeedbackLabelsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_feedback_labels(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of the feedback labels.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.services.contact_center_insights.pagers.ListFeedbackLabelsAsyncPager: The response for listing feedback labels. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_feedback_label",
          "description": "Get feedback label.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_get_feedback_label():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.GetFeedbackLabelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_feedback_label(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the feedback label to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.FeedbackLabel: Represents a conversation, resource, and label provided by the user."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_feedback_label",
          "description": "Update feedback label.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_update_feedback_label():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        feedback_label = contact_center_insights_v1.FeedbackLabel()\n        feedback_label.label = \"label_value\"\n\n        request = contact_center_insights_v1.UpdateFeedbackLabelRequest(\n            feedback_label=feedback_label,\n        )\n\n        # Make the request\n        response = await client.update_feedb",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "feedback_label": {
                "type": "google.cloud.contact_center_insights_v1.types.FeedbackLabel",
                "description": "Required. The feedback label to update.  This corresponds to the ``feedback_label`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.types.FeedbackLabel: Represents a conversation, resource, and label provided by the user."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "feedback_label",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_feedback_label",
          "description": "Delete feedback label.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_delete_feedback_label():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.DeleteFeedbackLabelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_feedback_label(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.contact_center_insights_v1.types.DeleteFeedbackLabelRequest, d",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the feedback label to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_all_feedback_labels",
          "description": "List all feedback labels by project number.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_list_all_feedback_labels():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        request = contact_center_insights_v1.ListAllFeedbackLabelsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_all_feedback_labels(request=request)\n\n        # Handle the response\n        async for response in page_res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource of all feedback labels per project.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.contact_center_insights_v1.services.contact_center_insights.pagers.ListAllFeedbackLabelsAsyncPager: The response for listing all feedback labels. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "bulk_upload_feedback_labels",
          "description": "Upload feedback labels in bulk.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_bulk_upload_feedback_labels():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        gcs_source = contact_center_insights_v1.GcsSource()\n        gcs_source.format_ = \"JSON\"\n        gcs_source.object_uri = \"object_uri_value\"\n\n        request = contact_center_insights_v1.BulkUploadFeedbackLabelsRequest(\n            gcs_source=gcs_source,\n            parent=\"parent_value\",\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource for new feedback labels.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.BulkUploadFeedbackLabelsResponse` Response for the Bulk Upload Feedback Labels API."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "bulk_download_feedback_labels",
          "description": "Download feedback labels in bulk.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import contact_center_insights_v1\n\n    async def sample_bulk_download_feedback_labels():\n        # Create a client\n        client = contact_center_insights_v1.ContactCenterInsightsAsyncClient()\n\n        # Initialize request argument(s)\n        gcs_destination = contact_center_insights_v1.GcsDestination()\n        gcs_destination.format_ = \"JSON\"\n        gcs_destination.object_uri = \"object_uri_value\"\n\n        request = contact_center_insights_v1.BulkDownloadFeedbackLabelsRequest(\n            gcs_destination=gcs_destination,\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource for new feedback labels.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.contact_center_insights_v1.types.BulkDownloadFeedbackLabelsResponse` Response for the BulkDownloadFeedbackLabel endpoint."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}