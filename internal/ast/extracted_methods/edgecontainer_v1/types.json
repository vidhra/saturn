{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-edgecontainer/google/cloud/edgecontainer_v1/types/service.py": [
    {
      "type": "function",
      "name": "ListClustersRequest",
      "description": "Lists clusters in a location.\n\nAttributes:\n    parent (str):\n        Required. The parent location, which owns\n        this collection of clusters.\n    page_size (int):\n        The maximum number of resources to list.\n    page_token (str):\n        A page token received from previous list\n        request. A page token received from previous\n        list request.\n    filter (str):\n        Only resources matching this filter will be\n        listed.\n    order_by (str):\n        Specifies the order in which resources will\n        be listed.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent location, which owns this collection of clusters.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of resources to list.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token received from previous list request. A page token received from previous list request.",
            "type": "string"
          },
          "filter": {
            "description": "Only resources matching this filter will be listed.",
            "type": "string"
          },
          "order_by": {
            "description": "Specifies the order in which resources will be listed.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetClusterRequest",
      "description": "Gets a cluster.\n\nAttributes:\n    name (str):\n        Required. The resource name of the cluster.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the cluster.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateClusterRequest",
      "description": "Creates a cluster.\n\nAttributes:\n    parent (str):\n        Required. The parent location where this\n        cluster will be created.\n    cluster_id (str):\n        Required. A client-specified unique\n        identifier for the cluster.\n    cluster (google.cloud.edgecontainer_v1.types.Cluster):\n        Required. The cluster to create.\n    request_id (str):\n        A unique identifier for this request. Restricted to 36 ASCII\n        characters. A random UUID is recommended. This request is\n        only idempotent if ``request_id`` is provided.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent location where this cluster will be created.",
            "type": "string"
          },
          "cluster_id": {
            "description": "Required. A client-specified unique identifier for the cluster.",
            "type": "string"
          },
          "cluster": {
            "description": "Required. The cluster to create.",
            "reference": "google.cloud.edgecontainer_v1.types.Cluster",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Unique name of the resource in this scope including project and location using the form: ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}``",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp associated with the cluster creation request.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.State",
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. System assigned, unique identifier for the cluster.",
                  "type": "string",
                  "output_only": true
                },
                "replica_count": {
                  "description": "Optional. The number of replica nodes per shard.  This field is a member of `oneof`_ ``_replica_count``.",
                  "type": "integer"
                },
                "authorization_mode": {
                  "description": "Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.AuthorizationMode"
                },
                "transit_encryption_mode": {
                  "description": "Optional. The in-transit encryption for the Redis cluster. If not provided, encryption  is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.TransitEncryptionMode"
                },
                "size_gb": {
                  "description": "Output only. Redis memory size in GB for the entire cluster rounded up to the next integer.  This field is a member of `oneof`_ ``_size_gb``.",
                  "type": "integer",
                  "output_only": true
                },
                "shard_count": {
                  "description": "Required. Number of shards for the Redis cluster.  This field is a member of `oneof`_ ``_shard_count``.",
                  "type": "integer"
                },
                "psc_configs": {
                  "description": "Required. Each PscConfig configures the consumer network where IPs will be designated to the cluster for client access through Private Service Connect Automation. Currently, only one PscConfig is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "network": {
                          "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "network"
                      ]
                    }
                  }
                },
                "discovery_endpoints": {
                  "description": "Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one discovery endpoint is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.DiscoveryEndpoint",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Output only. Address of the exposed Redis endpoint used by clients to connect to the service. The address could be either IP or hostname.",
                          "type": "string",
                          "output_only": true
                        },
                        "port": {
                          "description": "Output only. The port number of the exposed Redis endpoint.",
                          "type": "integer",
                          "output_only": true
                        },
                        "psc_config": {
                          "description": "Output only. Customer configuration for where the endpoint is created and accessed from.",
                          "type": "object",
                          "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "network": {
                                "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "network"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "psc_connections": {
                  "description": "Output only. PSC connections for discovery of the cluster topology and accessing the cluster.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConnection",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "psc_connection_id": {
                          "description": "Output only. The PSC connection id of the forwarding rule connected to the service attachment.",
                          "type": "string",
                          "output_only": true
                        },
                        "address": {
                          "description": "Output only. The IP allocated on the consumer network for the PSC forwarding rule.",
                          "type": "string",
                          "output_only": true
                        },
                        "forwarding_rule": {
                          "description": "Output only. The URI of the consumer side forwarding rule. Example:  projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.",
                          "type": "string",
                          "output_only": true
                        },
                        "project_id": {
                          "description": "Output only. The consumer project_id where the forwarding rule is created from.",
                          "type": "string",
                          "output_only": true
                        },
                        "network": {
                          "description": "The consumer network where the IP address resides, in the form of projects/{project_id}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "state_info": {
                  "description": "Output only. Additional information about the current state of the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "update_info": {
                        "description": "Describes ongoing update on the cluster when cluster state is UPDATING.  This field is a member of `oneof`_ ``info``.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo.UpdateInfo",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "target_shard_count": {
                              "description": "Target number of shards for redis cluster  This field is a member of `oneof`_ ``_target_shard_count``.",
                              "type": "integer"
                            },
                            "target_replica_count": {
                              "description": "Target number of replica nodes per shard.  This field is a member of `oneof`_ ``_target_replica_count``.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "node_type": {
                  "description": "Optional. The type of a redis node in the cluster. NodeType determines the underlying machine-type of a redis node.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.NodeType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "cpu_platform": {
                        "description": "[Output Only] The CPU platform used by this node type.  This field is a member of `oneof`_ ``_cpu_platform``.",
                        "type": "string",
                        "output_only": true
                      },
                      "creation_timestamp": {
                        "description": "[Output Only] Creation timestamp in RFC3339 text format.  This field is a member of `oneof`_ ``_creation_timestamp``.",
                        "type": "string",
                        "output_only": true
                      },
                      "deprecated": {
                        "description": "[Output Only] The deprecation status associated with this node type.  This field is a member of `oneof`_ ``_deprecated``.",
                        "type": "object",
                        "reference": "google.cloud.compute_v1.types.DeprecationStatus",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "deleted": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deleted``.",
                              "type": "string"
                            },
                            "deprecated": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deprecated``.",
                              "type": "string"
                            },
                            "obsolete": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_obsolete``.",
                              "type": "string"
                            },
                            "replacement": {
                              "description": "The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.  This field is a member of `oneof`_ ``_replacement``.",
                              "type": "string"
                            },
                            "state": {
                              "description": "The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error. Check the State enum for the list of possible values.  This field is a member of `oneof`_ ``_state``.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": {
                        "description": "[Output Only] An optional textual description of the resource.  This field is a member of `oneof`_ ``_description``.",
                        "type": "string",
                        "output_only": true
                      },
                      "guest_cpus": {
                        "description": "[Output Only] The number of virtual CPUs that are available to the node type.  This field is a member of `oneof`_ ``_guest_cpus``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "id": {
                        "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.  This field is a member of `oneof`_ ``_id``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "kind": {
                        "description": "[Output Only] The type of the resource. Always compute#nodeType for node types.  This field is a member of `oneof`_ ``_kind``.",
                        "type": "string",
                        "output_only": true
                      },
                      "local_ssd_gb": {
                        "description": "[Output Only] Local SSD available to the node type, defined in GB.  This field is a member of `oneof`_ ``_local_ssd_gb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "memory_mb": {
                        "description": "[Output Only] The amount of physical memory available to the node type, defined in MB.  This field is a member of `oneof`_ ``_memory_mb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "name": {
                        "description": "[Output Only] Name of the resource.  This field is a member of `oneof`_ ``_name``.",
                        "type": "string",
                        "output_only": true
                      },
                      "self_link": {
                        "description": "[Output Only] Server-defined URL for the resource.  This field is a member of `oneof`_ ``_self_link``.",
                        "type": "string",
                        "output_only": true
                      },
                      "zone": {
                        "description": "[Output Only] The name of the zone where the node type resides, such as us-central1-a.  This field is a member of `oneof`_ ``_zone``.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                },
                "persistence_config": {
                  "description": "Optional. Persistence config (RDB, AOF) for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of persistence.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.PersistenceMode"
                      },
                      "rdb_config": {
                        "description": "Optional. RDB configuration. This field will be ignored if mode is not RDB.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "rdb_snapshot_period": {
                              "description": "Optional. Period between RDB snapshots.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig.SnapshotPeriod"
                            },
                            "rdb_snapshot_start_time": {
                              "description": "Optional. The time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            }
                          }
                        }
                      },
                      "aof_config": {
                        "description": "Optional. AOF configuration. This field will be ignored if mode is not AOF.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "append_fsync": {
                              "description": "Optional. fsync configuration.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig.AppendFsync"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "redis_configs": {
                  "description": "Optional. Key/Value pairs of customer overrides for mutable Redis Configs",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "precise_size_gb": {
                  "description": "Output only. Precise value of redis memory size in GB for the entire cluster.  This field is a member of `oneof`_ ``_precise_size_gb``.",
                  "type": "number",
                  "output_only": true
                },
                "zone_distribution_config": {
                  "description": "Optional. This config will be used to determine how the customer wants us to distribute cluster resources within the region.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of zone distribution. Defaults to MULTI_ZONE, when not specified.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig.ZoneDistributionMode"
                      },
                      "zone": {
                        "description": "Optional. When SINGLE ZONE distribution is selected, zone field would be used to allocate all resources in that zone. This is not applicable to MULTI_ZONE, and would be ignored for MULTI_ZONE clusters.",
                        "type": "string"
                      }
                    }
                  }
                },
                "deletion_protection_enabled": {
                  "description": "Optional. The delete operation will fail when the value is set to true.  This field is a member of `oneof`_ ``_deletion_protection_enabled``.",
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "shard_count",
                "psc_configs"
              ]
            }
          },
          "request_id": {
            "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if ``request_id`` is provided.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "cluster_id",
          "cluster"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateClusterRequest",
      "description": "Updates a cluster.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Field mask is used to specify the fields to be overwritten\n        in the Cluster resource by the update. The fields specified\n        in the update_mask are relative to the resource, not the\n        full request. A field will be overwritten if it is in the\n        mask. If the user does not provide a mask then all fields\n        will be overwritten.\n    cluster (google.cloud.edgecontainer_v1.types.Cluster):\n        The updated cluster.\n    request_id (str):\n        A unique identifier for this request. Restricted to 36 ASCII\n        characters. A random UUID is recommended. This request is\n        only idempotent if ``request_id`` is provided.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Field mask is used to specify the fields to be overwritten in the Cluster resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "cluster": {
            "description": "The updated cluster.",
            "reference": "google.cloud.edgecontainer_v1.types.Cluster",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Unique name of the resource in this scope including project and location using the form: ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}``",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp associated with the cluster creation request.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.State",
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. System assigned, unique identifier for the cluster.",
                  "type": "string",
                  "output_only": true
                },
                "replica_count": {
                  "description": "Optional. The number of replica nodes per shard.  This field is a member of `oneof`_ ``_replica_count``.",
                  "type": "integer"
                },
                "authorization_mode": {
                  "description": "Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.AuthorizationMode"
                },
                "transit_encryption_mode": {
                  "description": "Optional. The in-transit encryption for the Redis cluster. If not provided, encryption  is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.TransitEncryptionMode"
                },
                "size_gb": {
                  "description": "Output only. Redis memory size in GB for the entire cluster rounded up to the next integer.  This field is a member of `oneof`_ ``_size_gb``.",
                  "type": "integer",
                  "output_only": true
                },
                "shard_count": {
                  "description": "Required. Number of shards for the Redis cluster.  This field is a member of `oneof`_ ``_shard_count``.",
                  "type": "integer"
                },
                "psc_configs": {
                  "description": "Required. Each PscConfig configures the consumer network where IPs will be designated to the cluster for client access through Private Service Connect Automation. Currently, only one PscConfig is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "network": {
                          "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "network"
                      ]
                    }
                  }
                },
                "discovery_endpoints": {
                  "description": "Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one discovery endpoint is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.DiscoveryEndpoint",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Output only. Address of the exposed Redis endpoint used by clients to connect to the service. The address could be either IP or hostname.",
                          "type": "string",
                          "output_only": true
                        },
                        "port": {
                          "description": "Output only. The port number of the exposed Redis endpoint.",
                          "type": "integer",
                          "output_only": true
                        },
                        "psc_config": {
                          "description": "Output only. Customer configuration for where the endpoint is created and accessed from.",
                          "type": "object",
                          "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "network": {
                                "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "network"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "psc_connections": {
                  "description": "Output only. PSC connections for discovery of the cluster topology and accessing the cluster.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConnection",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "psc_connection_id": {
                          "description": "Output only. The PSC connection id of the forwarding rule connected to the service attachment.",
                          "type": "string",
                          "output_only": true
                        },
                        "address": {
                          "description": "Output only. The IP allocated on the consumer network for the PSC forwarding rule.",
                          "type": "string",
                          "output_only": true
                        },
                        "forwarding_rule": {
                          "description": "Output only. The URI of the consumer side forwarding rule. Example:  projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.",
                          "type": "string",
                          "output_only": true
                        },
                        "project_id": {
                          "description": "Output only. The consumer project_id where the forwarding rule is created from.",
                          "type": "string",
                          "output_only": true
                        },
                        "network": {
                          "description": "The consumer network where the IP address resides, in the form of projects/{project_id}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "state_info": {
                  "description": "Output only. Additional information about the current state of the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "update_info": {
                        "description": "Describes ongoing update on the cluster when cluster state is UPDATING.  This field is a member of `oneof`_ ``info``.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo.UpdateInfo",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "target_shard_count": {
                              "description": "Target number of shards for redis cluster  This field is a member of `oneof`_ ``_target_shard_count``.",
                              "type": "integer"
                            },
                            "target_replica_count": {
                              "description": "Target number of replica nodes per shard.  This field is a member of `oneof`_ ``_target_replica_count``.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "node_type": {
                  "description": "Optional. The type of a redis node in the cluster. NodeType determines the underlying machine-type of a redis node.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.NodeType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "cpu_platform": {
                        "description": "[Output Only] The CPU platform used by this node type.  This field is a member of `oneof`_ ``_cpu_platform``.",
                        "type": "string",
                        "output_only": true
                      },
                      "creation_timestamp": {
                        "description": "[Output Only] Creation timestamp in RFC3339 text format.  This field is a member of `oneof`_ ``_creation_timestamp``.",
                        "type": "string",
                        "output_only": true
                      },
                      "deprecated": {
                        "description": "[Output Only] The deprecation status associated with this node type.  This field is a member of `oneof`_ ``_deprecated``.",
                        "type": "object",
                        "reference": "google.cloud.compute_v1.types.DeprecationStatus",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "deleted": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deleted``.",
                              "type": "string"
                            },
                            "deprecated": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deprecated``.",
                              "type": "string"
                            },
                            "obsolete": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_obsolete``.",
                              "type": "string"
                            },
                            "replacement": {
                              "description": "The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.  This field is a member of `oneof`_ ``_replacement``.",
                              "type": "string"
                            },
                            "state": {
                              "description": "The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error. Check the State enum for the list of possible values.  This field is a member of `oneof`_ ``_state``.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": {
                        "description": "[Output Only] An optional textual description of the resource.  This field is a member of `oneof`_ ``_description``.",
                        "type": "string",
                        "output_only": true
                      },
                      "guest_cpus": {
                        "description": "[Output Only] The number of virtual CPUs that are available to the node type.  This field is a member of `oneof`_ ``_guest_cpus``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "id": {
                        "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.  This field is a member of `oneof`_ ``_id``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "kind": {
                        "description": "[Output Only] The type of the resource. Always compute#nodeType for node types.  This field is a member of `oneof`_ ``_kind``.",
                        "type": "string",
                        "output_only": true
                      },
                      "local_ssd_gb": {
                        "description": "[Output Only] Local SSD available to the node type, defined in GB.  This field is a member of `oneof`_ ``_local_ssd_gb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "memory_mb": {
                        "description": "[Output Only] The amount of physical memory available to the node type, defined in MB.  This field is a member of `oneof`_ ``_memory_mb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "name": {
                        "description": "[Output Only] Name of the resource.  This field is a member of `oneof`_ ``_name``.",
                        "type": "string",
                        "output_only": true
                      },
                      "self_link": {
                        "description": "[Output Only] Server-defined URL for the resource.  This field is a member of `oneof`_ ``_self_link``.",
                        "type": "string",
                        "output_only": true
                      },
                      "zone": {
                        "description": "[Output Only] The name of the zone where the node type resides, such as us-central1-a.  This field is a member of `oneof`_ ``_zone``.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                },
                "persistence_config": {
                  "description": "Optional. Persistence config (RDB, AOF) for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of persistence.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.PersistenceMode"
                      },
                      "rdb_config": {
                        "description": "Optional. RDB configuration. This field will be ignored if mode is not RDB.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "rdb_snapshot_period": {
                              "description": "Optional. Period between RDB snapshots.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig.SnapshotPeriod"
                            },
                            "rdb_snapshot_start_time": {
                              "description": "Optional. The time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            }
                          }
                        }
                      },
                      "aof_config": {
                        "description": "Optional. AOF configuration. This field will be ignored if mode is not AOF.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "append_fsync": {
                              "description": "Optional. fsync configuration.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig.AppendFsync"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "redis_configs": {
                  "description": "Optional. Key/Value pairs of customer overrides for mutable Redis Configs",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "precise_size_gb": {
                  "description": "Output only. Precise value of redis memory size in GB for the entire cluster.  This field is a member of `oneof`_ ``_precise_size_gb``.",
                  "type": "number",
                  "output_only": true
                },
                "zone_distribution_config": {
                  "description": "Optional. This config will be used to determine how the customer wants us to distribute cluster resources within the region.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of zone distribution. Defaults to MULTI_ZONE, when not specified.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig.ZoneDistributionMode"
                      },
                      "zone": {
                        "description": "Optional. When SINGLE ZONE distribution is selected, zone field would be used to allocate all resources in that zone. This is not applicable to MULTI_ZONE, and would be ignored for MULTI_ZONE clusters.",
                        "type": "string"
                      }
                    }
                  }
                },
                "deletion_protection_enabled": {
                  "description": "Optional. The delete operation will fail when the value is set to true.  This field is a member of `oneof`_ ``_deletion_protection_enabled``.",
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "shard_count",
                "psc_configs"
              ]
            }
          },
          "request_id": {
            "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if ``request_id`` is provided.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "UpgradeClusterRequest",
      "description": "Upgrades a cluster.\n\nAttributes:\n    name (str):\n        Required. The resource name of the cluster.\n    target_version (str):\n        Required. The version the cluster is going to\n        be upgraded to.\n    schedule (google.cloud.edgecontainer_v1.types.UpgradeClusterRequest.Schedule):\n        The schedule for the upgrade.\n    request_id (str):\n        A unique identifier for this request. Restricted to 36 ASCII\n        characters. A random UUID is recommended. This request is\n        only idempotent if ``request_id`` is provided.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the cluster.",
            "type": "string"
          },
          "target_version": {
            "description": "Required. The version the cluster is going to be upgraded to.",
            "type": "string"
          },
          "schedule": {
            "description": "The schedule for the upgrade.",
            "reference": "google.cloud.edgecontainer_v1.types.UpgradeClusterRequest.Schedule",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "weekly_schedule": {
                  "description": "Days of week to schedule report run.  This field is a member of `oneof`_ ``frequency_schedule``.",
                  "type": "object",
                  "reference": "google.ads.admanager_v1.types.Schedule.WeeklySchedule",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "weekly_scheduled_days": {
                        "description": "Specifies days of the week on which to run report.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.type.dayofweek_pb2.DayOfWeek"
                        }
                      }
                    }
                  }
                },
                "monthly_schedule": {
                  "description": "Days of month to schedule report run.  This field is a member of `oneof`_ ``frequency_schedule``.",
                  "type": "object",
                  "reference": "google.ads.admanager_v1.types.Schedule.MonthlySchedule",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "monthly_scheduled_days": {
                        "description": "Specifies days of the month to run report. Range is from 1-31. Will ignore days that are not valid for the given month.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "start_date": {
                  "description": "Date for the first run of the report.",
                  "type": "object",
                  "reference": "google.type.date_pb2.Date"
                },
                "end_date": {
                  "description": "Date for the final run of the report.",
                  "type": "object",
                  "reference": "google.type.date_pb2.Date"
                },
                "frequency": {
                  "description": "Frequency to run report.",
                  "type": "object",
                  "reference": "google.ads.admanager_v1.types.Schedule.Frequency",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "values": {
                        "description": "",
                        "type": "object",
                        "additionalProperties": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "start_time": {
                  "description": "Indicates start time for schedule to run Will use the time_zone from ``ReportDefinition``. Defaults to the publisher's time zone if not specified.  For HOURLY, TWO_TIMES_DAILY, THREE_TIMES_DAILY, or FOUR_TIMES_DAILY, this will be the time of day that the first report will run on the first day. For example, if the start time is 2:00 PM, and the frequency is THREE_TIMES_DAILY, the first day will have reports scheduled at 2:00 PM, 10:00 PM. Each subsequent day will have reports scheduled at 6:00 AM, 2:00 PM, 10:00 PM.",
                  "type": "object",
                  "reference": "google.type.timeofday_pb2.TimeOfDay"
                }
              }
            }
          },
          "request_id": {
            "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if ``request_id`` is provided.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "target_version"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteClusterRequest",
      "description": "Deletes a cluster.\n\nAttributes:\n    name (str):\n        Required. The resource name of the cluster.\n    request_id (str):\n        A unique identifier for this request. Restricted to 36 ASCII\n        characters. A random UUID is recommended. This request is\n        only idempotent if ``request_id`` is provided.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the cluster.",
            "type": "string"
          },
          "request_id": {
            "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if ``request_id`` is provided.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GenerateAccessTokenRequest",
      "description": "Generates an access token for a cluster.\n\nAttributes:\n    cluster (str):\n        Required. The resource name of the cluster.",
      "parameters": {
        "type": "object",
        "properties": {
          "cluster": {
            "description": "Required. The resource name of the cluster.",
            "type": "string"
          }
        },
        "required": [
          "cluster"
        ]
      }
    },
    {
      "type": "function",
      "name": "GenerateOfflineCredentialRequest",
      "description": "Generates an offline credential(offline) for a cluster.\n\nAttributes:\n    cluster (str):\n        Required. The resource name of the cluster.",
      "parameters": {
        "type": "object",
        "properties": {
          "cluster": {
            "description": "Required. The resource name of the cluster.",
            "type": "string"
          }
        },
        "required": [
          "cluster"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListNodePoolsRequest",
      "description": "Lists node pools in a cluster.\n\nAttributes:\n    parent (str):\n        Required. The parent cluster, which owns this\n        collection of node pools.\n    page_size (int):\n        The maximum number of resources to list.\n    page_token (str):\n        A page token received from previous list\n        request.\n    filter (str):\n        Only resources matching this filter will be\n        listed.\n    order_by (str):\n        Specifies the order in which resources will\n        be listed.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent cluster, which owns this collection of node pools.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of resources to list.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token received from previous list request.",
            "type": "string"
          },
          "filter": {
            "description": "Only resources matching this filter will be listed.",
            "type": "string"
          },
          "order_by": {
            "description": "Specifies the order in which resources will be listed.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetNodePoolRequest",
      "description": "Gets a node pool.\n\nAttributes:\n    name (str):\n        Required. The resource name of the node pool.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the node pool.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateNodePoolRequest",
      "description": "Creates a node pool.\n\nAttributes:\n    parent (str):\n        Required. The parent cluster where this node\n        pool will be created.\n    node_pool_id (str):\n        Required. A client-specified unique\n        identifier for the node pool.\n    node_pool (google.cloud.edgecontainer_v1.types.NodePool):\n        Required. The node pool to create.\n    request_id (str):\n        A unique identifier for this request. Restricted to 36 ASCII\n        characters. A random UUID is recommended. This request is\n        only idempotent if ``request_id`` is provided.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent cluster where this node pool will be created.",
            "type": "string"
          },
          "node_pool_id": {
            "description": "Required. A client-specified unique identifier for the node pool.",
            "type": "string"
          },
          "node_pool": {
            "description": "Required. The node pool to create.",
            "reference": "google.cloud.edgecontainer_v1.types.NodePool",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the node pool.",
                  "type": "string"
                },
                "config": {
                  "description": "The node configuration of the pool.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodeConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "machine_type": {
                        "description": "The name of a Google Compute Engine `machine type <https://cloud.google.com/compute/docs/machine-types>`__.  If unspecified, the default machine type is ``e2-medium``.",
                        "type": "string"
                      },
                      "disk_size_gb": {
                        "description": "Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.  If unspecified, the default disk size is 100GB.",
                        "type": "integer"
                      },
                      "oauth_scopes": {
                        "description": "The set of Google API scopes to be made available on all of the node VMs under the \"default\" service account.  The following scopes are recommended, but not required, and by default are not included:  -  ``https://www.googleapis.com/auth/compute`` is required for mounting persistent storage on your nodes. -  ``https://www.googleapis.com/auth/devstorage.read_only`` is required for communicating with **gcr.io** (the `Google Container Registry <https://cloud.google.com/container-registry/>`__).  If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "output_only": true
                      },
                      "service_account": {
                        "description": "The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the \"default\" service account is used.",
                        "type": "string"
                      },
                      "metadata": {
                        "description": "The metadata key/value pairs assigned to instances in the cluster.  Keys must conform to the regexp ``[a-zA-Z0-9-_]+`` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys:  -  \"cluster-location\" -  \"cluster-name\" -  \"cluster-uid\" -  \"configure-sh\" -  \"containerd-configure-sh\" -  \"enable-oslogin\" -  \"gci-ensure-gke-docker\" -  \"gci-metrics-enabled\" -  \"gci-update-strategy\" -  \"instance-template\" -  \"kube-env\" -  \"startup-script\" -  \"user-data\" -  \"disable-address-manager\" -  \"windows-startup-script-ps1\" -  \"common-psm1\" -  \"k8s-node-setup-psm1\" -  \"install-ssh-psm1\" -  \"user-profile-psm1\"  Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB.  The total size of all keys and values must be less than 512 KB.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "image_type": {
                        "description": "The image type to use for this node. Note that for a given image type, the latest version of it will be used. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.",
                        "type": "string"
                      },
                      "labels": {
                        "description": "The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see:  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "local_ssd_count": {
                        "description": "The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See:  https://cloud.google.com/compute/docs/disks/local-ssd for more information.",
                        "type": "integer"
                      },
                      "tags": {
                        "description": "The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "preemptible": {
                        "description": "Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about preemptible VM instances.",
                        "type": "boolean"
                      },
                      "accelerators": {
                        "description": "A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.AcceleratorConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "accelerator_count": {
                                "description": "The number of the accelerator cards exposed to an instance.",
                                "type": "integer"
                              },
                              "accelerator_type": {
                                "description": "The accelerator type resource name. List of supported accelerators `here <https://cloud.google.com/compute/docs/gpus>`__",
                                "type": "string"
                              },
                              "gpu_partition_size": {
                                "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA `mig user guide <https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning>`__.",
                                "type": "string"
                              },
                              "max_time_shared_clients_per_gpu": {
                                "description": "The number of time-shared GPU resources to expose for each physical GPU.",
                                "type": "integer"
                              },
                              "gpu_sharing_config": {
                                "description": "The configuration for GPU sharing options.  This field is a member of `oneof`_ ``_gpu_sharing_config``.",
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "max_shared_clients_per_gpu": {
                                      "description": "The max number of containers that can share a physical GPU.",
                                      "type": "integer"
                                    },
                                    "gpu_sharing_strategy": {
                                      "description": "The type of GPU sharing strategy to enable on the GPU node.  This field is a member of `oneof`_ ``_gpu_sharing_strategy``.",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig.GPUSharingStrategy"
                                    }
                                  }
                                }
                              },
                              "gpu_driver_installation_config": {
                                "description": "The configuration for auto installation of GPU driver.  This field is a member of `oneof`_ ``_gpu_driver_installation_config``.",
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "gpu_driver_version": {
                                      "description": "Mode for how the GPU driver is installed.  This field is a member of `oneof`_ ``_gpu_driver_version``.",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig.GPUDriverVersion"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "sandbox_config": {
                        "description": "Sandbox configuration for this node.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.SandboxConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "sandbox_type": {
                              "description": "Type of the sandbox to use for the node (e.g. 'gvisor')",
                              "type": "string"
                            },
                            "type_": {
                              "description": "Type of the sandbox to use for the node.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.SandboxConfig.Type"
                            }
                          }
                        }
                      },
                      "node_group": {
                        "description": "Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on `sole tenant nodes <https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes>`__.",
                        "type": "string"
                      },
                      "reservation_affinity": {
                        "description": "The optional reservation affinity. Setting this field will apply the specified `Zonal Compute Reservation <https://cloud.google.com/compute/docs/instances/reserving-zonal-resources>`__ to this node pool.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ReservationAffinity",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "consume_reservation_type": {
                              "description": "Corresponds to the type of reservation consumption.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.ReservationAffinity.Type"
                            },
                            "key": {
                              "description": "Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify \"compute.googleapis.com/reservation-name\" as the key and specify the name of your reservation as its value.",
                              "type": "string"
                            },
                            "values": {
                              "description": "Corresponds to the label value(s) of reservation resource(s).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "disk_type": {
                        "description": "Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced')  If unspecified, the default disk type is 'pd-standard'",
                        "type": "string"
                      },
                      "min_cpu_platform": {
                        "description": "Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as ``minCpuPlatform: \"Intel Haswell\"`` or ``minCpuPlatform: \"Intel Sandy Bridge\"``. For more information, read `how to specify min CPU platform <https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform>`__.",
                        "type": "string"
                      },
                      "workload_metadata_config": {
                        "description": "The workload metadata configuration for this node.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.WorkloadMetadataConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "node_metadata": {
                              "description": "NodeMetadata is the configuration for how to expose metadata to the workloads running on the node.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.WorkloadMetadataConfig.NodeMetadata"
                            },
                            "mode": {
                              "description": "Mode is the configuration for how to expose metadata to workloads running on the node pool.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.WorkloadMetadataConfig.Mode"
                            }
                          }
                        }
                      },
                      "taints": {
                        "description": "List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see:  https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.NodeTaint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "Key for taint.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value for taint.",
                                "type": "string"
                              },
                              "effect": {
                                "description": "Effect for taint.",
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.NodeTaint.Effect"
                              }
                            }
                          }
                        }
                      },
                      "boot_disk_kms_key": {
                        "description": "The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption",
                        "type": "string"
                      },
                      "shielded_instance_config": {
                        "description": "Shielded Instance options.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ShieldedInstanceConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enable_secure_boot": {
                              "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.",
                              "type": "boolean"
                            },
                            "enable_integrity_monitoring": {
                              "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "linux_node_config": {
                        "description": "Parameters that can be configured on Linux nodes.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.LinuxNodeConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "sysctls": {
                              "description": "The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.  The following parameters are supported.  net.core.busy_poll net.core.busy_read net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "cgroup_mode": {
                              "description": "cgroup_mode specifies the cgroup mode to be used on the node.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.LinuxNodeConfig.CgroupMode"
                            },
                            "hugepages": {
                              "description": "Optional. Amounts for 2M and 1G hugepages  This field is a member of `oneof`_ ``_hugepages``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.LinuxNodeConfig.HugepagesConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "hugepage_size2m": {
                                    "description": "Optional. Amount of 2M hugepages  This field is a member of `oneof`_ ``_hugepage_size2m``.",
                                    "type": "integer"
                                  },
                                  "hugepage_size1g": {
                                    "description": "Optional. Amount of 1G hugepages  This field is a member of `oneof`_ ``_hugepage_size1g``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "kubelet_config": {
                        "description": "Node kubelet configs.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodeKubeletConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "cpu_manager_policy": {
                              "description": "Control the CPU management policy on the node. See https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/  The following values are allowed.  -  \"none\": the default, which represents the existing scheduling behavior. -  \"static\": allows pods with certain resource characteristics to be granted increased CPU affinity and exclusivity on the node. The default value is 'none' if unspecified.",
                              "type": "string"
                            },
                            "cpu_cfs_quota": {
                              "description": "Enable CPU CFS quota enforcement for containers that specify CPU limits. This option is enabled by default which makes kubelet use CFS quota (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to enforce container CPU limits. Otherwise, CPU limits will not be enforced at all.  Disable this option to mitigate CPU throttling problems while still having your pods to be in Guaranteed QoS class by specifying the CPU limits.  The default value is 'true' if unspecified.",
                              "type": "object",
                              "reference": "google.protobuf.wrappers_pb2.BoolValue",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "description": "",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "cpu_cfs_quota_period": {
                              "description": "Set the CPU CFS quota period value 'cpu.cfs_period_us'.  The string must be a sequence of decimal numbers, each with optional fraction and a unit suffix, such as \"300ms\". Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\". The value must be a positive duration.",
                              "type": "string"
                            },
                            "pod_pids_limit": {
                              "description": "Set the Pod PID limits. See https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits  Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.",
                              "type": "integer"
                            },
                            "insecure_kubelet_readonly_port_enabled": {
                              "description": "Enable or disable Kubelet read only port.  This field is a member of `oneof`_ ``_insecure_kubelet_readonly_port_enabled``.",
                              "type": "boolean",
                              "output_only": true
                            }
                          }
                        }
                      },
                      "ephemeral_storage_config": {
                        "description": "Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.EphemeralStorageConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "local_ssd_count": {
                              "description": "Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. The limit for this value is dependent upon the maximum number of disk available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.  A zero (or unset) value has different meanings depending on machine type being used:  1. For pre-Gen3 machines, which support flexible numbers of local ssds, zero (or unset) means to disable using local SSDs as ephemeral storage. 2. For Gen3 machines which dictate a specific number of local ssds, zero (or unset) means to use the default number of local ssds that goes with that machine type. For example, for a c3-standard-8-lssd machine, 2 local ssds would be provisioned. For c3-standard-8 (which doesn't support local ssds), 0 will be provisioned. See https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds for more info.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "gcfs_config": {
                        "description": "GCFS (Google Container File System) configs.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.GcfsConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Whether to use GCFS.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "advanced_machine_features": {
                        "description": "Advanced features for the Compute Engine VM.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.AdvancedMachineFeatures",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "threads_per_core": {
                              "description": "The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.  This field is a member of `oneof`_ ``_threads_per_core``.",
                              "type": "integer"
                            },
                            "enable_nested_virtualization": {
                              "description": "Whether or not to enable nested virtualization (defaults to false).  This field is a member of `oneof`_ ``_enable_nested_virtualization``.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "gvnic": {
                        "description": "Enable or disable gvnic on the node pool.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.VirtualNIC",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Whether gVNIC features are enabled in the node pool.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "spot": {
                        "description": "Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.",
                        "type": "boolean"
                      },
                      "confidential_nodes": {
                        "description": "Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ConfidentialNodes",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Whether Confidential Nodes feature is enabled.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "fast_socket": {
                        "description": "Enable or disable NCCL fast socket for the node pool.  This field is a member of `oneof`_ ``_fast_socket``.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.FastSocket",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Whether Fast Socket features are enabled in the node pool.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "resource_labels": {
                        "description": "The resource labels for the node pool to use to annotate any related Google Compute Engine resources.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "logging_config": {
                        "description": "Logging configuration.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodePoolLoggingConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "variant_config": {
                              "description": "Logging variant configuration.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.LoggingVariantConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "variant": {
                                    "description": "Logging variant deployed on nodes.",
                                    "type": "object",
                                    "reference": "google.cloud.container_v1beta1.types.LoggingVariantConfig.Variant",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "version": {
                                          "description": "The name of the flow version. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>/versions/<VersionID>``.",
                                          "type": "string"
                                        },
                                        "traffic_allocation": {
                                          "description": "Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.",
                                          "type": "number"
                                        },
                                        "is_control_group": {
                                          "description": "Whether the variant is for the control group.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "windows_node_config": {
                        "description": "Parameters that can be configured on Windows nodes.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.WindowsNodeConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "os_version": {
                              "description": "OSVersion specifies the Windows node config to be used on the node",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.WindowsNodeConfig.OSVersion"
                            }
                          }
                        }
                      },
                      "local_nvme_ssd_block_config": {
                        "description": "Parameters for using raw-block Local NVMe SSDs.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.LocalNvmeSsdBlockConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "local_ssd_count": {
                              "description": "Number of local NVMe SSDs to use. The limit for this value is dependent upon the maximum number of disk available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.  A zero (or unset) value has different meanings depending on machine type being used:  1. For pre-Gen3 machines, which support flexible numbers of local ssds, zero (or unset) means to disable using local SSDs as ephemeral storage. 2. For Gen3 machines which dictate a specific number of local ssds, zero (or unset) means to use the default number of local ssds that goes with that machine type. For example, for a c3-standard-8-lssd machine, 2 local ssds would be provisioned. For c3-standard-8 (which doesn't support local ssds), 0 will be provisioned. See https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds for more info.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "ephemeral_storage_local_ssd_config": {
                        "description": "Parameters for the node ephemeral storage using Local SSDs. If unspecified, ephemeral storage is backed by the boot disk. This field is functionally equivalent to the ephemeral_storage_config",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.EphemeralStorageLocalSsdConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "local_ssd_count": {
                              "description": "Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces.  A zero (or unset) value has different meanings depending on machine type being used:  1. For pre-Gen3 machines, which support flexible numbers of local ssds, zero (or unset) means to disable using local SSDs as ephemeral storage. The limit for this value is dependent upon the maximum number of disk available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information. 2. For Gen3 machines which dictate a specific number of local ssds, zero (or unset) means to use the default number of local ssds that goes with that machine type. For example, for a c3-standard-8-lssd machine, 2 local ssds would be provisioned. For c3-standard-8 (which doesn't support local ssds), 0 will be provisioned. See https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds for more info.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "sole_tenant_config": {
                        "description": "Parameters for node pools to be backed by shared sole tenant node groups.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.SoleTenantConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "node_affinities": {
                              "description": "NodeAffinities used to match to a shared sole tenant node group.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.SoleTenantConfig.NodeAffinity",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "Key for NodeAffinity.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "Operator for NodeAffinity.",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.SoleTenantConfig.NodeAffinity.Operator",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the resource.",
                                            "type": "string"
                                          },
                                          "create_time": {
                                            "description": "Output only. The create timestamp.",
                                            "type": "object",
                                            "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                            "output_only": true
                                          },
                                          "update_time": {
                                            "description": "Output only. The update timestamp.",
                                            "type": "object",
                                            "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                            "output_only": true
                                          },
                                          "labels": {
                                            "description": "Labels as key value pairs.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "operator_definition": {
                                            "description": "The definition of the operator.",
                                            "type": "object",
                                            "reference": "google.cloud.visionai_v1.types.OperatorDefinition",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "operator": {
                                                  "description": "The name of this operator.  Tentatively [A-Z][a-zA-Z0-9]*, e.g., BboxCounter, PetDetector, PetDetector1.",
                                                  "type": "string"
                                                },
                                                "input_args": {
                                                  "description": "Declares input arguments.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "reference": "google.cloud.visionai_v1.types.OperatorDefinition.ArgumentDefinition",
                                                    "resolved_schema": {
                                                      "type": "object",
                                                      "properties": {
                                                        "argument": {
                                                          "description": "The name of the argument.  Tentatively `a-z <[_a-z0-9]*[a-z0-9]>`__?, e.g., video, audio, high_fps_frame.",
                                                          "type": "string"
                                                        },
                                                        "type_": {
                                                          "description": "The data type of the argument.  This should match the textual representation of a stream/Packet type.",
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "output_args": {
                                                  "description": "Declares output arguments.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "reference": "google.cloud.visionai_v1.types.OperatorDefinition.ArgumentDefinition",
                                                    "resolved_schema": {
                                                      "type": "object",
                                                      "properties": {
                                                        "argument": {
                                                          "description": "The name of the argument.  Tentatively `a-z <[_a-z0-9]*[a-z0-9]>`__?, e.g., video, audio, high_fps_frame.",
                                                          "type": "string"
                                                        },
                                                        "type_": {
                                                          "description": "The data type of the argument.  This should match the textual representation of a stream/Packet type.",
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "attributes": {
                                                  "description": "Declares the attributes.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "reference": "google.cloud.visionai_v1.types.OperatorDefinition.AttributeDefinition",
                                                    "resolved_schema": {
                                                      "type": "object",
                                                      "properties": {
                                                        "attribute": {
                                                          "description": "The name of the attribute.  Tentatively `a-z <[_a-z0-9]*[a-z0-9]>`__?, e.g., max_frames_per_video, resize_height.",
                                                          "type": "string"
                                                        },
                                                        "type_": {
                                                          "description": "The type of this attribute.  See attribute_value.proto for possibilities.",
                                                          "type": "string"
                                                        },
                                                        "default_value": {
                                                          "description": "The default value for the attribute.",
                                                          "type": "object",
                                                          "reference": "google.cloud.visionai_v1.types.AttributeValue",
                                                          "resolved_schema": {
                                                            "type": "object",
                                                            "properties": {
                                                              "string_value": {
                                                                "description": "A string up to 256 bytes long.  This field is a member of `oneof`_ ``value``.",
                                                                "type": "object",
                                                                "reference": "google.cloud.trace_v2.types.TruncatableString",
                                                                "resolved_schema": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "value": {
                                                                      "description": "The shortened string. For example, if the original string is 500 bytes long and the limit of the string is 128 bytes, then ``value`` contains the first 128 bytes of the 500-byte string.  Truncation always happens on a UTF8 character boundary. If there are multi-byte characters in the string, then the length of the shortened string might be less than the size limit.",
                                                                      "type": "string"
                                                                    },
                                                                    "truncated_byte_count": {
                                                                      "description": "The number of bytes removed from the original string. If this value is 0, then the string was not shortened.",
                                                                      "type": "integer"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "int_value": {
                                                                "description": "A 64-bit signed integer.  This field is a member of `oneof`_ ``value``.",
                                                                "type": "integer"
                                                              },
                                                              "bool_value": {
                                                                "description": "A Boolean value represented by ``true`` or ``false``.  This field is a member of `oneof`_ ``value``.",
                                                                "type": "boolean"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "resources": {
                                                  "description": "The resources for running the operator.",
                                                  "type": "object",
                                                  "reference": "google.cloud.visionai_v1.types.ResourceSpecification",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "cpu": {
                                                        "description": "CPU specification.  Examples: \"100m\", \"0.5\", \"1\", \"2\", ... correspond to 0.1, half, 1, or 2 cpus.  Leave empty to let the system decide.  Note that this does *not* determine the cpu vender/make, or its underlying clock speed and specific SIMD features. It is only the amount time it requires in timeslicing.",
                                                        "type": "string"
                                                      },
                                                      "cpu_limits": {
                                                        "description": "CPU limit.  Examples:  \"100m\", \"0.5\", \"1\", \"2\", ... correspond to 0.1, half, 1, or 2 cpus.  Leave empty to indicate no limit.",
                                                        "type": "string"
                                                      },
                                                      "memory": {
                                                        "description": "Memory specification (in bytes).  Examples:  \"128974848\", \"129e6\", \"129M\", \"123Mi\", ... correspond to 128974848 bytes, 129000000 bytes, 129 mebibytes, 123 megabytes.  Leave empty to let the system decide.",
                                                        "type": "string"
                                                      },
                                                      "memory_limits": {
                                                        "description": "Memory usage limits.  Examples:  \"128974848\", \"129e6\", \"129M\", \"123Mi\", ... correspond to 128974848 bytes, 129000000 bytes, 129 mebibytes, 123 megabytes.  Leave empty to indicate no limit.",
                                                        "type": "string"
                                                      },
                                                      "gpus": {
                                                        "description": "Number of gpus.",
                                                        "type": "integer"
                                                      },
                                                      "latency_budget_ms": {
                                                        "description": "The maximum latency that this operator may use to process an element. If non positive, then a system default will be used. Operator developers should arrange for the system compute resources to be aligned with this latency budget; e.g. if you want a ML model to produce results within 500ms, then you should make sure you request enough cpu/gpu/memory to achieve that.",
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                },
                                                "short_description": {
                                                  "description": "Short description of the operator.",
                                                  "type": "string"
                                                },
                                                "description": {
                                                  "description": "Full description of the operator.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "docker_image": {
                                            "description": "The link to the docker image of the operator.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "values": {
                                      "description": "Values for NodeAffinity.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "containerd_config": {
                        "description": "Parameters for containerd customization.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ContainerdConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "private_registry_access_config": {
                              "description": "PrivateRegistryAccessConfig is used to configure access configuration for private container registries.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.ContainerdConfig.PrivateRegistryAccessConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "Private registry access is enabled.",
                                    "type": "boolean"
                                  },
                                  "certificate_authority_domain_config": {
                                    "description": "Private registry access configuration.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "fqdns": {
                                            "description": "List of fully qualified domain names (FQDN). Specifying port is supported. Wilcards are NOT supported. Examples:  - my.customdomain.com - 10.0.1.2:5000",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "gcp_secret_manager_certificate_config": {
                                            "description": "Google Secret Manager (GCP) certificate configuration.  This field is a member of `oneof`_ ``certificate_config``.",
                                            "type": "object",
                                            "reference": "google.cloud.container_v1beta1.types.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig.GCPSecretManagerCertificateConfig",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "secret_uri": {
                                                  "description": "Secret URI, in the form \"projects/$PROJECT_ID/secrets/$SECRET_NAME/versions/$VERSION\". Version can be fixed (e.g. \"2\") or \"latest\".",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "host_maintenance_policy": {
                        "description": "HostMaintenancePolicy contains the desired maintenance policy for the Google Compute Engine hosts.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.HostMaintenancePolicy",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "maintenance_interval": {
                              "description": "Specifies the frequency of planned maintenance events.  This field is a member of `oneof`_ ``_maintenance_interval``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.HostMaintenancePolicy.MaintenanceInterval"
                            },
                            "opportunistic_maintenance_strategy": {
                              "description": "Strategy that will trigger maintenance on behalf of the customer.  This field is a member of `oneof`_ ``maintenance_strategy``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.HostMaintenancePolicy.OpportunisticMaintenanceStrategy",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "node_idle_time_window": {
                                    "description": "The amount of time that a node can remain idle (no customer owned workloads running), before triggering maintenance.  This field is a member of `oneof`_ ``_node_idle_time_window``.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "maintenance_availability_window": {
                                    "description": "The window of time that opportunistic maintenance can run. Example: A setting of 14 days implies that opportunistic maintenance can only be ran in the 2 weeks leading up to the scheduled maintenance date. Setting 28 days allows opportunistic maintenance to run at any time in the scheduled maintenance window (all ``PERIODIC`` maintenance is set 28 days in advance).  This field is a member of `oneof`_ ``_maintenance_availability_window``.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "min_nodes_per_pool": {
                                    "description": "The minimum nodes required to be available in a pool. Blocks maintenance if it would cause the number of running nodes to dip below this value.  This field is a member of `oneof`_ ``_min_nodes_per_pool``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "resource_manager_tags": {
                        "description": "A map of resource manager tag keys and values to be attached to the nodes.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ResourceManagerTags",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "tags": {
                              "description": "Tags must be in one of the following formats ([KEY]=[VALUE])  1. ``tagKeys/{tag_key_id}=tagValues/{tag_value_id}`` 2. ``{org_id}/{tag_key_name}={tag_value_name}`` 3. ``{project_id}/{tag_key_name}={tag_value_name}``",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "enable_confidential_storage": {
                        "description": "Optional. Reserved for future use.",
                        "type": "boolean"
                      },
                      "secondary_boot_disks": {
                        "description": "List of secondary boot disks attached to the nodes.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.SecondaryBootDisk",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "Disk mode (container image cache, etc.)",
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.SecondaryBootDisk.Mode"
                              },
                              "disk_image": {
                                "description": "Fully-qualified resource ID for an existing disk image.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "secondary_boot_disk_update_strategy": {
                        "description": "Secondary boot disk update strategy.  This field is a member of `oneof`_ ``_secondary_boot_disk_update_strategy``.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.SecondaryBootDiskUpdateStrategy",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  }
                },
                "initial_node_count": {
                  "description": "The initial node count for the pool. You must ensure that your Compute Engine `resource quota <https://cloud.google.com/compute/quotas>`__ is sufficient for this number of instances. You must also have available firewall and routes quota.",
                  "type": "integer"
                },
                "locations": {
                  "description": "The list of Google Compute Engine `zones <https://cloud.google.com/compute/docs/zones#available>`__ in which the NodePool's nodes should be located.  If this value is unspecified during node pool creation, the `Cluster.Locations <https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations>`__ value will be used, instead.  Warning: changing node pool locations will result in nodes being added and/or removed.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "network_config": {
                  "description": "Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodeNetworkConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_pod_range": {
                        "description": "Input only. Whether to create a new range for pod IPs in this node pool. Defaults are provided for ``pod_range`` and ``pod_ipv4_cidr_block`` if they are not specified.  If neither ``create_pod_range`` or ``pod_range`` are specified, the cluster-level default (``ip_allocation_policy.cluster_ipv4_cidr_block``) is used.  Only applicable if ``ip_allocation_policy.use_ip_aliases`` is true.  This field cannot be changed after the node pool has been created.",
                        "type": "boolean"
                      },
                      "pod_range": {
                        "description": "The ID of the secondary range for pod IPs. If ``create_pod_range`` is true, this ID is used for the new range. If ``create_pod_range`` is false, uses an existing secondary range with this ID.  Only applicable if ``ip_allocation_policy.use_ip_aliases`` is true.  This field cannot be changed after the node pool has been created.",
                        "type": "string"
                      },
                      "pod_ipv4_cidr_block": {
                        "description": "The IP address range for pod IPs in this node pool.  Only applicable if ``create_pod_range`` is true.  Set to blank to have a range chosen with the default size.  Set to /netmask (e.g. ``/14``) to have a range chosen with a specific netmask.  Set to a `CIDR <https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing>`__ notation (e.g. ``10.96.0.0/14``) to pick a specific range to use.  Only applicable if ``ip_allocation_policy.use_ip_aliases`` is true.  This field cannot be changed after the node pool has been created.",
                        "type": "string"
                      },
                      "enable_private_nodes": {
                        "description": "Whether nodes have internal IP addresses only. If enable_private_nodes is not specified, then the value is derived from [cluster.privateClusterConfig.enablePrivateNodes][google.container.v1beta1.PrivateClusterConfig.enablePrivateNodes]  This field is a member of `oneof`_ ``_enable_private_nodes``.",
                        "type": "boolean"
                      },
                      "network_performance_config": {
                        "description": "Network bandwidth tier configuration.  This field is a member of `oneof`_ ``_network_performance_config``.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodeNetworkConfig.NetworkPerformanceConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "total_egress_bandwidth_tier": {
                              "description": "Specifies the total network bandwidth tier for the NodePool.  This field is a member of `oneof`_ ``_total_egress_bandwidth_tier``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.NodeNetworkConfig.NetworkPerformanceConfig.Tier"
                            },
                            "external_ip_egress_bandwidth_tier": {
                              "description": "Specifies the network bandwidth tier for the NodePool for traffic to external/public IP addresses.  This field is a member of `oneof`_ ``_external_ip_egress_bandwidth_tier``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.NodeNetworkConfig.NetworkPerformanceConfig.Tier"
                            }
                          }
                        }
                      },
                      "pod_cidr_overprovision_config": {
                        "description": "[PRIVATE FIELD] Pod CIDR size overprovisioning config for the nodepool.  Pod CIDR size per node depends on max_pods_per_node. By default, the value of max_pods_per_node is rounded off to next power of 2 and we then double that to get the size of pod CIDR block per node. Example: max_pods_per_node of 30 would result in 64 IPs (/26).  This config can disable the doubling of IPs (we still round off to next power of 2) Example: max_pods_per_node of 30 will result in 32 IPs (/27) when overprovisioning is disabled.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.PodCIDROverprovisionConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "disable": {
                              "description": "Whether Pod CIDR overprovisioning is disabled. Note: Pod CIDR overprovisioning is enabled by default.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "additional_node_network_configs": {
                        "description": "We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.AdditionalNodeNetworkConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "network": {
                                "description": "Name of the VPC where the additional interface belongs",
                                "type": "string"
                              },
                              "subnetwork": {
                                "description": "Name of the subnetwork where the additional interface belongs",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "additional_pod_network_configs": {
                        "description": "We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.AdditionalPodNetworkConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "subnetwork": {
                                "description": "Name of the subnetwork where the additional pod network belongs.",
                                "type": "string"
                              },
                              "secondary_pod_range": {
                                "description": "The name of the secondary range on the subnet which provides IP address for this pod range.",
                                "type": "string"
                              },
                              "max_pods_per_node": {
                                "description": "The maximum number of pods per node which use this pod network.  This field is a member of `oneof`_ ``_max_pods_per_node``.",
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.MaxPodsConstraint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "max_pods_per_node": {
                                      "description": "Constraint enforced on the max num of pods per node.",
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "pod_ipv4_range_utilization": {
                        "description": "Output only. The utilization of the IPv4 range for the pod. The ratio is Usage/[Total number of IPs in the secondary range], Usage=numNodes\\ *numZones*\\ podIPsPerNode.",
                        "type": "number",
                        "output_only": true
                      }
                    }
                  }
                },
                "self_link": {
                  "description": "Output only. Server-defined URL for the resource.",
                  "type": "string",
                  "output_only": true
                },
                "version": {
                  "description": "The version of Kubernetes running on this NodePool's nodes. If unspecified, it defaults as described `here <https://cloud.google.com/kubernetes-engine/versioning#specifying_node_version>`__.",
                  "type": "string"
                },
                "instance_group_urls": {
                  "description": "Output only. The resource URLs of the `managed instance groups <https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances>`__ associated with this node pool. During the node pool blue-green upgrade operation, the URLs contain both blue and green resources.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "output_only": true
                },
                "status": {
                  "description": "Output only. The status of the nodes in this pool instance.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePool.Status",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "Output only. State of the metadata job.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.MetadataJob.Status.State",
                        "output_only": true
                      },
                      "message": {
                        "description": "Output only. Message relating to the progression of a metadata job.",
                        "type": "string",
                        "output_only": true
                      },
                      "completion_percent": {
                        "description": "Output only. Progress tracking.",
                        "type": "integer",
                        "output_only": true
                      },
                      "update_time": {
                        "description": "Output only. The time when the status was updated.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      }
                    }
                  }
                },
                "status_message": {
                  "description": "Output only. Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available.",
                  "type": "string",
                  "output_only": true
                },
                "autoscaling": {
                  "description": "Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePoolAutoscaling",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "Is autoscaling enabled for this node pool.",
                        "type": "boolean"
                      },
                      "min_node_count": {
                        "description": "Minimum number of nodes for one location in the NodePool. Must be >= 1 and <= max_node_count.",
                        "type": "integer"
                      },
                      "max_node_count": {
                        "description": "Maximum number of nodes for one location in the NodePool. Must be >= min_node_count. There has to be enough quota to scale up the cluster.",
                        "type": "integer"
                      },
                      "autoprovisioned": {
                        "description": "Can this node pool be deleted automatically.",
                        "type": "boolean"
                      },
                      "location_policy": {
                        "description": "Location policy used when scaling up a nodepool.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodePoolAutoscaling.LocationPolicy",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "locations": {
                              "description": "Location configurations mapped by location name. Currently only zone names are supported and must be represented as valid internal URLs, such as zones/us-central1-a.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "reference": "google.cloud.compute_v1.types.LocationPolicyLocation",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "constraints": {
                                      "description": "Constraints that the caller requires on the result distribution in this zone.  This field is a member of `oneof`_ ``_constraints``.",
                                      "type": "object",
                                      "reference": "google.cloud.compute_v1.types.LocationPolicyLocationConstraints",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "max_count": {
                                            "description": "Maximum number of items that are allowed to be placed in this zone. The value must be non-negative.  This field is a member of `oneof`_ ``_max_count``.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    },
                                    "preference": {
                                      "description": "Preference for a given location. Set to either ALLOW or DENY. Check the Preference enum for the list of possible values.  This field is a member of `oneof`_ ``_preference``.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "target_shape": {
                              "description": "Strategy for distributing VMs across zones in a region. Check the TargetShape enum for the list of possible values.  This field is a member of `oneof`_ ``_target_shape``.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "total_min_node_count": {
                        "description": "Minimum number of nodes in the node pool. Must be greater than 1 less than total_max_node_count. The total_*_node_count fields are mutually exclusive with the \\*_node_count fields.",
                        "type": "integer"
                      },
                      "total_max_node_count": {
                        "description": "Maximum number of nodes in the node pool. Must be greater than total_min_node_count. There has to be enough quota to scale up the cluster. The total_*_node_count fields are mutually exclusive with the \\*_node_count fields.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "management": {
                  "description": "NodeManagement configuration for this NodePool.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodeManagement",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "auto_upgrade": {
                        "description": "Whether the nodes will be automatically upgraded.",
                        "type": "boolean"
                      },
                      "auto_repair": {
                        "description": "Whether the nodes will be automatically repaired.",
                        "type": "boolean"
                      },
                      "upgrade_options": {
                        "description": "Specifies the Auto Upgrade knobs for the node pool.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.AutoUpgradeOptions",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "auto_upgrade_start_time": {
                              "description": "Output only. This field is set when upgrades are about to commence with the approximate start time for the upgrades, in `RFC3339 <https://www.ietf.org/rfc/rfc3339.txt>`__ text format.",
                              "type": "string",
                              "output_only": true
                            },
                            "description": {
                              "description": "Output only. This field is set when upgrades are about to commence with the description of the upgrade.",
                              "type": "string",
                              "output_only": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "max_pods_constraint": {
                  "description": "The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.MaxPodsConstraint",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "max_pods_per_node": {
                        "description": "Constraint enforced on the max num of pods per node.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "conditions": {
                  "description": "Which conditions caused the current node pool state.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.container_v1beta1.types.StatusCondition",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Machine-friendly representation of the condition Deprecated. Use canonical_code instead.",
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.StatusCondition.Code"
                        },
                        "message": {
                          "description": "Human-friendly representation of the condition",
                          "type": "string"
                        },
                        "canonical_code": {
                          "description": "Canonical code of the condition.",
                          "type": "object",
                          "reference": "google.rpc.code_pb2.Code"
                        }
                      }
                    }
                  }
                },
                "pod_ipv4_cidr_size": {
                  "description": "Output only. The pod CIDR block size per node in this node pool.",
                  "type": "integer",
                  "output_only": true
                },
                "upgrade_settings": {
                  "description": "Upgrade settings control disruption and speed of the upgrade.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePool.UpgradeSettings",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "max_surge": {
                        "description": "The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.",
                        "type": "integer"
                      },
                      "max_unavailable": {
                        "description": "The maximum number of nodes that can be simultaneously unavailable during the upgrade process. A node is considered available if its status is Ready.",
                        "type": "integer"
                      },
                      "strategy": {
                        "description": "Update strategy of the node pool.  This field is a member of `oneof`_ ``_strategy``.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodePoolUpdateStrategy"
                      },
                      "blue_green_settings": {
                        "description": "Settings for blue-green upgrade strategy.  This field is a member of `oneof`_ ``_blue_green_settings``.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.BlueGreenSettings",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "standard_rollout_policy": {
                              "description": "Standard policy for the blue-green upgrade.  This field is a member of `oneof`_ ``rollout_policy``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.BlueGreenSettings.StandardRolloutPolicy",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "batch_percentage": {
                                    "description": "Percentage of the blue pool nodes to drain in a batch. The range of this field should be (0.0, 1.0].  This field is a member of `oneof`_ ``update_batch_size``.",
                                    "type": "number"
                                  },
                                  "batch_node_count": {
                                    "description": "Number of blue nodes to drain in a batch.  This field is a member of `oneof`_ ``update_batch_size``.",
                                    "type": "integer"
                                  },
                                  "batch_soak_duration": {
                                    "description": "Soak time after each batch gets drained. Default to zero.  This field is a member of `oneof`_ ``_batch_soak_duration``.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "autoscaled_rollout_policy": {
                              "description": "Autoscaled policy for cluster autoscaler enabled blue-green upgrade.  This field is a member of `oneof`_ ``rollout_policy``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.BlueGreenSettings.AutoscaledRolloutPolicy",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "node_pool_soak_duration": {
                              "description": "Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.  This field is a member of `oneof`_ ``_node_pool_soak_duration``.",
                              "type": "object",
                              "reference": "google.protobuf.duration_pb2.Duration",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "nanos": {
                                    "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                    "type": "integer"
                                  },
                                  "seconds": {
                                    "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "placement_policy": {
                  "description": "Specifies the node placement policy.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePool.PlacementPolicy",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "type_": {
                        "description": "The type of placement.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodePool.PlacementPolicy.Type"
                      },
                      "tpu_topology": {
                        "description": "TPU placement topology for pod slice node pool. https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies",
                        "type": "string"
                      },
                      "policy_name": {
                        "description": "If set, refers to the name of a custom resource policy supplied by the user. The resource policy must be in the same project and region as the node pool. If not found, InvalidArgument error is returned.",
                        "type": "string"
                      }
                    }
                  }
                },
                "update_info": {
                  "description": "Output only. Update info contains relevant information during a node pool update.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePool.UpdateInfo",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "target_shard_count": {
                        "description": "Target number of shards for redis cluster  This field is a member of `oneof`_ ``_target_shard_count``.",
                        "type": "integer"
                      },
                      "target_replica_count": {
                        "description": "Target number of replica nodes per shard.  This field is a member of `oneof`_ ``_target_replica_count``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "etag": {
                  "description": "This checksum is computed by the server based on the value of node pool fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.",
                  "type": "string"
                },
                "queued_provisioning": {
                  "description": "Specifies the configuration of queued provisioning.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePool.QueuedProvisioning",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "Denotes that this nodepool is QRM specific, meaning nodes can be only obtained through queuing via the Cluster Autoscaler ProvisioningRequest API.",
                        "type": "boolean"
                      }
                    }
                  }
                },
                "best_effort_provisioning": {
                  "description": "Enable best effort provisioning for nodes",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.BestEffortProvisioning",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "When this is enabled, cluster/node pool creations will ignore non-fatal errors like stockout to best provision as many nodes as possible right now and eventually bring up all target number of nodes",
                        "type": "boolean"
                      },
                      "min_provision_nodes": {
                        "description": "Minimum number of nodes to be provisioned to be considered as succeeded, and the rest of nodes will be provisioned gradually and eventually when stockout issue has been resolved.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "request_id": {
            "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if ``request_id`` is provided.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "node_pool_id",
          "node_pool"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateNodePoolRequest",
      "description": "Updates a node pool.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Field mask is used to specify the fields to be overwritten\n        in the NodePool resource by the update. The fields specified\n        in the update_mask are relative to the resource, not the\n        full request. A field will be overwritten if it is in the\n        mask. If the user does not provide a mask then all fields\n        will be overwritten.\n    node_pool (google.cloud.edgecontainer_v1.types.NodePool):\n        The updated node pool.\n    request_id (str):\n        A unique identifier for this request. Restricted to 36 ASCII\n        characters. A random UUID is recommended. This request is\n        only idempotent if ``request_id`` is provided.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Field mask is used to specify the fields to be overwritten in the NodePool resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "node_pool": {
            "description": "The updated node pool.",
            "reference": "google.cloud.edgecontainer_v1.types.NodePool",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the node pool.",
                  "type": "string"
                },
                "config": {
                  "description": "The node configuration of the pool.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodeConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "machine_type": {
                        "description": "The name of a Google Compute Engine `machine type <https://cloud.google.com/compute/docs/machine-types>`__.  If unspecified, the default machine type is ``e2-medium``.",
                        "type": "string"
                      },
                      "disk_size_gb": {
                        "description": "Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.  If unspecified, the default disk size is 100GB.",
                        "type": "integer"
                      },
                      "oauth_scopes": {
                        "description": "The set of Google API scopes to be made available on all of the node VMs under the \"default\" service account.  The following scopes are recommended, but not required, and by default are not included:  -  ``https://www.googleapis.com/auth/compute`` is required for mounting persistent storage on your nodes. -  ``https://www.googleapis.com/auth/devstorage.read_only`` is required for communicating with **gcr.io** (the `Google Container Registry <https://cloud.google.com/container-registry/>`__).  If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "output_only": true
                      },
                      "service_account": {
                        "description": "The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the \"default\" service account is used.",
                        "type": "string"
                      },
                      "metadata": {
                        "description": "The metadata key/value pairs assigned to instances in the cluster.  Keys must conform to the regexp ``[a-zA-Z0-9-_]+`` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys:  -  \"cluster-location\" -  \"cluster-name\" -  \"cluster-uid\" -  \"configure-sh\" -  \"containerd-configure-sh\" -  \"enable-oslogin\" -  \"gci-ensure-gke-docker\" -  \"gci-metrics-enabled\" -  \"gci-update-strategy\" -  \"instance-template\" -  \"kube-env\" -  \"startup-script\" -  \"user-data\" -  \"disable-address-manager\" -  \"windows-startup-script-ps1\" -  \"common-psm1\" -  \"k8s-node-setup-psm1\" -  \"install-ssh-psm1\" -  \"user-profile-psm1\"  Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB.  The total size of all keys and values must be less than 512 KB.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "image_type": {
                        "description": "The image type to use for this node. Note that for a given image type, the latest version of it will be used. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.",
                        "type": "string"
                      },
                      "labels": {
                        "description": "The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see:  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "local_ssd_count": {
                        "description": "The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See:  https://cloud.google.com/compute/docs/disks/local-ssd for more information.",
                        "type": "integer"
                      },
                      "tags": {
                        "description": "The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "preemptible": {
                        "description": "Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about preemptible VM instances.",
                        "type": "boolean"
                      },
                      "accelerators": {
                        "description": "A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.AcceleratorConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "accelerator_count": {
                                "description": "The number of the accelerator cards exposed to an instance.",
                                "type": "integer"
                              },
                              "accelerator_type": {
                                "description": "The accelerator type resource name. List of supported accelerators `here <https://cloud.google.com/compute/docs/gpus>`__",
                                "type": "string"
                              },
                              "gpu_partition_size": {
                                "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA `mig user guide <https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning>`__.",
                                "type": "string"
                              },
                              "max_time_shared_clients_per_gpu": {
                                "description": "The number of time-shared GPU resources to expose for each physical GPU.",
                                "type": "integer"
                              },
                              "gpu_sharing_config": {
                                "description": "The configuration for GPU sharing options.  This field is a member of `oneof`_ ``_gpu_sharing_config``.",
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "max_shared_clients_per_gpu": {
                                      "description": "The max number of containers that can share a physical GPU.",
                                      "type": "integer"
                                    },
                                    "gpu_sharing_strategy": {
                                      "description": "The type of GPU sharing strategy to enable on the GPU node.  This field is a member of `oneof`_ ``_gpu_sharing_strategy``.",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.GPUSharingConfig.GPUSharingStrategy"
                                    }
                                  }
                                }
                              },
                              "gpu_driver_installation_config": {
                                "description": "The configuration for auto installation of GPU driver.  This field is a member of `oneof`_ ``_gpu_driver_installation_config``.",
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "gpu_driver_version": {
                                      "description": "Mode for how the GPU driver is installed.  This field is a member of `oneof`_ ``_gpu_driver_version``.",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.GPUDriverInstallationConfig.GPUDriverVersion"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "sandbox_config": {
                        "description": "Sandbox configuration for this node.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.SandboxConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "sandbox_type": {
                              "description": "Type of the sandbox to use for the node (e.g. 'gvisor')",
                              "type": "string"
                            },
                            "type_": {
                              "description": "Type of the sandbox to use for the node.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.SandboxConfig.Type"
                            }
                          }
                        }
                      },
                      "node_group": {
                        "description": "Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on `sole tenant nodes <https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes>`__.",
                        "type": "string"
                      },
                      "reservation_affinity": {
                        "description": "The optional reservation affinity. Setting this field will apply the specified `Zonal Compute Reservation <https://cloud.google.com/compute/docs/instances/reserving-zonal-resources>`__ to this node pool.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ReservationAffinity",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "consume_reservation_type": {
                              "description": "Corresponds to the type of reservation consumption.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.ReservationAffinity.Type"
                            },
                            "key": {
                              "description": "Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify \"compute.googleapis.com/reservation-name\" as the key and specify the name of your reservation as its value.",
                              "type": "string"
                            },
                            "values": {
                              "description": "Corresponds to the label value(s) of reservation resource(s).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "disk_type": {
                        "description": "Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced')  If unspecified, the default disk type is 'pd-standard'",
                        "type": "string"
                      },
                      "min_cpu_platform": {
                        "description": "Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as ``minCpuPlatform: \"Intel Haswell\"`` or ``minCpuPlatform: \"Intel Sandy Bridge\"``. For more information, read `how to specify min CPU platform <https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform>`__.",
                        "type": "string"
                      },
                      "workload_metadata_config": {
                        "description": "The workload metadata configuration for this node.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.WorkloadMetadataConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "node_metadata": {
                              "description": "NodeMetadata is the configuration for how to expose metadata to the workloads running on the node.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.WorkloadMetadataConfig.NodeMetadata"
                            },
                            "mode": {
                              "description": "Mode is the configuration for how to expose metadata to workloads running on the node pool.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.WorkloadMetadataConfig.Mode"
                            }
                          }
                        }
                      },
                      "taints": {
                        "description": "List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see:  https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.NodeTaint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "Key for taint.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value for taint.",
                                "type": "string"
                              },
                              "effect": {
                                "description": "Effect for taint.",
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.NodeTaint.Effect"
                              }
                            }
                          }
                        }
                      },
                      "boot_disk_kms_key": {
                        "description": "The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption",
                        "type": "string"
                      },
                      "shielded_instance_config": {
                        "description": "Shielded Instance options.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ShieldedInstanceConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enable_secure_boot": {
                              "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.",
                              "type": "boolean"
                            },
                            "enable_integrity_monitoring": {
                              "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "linux_node_config": {
                        "description": "Parameters that can be configured on Linux nodes.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.LinuxNodeConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "sysctls": {
                              "description": "The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.  The following parameters are supported.  net.core.busy_poll net.core.busy_read net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "cgroup_mode": {
                              "description": "cgroup_mode specifies the cgroup mode to be used on the node.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.LinuxNodeConfig.CgroupMode"
                            },
                            "hugepages": {
                              "description": "Optional. Amounts for 2M and 1G hugepages  This field is a member of `oneof`_ ``_hugepages``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.LinuxNodeConfig.HugepagesConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "hugepage_size2m": {
                                    "description": "Optional. Amount of 2M hugepages  This field is a member of `oneof`_ ``_hugepage_size2m``.",
                                    "type": "integer"
                                  },
                                  "hugepage_size1g": {
                                    "description": "Optional. Amount of 1G hugepages  This field is a member of `oneof`_ ``_hugepage_size1g``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "kubelet_config": {
                        "description": "Node kubelet configs.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodeKubeletConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "cpu_manager_policy": {
                              "description": "Control the CPU management policy on the node. See https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/  The following values are allowed.  -  \"none\": the default, which represents the existing scheduling behavior. -  \"static\": allows pods with certain resource characteristics to be granted increased CPU affinity and exclusivity on the node. The default value is 'none' if unspecified.",
                              "type": "string"
                            },
                            "cpu_cfs_quota": {
                              "description": "Enable CPU CFS quota enforcement for containers that specify CPU limits. This option is enabled by default which makes kubelet use CFS quota (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to enforce container CPU limits. Otherwise, CPU limits will not be enforced at all.  Disable this option to mitigate CPU throttling problems while still having your pods to be in Guaranteed QoS class by specifying the CPU limits.  The default value is 'true' if unspecified.",
                              "type": "object",
                              "reference": "google.protobuf.wrappers_pb2.BoolValue",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "description": "",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "cpu_cfs_quota_period": {
                              "description": "Set the CPU CFS quota period value 'cpu.cfs_period_us'.  The string must be a sequence of decimal numbers, each with optional fraction and a unit suffix, such as \"300ms\". Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\". The value must be a positive duration.",
                              "type": "string"
                            },
                            "pod_pids_limit": {
                              "description": "Set the Pod PID limits. See https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits  Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.",
                              "type": "integer"
                            },
                            "insecure_kubelet_readonly_port_enabled": {
                              "description": "Enable or disable Kubelet read only port.  This field is a member of `oneof`_ ``_insecure_kubelet_readonly_port_enabled``.",
                              "type": "boolean",
                              "output_only": true
                            }
                          }
                        }
                      },
                      "ephemeral_storage_config": {
                        "description": "Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.EphemeralStorageConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "local_ssd_count": {
                              "description": "Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. The limit for this value is dependent upon the maximum number of disk available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.  A zero (or unset) value has different meanings depending on machine type being used:  1. For pre-Gen3 machines, which support flexible numbers of local ssds, zero (or unset) means to disable using local SSDs as ephemeral storage. 2. For Gen3 machines which dictate a specific number of local ssds, zero (or unset) means to use the default number of local ssds that goes with that machine type. For example, for a c3-standard-8-lssd machine, 2 local ssds would be provisioned. For c3-standard-8 (which doesn't support local ssds), 0 will be provisioned. See https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds for more info.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "gcfs_config": {
                        "description": "GCFS (Google Container File System) configs.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.GcfsConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Whether to use GCFS.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "advanced_machine_features": {
                        "description": "Advanced features for the Compute Engine VM.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.AdvancedMachineFeatures",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "threads_per_core": {
                              "description": "The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.  This field is a member of `oneof`_ ``_threads_per_core``.",
                              "type": "integer"
                            },
                            "enable_nested_virtualization": {
                              "description": "Whether or not to enable nested virtualization (defaults to false).  This field is a member of `oneof`_ ``_enable_nested_virtualization``.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "gvnic": {
                        "description": "Enable or disable gvnic on the node pool.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.VirtualNIC",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Whether gVNIC features are enabled in the node pool.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "spot": {
                        "description": "Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.",
                        "type": "boolean"
                      },
                      "confidential_nodes": {
                        "description": "Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ConfidentialNodes",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Whether Confidential Nodes feature is enabled.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "fast_socket": {
                        "description": "Enable or disable NCCL fast socket for the node pool.  This field is a member of `oneof`_ ``_fast_socket``.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.FastSocket",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Whether Fast Socket features are enabled in the node pool.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "resource_labels": {
                        "description": "The resource labels for the node pool to use to annotate any related Google Compute Engine resources.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "logging_config": {
                        "description": "Logging configuration.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodePoolLoggingConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "variant_config": {
                              "description": "Logging variant configuration.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.LoggingVariantConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "variant": {
                                    "description": "Logging variant deployed on nodes.",
                                    "type": "object",
                                    "reference": "google.cloud.container_v1beta1.types.LoggingVariantConfig.Variant",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "version": {
                                          "description": "The name of the flow version. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>/versions/<VersionID>``.",
                                          "type": "string"
                                        },
                                        "traffic_allocation": {
                                          "description": "Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.",
                                          "type": "number"
                                        },
                                        "is_control_group": {
                                          "description": "Whether the variant is for the control group.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "windows_node_config": {
                        "description": "Parameters that can be configured on Windows nodes.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.WindowsNodeConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "os_version": {
                              "description": "OSVersion specifies the Windows node config to be used on the node",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.WindowsNodeConfig.OSVersion"
                            }
                          }
                        }
                      },
                      "local_nvme_ssd_block_config": {
                        "description": "Parameters for using raw-block Local NVMe SSDs.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.LocalNvmeSsdBlockConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "local_ssd_count": {
                              "description": "Number of local NVMe SSDs to use. The limit for this value is dependent upon the maximum number of disk available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.  A zero (or unset) value has different meanings depending on machine type being used:  1. For pre-Gen3 machines, which support flexible numbers of local ssds, zero (or unset) means to disable using local SSDs as ephemeral storage. 2. For Gen3 machines which dictate a specific number of local ssds, zero (or unset) means to use the default number of local ssds that goes with that machine type. For example, for a c3-standard-8-lssd machine, 2 local ssds would be provisioned. For c3-standard-8 (which doesn't support local ssds), 0 will be provisioned. See https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds for more info.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "ephemeral_storage_local_ssd_config": {
                        "description": "Parameters for the node ephemeral storage using Local SSDs. If unspecified, ephemeral storage is backed by the boot disk. This field is functionally equivalent to the ephemeral_storage_config",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.EphemeralStorageLocalSsdConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "local_ssd_count": {
                              "description": "Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces.  A zero (or unset) value has different meanings depending on machine type being used:  1. For pre-Gen3 machines, which support flexible numbers of local ssds, zero (or unset) means to disable using local SSDs as ephemeral storage. The limit for this value is dependent upon the maximum number of disk available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information. 2. For Gen3 machines which dictate a specific number of local ssds, zero (or unset) means to use the default number of local ssds that goes with that machine type. For example, for a c3-standard-8-lssd machine, 2 local ssds would be provisioned. For c3-standard-8 (which doesn't support local ssds), 0 will be provisioned. See https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds for more info.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "sole_tenant_config": {
                        "description": "Parameters for node pools to be backed by shared sole tenant node groups.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.SoleTenantConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "node_affinities": {
                              "description": "NodeAffinities used to match to a shared sole tenant node group.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.SoleTenantConfig.NodeAffinity",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "Key for NodeAffinity.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "Operator for NodeAffinity.",
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.SoleTenantConfig.NodeAffinity.Operator",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the resource.",
                                            "type": "string"
                                          },
                                          "create_time": {
                                            "description": "Output only. The create timestamp.",
                                            "type": "object",
                                            "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                            "output_only": true
                                          },
                                          "update_time": {
                                            "description": "Output only. The update timestamp.",
                                            "type": "object",
                                            "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                            "output_only": true
                                          },
                                          "labels": {
                                            "description": "Labels as key value pairs.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "operator_definition": {
                                            "description": "The definition of the operator.",
                                            "type": "object",
                                            "reference": "google.cloud.visionai_v1.types.OperatorDefinition",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "operator": {
                                                  "description": "The name of this operator.  Tentatively [A-Z][a-zA-Z0-9]*, e.g., BboxCounter, PetDetector, PetDetector1.",
                                                  "type": "string"
                                                },
                                                "input_args": {
                                                  "description": "Declares input arguments.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "reference": "google.cloud.visionai_v1.types.OperatorDefinition.ArgumentDefinition",
                                                    "resolved_schema": {
                                                      "type": "object",
                                                      "properties": {
                                                        "argument": {
                                                          "description": "The name of the argument.  Tentatively `a-z <[_a-z0-9]*[a-z0-9]>`__?, e.g., video, audio, high_fps_frame.",
                                                          "type": "string"
                                                        },
                                                        "type_": {
                                                          "description": "The data type of the argument.  This should match the textual representation of a stream/Packet type.",
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "output_args": {
                                                  "description": "Declares output arguments.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "reference": "google.cloud.visionai_v1.types.OperatorDefinition.ArgumentDefinition",
                                                    "resolved_schema": {
                                                      "type": "object",
                                                      "properties": {
                                                        "argument": {
                                                          "description": "The name of the argument.  Tentatively `a-z <[_a-z0-9]*[a-z0-9]>`__?, e.g., video, audio, high_fps_frame.",
                                                          "type": "string"
                                                        },
                                                        "type_": {
                                                          "description": "The data type of the argument.  This should match the textual representation of a stream/Packet type.",
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "attributes": {
                                                  "description": "Declares the attributes.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "reference": "google.cloud.visionai_v1.types.OperatorDefinition.AttributeDefinition",
                                                    "resolved_schema": {
                                                      "type": "object",
                                                      "properties": {
                                                        "attribute": {
                                                          "description": "The name of the attribute.  Tentatively `a-z <[_a-z0-9]*[a-z0-9]>`__?, e.g., max_frames_per_video, resize_height.",
                                                          "type": "string"
                                                        },
                                                        "type_": {
                                                          "description": "The type of this attribute.  See attribute_value.proto for possibilities.",
                                                          "type": "string"
                                                        },
                                                        "default_value": {
                                                          "description": "The default value for the attribute.",
                                                          "type": "object",
                                                          "reference": "google.cloud.visionai_v1.types.AttributeValue",
                                                          "resolved_schema": {
                                                            "type": "object",
                                                            "properties": {
                                                              "string_value": {
                                                                "description": "A string up to 256 bytes long.  This field is a member of `oneof`_ ``value``.",
                                                                "type": "object",
                                                                "reference": "google.cloud.trace_v2.types.TruncatableString",
                                                                "resolved_schema": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "value": {
                                                                      "description": "The shortened string. For example, if the original string is 500 bytes long and the limit of the string is 128 bytes, then ``value`` contains the first 128 bytes of the 500-byte string.  Truncation always happens on a UTF8 character boundary. If there are multi-byte characters in the string, then the length of the shortened string might be less than the size limit.",
                                                                      "type": "string"
                                                                    },
                                                                    "truncated_byte_count": {
                                                                      "description": "The number of bytes removed from the original string. If this value is 0, then the string was not shortened.",
                                                                      "type": "integer"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "int_value": {
                                                                "description": "A 64-bit signed integer.  This field is a member of `oneof`_ ``value``.",
                                                                "type": "integer"
                                                              },
                                                              "bool_value": {
                                                                "description": "A Boolean value represented by ``true`` or ``false``.  This field is a member of `oneof`_ ``value``.",
                                                                "type": "boolean"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "resources": {
                                                  "description": "The resources for running the operator.",
                                                  "type": "object",
                                                  "reference": "google.cloud.visionai_v1.types.ResourceSpecification",
                                                  "resolved_schema": {
                                                    "type": "object",
                                                    "properties": {
                                                      "cpu": {
                                                        "description": "CPU specification.  Examples: \"100m\", \"0.5\", \"1\", \"2\", ... correspond to 0.1, half, 1, or 2 cpus.  Leave empty to let the system decide.  Note that this does *not* determine the cpu vender/make, or its underlying clock speed and specific SIMD features. It is only the amount time it requires in timeslicing.",
                                                        "type": "string"
                                                      },
                                                      "cpu_limits": {
                                                        "description": "CPU limit.  Examples:  \"100m\", \"0.5\", \"1\", \"2\", ... correspond to 0.1, half, 1, or 2 cpus.  Leave empty to indicate no limit.",
                                                        "type": "string"
                                                      },
                                                      "memory": {
                                                        "description": "Memory specification (in bytes).  Examples:  \"128974848\", \"129e6\", \"129M\", \"123Mi\", ... correspond to 128974848 bytes, 129000000 bytes, 129 mebibytes, 123 megabytes.  Leave empty to let the system decide.",
                                                        "type": "string"
                                                      },
                                                      "memory_limits": {
                                                        "description": "Memory usage limits.  Examples:  \"128974848\", \"129e6\", \"129M\", \"123Mi\", ... correspond to 128974848 bytes, 129000000 bytes, 129 mebibytes, 123 megabytes.  Leave empty to indicate no limit.",
                                                        "type": "string"
                                                      },
                                                      "gpus": {
                                                        "description": "Number of gpus.",
                                                        "type": "integer"
                                                      },
                                                      "latency_budget_ms": {
                                                        "description": "The maximum latency that this operator may use to process an element. If non positive, then a system default will be used. Operator developers should arrange for the system compute resources to be aligned with this latency budget; e.g. if you want a ML model to produce results within 500ms, then you should make sure you request enough cpu/gpu/memory to achieve that.",
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                },
                                                "short_description": {
                                                  "description": "Short description of the operator.",
                                                  "type": "string"
                                                },
                                                "description": {
                                                  "description": "Full description of the operator.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "docker_image": {
                                            "description": "The link to the docker image of the operator.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "values": {
                                      "description": "Values for NodeAffinity.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "containerd_config": {
                        "description": "Parameters for containerd customization.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ContainerdConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "private_registry_access_config": {
                              "description": "PrivateRegistryAccessConfig is used to configure access configuration for private container registries.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.ContainerdConfig.PrivateRegistryAccessConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "Private registry access is enabled.",
                                    "type": "boolean"
                                  },
                                  "certificate_authority_domain_config": {
                                    "description": "Private registry access configuration.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.container_v1beta1.types.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "fqdns": {
                                            "description": "List of fully qualified domain names (FQDN). Specifying port is supported. Wilcards are NOT supported. Examples:  - my.customdomain.com - 10.0.1.2:5000",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "gcp_secret_manager_certificate_config": {
                                            "description": "Google Secret Manager (GCP) certificate configuration.  This field is a member of `oneof`_ ``certificate_config``.",
                                            "type": "object",
                                            "reference": "google.cloud.container_v1beta1.types.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig.GCPSecretManagerCertificateConfig",
                                            "resolved_schema": {
                                              "type": "object",
                                              "properties": {
                                                "secret_uri": {
                                                  "description": "Secret URI, in the form \"projects/$PROJECT_ID/secrets/$SECRET_NAME/versions/$VERSION\". Version can be fixed (e.g. \"2\") or \"latest\".",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "host_maintenance_policy": {
                        "description": "HostMaintenancePolicy contains the desired maintenance policy for the Google Compute Engine hosts.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.HostMaintenancePolicy",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "maintenance_interval": {
                              "description": "Specifies the frequency of planned maintenance events.  This field is a member of `oneof`_ ``_maintenance_interval``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.HostMaintenancePolicy.MaintenanceInterval"
                            },
                            "opportunistic_maintenance_strategy": {
                              "description": "Strategy that will trigger maintenance on behalf of the customer.  This field is a member of `oneof`_ ``maintenance_strategy``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.HostMaintenancePolicy.OpportunisticMaintenanceStrategy",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "node_idle_time_window": {
                                    "description": "The amount of time that a node can remain idle (no customer owned workloads running), before triggering maintenance.  This field is a member of `oneof`_ ``_node_idle_time_window``.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "maintenance_availability_window": {
                                    "description": "The window of time that opportunistic maintenance can run. Example: A setting of 14 days implies that opportunistic maintenance can only be ran in the 2 weeks leading up to the scheduled maintenance date. Setting 28 days allows opportunistic maintenance to run at any time in the scheduled maintenance window (all ``PERIODIC`` maintenance is set 28 days in advance).  This field is a member of `oneof`_ ``_maintenance_availability_window``.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "min_nodes_per_pool": {
                                    "description": "The minimum nodes required to be available in a pool. Blocks maintenance if it would cause the number of running nodes to dip below this value.  This field is a member of `oneof`_ ``_min_nodes_per_pool``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "resource_manager_tags": {
                        "description": "A map of resource manager tag keys and values to be attached to the nodes.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ResourceManagerTags",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "tags": {
                              "description": "Tags must be in one of the following formats ([KEY]=[VALUE])  1. ``tagKeys/{tag_key_id}=tagValues/{tag_value_id}`` 2. ``{org_id}/{tag_key_name}={tag_value_name}`` 3. ``{project_id}/{tag_key_name}={tag_value_name}``",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "enable_confidential_storage": {
                        "description": "Optional. Reserved for future use.",
                        "type": "boolean"
                      },
                      "secondary_boot_disks": {
                        "description": "List of secondary boot disks attached to the nodes.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.SecondaryBootDisk",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "Disk mode (container image cache, etc.)",
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.SecondaryBootDisk.Mode"
                              },
                              "disk_image": {
                                "description": "Fully-qualified resource ID for an existing disk image.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "secondary_boot_disk_update_strategy": {
                        "description": "Secondary boot disk update strategy.  This field is a member of `oneof`_ ``_secondary_boot_disk_update_strategy``.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.SecondaryBootDiskUpdateStrategy",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  }
                },
                "initial_node_count": {
                  "description": "The initial node count for the pool. You must ensure that your Compute Engine `resource quota <https://cloud.google.com/compute/quotas>`__ is sufficient for this number of instances. You must also have available firewall and routes quota.",
                  "type": "integer"
                },
                "locations": {
                  "description": "The list of Google Compute Engine `zones <https://cloud.google.com/compute/docs/zones#available>`__ in which the NodePool's nodes should be located.  If this value is unspecified during node pool creation, the `Cluster.Locations <https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations>`__ value will be used, instead.  Warning: changing node pool locations will result in nodes being added and/or removed.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "network_config": {
                  "description": "Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodeNetworkConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_pod_range": {
                        "description": "Input only. Whether to create a new range for pod IPs in this node pool. Defaults are provided for ``pod_range`` and ``pod_ipv4_cidr_block`` if they are not specified.  If neither ``create_pod_range`` or ``pod_range`` are specified, the cluster-level default (``ip_allocation_policy.cluster_ipv4_cidr_block``) is used.  Only applicable if ``ip_allocation_policy.use_ip_aliases`` is true.  This field cannot be changed after the node pool has been created.",
                        "type": "boolean"
                      },
                      "pod_range": {
                        "description": "The ID of the secondary range for pod IPs. If ``create_pod_range`` is true, this ID is used for the new range. If ``create_pod_range`` is false, uses an existing secondary range with this ID.  Only applicable if ``ip_allocation_policy.use_ip_aliases`` is true.  This field cannot be changed after the node pool has been created.",
                        "type": "string"
                      },
                      "pod_ipv4_cidr_block": {
                        "description": "The IP address range for pod IPs in this node pool.  Only applicable if ``create_pod_range`` is true.  Set to blank to have a range chosen with the default size.  Set to /netmask (e.g. ``/14``) to have a range chosen with a specific netmask.  Set to a `CIDR <https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing>`__ notation (e.g. ``10.96.0.0/14``) to pick a specific range to use.  Only applicable if ``ip_allocation_policy.use_ip_aliases`` is true.  This field cannot be changed after the node pool has been created.",
                        "type": "string"
                      },
                      "enable_private_nodes": {
                        "description": "Whether nodes have internal IP addresses only. If enable_private_nodes is not specified, then the value is derived from [cluster.privateClusterConfig.enablePrivateNodes][google.container.v1beta1.PrivateClusterConfig.enablePrivateNodes]  This field is a member of `oneof`_ ``_enable_private_nodes``.",
                        "type": "boolean"
                      },
                      "network_performance_config": {
                        "description": "Network bandwidth tier configuration.  This field is a member of `oneof`_ ``_network_performance_config``.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodeNetworkConfig.NetworkPerformanceConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "total_egress_bandwidth_tier": {
                              "description": "Specifies the total network bandwidth tier for the NodePool.  This field is a member of `oneof`_ ``_total_egress_bandwidth_tier``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.NodeNetworkConfig.NetworkPerformanceConfig.Tier"
                            },
                            "external_ip_egress_bandwidth_tier": {
                              "description": "Specifies the network bandwidth tier for the NodePool for traffic to external/public IP addresses.  This field is a member of `oneof`_ ``_external_ip_egress_bandwidth_tier``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.NodeNetworkConfig.NetworkPerformanceConfig.Tier"
                            }
                          }
                        }
                      },
                      "pod_cidr_overprovision_config": {
                        "description": "[PRIVATE FIELD] Pod CIDR size overprovisioning config for the nodepool.  Pod CIDR size per node depends on max_pods_per_node. By default, the value of max_pods_per_node is rounded off to next power of 2 and we then double that to get the size of pod CIDR block per node. Example: max_pods_per_node of 30 would result in 64 IPs (/26).  This config can disable the doubling of IPs (we still round off to next power of 2) Example: max_pods_per_node of 30 will result in 32 IPs (/27) when overprovisioning is disabled.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.PodCIDROverprovisionConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "disable": {
                              "description": "Whether Pod CIDR overprovisioning is disabled. Note: Pod CIDR overprovisioning is enabled by default.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "additional_node_network_configs": {
                        "description": "We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.AdditionalNodeNetworkConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "network": {
                                "description": "Name of the VPC where the additional interface belongs",
                                "type": "string"
                              },
                              "subnetwork": {
                                "description": "Name of the subnetwork where the additional interface belongs",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "additional_pod_network_configs": {
                        "description": "We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.AdditionalPodNetworkConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "subnetwork": {
                                "description": "Name of the subnetwork where the additional pod network belongs.",
                                "type": "string"
                              },
                              "secondary_pod_range": {
                                "description": "The name of the secondary range on the subnet which provides IP address for this pod range.",
                                "type": "string"
                              },
                              "max_pods_per_node": {
                                "description": "The maximum number of pods per node which use this pod network.  This field is a member of `oneof`_ ``_max_pods_per_node``.",
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.MaxPodsConstraint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "max_pods_per_node": {
                                      "description": "Constraint enforced on the max num of pods per node.",
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "pod_ipv4_range_utilization": {
                        "description": "Output only. The utilization of the IPv4 range for the pod. The ratio is Usage/[Total number of IPs in the secondary range], Usage=numNodes\\ *numZones*\\ podIPsPerNode.",
                        "type": "number",
                        "output_only": true
                      }
                    }
                  }
                },
                "self_link": {
                  "description": "Output only. Server-defined URL for the resource.",
                  "type": "string",
                  "output_only": true
                },
                "version": {
                  "description": "The version of Kubernetes running on this NodePool's nodes. If unspecified, it defaults as described `here <https://cloud.google.com/kubernetes-engine/versioning#specifying_node_version>`__.",
                  "type": "string"
                },
                "instance_group_urls": {
                  "description": "Output only. The resource URLs of the `managed instance groups <https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances>`__ associated with this node pool. During the node pool blue-green upgrade operation, the URLs contain both blue and green resources.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "output_only": true
                },
                "status": {
                  "description": "Output only. The status of the nodes in this pool instance.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePool.Status",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "Output only. State of the metadata job.",
                        "type": "object",
                        "reference": "google.cloud.dataplex_v1.types.MetadataJob.Status.State",
                        "output_only": true
                      },
                      "message": {
                        "description": "Output only. Message relating to the progression of a metadata job.",
                        "type": "string",
                        "output_only": true
                      },
                      "completion_percent": {
                        "description": "Output only. Progress tracking.",
                        "type": "integer",
                        "output_only": true
                      },
                      "update_time": {
                        "description": "Output only. The time when the status was updated.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      }
                    }
                  }
                },
                "status_message": {
                  "description": "Output only. Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available.",
                  "type": "string",
                  "output_only": true
                },
                "autoscaling": {
                  "description": "Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePoolAutoscaling",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "Is autoscaling enabled for this node pool.",
                        "type": "boolean"
                      },
                      "min_node_count": {
                        "description": "Minimum number of nodes for one location in the NodePool. Must be >= 1 and <= max_node_count.",
                        "type": "integer"
                      },
                      "max_node_count": {
                        "description": "Maximum number of nodes for one location in the NodePool. Must be >= min_node_count. There has to be enough quota to scale up the cluster.",
                        "type": "integer"
                      },
                      "autoprovisioned": {
                        "description": "Can this node pool be deleted automatically.",
                        "type": "boolean"
                      },
                      "location_policy": {
                        "description": "Location policy used when scaling up a nodepool.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodePoolAutoscaling.LocationPolicy",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "locations": {
                              "description": "Location configurations mapped by location name. Currently only zone names are supported and must be represented as valid internal URLs, such as zones/us-central1-a.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "reference": "google.cloud.compute_v1.types.LocationPolicyLocation",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "constraints": {
                                      "description": "Constraints that the caller requires on the result distribution in this zone.  This field is a member of `oneof`_ ``_constraints``.",
                                      "type": "object",
                                      "reference": "google.cloud.compute_v1.types.LocationPolicyLocationConstraints",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "max_count": {
                                            "description": "Maximum number of items that are allowed to be placed in this zone. The value must be non-negative.  This field is a member of `oneof`_ ``_max_count``.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    },
                                    "preference": {
                                      "description": "Preference for a given location. Set to either ALLOW or DENY. Check the Preference enum for the list of possible values.  This field is a member of `oneof`_ ``_preference``.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "target_shape": {
                              "description": "Strategy for distributing VMs across zones in a region. Check the TargetShape enum for the list of possible values.  This field is a member of `oneof`_ ``_target_shape``.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "total_min_node_count": {
                        "description": "Minimum number of nodes in the node pool. Must be greater than 1 less than total_max_node_count. The total_*_node_count fields are mutually exclusive with the \\*_node_count fields.",
                        "type": "integer"
                      },
                      "total_max_node_count": {
                        "description": "Maximum number of nodes in the node pool. Must be greater than total_min_node_count. There has to be enough quota to scale up the cluster. The total_*_node_count fields are mutually exclusive with the \\*_node_count fields.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "management": {
                  "description": "NodeManagement configuration for this NodePool.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodeManagement",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "auto_upgrade": {
                        "description": "Whether the nodes will be automatically upgraded.",
                        "type": "boolean"
                      },
                      "auto_repair": {
                        "description": "Whether the nodes will be automatically repaired.",
                        "type": "boolean"
                      },
                      "upgrade_options": {
                        "description": "Specifies the Auto Upgrade knobs for the node pool.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.AutoUpgradeOptions",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "auto_upgrade_start_time": {
                              "description": "Output only. This field is set when upgrades are about to commence with the approximate start time for the upgrades, in `RFC3339 <https://www.ietf.org/rfc/rfc3339.txt>`__ text format.",
                              "type": "string",
                              "output_only": true
                            },
                            "description": {
                              "description": "Output only. This field is set when upgrades are about to commence with the description of the upgrade.",
                              "type": "string",
                              "output_only": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "max_pods_constraint": {
                  "description": "The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.MaxPodsConstraint",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "max_pods_per_node": {
                        "description": "Constraint enforced on the max num of pods per node.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "conditions": {
                  "description": "Which conditions caused the current node pool state.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.container_v1beta1.types.StatusCondition",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Machine-friendly representation of the condition Deprecated. Use canonical_code instead.",
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.StatusCondition.Code"
                        },
                        "message": {
                          "description": "Human-friendly representation of the condition",
                          "type": "string"
                        },
                        "canonical_code": {
                          "description": "Canonical code of the condition.",
                          "type": "object",
                          "reference": "google.rpc.code_pb2.Code"
                        }
                      }
                    }
                  }
                },
                "pod_ipv4_cidr_size": {
                  "description": "Output only. The pod CIDR block size per node in this node pool.",
                  "type": "integer",
                  "output_only": true
                },
                "upgrade_settings": {
                  "description": "Upgrade settings control disruption and speed of the upgrade.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePool.UpgradeSettings",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "max_surge": {
                        "description": "The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.",
                        "type": "integer"
                      },
                      "max_unavailable": {
                        "description": "The maximum number of nodes that can be simultaneously unavailable during the upgrade process. A node is considered available if its status is Ready.",
                        "type": "integer"
                      },
                      "strategy": {
                        "description": "Update strategy of the node pool.  This field is a member of `oneof`_ ``_strategy``.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodePoolUpdateStrategy"
                      },
                      "blue_green_settings": {
                        "description": "Settings for blue-green upgrade strategy.  This field is a member of `oneof`_ ``_blue_green_settings``.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.BlueGreenSettings",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "standard_rollout_policy": {
                              "description": "Standard policy for the blue-green upgrade.  This field is a member of `oneof`_ ``rollout_policy``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.BlueGreenSettings.StandardRolloutPolicy",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "batch_percentage": {
                                    "description": "Percentage of the blue pool nodes to drain in a batch. The range of this field should be (0.0, 1.0].  This field is a member of `oneof`_ ``update_batch_size``.",
                                    "type": "number"
                                  },
                                  "batch_node_count": {
                                    "description": "Number of blue nodes to drain in a batch.  This field is a member of `oneof`_ ``update_batch_size``.",
                                    "type": "integer"
                                  },
                                  "batch_soak_duration": {
                                    "description": "Soak time after each batch gets drained. Default to zero.  This field is a member of `oneof`_ ``_batch_soak_duration``.",
                                    "type": "object",
                                    "reference": "google.protobuf.duration_pb2.Duration",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "nanos": {
                                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                          "type": "integer"
                                        },
                                        "seconds": {
                                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "autoscaled_rollout_policy": {
                              "description": "Autoscaled policy for cluster autoscaler enabled blue-green upgrade.  This field is a member of `oneof`_ ``rollout_policy``.",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.BlueGreenSettings.AutoscaledRolloutPolicy",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "node_pool_soak_duration": {
                              "description": "Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.  This field is a member of `oneof`_ ``_node_pool_soak_duration``.",
                              "type": "object",
                              "reference": "google.protobuf.duration_pb2.Duration",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "nanos": {
                                    "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                    "type": "integer"
                                  },
                                  "seconds": {
                                    "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "placement_policy": {
                  "description": "Specifies the node placement policy.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePool.PlacementPolicy",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "type_": {
                        "description": "The type of placement.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.NodePool.PlacementPolicy.Type"
                      },
                      "tpu_topology": {
                        "description": "TPU placement topology for pod slice node pool. https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies",
                        "type": "string"
                      },
                      "policy_name": {
                        "description": "If set, refers to the name of a custom resource policy supplied by the user. The resource policy must be in the same project and region as the node pool. If not found, InvalidArgument error is returned.",
                        "type": "string"
                      }
                    }
                  }
                },
                "update_info": {
                  "description": "Output only. Update info contains relevant information during a node pool update.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePool.UpdateInfo",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "target_shard_count": {
                        "description": "Target number of shards for redis cluster  This field is a member of `oneof`_ ``_target_shard_count``.",
                        "type": "integer"
                      },
                      "target_replica_count": {
                        "description": "Target number of replica nodes per shard.  This field is a member of `oneof`_ ``_target_replica_count``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "etag": {
                  "description": "This checksum is computed by the server based on the value of node pool fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.",
                  "type": "string"
                },
                "queued_provisioning": {
                  "description": "Specifies the configuration of queued provisioning.",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.NodePool.QueuedProvisioning",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "Denotes that this nodepool is QRM specific, meaning nodes can be only obtained through queuing via the Cluster Autoscaler ProvisioningRequest API.",
                        "type": "boolean"
                      }
                    }
                  }
                },
                "best_effort_provisioning": {
                  "description": "Enable best effort provisioning for nodes",
                  "type": "object",
                  "reference": "google.cloud.container_v1beta1.types.BestEffortProvisioning",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "When this is enabled, cluster/node pool creations will ignore non-fatal errors like stockout to best provision as many nodes as possible right now and eventually bring up all target number of nodes",
                        "type": "boolean"
                      },
                      "min_provision_nodes": {
                        "description": "Minimum number of nodes to be provisioned to be considered as succeeded, and the rest of nodes will be provisioned gradually and eventually when stockout issue has been resolved.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "request_id": {
            "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if ``request_id`` is provided.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "DeleteNodePoolRequest",
      "description": "Deletes a node pool.\n\nAttributes:\n    name (str):\n        Required. The resource name of the node pool.\n    request_id (str):\n        A unique identifier for this request. Restricted to 36 ASCII\n        characters. A random UUID is recommended. This request is\n        only idempotent if ``request_id`` is provided.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the node pool.",
            "type": "string"
          },
          "request_id": {
            "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if ``request_id`` is provided.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListMachinesRequest",
      "description": "Lists machines in a site.\n\nAttributes:\n    parent (str):\n        Required. The parent site, which owns this\n        collection of machines.\n    page_size (int):\n        The maximum number of resources to list.\n    page_token (str):\n        A page token received from previous list\n        request.\n    filter (str):\n        Only resources matching this filter will be\n        listed.\n    order_by (str):\n        Specifies the order in which resources will\n        be listed.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent site, which owns this collection of machines.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of resources to list.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token received from previous list request.",
            "type": "string"
          },
          "filter": {
            "description": "Only resources matching this filter will be listed.",
            "type": "string"
          },
          "order_by": {
            "description": "Specifies the order in which resources will be listed.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetMachineRequest",
      "description": "Gets a machine.\n\nAttributes:\n    name (str):\n        Required. The resource name of the machine.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the machine.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListVpnConnectionsRequest",
      "description": "Lists VPN connections.\n\nAttributes:\n    parent (str):\n        Required. The parent location, which owns\n        this collection of VPN connections.\n    page_size (int):\n        The maximum number of resources to list.\n    page_token (str):\n        A page token received from previous list\n        request.\n    filter (str):\n        Only resources matching this filter will be\n        listed.\n    order_by (str):\n        Specifies the order in which resources will\n        be listed.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent location, which owns this collection of VPN connections.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of resources to list.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token received from previous list request.",
            "type": "string"
          },
          "filter": {
            "description": "Only resources matching this filter will be listed.",
            "type": "string"
          },
          "order_by": {
            "description": "Specifies the order in which resources will be listed.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetVpnConnectionRequest",
      "description": "Gets a VPN connection.\n\nAttributes:\n    name (str):\n        Required. The resource name of the vpn\n        connection.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the vpn connection.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateVpnConnectionRequest",
      "description": "Creates a VPN connection.\n\nAttributes:\n    parent (str):\n        Required. The parent location where this vpn\n        connection will be created.\n    vpn_connection_id (str):\n        Required. The VPN connection identifier.\n    vpn_connection (google.cloud.edgecontainer_v1.types.VpnConnection):\n        Required. The VPN connection to create.\n    request_id (str):\n        A unique identifier for this request. Restricted to 36 ASCII\n        characters. A random UUID is recommended. This request is\n        only idempotent if ``request_id`` is provided.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent location where this vpn connection will be created.",
            "type": "string"
          },
          "vpn_connection_id": {
            "description": "Required. The VPN connection identifier.",
            "type": "string"
          },
          "vpn_connection": {
            "description": "Required. The VPN connection to create.",
            "reference": "google.cloud.edgecontainer_v1.types.VpnConnection",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. The resource name of VPN connection",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The time when the VPN connection was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. The time when the VPN connection was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Labels associated with this resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nat_gateway_ip": {
                  "description": "NAT gateway IP, or WAN IP address. If a customer has multiple NAT IPs, the customer needs to configure NAT such that only one external IP maps to the GMEC Anthos cluster. This is empty if NAT is not used.",
                  "type": "string"
                },
                "bgp_routing_mode": {
                  "description": "Dynamic routing mode of the VPC network, ``regional`` or ``global``.",
                  "type": "object",
                  "reference": "google.cloud.edgecontainer_v1.types.VpnConnection.BgpRoutingMode"
                },
                "cluster": {
                  "description": "The canonical Cluster name to connect to. It is in the form of projects/{project}/locations/{location}/clusters/{cluster}.",
                  "type": "string"
                },
                "vpc": {
                  "description": "The network ID of VPC to connect to.",
                  "type": "string"
                },
                "vpc_project": {
                  "description": "Optional. Project detail of the VPC network. Required if VPC is in a different project than the cluster project.",
                  "type": "object",
                  "reference": "google.cloud.edgecontainer_v1.types.VpnConnection.VpcProject",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "description": "The project of the VPC to connect to. If not specified, it is the same as the cluster project.",
                        "type": "string"
                      },
                      "service_account": {
                        "description": "Optional. Deprecated: do not use.",
                        "type": "string"
                      }
                    }
                  }
                },
                "enable_high_availability": {
                  "description": "Whether this VPN connection has HA enabled on cluster side. If enabled, when creating VPN connection we will attempt to use 2 ANG floating IPs.",
                  "type": "boolean"
                },
                "router": {
                  "description": "Optional. The VPN connection Cloud Router name.",
                  "type": "string"
                },
                "details": {
                  "description": "Output only. The created connection details.",
                  "type": "object",
                  "reference": "google.cloud.edgecontainer_v1.types.VpnConnection.Details",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "cve": {
                        "description": "The CVE of the vulnerability. CVE cannot be empty and the combination of <cve, classification> should be unique across vulnerabilities for a VM.",
                        "type": "string"
                      },
                      "cvss_v2_score": {
                        "description": "The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity.",
                        "type": "number"
                      },
                      "cvss_v3": {
                        "description": "The full description of the CVSSv3 for this vulnerability from NVD.",
                        "type": "object",
                        "reference": "google.cloud.osconfig_v1alpha.types.CVSSv3",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "base_score": {
                              "description": "The base score is a function of the base metric scores.",
                              "type": "number"
                            },
                            "exploitability_score": {
                              "description": "",
                              "type": "number"
                            },
                            "impact_score": {
                              "description": "",
                              "type": "number"
                            },
                            "attack_vector": {
                              "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.",
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.CVSSv3.AttackVector"
                            },
                            "attack_complexity": {
                              "description": "",
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.CVSSv3.AttackComplexity"
                            },
                            "privileges_required": {
                              "description": "",
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.CVSSv3.PrivilegesRequired"
                            },
                            "user_interaction": {
                              "description": "",
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.CVSSv3.UserInteraction"
                            },
                            "scope": {
                              "description": "",
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.CVSSv3.Scope",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "include_org_ids": {
                                    "description": "The list of organization IDs to search within. To find your organization ID, follow instructions in https://cloud.google.com/resource-manager/docs/creating-managing-organization.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "include_project_ids": {
                                    "description": "The list of project IDs to search within. To learn more about the distinction between project names/IDs/numbers, go to https://cloud.google.com/docs/overview/#projects.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "include_gcp_public_datasets": {
                                    "description": "If ``true``, include Google Cloud public datasets in the search results. Info on Google Cloud public datasets is available at https://cloud.google.com/public-datasets/. By default, Google Cloud public datasets are excluded.",
                                    "type": "boolean"
                                  },
                                  "restricted_locations": {
                                    "description": "Optional. The list of locations to search within.  1. If empty, search will be performed in all locations; 2. If any of the locations are NOT in the valid locations list, error will be returned; 3. Otherwise, search only the given locations for matching results. Typical usage is to leave this field empty. When a location is unreachable as returned in the ``SearchCatalogResponse.unreachable`` field, users can repeat the search request with this parameter set to get additional information on the error.  Valid locations:  -  asia-east1 -  asia-east2 -  asia-northeast1 -  asia-northeast2 -  asia-northeast3 -  asia-south1 -  asia-southeast1 -  australia-southeast1 -  eu -  europe-north1 -  europe-west1 -  europe-west2 -  europe-west3 -  europe-west4 -  europe-west6 -  global -  northamerica-northeast1 -  southamerica-east1 -  us -  us-central1 -  us-east1 -  us-east4 -  us-west1 -  us-west2",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "confidentiality_impact": {
                              "description": "",
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.CVSSv3.Impact",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "region_code": {
                                    "description": "The `CLDR region code <https://cldr.unicode.org/>`__ where this issue applies.",
                                    "type": "string"
                                  },
                                  "severity": {
                                    "description": "The severity of the issue on the destination and region.",
                                    "type": "object",
                                    "reference": "google.shopping.merchant_accounts_v1beta.types.AccountIssue.Severity"
                                  }
                                }
                              }
                            },
                            "integrity_impact": {
                              "description": "",
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.CVSSv3.Impact",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "region_code": {
                                    "description": "The `CLDR region code <https://cldr.unicode.org/>`__ where this issue applies.",
                                    "type": "string"
                                  },
                                  "severity": {
                                    "description": "The severity of the issue on the destination and region.",
                                    "type": "object",
                                    "reference": "google.shopping.merchant_accounts_v1beta.types.AccountIssue.Severity"
                                  }
                                }
                              }
                            },
                            "availability_impact": {
                              "description": "",
                              "type": "object",
                              "reference": "grafeas.grafeas_v1.types.CVSSv3.Impact",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "region_code": {
                                    "description": "The `CLDR region code <https://cldr.unicode.org/>`__ where this issue applies.",
                                    "type": "string"
                                  },
                                  "severity": {
                                    "description": "The severity of the issue on the destination and region.",
                                    "type": "object",
                                    "reference": "google.shopping.merchant_accounts_v1beta.types.AccountIssue.Severity"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "severity": {
                        "description": "Assigned severity/impact ranking from the distro.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The note or description describing the vulnerability from the distro.",
                        "type": "string"
                      },
                      "references": {
                        "description": "Corresponds to the references attached to the ``VulnerabilityDetails``.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.osconfig_v1alpha.types.VulnerabilityReport.Vulnerability.Details.Reference",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "description": "The url of the reference.",
                                "type": "string"
                              },
                              "source": {
                                "description": "The source of the reference e.g. NVD.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "request_id": {
            "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if ``request_id`` is provided.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "vpn_connection_id",
          "vpn_connection"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteVpnConnectionRequest",
      "description": "Deletes a vpn connection.\n\nAttributes:\n    name (str):\n        Required. The resource name of the vpn\n        connection.\n    request_id (str):\n        A unique identifier for this request. Restricted to 36 ASCII\n        characters. A random UUID is recommended. This request is\n        only idempotent if ``request_id`` is provided.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the vpn connection.",
            "type": "string"
          },
          "request_id": {
            "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if ``request_id`` is provided.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetServerConfigRequest",
      "description": "Gets the server config.\n\nAttributes:\n    name (str):\n        Required. The name (project and location) of the server\n        config to get, specified in the format\n        ``projects/*/locations/*``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name (project and location) of the server config to get, specified in the format ``projects/*/locations/*``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}