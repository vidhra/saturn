{
  "EdgeContainer": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_clusters",
          "description": "Lists Clusters in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_list_clusters():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.ListClustersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_clusters(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Uni",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent location, which owns this collection of clusters.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgecontainer_v1.services.edge_container.pagers.ListClustersAsyncPager: List of clusters in a location.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListClustersRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_cluster",
          "description": "Gets details of a single Cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_get_cluster():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.GetClusterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_cluster(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgecontainer_v1.types.GetClusterRequest, dict]]):\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the cluster.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgecontainer_v1.types.Cluster: A Google Distributed Cloud Edge Kubernetes cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_cluster",
          "description": "Creates a new Cluster in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_create_cluster():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        cluster = edgecontainer_v1.Cluster()\n        cluster.name = \"name_value\"\n        cluster.fleet.project = \"project_value\"\n        cluster.networking.cluster_ipv4_cidr_blocks = ['cluster_ipv4_cidr_blocks_value1', 'cluster_ipv4_cidr_blocks_value2']\n        cluster.networking.services_ipv4_cidr_blocks = ['serv",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent location where this cluster will be created.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "cluster": {
                "type": "google.cloud.edgecontainer_v1.types.Cluster",
                "description": "Required. The cluster to create. This corresponds to the ``cluster`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "cluster_id": {
                "type": "str",
                "description": "Required. A client-specified unique identifier for the cluster.  This corresponds to the ``cluster_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgecontainer_v1.types.Cluster` A Google Distributed Cloud Edge Kubernetes cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "cluster",
              "cluster_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_cluster",
          "description": "Updates the parameters of a single Cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_update_cluster():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.UpdateClusterRequest(\n        )\n\n        # Make the request\n        operation = client.update_cluster(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "cluster": {
                "type": "google.cloud.edgecontainer_v1.types.Cluster",
                "description": "The updated cluster. This corresponds to the ``cluster`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Field mask is used to specify the fields to be overwritten in the Cluster resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgecontainer_v1.types.Cluster` A Google Distributed Cloud Edge Kubernetes cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "cluster",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "upgrade_cluster",
          "description": "Upgrades a single cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_upgrade_cluster():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.UpgradeClusterRequest(\n            name=\"name_value\",\n            target_version=\"target_version_value\",\n        )\n\n        # Make the request\n        operation = client.upgrade_cluster(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the cluster.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "target_version": {
                "type": "str",
                "description": "Required. The version the cluster is going to be upgraded to.  This corresponds to the ``target_version`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "schedule": {
                "type": "google.cloud.edgecontainer_v1.types.UpgradeClusterRequest.Schedule",
                "description": "The schedule for the upgrade. This corresponds to the ``schedule`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgecontainer_v1.types.Cluster` A Google Distributed Cloud Edge Kubernetes cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "target_version",
              "schedule",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpgradeClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_cluster",
          "description": "Deletes a single Cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_delete_cluster():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.DeleteClusterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_cluster(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nA",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the cluster.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_access_token",
          "description": "Generates an access token for a Cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_generate_access_token():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.GenerateAccessTokenRequest(\n            cluster=\"cluster_value\",\n        )\n\n        # Make the request\n        response = await client.generate_access_token(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgecontai",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "cluster": {
                "type": "str",
                "description": "Required. The resource name of the cluster.  This corresponds to the ``cluster`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgecontainer_v1.types.GenerateAccessTokenResponse: An access token for a cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "cluster",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GenerateAccessTokenRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_offline_credential",
          "description": "Generates an offline credential for a Cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_generate_offline_credential():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.GenerateOfflineCredentialRequest(\n            cluster=\"cluster_value\",\n        )\n\n        # Make the request\n        response = await client.generate_offline_credential(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "cluster": {
                "type": "str",
                "description": "Required. The resource name of the cluster.  This corresponds to the ``cluster`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgecontainer_v1.types.GenerateOfflineCredentialResponse: An offline credential for a cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "cluster",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GenerateOfflineCredentialRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_node_pools",
          "description": "Lists NodePools in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_list_node_pools():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.ListNodePoolsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_node_pools(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Option",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent cluster, which owns this collection of node pools.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgecontainer_v1.services.edge_container.pagers.ListNodePoolsAsyncPager: List of node pools in a cluster.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListNodePoolsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_node_pool",
          "description": "Gets details of a single NodePool.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_get_node_pool():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.GetNodePoolRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_node_pool(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgecontainer_v1.types.GetNodePoolRequest, dic",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the node pool.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgecontainer_v1.types.NodePool: A set of Kubernetes nodes in a cluster with common configuration and specification."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetNodePoolRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_node_pool",
          "description": "Creates a new NodePool in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_create_node_pool():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        node_pool = edgecontainer_v1.NodePool()\n        node_pool.name = \"name_value\"\n        node_pool.node_count = 1070\n\n        request = edgecontainer_v1.CreateNodePoolRequest(\n            parent=\"parent_value\",\n            node_pool_id=\"node_pool_id_value\",\n            node_pool=node_pool,\n        )\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent cluster where this node pool will be created.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "node_pool": {
                "type": "google.cloud.edgecontainer_v1.types.NodePool",
                "description": "Required. The node pool to create. This corresponds to the ``node_pool`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "node_pool_id": {
                "type": "str",
                "description": "Required. A client-specified unique identifier for the node pool.  This corresponds to the ``node_pool_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgecontainer_v1.types.NodePool` A set of Kubernetes nodes in a cluster with common configuration and specification."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "node_pool",
              "node_pool_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateNodePoolRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_node_pool",
          "description": "Updates the parameters of a single NodePool.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_update_node_pool():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.UpdateNodePoolRequest(\n        )\n\n        # Make the request\n        operation = client.update_node_pool(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "node_pool": {
                "type": "google.cloud.edgecontainer_v1.types.NodePool",
                "description": "The updated node pool. This corresponds to the ``node_pool`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Field mask is used to specify the fields to be overwritten in the NodePool resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgecontainer_v1.types.NodePool` A set of Kubernetes nodes in a cluster with common configuration and specification."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "node_pool",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateNodePoolRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_node_pool",
          "description": "Deletes a single NodePool.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_delete_node_pool():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.DeleteNodePoolRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_node_pool(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(respon",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the node pool.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteNodePoolRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_machines",
          "description": "Lists Machines in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_list_machines():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.ListMachinesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_machines(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Uni",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent site, which owns this collection of machines.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgecontainer_v1.services.edge_container.pagers.ListMachinesAsyncPager: List of machines in a site.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListMachinesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_machine",
          "description": "Gets details of a single Machine.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_get_machine():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.GetMachineRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_machine(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgecontainer_v1.types.GetMachineRequest, dict]]):\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the machine.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgecontainer_v1.types.Machine: A Google Distributed Cloud Edge machine capable of acting as a Kubernetes node."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetMachineRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_vpn_connections",
          "description": "Lists VPN connections in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_list_vpn_connections():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.ListVpnConnectionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_vpn_connections(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent location, which owns this collection of VPN connections.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgecontainer_v1.services.edge_container.pagers.ListVpnConnectionsAsyncPager: List of VPN connections in a location. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListVpnConnectionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_vpn_connection",
          "description": "Gets details of a single VPN connection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_get_vpn_connection():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.GetVpnConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_vpn_connection(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgecontainer_v1.types.Ge",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the vpn connection.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgecontainer_v1.types.VpnConnection: A VPN connection ."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetVpnConnectionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_vpn_connection",
          "description": "Creates a new VPN connection in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_create_vpn_connection():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        vpn_connection = edgecontainer_v1.VpnConnection()\n        vpn_connection.name = \"name_value\"\n\n        request = edgecontainer_v1.CreateVpnConnectionRequest(\n            parent=\"parent_value\",\n            vpn_connection_id=\"vpn_connection_id_value\",\n            vpn_connection=vpn_connection,\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent location where this vpn connection will be created.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "vpn_connection": {
                "type": "google.cloud.edgecontainer_v1.types.VpnConnection",
                "description": "Required. The VPN connection to create.  This corresponds to the ``vpn_connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "vpn_connection_id": {
                "type": "str",
                "description": "Required. The VPN connection identifier.  This corresponds to the ``vpn_connection_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.edgecontainer_v1.types.VpnConnection` A VPN connection ."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "vpn_connection",
              "vpn_connection_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateVpnConnectionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_vpn_connection",
          "description": "Deletes a single VPN connection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_delete_vpn_connection():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.DeleteVpnConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_vpn_connection(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the vpn connection.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteVpnConnectionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_server_config",
          "description": "Gets the server config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import edgecontainer_v1\n\n    async def sample_get_server_config():\n        # Create a client\n        client = edgecontainer_v1.EdgeContainerAsyncClient()\n\n        # Initialize request argument(s)\n        request = edgecontainer_v1.GetServerConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_server_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.edgecontainer_v1.types.GetServerConfigRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name (project and location) of the server config to get, specified in the format ``projects/*/locations/*``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.edgecontainer_v1.types.ServerConfig: Server configuration for supported versions and release channels."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetServerConfigRequest"
          ]
        }
      }
    ]
  }
}