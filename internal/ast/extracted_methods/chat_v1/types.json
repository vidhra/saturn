{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-apps-chat/google/apps/chat_v1/types/space_event.py": [
    {
      "type": "function",
      "name": "GetSpaceEventRequest",
      "description": "Request message for getting a space event.\n\nAttributes:\n    name (str):\n        Required. The resource name of the space event.\n\n        Format: ``spaces/{space}/spaceEvents/{spaceEvent}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the space event.  Format: ``spaces/{space}/spaceEvents/{spaceEvent}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListSpaceEventsRequest",
      "description": "Request message for listing space events.\n\nAttributes:\n    parent (str):\n        Required. Resource name of the `Google Chat\n        space <https://developers.google.com/workspace/chat/api/reference/rest/v1/spaces>`__\n        where the events occurred.\n\n        Format: ``spaces/{space}``.\n    page_size (int):\n        Optional. The maximum number of space events returned. The\n        service might return fewer than this value.\n\n        Negative values return an ``INVALID_ARGUMENT`` error.\n    page_token (str):\n        A page token, received from a previous list\n        space events call. Provide this to retrieve the\n        subsequent page.\n\n        When paginating, all other parameters provided\n        to list space events must match the call that\n        provided the page token. Passing different\n        values to the other parameters might lead to\n        unexpected results.\n    filter (str):\n        Required. A query filter.\n\n        You must specify at least one event type (``event_type``)\n        using t",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the `Google Chat space <https://developers.google.com/workspace/chat/api/reference/rest/v1/spaces>`__ where the events occurred.  Format: ``spaces/{space}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of space events returned. The service might return fewer than this value.  Negative values return an ``INVALID_ARGUMENT`` error.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous list space events call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to list space events must match the call that provided the page token. Passing different values to the other parameters might lead to unexpected results.",
            "type": "string"
          },
          "filter": {
            "description": "Required. A query filter.  You must specify at least one event type (``event_type``) using the has ``:`` operator. To filter by multiple event types, use the ``OR`` operator. Omit batch event types in your filter. The request automatically returns any related batch events. For example, if you filter by new reactions (``google.workspace.chat.reaction.v1.created``), the server also returns batch new reactions events (``google.workspace.chat.reaction.v1.batchCreated``). For a list of supported event types, see the ```SpaceEvents`` reference documentation <https://developers.google.com/workspace/chat/api/reference/rest/v1/spaces.spaceEvents#SpaceEvent.FIELDS.event_type>`__.  Optionally, you can also filter by start time (``start_time``) and end time (``end_time``):  -  ``start_time``: Exclusive timestamp from which to start listing space events. You can list events that occurred up to 28 days ago. If unspecified, lists space events from the past 28 days. -  ``end_time``: Inclusive timestamp until which space events are listed. If unspecified, lists events up to the time of the request.  To specify a start or end time, use the equals ``=`` operator and format in `RFC-3339 <https://www.rfc-editor.org/rfc/rfc3339>`__. To filter by both ``start_time`` and ``end_time``, use the ``AND`` operator.  For example, the following queries are valid:  ::  start_time=\"2023-08-23T19:20:33+00:00\" AND end_time=\"2023-08-23T19:21:54+00:00\"  ::  start_time=\"2023-08-23T19:20:33+00:00\" AND (event_types:\"google.workspace.chat.space.v1.updated\" OR event_types:\"google.workspace.chat.message.v1.created\")  The following queries are invalid:  ::  start_time=\"2023-08-23T19:20:33+00:00\" OR end_time=\"2023-08-23T19:21:54+00:00\"  ::  event_types:\"google.workspace.chat.space.v1.updated\" AND event_types:\"google.workspace.chat.message.v1.created\"  Invalid queries are rejected by the server with an ``INVALID_ARGUMENT`` error.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "filter"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-apps-chat/google/apps/chat_v1/types/thread_read_state.py": [
    {
      "type": "function",
      "name": "GetThreadReadStateRequest",
      "description": "Request message for GetThreadReadStateRequest API.\n\nAttributes:\n    name (str):\n        Required. Resource name of the thread read state to\n        retrieve.\n\n        Only supports getting read state for the calling user.\n\n        To refer to the calling user, set one of the following:\n\n        -  The ``me`` alias. For example,\n           ``users/me/spaces/{space}/threads/{thread}/threadReadState``.\n\n        -  Their Workspace email address. For example,\n           ``users/user@example.com/spaces/{space}/threads/{thread}/threadReadState``.\n\n        -  Their user id. For example,\n           ``users/123456789/spaces/{space}/threads/{thread}/threadReadState``.\n\n        Format:\n        users/{user}/spaces/{space}/threads/{thread}/threadReadState",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the thread read state to retrieve.  Only supports getting read state for the calling user.  To refer to the calling user, set one of the following:  -  The ``me`` alias. For example, ``users/me/spaces/{space}/threads/{thread}/threadReadState``.  -  Their Workspace email address. For example, ``users/user@example.com/spaces/{space}/threads/{thread}/threadReadState``.  -  Their user id. For example, ``users/123456789/spaces/{space}/threads/{thread}/threadReadState``.  Format: users/{user}/spaces/{space}/threads/{thread}/threadReadState",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-apps-chat/google/apps/chat_v1/types/space_read_state.py": [
    {
      "type": "function",
      "name": "GetSpaceReadStateRequest",
      "description": "Request message for GetSpaceReadState API.\n\nAttributes:\n    name (str):\n        Required. Resource name of the space read state to retrieve.\n\n        Only supports getting read state for the calling user.\n\n        To refer to the calling user, set one of the following:\n\n        -  The ``me`` alias. For example,\n           ``users/me/spaces/{space}/spaceReadState``.\n\n        -  Their Workspace email address. For example,\n           ``users/user@example.com/spaces/{space}/spaceReadState``.\n\n        -  Their user id. For example,\n           ``users/123456789/spaces/{space}/spaceReadState``.\n\n        Format: users/{user}/spaces/{space}/spaceReadState",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the space read state to retrieve.  Only supports getting read state for the calling user.  To refer to the calling user, set one of the following:  -  The ``me`` alias. For example, ``users/me/spaces/{space}/spaceReadState``.  -  Their Workspace email address. For example, ``users/user@example.com/spaces/{space}/spaceReadState``.  -  Their user id. For example, ``users/123456789/spaces/{space}/spaceReadState``.  Format: users/{user}/spaces/{space}/spaceReadState",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateSpaceReadStateRequest",
      "description": "Request message for UpdateSpaceReadState API.\n\nAttributes:\n    space_read_state (google.apps.chat_v1.types.SpaceReadState):\n        Required. The space read state and fields to update.\n\n        Only supports updating read state for the calling user.\n\n        To refer to the calling user, set one of the following:\n\n        -  The ``me`` alias. For example,\n           ``users/me/spaces/{space}/spaceReadState``.\n\n        -  Their Workspace email address. For example,\n           ``users/user@example.com/spaces/{space}/spaceReadState``.\n\n        -  Their user id. For example,\n           ``users/123456789/spaces/{space}/spaceReadState``.\n\n        Format: users/{user}/spaces/{space}/spaceReadState\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The field paths to update. Currently supported\n        field paths:\n\n        -  ``last_read_time``\n\n        When the ``last_read_time`` is before the latest message\n        create time, the space appears as unread in the UI.\n\n        To mark the ",
      "parameters": {
        "type": "object",
        "properties": {
          "space_read_state": {
            "description": "Required. The space read state and fields to update.  Only supports updating read state for the calling user.  To refer to the calling user, set one of the following:  -  The ``me`` alias. For example, ``users/me/spaces/{space}/spaceReadState``.  -  Their Workspace email address. For example, ``users/user@example.com/spaces/{space}/spaceReadState``.  -  Their user id. For example, ``users/123456789/spaces/{space}/spaceReadState``.  Format: users/{user}/spaces/{space}/spaceReadState",
            "reference": "google.apps.chat_v1.types.SpaceReadState",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Resource name of the space read state.  Format: ``users/{user}/spaces/{space}/spaceReadState``",
                  "type": "string"
                },
                "last_read_time": {
                  "description": "Optional. The time when the user's space read state was updated. Usually this corresponds with either the timestamp of the last read message, or a timestamp specified by the user to mark the last read position in a space.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                }
              }
            }
          },
          "update_mask": {
            "description": "Required. The field paths to update. Currently supported field paths:  -  ``last_read_time``  When the ``last_read_time`` is before the latest message create time, the space appears as unread in the UI.  To mark the space as read, set ``last_read_time`` to any value later (larger) than the latest message create time. The ``last_read_time`` is coerced to match the latest message create time. Note that the space read state only affects the read state of messages that are visible in the space's top-level conversation. Replies in threads are unaffected by this timestamp, and instead rely on the thread read state.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "space_read_state",
          "update_mask"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-apps-chat/google/apps/chat_v1/types/message.py": [
    {
      "type": "function",
      "name": "GetMessageRequest",
      "description": "Request to get a message.\n\nAttributes:\n    name (str):\n        Required. Resource name of the message.\n\n        Format: ``spaces/{space}/messages/{message}``\n\n        If you've set a custom ID for your message, you can use the\n        value from the ``clientAssignedMessageId`` field for\n        ``{message}``. For details, see [Name a message]\n        (https://developers.google.com/workspace/chat/create-messages#name_a_created_message).",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the message.  Format: ``spaces/{space}/messages/{message}``  If you've set a custom ID for your message, you can use the value from the ``clientAssignedMessageId`` field for ``{message}``. For details, see [Name a message] (https://developers.google.com/workspace/chat/create-messages#name_a_created_message).",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteMessageRequest",
      "description": "Request to delete a message.\n\nAttributes:\n    name (str):\n        Required. Resource name of the message.\n\n        Format: ``spaces/{space}/messages/{message}``\n\n        If you've set a custom ID for your message, you can use the\n        value from the ``clientAssignedMessageId`` field for\n        ``{message}``. For details, see [Name a message]\n        (https://developers.google.com/workspace/chat/create-messages#name_a_created_message).\n    force (bool):\n        When ``true``, deleting a message also deletes its threaded\n        replies. When ``false``, if a message has threaded replies,\n        deletion fails.\n\n        Only applies when `authenticating as a\n        user <https://developers.google.com/workspace/chat/authenticate-authorize-chat-user>`__.\n        Has no effect when [authenticating as a Chat app]\n        (https://developers.google.com/workspace/chat/authenticate-authorize-chat-app).",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the message.  Format: ``spaces/{space}/messages/{message}``  If you've set a custom ID for your message, you can use the value from the ``clientAssignedMessageId`` field for ``{message}``. For details, see [Name a message] (https://developers.google.com/workspace/chat/create-messages#name_a_created_message).",
            "type": "string"
          },
          "force": {
            "description": "When ``true``, deleting a message also deletes its threaded replies. When ``false``, if a message has threaded replies, deletion fails.  Only applies when `authenticating as a user <https://developers.google.com/workspace/chat/authenticate-authorize-chat-user>`__. Has no effect when [authenticating as a Chat app] (https://developers.google.com/workspace/chat/authenticate-authorize-chat-app).",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateMessageRequest",
      "description": "Request to update a message.\n\nAttributes:\n    message (google.apps.chat_v1.types.Message):\n        Required. Message with fields updated.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The field paths to update. Separate multiple\n        values with commas or use ``*`` to update all field paths.\n\n        Currently supported field paths:\n\n        -  ``text``\n\n        -  ``attachment``\n\n        -  ``cards`` (Requires `app\n           authentication </chat/api/guides/auth/service-accounts>`__.)\n\n        -  ``cards_v2`` (Requires `app\n           authentication </chat/api/guides/auth/service-accounts>`__.)\n\n        -  ``accessory_widgets`` (Requires `app\n           authentication </chat/api/guides/auth/service-accounts>`__.)\n    allow_missing (bool):\n        Optional. If ``true`` and the message isn't found, a new\n        message is created and ``updateMask`` is ignored. The\n        specified message ID must be\n        `client-assigned <https://developers.google.com/workspace/chat/cre",
      "parameters": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Required. Message with fields updated.",
            "reference": "google.apps.chat_v1.types.Message",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. The unique identifier of the message. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>/messages/<Message ID>``.",
                  "type": "string"
                },
                "content": {
                  "description": "Required. The message content.",
                  "type": "string"
                },
                "language_code": {
                  "description": "Optional. The message language. This should be a `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language tag. Example: \"en-US\".",
                  "type": "string"
                },
                "participant": {
                  "description": "Output only. The participant that sends this message.",
                  "type": "string",
                  "output_only": true
                },
                "participant_role": {
                  "description": "Output only. The role of the participant.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Participant.Role",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Identifier. The resource name of the ``Role``. Format: ``networks/{network_code}/roles/{role_id}``",
                        "type": "string"
                      },
                      "role_id": {
                        "description": "Output only. ``Role`` ID.",
                        "type": "integer",
                        "output_only": true
                      },
                      "display_name": {
                        "description": "Required. The display name of the ``Role``.",
                        "type": "string"
                      },
                      "description": {
                        "description": "Optional. The description of the ``Role``.",
                        "type": "string"
                      },
                      "built_in": {
                        "description": "Output only. Whether the ``Role`` is a built-in or custom user role.",
                        "type": "boolean",
                        "output_only": true
                      },
                      "status": {
                        "description": "Output only. The status of the ``Role``.",
                        "type": "object",
                        "reference": "google.ads.admanager_v1.types.RoleStatusEnum.RoleStatus",
                        "output_only": true
                      }
                    },
                    "required": [
                      "display_name"
                    ]
                  }
                },
                "create_time": {
                  "description": "Output only. The time when the message was created in Contact Center AI.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "send_time": {
                  "description": "Optional. The time when the message was sent.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "message_annotation": {
                  "description": "Output only. The annotation for the message.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.MessageAnnotation",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "parts": {
                        "description": "The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.AnnotatedMessagePart",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "description": "A part of a message possibly annotated with an entity.",
                                "type": "string"
                              },
                              "entity_type": {
                                "description": "The `Dialogflow system entity type <https://cloud.google.com/dialogflow/docs/reference/system-entities>`__ of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.",
                                "type": "string"
                              },
                              "formatted_value": {
                                "description": "The `Dialogflow system entity formatted value <https://cloud.google.com/dialogflow/docs/reference/system-entities>`__ of this message part. For example for a system entity of type ``@sys.unit-currency``, this may contain:  .. raw:: html  <pre> { \"amount\": 5, \"currency\": \"USD\" } </pre>",
                                "type": "object",
                                "reference": "google.protobuf.struct_pb2.Value",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "dropdown_value": {
                                      "description": "The custom_field_option_id, if the CustomFieldDataType is DROPDOWN.  This field is a member of `oneof`_ ``value``.",
                                      "type": "integer"
                                    },
                                    "string_value": {
                                      "description": "The value, if the CustomFieldDataType is STRING.  This field is a member of `oneof`_ ``value``.",
                                      "type": "string"
                                    },
                                    "number_value": {
                                      "description": "The value, if the CustomFieldDataType is NUMBER.  This field is a member of `oneof`_ ``value``.",
                                      "type": "number"
                                    },
                                    "toggle_value": {
                                      "description": "The value, if the CustomFieldDataType is TOGGLE.  This field is a member of `oneof`_ ``value``.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "contain_entities": {
                        "description": "Indicates whether the text message contains entities.",
                        "type": "boolean"
                      }
                    }
                  }
                },
                "sentiment_analysis": {
                  "description": "Output only. The sentiment analysis result for the message.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.SentimentAnalysisResult",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "query_text_sentiment": {
                        "description": "The sentiment analysis result for ``query_text``.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.Sentiment",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "score": {
                              "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
                              "type": "number"
                            },
                            "magnitude": {
                              "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "content"
              ]
            }
          },
          "update_mask": {
            "description": "Required. The field paths to update. Separate multiple values with commas or use ``*`` to update all field paths.  Currently supported field paths:  -  ``text``  -  ``attachment``  -  ``cards`` (Requires `app authentication </chat/api/guides/auth/service-accounts>`__.)  -  ``cards_v2`` (Requires `app authentication </chat/api/guides/auth/service-accounts>`__.)  -  ``accessory_widgets`` (Requires `app authentication </chat/api/guides/auth/service-accounts>`__.)",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "allow_missing": {
            "description": "Optional. If ``true`` and the message isn't found, a new message is created and ``updateMask`` is ignored. The specified message ID must be `client-assigned <https://developers.google.com/workspace/chat/create-messages#name_a_created_message>`__ or the request fails.",
            "type": "boolean"
          }
        },
        "required": [
          "message",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateMessageRequest",
      "description": "Creates a message.\n\nAttributes:\n    parent (str):\n        Required. The resource name of the space in which to create\n        a message.\n\n        Format: ``spaces/{space}``\n    message (google.apps.chat_v1.types.Message):\n        Required. Message body.\n    thread_key (str):\n        Optional. Deprecated: Use\n        [thread.thread_key][google.chat.v1.Thread.thread_key]\n        instead. ID for the thread. Supports up to 4000 characters.\n        To start or add to a thread, create a message and specify a\n        ``threadKey`` or the\n        [thread.name][google.chat.v1.Thread.name]. For example\n        usage, see `Start or reply to a message\n        thread <https://developers.google.com/workspace/chat/create-messages#create-message-thread>`__.\n    request_id (str):\n        Optional. A unique request ID for this\n        message. Specifying an existing request ID\n        returns the message created with that ID instead\n        of creating a new message.\n    message_reply_option (google.apps.chat_v1.types.CreateMe",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the space in which to create a message.  Format: ``spaces/{space}``",
            "type": "string"
          },
          "message": {
            "description": "Required. Message body.",
            "reference": "google.apps.chat_v1.types.Message",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. The unique identifier of the message. Format: ``projects/<Project ID>/locations/<Location ID>/conversations/<Conversation ID>/messages/<Message ID>``.",
                  "type": "string"
                },
                "content": {
                  "description": "Required. The message content.",
                  "type": "string"
                },
                "language_code": {
                  "description": "Optional. The message language. This should be a `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language tag. Example: \"en-US\".",
                  "type": "string"
                },
                "participant": {
                  "description": "Output only. The participant that sends this message.",
                  "type": "string",
                  "output_only": true
                },
                "participant_role": {
                  "description": "Output only. The role of the participant.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Participant.Role",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Identifier. The resource name of the ``Role``. Format: ``networks/{network_code}/roles/{role_id}``",
                        "type": "string"
                      },
                      "role_id": {
                        "description": "Output only. ``Role`` ID.",
                        "type": "integer",
                        "output_only": true
                      },
                      "display_name": {
                        "description": "Required. The display name of the ``Role``.",
                        "type": "string"
                      },
                      "description": {
                        "description": "Optional. The description of the ``Role``.",
                        "type": "string"
                      },
                      "built_in": {
                        "description": "Output only. Whether the ``Role`` is a built-in or custom user role.",
                        "type": "boolean",
                        "output_only": true
                      },
                      "status": {
                        "description": "Output only. The status of the ``Role``.",
                        "type": "object",
                        "reference": "google.ads.admanager_v1.types.RoleStatusEnum.RoleStatus",
                        "output_only": true
                      }
                    },
                    "required": [
                      "display_name"
                    ]
                  }
                },
                "create_time": {
                  "description": "Output only. The time when the message was created in Contact Center AI.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "send_time": {
                  "description": "Optional. The time when the message was sent.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "message_annotation": {
                  "description": "Output only. The annotation for the message.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.MessageAnnotation",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "parts": {
                        "description": "The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.AnnotatedMessagePart",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "description": "A part of a message possibly annotated with an entity.",
                                "type": "string"
                              },
                              "entity_type": {
                                "description": "The `Dialogflow system entity type <https://cloud.google.com/dialogflow/docs/reference/system-entities>`__ of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.",
                                "type": "string"
                              },
                              "formatted_value": {
                                "description": "The `Dialogflow system entity formatted value <https://cloud.google.com/dialogflow/docs/reference/system-entities>`__ of this message part. For example for a system entity of type ``@sys.unit-currency``, this may contain:  .. raw:: html  <pre> { \"amount\": 5, \"currency\": \"USD\" } </pre>",
                                "type": "object",
                                "reference": "google.protobuf.struct_pb2.Value",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "dropdown_value": {
                                      "description": "The custom_field_option_id, if the CustomFieldDataType is DROPDOWN.  This field is a member of `oneof`_ ``value``.",
                                      "type": "integer"
                                    },
                                    "string_value": {
                                      "description": "The value, if the CustomFieldDataType is STRING.  This field is a member of `oneof`_ ``value``.",
                                      "type": "string"
                                    },
                                    "number_value": {
                                      "description": "The value, if the CustomFieldDataType is NUMBER.  This field is a member of `oneof`_ ``value``.",
                                      "type": "number"
                                    },
                                    "toggle_value": {
                                      "description": "The value, if the CustomFieldDataType is TOGGLE.  This field is a member of `oneof`_ ``value``.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "contain_entities": {
                        "description": "Indicates whether the text message contains entities.",
                        "type": "boolean"
                      }
                    }
                  }
                },
                "sentiment_analysis": {
                  "description": "Output only. The sentiment analysis result for the message.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.SentimentAnalysisResult",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "query_text_sentiment": {
                        "description": "The sentiment analysis result for ``query_text``.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.Sentiment",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "score": {
                              "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
                              "type": "number"
                            },
                            "magnitude": {
                              "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "content"
              ]
            }
          },
          "thread_key": {
            "description": "Optional. Deprecated: Use [thread.thread_key][google.chat.v1.Thread.thread_key] instead. ID for the thread. Supports up to 4000 characters. To start or add to a thread, create a message and specify a ``threadKey`` or the [thread.name][google.chat.v1.Thread.name]. For example usage, see `Start or reply to a message thread <https://developers.google.com/workspace/chat/create-messages#create-message-thread>`__.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. A unique request ID for this message. Specifying an existing request ID returns the message created with that ID instead of creating a new message.",
            "type": "string"
          },
          "message_reply_option": {
            "description": "Optional. Specifies whether a message starts a thread or replies to one. Only supported in named spaces.",
            "type": "object",
            "reference": "google.apps.chat_v1.types.CreateMessageRequest.MessageReplyOption"
          },
          "message_id": {
            "description": "Optional. A custom ID for a message. Lets Chat apps get, update, or delete a message without needing to store the system-assigned ID in the message's resource name (represented in the message ``name`` field).  The value for this field must meet the following requirements:  -  Begins with ``client-``. For example, ``client-custom-name`` is a valid custom ID, but ``custom-name`` is not. -  Contains up to 63 characters and only lowercase letters, numbers, and hyphens. -  Is unique within a space. A Chat app can't use the same custom ID for different messages.  For details, see `Name a message <https://developers.google.com/workspace/chat/create-messages#name_a_created_message>`__.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "message"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListMessagesRequest",
      "description": "Lists messages in the specified space, that the user is a\nmember of.\n\nAttributes:\n    parent (str):\n        Required. The resource name of the space to list messages\n        from.\n\n        Format: ``spaces/{space}``\n    page_size (int):\n        The maximum number of messages returned. The service might\n        return fewer messages than this value.\n\n        If unspecified, at most 25 are returned.\n\n        The maximum value is 1000. If you use a value more than\n        1000, it's automatically changed to 1000.\n\n        Negative values return an ``INVALID_ARGUMENT`` error.\n    page_token (str):\n        Optional, if resuming from a previous query.\n\n        A page token received from a previous list\n        messages call. Provide this parameter to\n        retrieve the subsequent page.\n\n        When paginating, all other parameters provided\n        should match the call that provided the page\n        token. Passing different values to the other\n        parameters might lead to unexpected results.\n    filter (str)",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the space to list messages from.  Format: ``spaces/{space}``",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of messages returned. The service might return fewer messages than this value.  If unspecified, at most 25 are returned.  The maximum value is 1000. If you use a value more than 1000, it's automatically changed to 1000.  Negative values return an ``INVALID_ARGUMENT`` error.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional, if resuming from a previous query.  A page token received from a previous list messages call. Provide this parameter to retrieve the subsequent page.  When paginating, all other parameters provided should match the call that provided the page token. Passing different values to the other parameters might lead to unexpected results.",
            "type": "string"
          },
          "filter": {
            "description": "A query filter.  You can filter messages by date (``create_time``) and thread (``thread.name``).  To filter messages by the date they were created, specify the ``create_time`` with a timestamp in `RFC-3339 <https://www.rfc-editor.org/rfc/rfc3339>`__ format and double quotation marks. For example, ``\"2023-04-21T11:30:00-04:00\"``. You can use the greater than operator ``>`` to list messages that were created after a timestamp, or the less than operator ``<`` to list messages that were created before a timestamp. To filter messages within a time interval, use the ``AND`` operator between two timestamps.  To filter by thread, specify the ``thread.name``, formatted as ``spaces/{space}/threads/{thread}``. You can only specify one ``thread.name`` per query.  To filter by both thread and date, use the ``AND`` operator in your query.  For example, the following queries are valid:  ::  create_time > \"2012-04-21T11:30:00-04:00\"  create_time > \"2012-04-21T11:30:00-04:00\" AND thread.name = spaces/AAAAAAAAAAA/threads/123  create_time > \"2012-04-21T11:30:00+00:00\" AND  create_time < \"2013-01-01T00:00:00+00:00\" AND thread.name = spaces/AAAAAAAAAAA/threads/123  thread.name = spaces/AAAAAAAAAAA/threads/123  Invalid queries are rejected by the server with an ``INVALID_ARGUMENT`` error.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional, if resuming from a previous query.  How the list of messages is ordered. Specify a value to order by an ordering operation. Valid ordering operation values are as follows:  -  ``ASC`` for ascending.  -  ``DESC`` for descending.  The default ordering is ``create_time ASC``.",
            "type": "string"
          },
          "show_deleted": {
            "description": "Whether to include deleted messages. Deleted messages include deleted time and metadata about their deletion, but message content is unavailable.",
            "type": "boolean"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-apps-chat/google/apps/chat_v1/types/space_setup.py": [
    {
      "type": "function",
      "name": "SetUpSpaceRequest",
      "description": "Request to create a space and add specified users to it.\n\nAttributes:\n    space (google.apps.chat_v1.types.Space):\n        Required. The ``Space.spaceType`` field is required.\n\n        To create a space, set ``Space.spaceType`` to ``SPACE`` and\n        set ``Space.displayName``. If you receive the error message\n        ``ALREADY_EXISTS`` when setting up a space, try a different\n        ``displayName``. An existing space within the Google\n        Workspace organization might already use this display name.\n\n        To create a group chat, set ``Space.spaceType`` to\n        ``GROUP_CHAT``. Don't set ``Space.displayName``.\n\n        To create a 1:1 conversation between humans, set\n        ``Space.spaceType`` to ``DIRECT_MESSAGE`` and set\n        ``Space.singleUserBotDm`` to ``false``. Don't set\n        ``Space.displayName`` or ``Space.spaceDetails``.\n\n        To create an 1:1 conversation between a human and the\n        calling Chat app, set ``Space.spaceType`` to\n        ``DIRECT_MESSAGE`` and ``Space.singleUserB",
      "parameters": {
        "type": "object",
        "properties": {
          "space": {
            "description": "Required. The ``Space.spaceType`` field is required.  To create a space, set ``Space.spaceType`` to ``SPACE`` and set ``Space.displayName``. If you receive the error message ``ALREADY_EXISTS`` when setting up a space, try a different ``displayName``. An existing space within the Google Workspace organization might already use this display name.  To create a group chat, set ``Space.spaceType`` to ``GROUP_CHAT``. Don't set ``Space.displayName``.  To create a 1:1 conversation between humans, set ``Space.spaceType`` to ``DIRECT_MESSAGE`` and set ``Space.singleUserBotDm`` to ``false``. Don't set ``Space.displayName`` or ``Space.spaceDetails``.  To create an 1:1 conversation between a human and the calling Chat app, set ``Space.spaceType`` to ``DIRECT_MESSAGE`` and ``Space.singleUserBotDm`` to ``true``. Don't set ``Space.displayName`` or ``Space.spaceDetails``.  If a ``DIRECT_MESSAGE`` space already exists, that space is returned instead of creating a new space.",
            "reference": "google.apps.chat_v1.types.Space",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Immutable. Resource name of the space. Format: ``spaces/{space}``",
                  "type": "string"
                },
                "meeting_uri": {
                  "description": "Output only. URI used to join meeting, such as ``https://meet.google.com/abc-mnop-xyz``.",
                  "type": "string",
                  "output_only": true
                },
                "meeting_code": {
                  "description": "Output only. Type friendly code to join the meeting. Format: ``[a-z]+-[a-z]+-[a-z]+`` such as ``abc-mnop-xyz``. The maximum length is 128 characters. Can ONLY be used as alias of the space ID to get the space.",
                  "type": "string",
                  "output_only": true
                },
                "config": {
                  "description": "Configuration pertaining to the meeting space.",
                  "type": "object",
                  "reference": "google.apps.meet_v2beta.types.SpaceConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "access_type": {
                        "description": "Access type of the meeting space that determines who can join without knocking. Default: The user's default access settings. Controlled by the user's admin for enterprise users or RESTRICTED.",
                        "type": "object",
                        "reference": "google.apps.meet_v2beta.types.SpaceConfig.AccessType"
                      },
                      "entry_point_access": {
                        "description": "Defines the entry points that can be used to join meetings hosted in this meeting space. Default: EntryPointAccess.ALL",
                        "type": "object",
                        "reference": "google.apps.meet_v2beta.types.SpaceConfig.EntryPointAccess"
                      }
                    }
                  }
                },
                "active_conference": {
                  "description": "Active conference if it exists.",
                  "type": "object",
                  "reference": "google.apps.meet_v2beta.types.ActiveConference",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "conference_record": {
                        "description": "Output only. Reference to 'ConferenceRecord' resource. Format: ``conferenceRecords/{conference_record}`` where ``{conference_record}`` is a unique id for each instance of a call within a space.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. A random UUID is recommended. Specifying an existing request ID returns the space created with that ID instead of creating a new space. Specifying an existing request ID from the same Chat app with a different authenticated user returns an error.",
            "type": "string"
          },
          "memberships": {
            "description": "Optional. The Google Chat users or groups to invite to join the space. Omit the calling user, as they are added automatically.  The set currently allows up to 20 memberships (in addition to the caller).  For human membership, the ``Membership.member`` field must contain a ``user`` with ``name`` populated (format: ``users/{user}``) and ``type`` set to ``User.Type.HUMAN``. You can only add human users when setting up a space (adding Chat apps is only supported for direct message setup with the calling app). You can also add members using the user's email as an alias for {user}. For example, the ``user.name`` can be ``users/example@gmail.com``. To invite Gmail users or users from external Google Workspace domains, user's email must be used for ``{user}``.  For Google group membership, the ``Membership.group_member`` field must contain a ``group`` with ``name`` populated (format ``groups/{group}``). You can only add Google groups when setting ``Space.spaceType`` to ``SPACE``.  Optional when setting ``Space.spaceType`` to ``SPACE``.  Required when setting ``Space.spaceType`` to ``GROUP_CHAT``, along with at least two memberships.  Required when setting ``Space.spaceType`` to ``DIRECT_MESSAGE`` with a human user, along with exactly one membership.  Must be empty when creating a 1:1 conversation between a human and the calling Chat app (when setting ``Space.spaceType`` to ``DIRECT_MESSAGE`` and ``Space.singleUserBotDm`` to ``true``).",
            "type": "array",
            "items": {
              "reference": "google.apps.chat_v1.types.Membership",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "description": "Optional. Endpoint information to reach this member.  This field is a member of `oneof`_ ``type``.",
                    "type": "object",
                    "reference": "google.cloud.gkehub_v1.types.MembershipEndpoint",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "gke_cluster": {
                          "description": "Optional. GKE-specific information. Only present if this Membership is a GKE cluster.",
                          "type": "object",
                          "reference": "google.cloud.gkehub_v1.types.GkeCluster",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "cluster": {
                                "description": "Optional. Information specifying a GKE Cluster. Format is ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}``.",
                                "type": "string"
                              },
                              "internal_ip": {
                                "description": "Optional. If true, ``cluster`` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise.  Only specify this option when ``cluster`` is a `private GKE cluster <https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept>`__.",
                                "type": "boolean"
                              },
                              "proxy_url": {
                                "description": "Optional. If set, used to configure a `proxy <https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#proxy>`__ to the Kubernetes server.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "kubernetes_metadata": {
                          "description": "Output only. Useful Kubernetes-specific metadata.",
                          "type": "object",
                          "reference": "google.cloud.gkehub_v1.types.KubernetesMetadata",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "kubernetes_api_server_version": {
                                "description": "Output only. Kubernetes API server version string as reported by ``/version``.",
                                "type": "string",
                                "output_only": true
                              },
                              "node_provider_id": {
                                "description": "Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.",
                                "type": "string",
                                "output_only": true
                              },
                              "node_count": {
                                "description": "Output only. Node count as reported by Kubernetes nodes resources.",
                                "type": "integer",
                                "output_only": true
                              },
                              "vcpu_count": {
                                "description": "Output only. vCPU count as reported by Kubernetes nodes resources.",
                                "type": "integer",
                                "output_only": true
                              },
                              "memory_mb": {
                                "description": "Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.",
                                "type": "integer",
                                "output_only": true
                              },
                              "update_time": {
                                "description": "Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.",
                                "type": "object",
                                "reference": "google.protobuf.timestamp_pb2.Timestamp",
                                "output_only": true
                              }
                            }
                          }
                        },
                        "kubernetes_resource": {
                          "description": "Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources:  -  Ensure that the cluster is exclusively registered to one and only one Hub Membership. -  Propagate Workload Pool Information available in the Membership Authority field. -  Ensure proper initial configuration of default Hub Features.",
                          "type": "object",
                          "reference": "google.cloud.gkehub_v1.types.KubernetesResource",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "membership_cr_manifest": {
                                "description": "Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly.  Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.",
                                "type": "string"
                              },
                              "membership_resources": {
                                "description": "Output only. Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update.  This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "reference": "google.cloud.gkehub_v1.types.ResourceManifest",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "manifest": {
                                        "description": "YAML manifest of the resource.",
                                        "type": "string"
                                      },
                                      "cluster_scoped": {
                                        "description": "Whether the resource provided in the manifest is ``cluster_scoped``. If unset, the manifest is assumed to be namespace scoped.  This field is used for REST mapping when applying the resource in a cluster.",
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                },
                                "output_only": true
                              },
                              "connect_resources": {
                                "description": "Output only. The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "reference": "google.cloud.gkehub_v1.types.ResourceManifest",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "manifest": {
                                        "description": "YAML manifest of the resource.",
                                        "type": "string"
                                      },
                                      "cluster_scoped": {
                                        "description": "Whether the resource provided in the manifest is ``cluster_scoped``. If unset, the manifest is assumed to be namespace scoped.  This field is used for REST mapping when applying the resource in a cluster.",
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                },
                                "output_only": true
                              },
                              "resource_options": {
                                "description": "Optional. Options for Kubernetes resource generation.",
                                "type": "object",
                                "reference": "google.cloud.gkehub_v1.types.ResourceOptions",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "connect_version": {
                                      "description": "Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.",
                                      "type": "string"
                                    },
                                    "v1beta1_crd": {
                                      "description": "Optional. Use ``apiextensions/v1beta1`` instead of ``apiextensions/v1`` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.",
                                      "type": "boolean"
                                    },
                                    "k8s_version": {
                                      "description": "Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, ``apiextensions/v1beta1`` or\\ ``apiextensions/v1``.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "google_managed": {
                          "description": "Output only. Whether the lifecycle of this membership is managed by a google cluster platform service.",
                          "type": "boolean",
                          "output_only": true
                        }
                      }
                    }
                  },
                  "name": {
                    "description": "Output only. The full, unique name of this Membership resource in the format ``projects/*/locations/*/memberships/{membership_id}``, set during creation.  ``membership_id`` must be a valid RFC 1123 compliant DNS label:  1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or ``-`` 3. It must start and end with an alphanumeric character  Which can be expressed as the regex: ``[a-z0-9]([-a-z0-9]*[a-z0-9])?``, with a maximum length of 63 characters.",
                    "type": "string",
                    "output_only": true
                  },
                  "labels": {
                    "description": "Optional. Labels for this membership.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "description": {
                    "description": "Output only. Description of this membership, limited to 63 characters. Must match the regex: ``[a-zA-Z0-9][a-zA-Z0-9_\\-\\.\\ ]*``  This field is present for legacy purposes.",
                    "type": "string",
                    "output_only": true
                  },
                  "state": {
                    "description": "Output only. State of the Membership resource.",
                    "type": "object",
                    "reference": "google.cloud.gkehub_v1.types.MembershipState",
                    "output_only": true,
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "cluster_name": {
                          "description": "This field is set to the ``cluster_name`` field of the Membership Spec if it is not empty. Otherwise, it is set to the cluster's fleet membership name.",
                          "type": "string"
                        },
                        "membership_spec": {
                          "description": "Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state",
                          "type": "object",
                          "reference": "google.cloud.gkehub.configmanagement_v1.types.MembershipSpec",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "config_sync": {
                                "description": "Config Sync configuration for the cluster.",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSync",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "git": {
                                      "description": "Git repo configuration for the cluster.",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.GitConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "sync_repo": {
                                            "description": "The URL of the Git repository to use as the source of truth.",
                                            "type": "string"
                                          },
                                          "sync_branch": {
                                            "description": "The branch of the repository to sync from. Default: master.",
                                            "type": "string"
                                          },
                                          "policy_dir": {
                                            "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.",
                                            "type": "string"
                                          },
                                          "sync_wait_secs": {
                                            "description": "Period in seconds between consecutive syncs. Default: 15.",
                                            "type": "integer"
                                          },
                                          "sync_rev": {
                                            "description": "Git revision (tag or hash) to check out. Default HEAD.",
                                            "type": "string"
                                          },
                                          "secret_type": {
                                            "description": "Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.",
                                            "type": "string"
                                          },
                                          "https_proxy": {
                                            "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
                                            "type": "string"
                                          },
                                          "gcp_service_account_email": {
                                            "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "source_format": {
                                      "description": "Specifies whether the Config Sync Repo is in \"hierarchical\" or \"unstructured\" mode.",
                                      "type": "string"
                                    },
                                    "enabled": {
                                      "description": "Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of the git or oci field.  This field is a member of `oneof`_ ``_enabled``.",
                                      "type": "boolean"
                                    },
                                    "prevent_drift": {
                                      "description": "Set to true to enable the Config Sync admission webhook to prevent drifts. If set to ``false``, disables the Config Sync admission webhook and does not prevent drifts.",
                                      "type": "boolean"
                                    },
                                    "oci": {
                                      "description": "OCI repo configuration for the cluster",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.OciConfig",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "sync_repo": {
                                            "description": "The OCI image repository URL for the package to sync from. e.g. ``LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME``.",
                                            "type": "string"
                                          },
                                          "policy_dir": {
                                            "description": "The absolute path of the directory that contains the local resources.  Default: the root directory of the image.",
                                            "type": "string"
                                          },
                                          "sync_wait_secs": {
                                            "description": "Period in seconds between consecutive syncs. Default: 15.",
                                            "type": "integer"
                                          },
                                          "secret_type": {
                                            "description": "Type of secret configured for access to the Git repo.",
                                            "type": "string"
                                          },
                                          "gcp_service_account_email": {
                                            "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "metrics_gcp_service_account_email": {
                                      "description": "The Email of the Google Cloud Service Account (GSA) used for exporting Config Sync metrics to Cloud Monitoring when Workload Identity is enabled. The GSA should have the Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role. The Kubernetes ServiceAccount ``default`` in the namespace ``config-management-monitoring`` should be bound to the GSA.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "policy_controller": {
                                "description": "Policy Controller configuration for the cluster.",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.PolicyController",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.",
                                      "type": "boolean"
                                    },
                                    "template_library_installed": {
                                      "description": "Installs the default template library along with Policy Controller.  This field is a member of `oneof`_ ``_template_library_installed``.",
                                      "type": "boolean"
                                    },
                                    "audit_interval_seconds": {
                                      "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.  This field is a member of `oneof`_ ``_audit_interval_seconds``.",
                                      "type": "integer"
                                    },
                                    "exemptable_namespaces": {
                                      "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "referential_rules_enabled": {
                                      "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
                                      "type": "boolean"
                                    },
                                    "log_denies_enabled": {
                                      "description": "Logs all denies and dry run failures.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "hierarchy_controller": {
                                "description": "Hierarchy Controller configuration for the cluster.",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerConfig",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether Hierarchy Controller is enabled in this cluster.",
                                      "type": "boolean"
                                    },
                                    "enable_pod_tree_labels": {
                                      "description": "Whether pod tree labels are enabled in this cluster.",
                                      "type": "boolean"
                                    },
                                    "enable_hierarchical_resource_quota": {
                                      "description": "Whether hierarchical resource quota is enabled in this cluster.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "version": {
                                "description": "Version of ACM installed.",
                                "type": "string"
                              },
                              "cluster": {
                                "description": "The user-specified cluster name used by Config Sync cluster-name-selector annotation or ClusterSelector, for applying configs to only a subset of clusters. Omit this field if the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector. Set this field if a name different from the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector.",
                                "type": "string"
                              },
                              "management": {
                                "description": "Enables automatic Feature management.",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.MembershipSpec.Management"
                              }
                            }
                          }
                        },
                        "operator_state": {
                          "description": "Current install status of ACM's Operator",
                          "type": "object",
                          "reference": "google.cloud.gkehub.configmanagement_v1.types.OperatorState",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "description": "The semenatic version number of the operator",
                                "type": "string"
                              },
                              "deployment_state": {
                                "description": "The state of the Operator's deployment",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                              },
                              "errors": {
                                "description": "Install errors.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "reference": "google.cloud.gkehub.configmanagement_v1.types.InstallError",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "error_message": {
                                        "description": "A string representing the user facing error message",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "config_sync_state": {
                          "description": "Current sync status",
                          "type": "object",
                          "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "description": "The version of ConfigSync deployed",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncVersion",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "importer": {
                                      "description": "Version of the deployed importer pod",
                                      "type": "string"
                                    },
                                    "syncer": {
                                      "description": "Version of the deployed syncer pod",
                                      "type": "string"
                                    },
                                    "git_sync": {
                                      "description": "Version of the deployed git-sync pod",
                                      "type": "string"
                                    },
                                    "monitor": {
                                      "description": "Version of the deployed monitor pod",
                                      "type": "string"
                                    },
                                    "reconciler_manager": {
                                      "description": "Version of the deployed reconciler-manager pod",
                                      "type": "string"
                                    },
                                    "root_reconciler": {
                                      "description": "Version of the deployed reconciler container in root-reconciler pod",
                                      "type": "string"
                                    },
                                    "admission_webhook": {
                                      "description": "Version of the deployed admission_webhook pod",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "deployment_state": {
                                "description": "Information about the deployment of ConfigSync, including the version of the various Pods deployed",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncDeploymentState",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "importer": {
                                      "description": "Deployment state of the importer pod",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                    },
                                    "syncer": {
                                      "description": "Deployment state of the syncer pod",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                    },
                                    "git_sync": {
                                      "description": "Deployment state of the git-sync pod",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                    },
                                    "monitor": {
                                      "description": "Deployment state of the monitor pod",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                    },
                                    "reconciler_manager": {
                                      "description": "Deployment state of reconciler-manager pod",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                    },
                                    "root_reconciler": {
                                      "description": "Deployment state of root-reconciler",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                    },
                                    "admission_webhook": {
                                      "description": "Deployment state of admission-webhook",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                    }
                                  }
                                }
                              },
                              "sync_state": {
                                "description": "The state of ConfigSync's process to sync configs to a cluster",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncState",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "source_token": {
                                      "description": "Token indicating the state of the repo.",
                                      "type": "string"
                                    },
                                    "import_token": {
                                      "description": "Token indicating the state of the importer.",
                                      "type": "string"
                                    },
                                    "sync_token": {
                                      "description": "Token indicating the state of the syncer.",
                                      "type": "string"
                                    },
                                    "last_sync": {
                                      "description": "Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String",
                                      "type": "string"
                                    },
                                    "last_sync_time": {
                                      "description": "Timestamp type of when ACM last successfully synced the repo",
                                      "type": "object",
                                      "reference": "google.protobuf.timestamp_pb2.Timestamp"
                                    },
                                    "code": {
                                      "description": "Sync status code",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncState.SyncCode"
                                    },
                                    "errors": {
                                      "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncError",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "code": {
                                              "description": "An ACM defined error code",
                                              "type": "string"
                                            },
                                            "error_message": {
                                              "description": "A description of the error",
                                              "type": "string"
                                            },
                                            "error_resources": {
                                              "description": "A list of config(s) associated with the error, if any",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "reference": "google.cloud.gkehub.configmanagement_v1.types.ErrorResource",
                                                "resolved_schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "source_path": {
                                                      "description": "Path in the git repo of the erroneous config",
                                                      "type": "string"
                                                    },
                                                    "resource_name": {
                                                      "description": "Metadata name of the resource that is causing an error",
                                                      "type": "string"
                                                    },
                                                    "resource_namespace": {
                                                      "description": "Namespace of the resource that is causing an error",
                                                      "type": "string"
                                                    },
                                                    "resource_gvk": {
                                                      "description": "Group/version/kind of the resource that is causing an error",
                                                      "type": "object",
                                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.GroupVersionKind",
                                                      "resolved_schema": {
                                                        "type": "object",
                                                        "properties": {
                                                          "group": {
                                                            "description": "Kubernetes Group",
                                                            "type": "string"
                                                          },
                                                          "version": {
                                                            "description": "Kubernetes Version",
                                                            "type": "string"
                                                          },
                                                          "kind": {
                                                            "description": "Kubernetes Kind",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "errors": {
                                "description": "Errors pertaining to the installation of Config Sync.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncError",
                                  "resolved_schema": {
                                    "type": "object",
                                    "properties": {
                                      "error_message": {
                                        "description": "A string representing the user facing error message",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "rootsync_crd": {
                                "description": "The state of the RootSync CRD",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState"
                              },
                              "reposync_crd": {
                                "description": "The state of the Reposync CRD",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState"
                              },
                              "state": {
                                "description": "The state of CS This field summarizes the other fields in this message.",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.State"
                              }
                            }
                          }
                        },
                        "policy_controller_state": {
                          "description": "PolicyController status",
                          "type": "object",
                          "reference": "google.cloud.gkehub.configmanagement_v1.types.PolicyControllerState",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "description": "The version of Gatekeeper Policy Controller deployed.",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.PolicyControllerVersion",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "deployment_state": {
                                "description": "The state about the policy controller installation.",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.GatekeeperDeploymentState",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "gatekeeper_controller_manager_state": {
                                      "description": "Status of gatekeeper-controller-manager pod.",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                    },
                                    "gatekeeper_audit": {
                                      "description": "Status of gatekeeper-audit deployment.",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "hierarchy_controller_state": {
                          "description": "Hierarchy Controller status",
                          "type": "object",
                          "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerState",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "description": "The version for Hierarchy Controller",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerVersion",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "hnc": {
                                      "description": "Version for open source HNC",
                                      "type": "string"
                                    },
                                    "extension": {
                                      "description": "Version for Hierarchy Controller extension",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "state": {
                                "description": "The deployment state for Hierarchy Controller",
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerDeploymentState",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "hnc": {
                                      "description": "The deployment state for open source HNC (e.g. v0.7.0-hc.0)",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                    },
                                    "extension": {
                                      "description": "The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)",
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "create_time": {
                    "description": "Output only. When the Membership was created.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "update_time": {
                    "description": "Output only. When the Membership was last updated.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "delete_time": {
                    "description": "Output only. When the Membership was deleted.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "external_id": {
                    "description": "Optional. An externally-generated and managed ID for this Membership. This ID may be modified after creation, but this is not recommended.  The ID must match the regex: ``[a-zA-Z0-9][a-zA-Z0-9_\\-\\.]*``  If this Membership represents a Kubernetes cluster, this value should be set to the UID of the ``kube-system`` namespace object.",
                    "type": "string"
                  },
                  "last_connection_time": {
                    "description": "Output only. For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp",
                    "output_only": true
                  },
                  "unique_id": {
                    "description": "Output only. Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.",
                    "type": "string",
                    "output_only": true
                  },
                  "authority": {
                    "description": "Optional. How to identify workloads from this Membership. See the documentation on Workload Identity for more details:  https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
                    "type": "object",
                    "reference": "google.cloud.gkehub_v1.types.Authority",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "issuer": {
                          "description": "Optional. A JSON Web Token (JWT) issuer URI. ``issuer`` must start with ``https://`` and be a valid URL with length <2000 characters.  If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer.  Clearing ``issuer`` disables Workload Identity. ``issuer`` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).",
                          "type": "string"
                        },
                        "workload_identity_pool": {
                          "description": "Output only. The name of the workload identity pool in which ``issuer`` will be recognized.  There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is ``{PROJECT_ID}.hub.id.goog``, although this is subject to change in newer versions of this API.",
                          "type": "string",
                          "output_only": true
                        },
                        "identity_provider": {
                          "description": "Output only. An identity provider that reflects the ``issuer`` in the workload identity pool.",
                          "type": "string",
                          "output_only": true
                        },
                        "oidc_jwks": {
                          "description": "Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517).  When this field is set, OIDC discovery will NOT be performed on ``issuer``, and instead OIDC tokens will be validated using this field.",
                          "type": "object",
                          "reference": "bytes"
                        }
                      }
                    }
                  },
                  "monitoring_config": {
                    "description": "Optional. The monitoring config information for this membership.",
                    "type": "object",
                    "reference": "google.cloud.gkehub_v1.types.MonitoringConfig",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "component_config": {
                          "description": "Monitoring components configuration",
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.MonitoringComponentConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "enable_components": {
                                "description": "Select components to collect metrics. An empty set would disable all monitoring.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "reference": "google.cloud.container_v1beta1.types.MonitoringComponentConfig.Component"
                                }
                              }
                            }
                          }
                        },
                        "managed_prometheus_config": {
                          "description": "Enable Google Cloud Managed Service for Prometheus in the cluster.",
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.ManagedPrometheusConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Enable Managed Collection.",
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "advanced_datapath_observability_config": {
                          "description": "Configuration of Advanced Datapath Observability features.",
                          "type": "object",
                          "reference": "google.cloud.container_v1beta1.types.AdvancedDatapathObservabilityConfig",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "enable_metrics": {
                                "description": "Expose flow metrics on nodes",
                                "type": "boolean"
                              },
                              "relay_mode": {
                                "description": "Method used to make Relay available",
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.AdvancedDatapathObservabilityConfig.RelayMode"
                              },
                              "enable_relay": {
                                "description": "Enable Relay component  This field is a member of `oneof`_ ``_enable_relay``.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "space"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-apps-chat/google/apps/chat_v1/types/attachment.py": [
    {
      "type": "function",
      "name": "GetAttachmentRequest",
      "description": "Request to get an attachment.\n\nAttributes:\n    name (str):\n        Required. Resource name of the attachment, in the form\n        ``spaces/{space}/messages/{message}/attachments/{attachment}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the attachment, in the form ``spaces/{space}/messages/{message}/attachments/{attachment}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UploadAttachmentRequest",
      "description": "Request to upload an attachment.\n\nAttributes:\n    parent (str):\n        Required. Resource name of the Chat space in\n        which the attachment is uploaded. Format\n        \"spaces/{space}\".\n    filename (str):\n        Required. The filename of the attachment,\n        including the file extension.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the Chat space in which the attachment is uploaded. Format \"spaces/{space}\".",
            "type": "string"
          },
          "filename": {
            "description": "Required. The filename of the attachment, including the file extension.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "filename"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-apps-chat/google/apps/chat_v1/types/space.py": [
    {
      "type": "function",
      "name": "CreateSpaceRequest",
      "description": "A request to create a named space with no members.\n\nAttributes:\n    space (google.apps.chat_v1.types.Space):\n        Required. The ``displayName`` and ``spaceType`` fields must\n        be populated. Only ``SpaceType.SPACE`` is supported.\n\n        If you receive the error message ``ALREADY_EXISTS``, try a\n        different ``displayName``. An existing space within the\n        Google Workspace organization might already use this display\n        name.\n\n        If you're a member of the `Developer Preview\n        program <https://developers.google.com/workspace/preview>`__,\n        ``SpaceType.GROUP_CHAT`` can be used if ``importMode`` is\n        set to true.\n\n        The space ``name`` is assigned on the server so anything\n        specified in this field will be ignored.\n    request_id (str):\n        Optional. A unique identifier for this\n        request. A random UUID is recommended.\n        Specifying an existing request ID returns the\n        space created with that ID instead of creating a\n        new space.",
      "parameters": {
        "type": "object",
        "properties": {
          "space": {
            "description": "Required. The ``displayName`` and ``spaceType`` fields must be populated. Only ``SpaceType.SPACE`` is supported.  If you receive the error message ``ALREADY_EXISTS``, try a different ``displayName``. An existing space within the Google Workspace organization might already use this display name.  If you're a member of the `Developer Preview program <https://developers.google.com/workspace/preview>`__, ``SpaceType.GROUP_CHAT`` can be used if ``importMode`` is set to true.  The space ``name`` is assigned on the server so anything specified in this field will be ignored.",
            "reference": "google.apps.chat_v1.types.Space",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Immutable. Resource name of the space. Format: ``spaces/{space}``",
                  "type": "string"
                },
                "meeting_uri": {
                  "description": "Output only. URI used to join meeting, such as ``https://meet.google.com/abc-mnop-xyz``.",
                  "type": "string",
                  "output_only": true
                },
                "meeting_code": {
                  "description": "Output only. Type friendly code to join the meeting. Format: ``[a-z]+-[a-z]+-[a-z]+`` such as ``abc-mnop-xyz``. The maximum length is 128 characters. Can ONLY be used as alias of the space ID to get the space.",
                  "type": "string",
                  "output_only": true
                },
                "config": {
                  "description": "Configuration pertaining to the meeting space.",
                  "type": "object",
                  "reference": "google.apps.meet_v2beta.types.SpaceConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "access_type": {
                        "description": "Access type of the meeting space that determines who can join without knocking. Default: The user's default access settings. Controlled by the user's admin for enterprise users or RESTRICTED.",
                        "type": "object",
                        "reference": "google.apps.meet_v2beta.types.SpaceConfig.AccessType"
                      },
                      "entry_point_access": {
                        "description": "Defines the entry points that can be used to join meetings hosted in this meeting space. Default: EntryPointAccess.ALL",
                        "type": "object",
                        "reference": "google.apps.meet_v2beta.types.SpaceConfig.EntryPointAccess"
                      }
                    }
                  }
                },
                "active_conference": {
                  "description": "Active conference if it exists.",
                  "type": "object",
                  "reference": "google.apps.meet_v2beta.types.ActiveConference",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "conference_record": {
                        "description": "Output only. Reference to 'ConferenceRecord' resource. Format: ``conferenceRecords/{conference_record}`` where ``{conference_record}`` is a unique id for each instance of a call within a space.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          },
          "request_id": {
            "description": "Optional. A unique identifier for this request. A random UUID is recommended. Specifying an existing request ID returns the space created with that ID instead of creating a new space. Specifying an existing request ID from the same Chat app with a different authenticated user returns an error.",
            "type": "string"
          }
        },
        "required": [
          "space"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListSpacesRequest",
      "description": "A request to list the spaces the caller is a member of.\n\nAttributes:\n    page_size (int):\n        Optional. The maximum number of spaces to return. The\n        service might return fewer than this value.\n\n        If unspecified, at most 100 spaces are returned.\n\n        The maximum value is 1000. If you use a value more than\n        1000, it's automatically changed to 1000.\n\n        Negative values return an ``INVALID_ARGUMENT`` error.\n    page_token (str):\n        Optional. A page token, received from a\n        previous list spaces call. Provide this\n        parameter to retrieve the subsequent page.\n\n        When paginating, the filter value should match\n        the call that provided the page token. Passing a\n        different value may lead to unexpected results.\n    filter (str):\n        Optional. A query filter.\n\n        You can filter spaces by the space type\n        (```space_type`` <https://developers.google.com/workspace/chat/api/reference/rest/v1/spaces#spacetype>`__).\n\n        To filter by space t",
      "parameters": {
        "type": "object",
        "properties": {
          "page_size": {
            "description": "Optional. The maximum number of spaces to return. The service might return fewer than this value.  If unspecified, at most 100 spaces are returned.  The maximum value is 1000. If you use a value more than 1000, it's automatically changed to 1000.  Negative values return an ``INVALID_ARGUMENT`` error.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous list spaces call. Provide this parameter to retrieve the subsequent page.  When paginating, the filter value should match the call that provided the page token. Passing a different value may lead to unexpected results.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. A query filter.  You can filter spaces by the space type (```space_type`` <https://developers.google.com/workspace/chat/api/reference/rest/v1/spaces#spacetype>`__).  To filter by space type, you must specify valid enum value, such as ``SPACE`` or ``GROUP_CHAT`` (the ``space_type`` can't be ``SPACE_TYPE_UNSPECIFIED``). To query for multiple space types, use the ``OR`` operator.  For example, the following queries are valid:  ::  space_type = \"SPACE\" spaceType = \"GROUP_CHAT\" OR spaceType = \"DIRECT_MESSAGE\"  Invalid queries are rejected by the server with an ``INVALID_ARGUMENT`` error.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "GetSpaceRequest",
      "description": "A request to return a single space.\n\nAttributes:\n    name (str):\n        Required. Resource name of the space, in the form\n        ``spaces/{space}``.\n\n        Format: ``spaces/{space}``\n    use_admin_access (bool):\n        When ``true``, the method runs using the user's Google\n        Workspace administrator privileges.\n\n        The calling user must be a Google Workspace administrator\n        with the `manage chat and spaces conversations\n        privilege <https://support.google.com/a/answer/13369245>`__.\n\n        Requires the ``chat.admin.spaces`` or\n        ``chat.admin.spaces.readonly`` `OAuth 2.0\n        scopes <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the space, in the form ``spaces/{space}``.  Format: ``spaces/{space}``",
            "type": "string"
          },
          "use_admin_access": {
            "description": "When ``true``, the method runs using the user's Google Workspace administrator privileges.  The calling user must be a Google Workspace administrator with the `manage chat and spaces conversations privilege <https://support.google.com/a/answer/13369245>`__.  Requires the ``chat.admin.spaces`` or ``chat.admin.spaces.readonly`` `OAuth 2.0 scopes <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.",
            "type": "boolean",
            "output_only": true
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "FindDirectMessageRequest",
      "description": "A request to get direct message space based on the user\nresource.\n\nAttributes:\n    name (str):\n        Required. Resource name of the user to find direct message\n        with.\n\n        Format: ``users/{user}``, where ``{user}`` is either the\n        ``id`` for the\n        `person <https://developers.google.com/people/api/rest/v1/people>`__\n        from the People API, or the ``id`` for the\n        `user <https://developers.google.com/admin-sdk/directory/reference/rest/v1/users>`__\n        in the Directory API. For example, if the People API profile\n        ID is ``123456789``, you can find a direct message with that\n        person by using ``users/123456789`` as the ``name``. When\n        `authenticated as a\n        user <https://developers.google.com/workspace/chat/authenticate-authorize-chat-user>`__,\n        you can use the email as an alias for ``{user}``. For\n        example, ``users/example@gmail.com`` where\n        ``example@gmail.com`` is the email of the Google Chat user.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the user to find direct message with.  Format: ``users/{user}``, where ``{user}`` is either the ``id`` for the `person <https://developers.google.com/people/api/rest/v1/people>`__ from the People API, or the ``id`` for the `user <https://developers.google.com/admin-sdk/directory/reference/rest/v1/users>`__ in the Directory API. For example, if the People API profile ID is ``123456789``, you can find a direct message with that person by using ``users/123456789`` as the ``name``. When `authenticated as a user <https://developers.google.com/workspace/chat/authenticate-authorize-chat-user>`__, you can use the email as an alias for ``{user}``. For example, ``users/example@gmail.com`` where ``example@gmail.com`` is the email of the Google Chat user.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateSpaceRequest",
      "description": "A request to update a single space.\n\nAttributes:\n    space (google.apps.chat_v1.types.Space):\n        Required. Space with fields to be updated. ``Space.name``\n        must be populated in the form of ``spaces/{space}``. Only\n        fields specified by ``update_mask`` are updated.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The updated field paths, comma separated if there\n        are multiple.\n\n        You can update the following fields for a space:\n\n        ``space_details``: Updates the space's description. Supports\n        up to 150 characters.\n\n        ``display_name``: Only supports updating the display name\n        for spaces where ``spaceType`` field is ``SPACE``. If you\n        receive the error message ``ALREADY_EXISTS``, try a\n        different value. An existing space within the Google\n        Workspace organization might already use this display name.\n\n        ``space_type``: Only supports changing a ``GROUP_CHAT``\n        space type to ``SPACE``. Include ``dis",
      "parameters": {
        "type": "object",
        "properties": {
          "space": {
            "description": "Required. Space with fields to be updated. ``Space.name`` must be populated in the form of ``spaces/{space}``. Only fields specified by ``update_mask`` are updated.",
            "reference": "google.apps.chat_v1.types.Space",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Immutable. Resource name of the space. Format: ``spaces/{space}``",
                  "type": "string"
                },
                "meeting_uri": {
                  "description": "Output only. URI used to join meeting, such as ``https://meet.google.com/abc-mnop-xyz``.",
                  "type": "string",
                  "output_only": true
                },
                "meeting_code": {
                  "description": "Output only. Type friendly code to join the meeting. Format: ``[a-z]+-[a-z]+-[a-z]+`` such as ``abc-mnop-xyz``. The maximum length is 128 characters. Can ONLY be used as alias of the space ID to get the space.",
                  "type": "string",
                  "output_only": true
                },
                "config": {
                  "description": "Configuration pertaining to the meeting space.",
                  "type": "object",
                  "reference": "google.apps.meet_v2beta.types.SpaceConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "access_type": {
                        "description": "Access type of the meeting space that determines who can join without knocking. Default: The user's default access settings. Controlled by the user's admin for enterprise users or RESTRICTED.",
                        "type": "object",
                        "reference": "google.apps.meet_v2beta.types.SpaceConfig.AccessType"
                      },
                      "entry_point_access": {
                        "description": "Defines the entry points that can be used to join meetings hosted in this meeting space. Default: EntryPointAccess.ALL",
                        "type": "object",
                        "reference": "google.apps.meet_v2beta.types.SpaceConfig.EntryPointAccess"
                      }
                    }
                  }
                },
                "active_conference": {
                  "description": "Active conference if it exists.",
                  "type": "object",
                  "reference": "google.apps.meet_v2beta.types.ActiveConference",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "conference_record": {
                        "description": "Output only. Reference to 'ConferenceRecord' resource. Format: ``conferenceRecords/{conference_record}`` where ``{conference_record}`` is a unique id for each instance of a call within a space.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "Required. The updated field paths, comma separated if there are multiple.  You can update the following fields for a space:  ``space_details``: Updates the space's description. Supports up to 150 characters.  ``display_name``: Only supports updating the display name for spaces where ``spaceType`` field is ``SPACE``. If you receive the error message ``ALREADY_EXISTS``, try a different value. An existing space within the Google Workspace organization might already use this display name.  ``space_type``: Only supports changing a ``GROUP_CHAT`` space type to ``SPACE``. Include ``display_name`` together with ``space_type`` in the update mask and ensure that the specified space has a non-empty display name and the ``SPACE`` space type. Including the ``space_type`` mask and the ``SPACE`` type in the specified space when updating the display name is optional if the existing space already has the ``SPACE`` type. Trying to update the space type in other ways results in an invalid argument error. ``space_type`` is not supported with ``useAdminAccess``.  ``space_history_state``: Updates `space history settings <https://support.google.com/chat/answer/7664687>`__ by turning history on or off for the space. Only supported if history settings are enabled for the Google Workspace organization. To update the space history state, you must omit all other field masks in your request. ``space_history_state`` is not supported with ``useAdminAccess``.  ``access_settings.audience``: Updates the `access setting <https://support.google.com/chat/answer/11971020>`__ of who can discover the space, join the space, and preview the messages in named space where ``spaceType`` field is ``SPACE``. If the existing space has a target audience, you can remove the audience and restrict space access by omitting a value for this field mask. To update access settings for a space, the authenticating user must be a space manager and omit all other field masks in your request. You can't update this field if the space is in `import mode <https://developers.google.com/workspace/chat/import-data-overview>`__. To learn more, see `Make a space discoverable to specific users <https://developers.google.com/workspace/chat/space-target-audience>`__. ``access_settings.audience`` is not supported with ``useAdminAccess``.  ``permission_settings``: Supports changing the `permission settings <https://support.google.com/chat/answer/13340792>`__ of a space. When updating permission settings, you can only specify ``permissionSettings`` field masks; you cannot update other field masks at the same time. ``permissionSettings`` is not supported with ``useAdminAccess``. The supported field masks include:  -  ``permission_settings.manageMembersAndGroups`` -  ``permission_settings.modifySpaceDetails`` -  ``permission_settings.toggleHistory`` -  ``permission_settings.useAtMentionAll`` -  ``permission_settings.manageApps`` -  ``permission_settings.manageWebhooks`` -  ``permission_settings.replyMessages``",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "use_admin_access": {
            "description": "When ``true``, the method runs using the user's Google Workspace administrator privileges.  The calling user must be a Google Workspace administrator with the `manage chat and spaces conversations privilege <https://support.google.com/a/answer/13369245>`__.  Requires the ``chat.admin.spaces`` `OAuth 2.0 scope <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.  Some ``FieldMask`` values are not supported using admin access. For details, see the description of ``update_mask``.",
            "type": "boolean"
          }
        },
        "required": [
          "space",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "SearchSpacesRequest",
      "description": "Request to search for a list of spaces based on a query.\n\nAttributes:\n    use_admin_access (bool):\n        When ``true``, the method runs using the user's Google\n        Workspace administrator privileges.\n\n        The calling user must be a Google Workspace administrator\n        with the `manage chat and spaces conversations\n        privilege <https://support.google.com/a/answer/13369245>`__.\n\n        Requires either the ``chat.admin.spaces.readonly`` or\n        ``chat.admin.spaces`` `OAuth 2.0\n        scope <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.\n\n        This method currently only supports admin access, thus only\n        ``true`` is accepted for this field.\n    page_size (int):\n        The maximum number of spaces to return. The\n        service may return fewer than this value.\n\n        If unspecified, at most 100 spaces are returned.\n\n        The maximum value is 1000. If you use a value\n        more than 1000, it's automatically changed to\n        1000.\n ",
      "parameters": {
        "type": "object",
        "properties": {
          "use_admin_access": {
            "description": "When ``true``, the method runs using the user's Google Workspace administrator privileges.  The calling user must be a Google Workspace administrator with the `manage chat and spaces conversations privilege <https://support.google.com/a/answer/13369245>`__.  Requires either the ``chat.admin.spaces.readonly`` or ``chat.admin.spaces`` `OAuth 2.0 scope <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.  This method currently only supports admin access, thus only ``true`` is accepted for this field.",
            "type": "boolean",
            "output_only": true
          },
          "page_size": {
            "description": "The maximum number of spaces to return. The service may return fewer than this value.  If unspecified, at most 100 spaces are returned.  The maximum value is 1000. If you use a value more than 1000, it's automatically changed to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A token, received from the previous search spaces call. Provide this parameter to retrieve the subsequent page.  When paginating, all other parameters provided should match the call that provided the page token. Passing different values to the other parameters might lead to unexpected results.",
            "type": "string"
          },
          "query": {
            "description": "Required. A search query.  You can search by using the following parameters:  -  ``create_time`` -  ``customer`` -  ``display_name`` -  ``external_user_allowed`` -  ``last_active_time`` -  ``space_history_state`` -  ``space_type``  ``create_time`` and ``last_active_time`` accept a timestamp in `RFC-3339 <https://www.rfc-editor.org/rfc/rfc3339>`__ format and the supported comparison operators are: ``=``, ``<``, ``>``, ``<=``, ``>=``.  ``customer`` is required and is used to indicate which customer to fetch spaces from. ``customers/my_customer`` is the only supported value.  ``display_name`` only accepts the ``HAS`` (``:``) operator. The text to match is first tokenized into tokens and each token is prefix-matched case-insensitively and independently as a substring anywhere in the space's ``display_name``. For example, ``Fun Eve`` matches ``Fun event`` or ``The evening was fun``, but not ``notFun event`` or ``even``.  ``external_user_allowed`` accepts either ``true`` or ``false``.  ``space_history_state`` only accepts values from the [``historyState``] (https://developers.google.com/workspace/chat/api/reference/rest/v1/spaces#Space.HistoryState) field of a ``space`` resource.  ``space_type`` is required and the only valid value is ``SPACE``.  Across different fields, only ``AND`` operators are supported. A valid example is ``space_type = \"SPACE\" AND display_name:\"Hello\"`` and an invalid example is ``space_type = \"SPACE\" OR display_name:\"Hello\"``.  Among the same field, ``space_type`` doesn't support ``AND`` or ``OR`` operators. ``display_name``, 'space_history_state', and 'external_user_allowed' only support ``OR`` operators. ``last_active_time`` and ``create_time`` support both ``AND`` and ``OR`` operators. ``AND`` can only be used to represent an interval, such as ``last_active_time < \"2022-01-01T00:00:00+00:00\" AND last_active_time > \"2023-01-01T00:00:00+00:00\"``.  The following example queries are valid:  ::  customer = \"customers/my_customer\" AND space_type = \"SPACE\"  customer = \"customers/my_customer\" AND space_type = \"SPACE\" AND display_name:\"Hello World\"  customer = \"customers/my_customer\" AND space_type = \"SPACE\" AND (last_active_time < \"2020-01-01T00:00:00+00:00\" OR last_active_time > \"2022-01-01T00:00:00+00:00\")  customer = \"customers/my_customer\" AND space_type = \"SPACE\" AND (display_name:\"Hello World\" OR display_name:\"Fun event\") AND (last_active_time > \"2020-01-01T00:00:00+00:00\" AND last_active_time < \"2022-01-01T00:00:00+00:00\")  customer = \"customers/my_customer\" AND space_type = \"SPACE\" AND (create_time > \"2019-01-01T00:00:00+00:00\" AND create_time < \"2020-01-01T00:00:00+00:00\") AND (external_user_allowed = \"true\") AND (space_history_state = \"HISTORY_ON\" OR space_history_state = \"HISTORY_OFF\")",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. How the list of spaces is ordered.  Supported attributes to order by are:  -  ``membership_count.joined_direct_human_user_count`` \u2014 Denotes the count of human users that have directly joined a space. -  ``last_active_time`` \u2014 Denotes the time when last eligible item is added to any topic of this space. -  ``create_time`` \u2014 Denotes the time of the space creation.  Valid ordering operation values are:  -  ``ASC`` for ascending. Default value.  -  ``DESC`` for descending.  The supported syntax are:  -  ``membership_count.joined_direct_human_user_count DESC`` -  ``membership_count.joined_direct_human_user_count ASC`` -  ``last_active_time DESC`` -  ``last_active_time ASC`` -  ``create_time DESC`` -  ``create_time ASC``",
            "type": "string"
          }
        },
        "required": [
          "query"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteSpaceRequest",
      "description": "Request for deleting a space.\n\nAttributes:\n    name (str):\n        Required. Resource name of the space to delete.\n\n        Format: ``spaces/{space}``\n    use_admin_access (bool):\n        When ``true``, the method runs using the user's Google\n        Workspace administrator privileges.\n\n        The calling user must be a Google Workspace administrator\n        with the `manage chat and spaces conversations\n        privilege <https://support.google.com/a/answer/13369245>`__.\n\n        Requires the ``chat.admin.delete`` `OAuth 2.0\n        scope <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the space to delete.  Format: ``spaces/{space}``",
            "type": "string"
          },
          "use_admin_access": {
            "description": "When ``true``, the method runs using the user's Google Workspace administrator privileges.  The calling user must be a Google Workspace administrator with the `manage chat and spaces conversations privilege <https://support.google.com/a/answer/13369245>`__.  Requires the ``chat.admin.delete`` `OAuth 2.0 scope <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CompleteImportSpaceRequest",
      "description": "Request message for completing the import process for a\nspace.\n\nAttributes:\n    name (str):\n        Required. Resource name of the import mode space.\n\n        Format: ``spaces/{space}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the import mode space.  Format: ``spaces/{space}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-apps-chat/google/apps/chat_v1/types/membership.py": [
    {
      "type": "function",
      "name": "CreateMembershipRequest",
      "description": "Request message for creating a membership.\n\nAttributes:\n    parent (str):\n        Required. The resource name of the space for\n        which to create the membership.\n\n        Format: spaces/{space}\n    membership (google.apps.chat_v1.types.Membership):\n        Required. The membership relation to create. The\n        ``memberType`` field must contain a user with the\n        ``user.name`` and ``user.type`` fields populated. The server\n        will assign a resource name and overwrite anything\n        specified. When a Chat app creates a membership relation for\n        a human user, it must use the ``chat.memberships`` scope,\n        set ``user.type`` to ``HUMAN``, and set ``user.name`` with\n        format ``users/{user}``, where ``{user}`` can be the email\n        address for the user. For users in the same Workspace\n        organization ``{user}`` can also be the ``id`` of the\n        `person <https://developers.google.com/people/api/rest/v1/people>`__\n        from the People API, or the ``id`` for the user i",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the space for which to create the membership.  Format: spaces/{space}",
            "type": "string"
          },
          "membership": {
            "description": "Required. The membership relation to create. The ``memberType`` field must contain a user with the ``user.name`` and ``user.type`` fields populated. The server will assign a resource name and overwrite anything specified. When a Chat app creates a membership relation for a human user, it must use the ``chat.memberships`` scope, set ``user.type`` to ``HUMAN``, and set ``user.name`` with format ``users/{user}``, where ``{user}`` can be the email address for the user. For users in the same Workspace organization ``{user}`` can also be the ``id`` of the `person <https://developers.google.com/people/api/rest/v1/people>`__ from the People API, or the ``id`` for the user in the Directory API. For example, if the People API Person profile ID for ``user@example.com`` is ``123456789``, you can add the user to the space by setting the ``membership.member.name`` to ``users/user@example.com`` or ``users/123456789``. When a Chat app creates a membership relation for itself, it must use the ``chat.memberships.app`` scope, set ``user.type`` to ``BOT``, and set ``user.name`` to ``users/app``.",
            "reference": "google.apps.chat_v1.types.Membership",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "description": "Optional. Endpoint information to reach this member.  This field is a member of `oneof`_ ``type``.",
                  "type": "object",
                  "reference": "google.cloud.gkehub_v1.types.MembershipEndpoint",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "gke_cluster": {
                        "description": "Optional. GKE-specific information. Only present if this Membership is a GKE cluster.",
                        "type": "object",
                        "reference": "google.cloud.gkehub_v1.types.GkeCluster",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "cluster": {
                              "description": "Optional. Information specifying a GKE Cluster. Format is ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}``.",
                              "type": "string"
                            },
                            "internal_ip": {
                              "description": "Optional. If true, ``cluster`` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise.  Only specify this option when ``cluster`` is a `private GKE cluster <https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept>`__.",
                              "type": "boolean"
                            },
                            "proxy_url": {
                              "description": "Optional. If set, used to configure a `proxy <https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#proxy>`__ to the Kubernetes server.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "kubernetes_metadata": {
                        "description": "Output only. Useful Kubernetes-specific metadata.",
                        "type": "object",
                        "reference": "google.cloud.gkehub_v1.types.KubernetesMetadata",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "kubernetes_api_server_version": {
                              "description": "Output only. Kubernetes API server version string as reported by ``/version``.",
                              "type": "string",
                              "output_only": true
                            },
                            "node_provider_id": {
                              "description": "Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.",
                              "type": "string",
                              "output_only": true
                            },
                            "node_count": {
                              "description": "Output only. Node count as reported by Kubernetes nodes resources.",
                              "type": "integer",
                              "output_only": true
                            },
                            "vcpu_count": {
                              "description": "Output only. vCPU count as reported by Kubernetes nodes resources.",
                              "type": "integer",
                              "output_only": true
                            },
                            "memory_mb": {
                              "description": "Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.",
                              "type": "integer",
                              "output_only": true
                            },
                            "update_time": {
                              "description": "Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp",
                              "output_only": true
                            }
                          }
                        }
                      },
                      "kubernetes_resource": {
                        "description": "Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources:  -  Ensure that the cluster is exclusively registered to one and only one Hub Membership. -  Propagate Workload Pool Information available in the Membership Authority field. -  Ensure proper initial configuration of default Hub Features.",
                        "type": "object",
                        "reference": "google.cloud.gkehub_v1.types.KubernetesResource",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "membership_cr_manifest": {
                              "description": "Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly.  Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.",
                              "type": "string"
                            },
                            "membership_resources": {
                              "description": "Output only. Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update.  This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.gkehub_v1.types.ResourceManifest",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "manifest": {
                                      "description": "YAML manifest of the resource.",
                                      "type": "string"
                                    },
                                    "cluster_scoped": {
                                      "description": "Whether the resource provided in the manifest is ``cluster_scoped``. If unset, the manifest is assumed to be namespace scoped.  This field is used for REST mapping when applying the resource in a cluster.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "output_only": true
                            },
                            "connect_resources": {
                              "description": "Output only. The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.gkehub_v1.types.ResourceManifest",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "manifest": {
                                      "description": "YAML manifest of the resource.",
                                      "type": "string"
                                    },
                                    "cluster_scoped": {
                                      "description": "Whether the resource provided in the manifest is ``cluster_scoped``. If unset, the manifest is assumed to be namespace scoped.  This field is used for REST mapping when applying the resource in a cluster.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "output_only": true
                            },
                            "resource_options": {
                              "description": "Optional. Options for Kubernetes resource generation.",
                              "type": "object",
                              "reference": "google.cloud.gkehub_v1.types.ResourceOptions",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "connect_version": {
                                    "description": "Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.",
                                    "type": "string"
                                  },
                                  "v1beta1_crd": {
                                    "description": "Optional. Use ``apiextensions/v1beta1`` instead of ``apiextensions/v1`` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.",
                                    "type": "boolean"
                                  },
                                  "k8s_version": {
                                    "description": "Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, ``apiextensions/v1beta1`` or\\ ``apiextensions/v1``.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "google_managed": {
                        "description": "Output only. Whether the lifecycle of this membership is managed by a google cluster platform service.",
                        "type": "boolean",
                        "output_only": true
                      }
                    }
                  }
                },
                "name": {
                  "description": "Output only. The full, unique name of this Membership resource in the format ``projects/*/locations/*/memberships/{membership_id}``, set during creation.  ``membership_id`` must be a valid RFC 1123 compliant DNS label:  1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or ``-`` 3. It must start and end with an alphanumeric character  Which can be expressed as the regex: ``[a-z0-9]([-a-z0-9]*[a-z0-9])?``, with a maximum length of 63 characters.",
                  "type": "string",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Labels for this membership.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "description": {
                  "description": "Output only. Description of this membership, limited to 63 characters. Must match the regex: ``[a-zA-Z0-9][a-zA-Z0-9_\\-\\.\\ ]*``  This field is present for legacy purposes.",
                  "type": "string",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. State of the Membership resource.",
                  "type": "object",
                  "reference": "google.cloud.gkehub_v1.types.MembershipState",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "cluster_name": {
                        "description": "This field is set to the ``cluster_name`` field of the Membership Spec if it is not empty. Otherwise, it is set to the cluster's fleet membership name.",
                        "type": "string"
                      },
                      "membership_spec": {
                        "description": "Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state",
                        "type": "object",
                        "reference": "google.cloud.gkehub.configmanagement_v1.types.MembershipSpec",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "config_sync": {
                              "description": "Config Sync configuration for the cluster.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSync",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "git": {
                                    "description": "Git repo configuration for the cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.GitConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "sync_repo": {
                                          "description": "The URL of the Git repository to use as the source of truth.",
                                          "type": "string"
                                        },
                                        "sync_branch": {
                                          "description": "The branch of the repository to sync from. Default: master.",
                                          "type": "string"
                                        },
                                        "policy_dir": {
                                          "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.",
                                          "type": "string"
                                        },
                                        "sync_wait_secs": {
                                          "description": "Period in seconds between consecutive syncs. Default: 15.",
                                          "type": "integer"
                                        },
                                        "sync_rev": {
                                          "description": "Git revision (tag or hash) to check out. Default HEAD.",
                                          "type": "string"
                                        },
                                        "secret_type": {
                                          "description": "Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.",
                                          "type": "string"
                                        },
                                        "https_proxy": {
                                          "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
                                          "type": "string"
                                        },
                                        "gcp_service_account_email": {
                                          "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "source_format": {
                                    "description": "Specifies whether the Config Sync Repo is in \"hierarchical\" or \"unstructured\" mode.",
                                    "type": "string"
                                  },
                                  "enabled": {
                                    "description": "Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of the git or oci field.  This field is a member of `oneof`_ ``_enabled``.",
                                    "type": "boolean"
                                  },
                                  "prevent_drift": {
                                    "description": "Set to true to enable the Config Sync admission webhook to prevent drifts. If set to ``false``, disables the Config Sync admission webhook and does not prevent drifts.",
                                    "type": "boolean"
                                  },
                                  "oci": {
                                    "description": "OCI repo configuration for the cluster",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.OciConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "sync_repo": {
                                          "description": "The OCI image repository URL for the package to sync from. e.g. ``LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME``.",
                                          "type": "string"
                                        },
                                        "policy_dir": {
                                          "description": "The absolute path of the directory that contains the local resources.  Default: the root directory of the image.",
                                          "type": "string"
                                        },
                                        "sync_wait_secs": {
                                          "description": "Period in seconds between consecutive syncs. Default: 15.",
                                          "type": "integer"
                                        },
                                        "secret_type": {
                                          "description": "Type of secret configured for access to the Git repo.",
                                          "type": "string"
                                        },
                                        "gcp_service_account_email": {
                                          "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "metrics_gcp_service_account_email": {
                                    "description": "The Email of the Google Cloud Service Account (GSA) used for exporting Config Sync metrics to Cloud Monitoring when Workload Identity is enabled. The GSA should have the Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role. The Kubernetes ServiceAccount ``default`` in the namespace ``config-management-monitoring`` should be bound to the GSA.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "policy_controller": {
                              "description": "Policy Controller configuration for the cluster.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.PolicyController",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.",
                                    "type": "boolean"
                                  },
                                  "template_library_installed": {
                                    "description": "Installs the default template library along with Policy Controller.  This field is a member of `oneof`_ ``_template_library_installed``.",
                                    "type": "boolean"
                                  },
                                  "audit_interval_seconds": {
                                    "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.  This field is a member of `oneof`_ ``_audit_interval_seconds``.",
                                    "type": "integer"
                                  },
                                  "exemptable_namespaces": {
                                    "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "referential_rules_enabled": {
                                    "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
                                    "type": "boolean"
                                  },
                                  "log_denies_enabled": {
                                    "description": "Logs all denies and dry run failures.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "hierarchy_controller": {
                              "description": "Hierarchy Controller configuration for the cluster.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "Whether Hierarchy Controller is enabled in this cluster.",
                                    "type": "boolean"
                                  },
                                  "enable_pod_tree_labels": {
                                    "description": "Whether pod tree labels are enabled in this cluster.",
                                    "type": "boolean"
                                  },
                                  "enable_hierarchical_resource_quota": {
                                    "description": "Whether hierarchical resource quota is enabled in this cluster.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "version": {
                              "description": "Version of ACM installed.",
                              "type": "string"
                            },
                            "cluster": {
                              "description": "The user-specified cluster name used by Config Sync cluster-name-selector annotation or ClusterSelector, for applying configs to only a subset of clusters. Omit this field if the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector. Set this field if a name different from the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector.",
                              "type": "string"
                            },
                            "management": {
                              "description": "Enables automatic Feature management.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.MembershipSpec.Management"
                            }
                          }
                        }
                      },
                      "operator_state": {
                        "description": "Current install status of ACM's Operator",
                        "type": "object",
                        "reference": "google.cloud.gkehub.configmanagement_v1.types.OperatorState",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "description": "The semenatic version number of the operator",
                              "type": "string"
                            },
                            "deployment_state": {
                              "description": "The state of the Operator's deployment",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                            },
                            "errors": {
                              "description": "Install errors.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.InstallError",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "error_message": {
                                      "description": "A string representing the user facing error message",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "config_sync_state": {
                        "description": "Current sync status",
                        "type": "object",
                        "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "description": "The version of ConfigSync deployed",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncVersion",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "importer": {
                                    "description": "Version of the deployed importer pod",
                                    "type": "string"
                                  },
                                  "syncer": {
                                    "description": "Version of the deployed syncer pod",
                                    "type": "string"
                                  },
                                  "git_sync": {
                                    "description": "Version of the deployed git-sync pod",
                                    "type": "string"
                                  },
                                  "monitor": {
                                    "description": "Version of the deployed monitor pod",
                                    "type": "string"
                                  },
                                  "reconciler_manager": {
                                    "description": "Version of the deployed reconciler-manager pod",
                                    "type": "string"
                                  },
                                  "root_reconciler": {
                                    "description": "Version of the deployed reconciler container in root-reconciler pod",
                                    "type": "string"
                                  },
                                  "admission_webhook": {
                                    "description": "Version of the deployed admission_webhook pod",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "deployment_state": {
                              "description": "Information about the deployment of ConfigSync, including the version of the various Pods deployed",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncDeploymentState",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "importer": {
                                    "description": "Deployment state of the importer pod",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "syncer": {
                                    "description": "Deployment state of the syncer pod",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "git_sync": {
                                    "description": "Deployment state of the git-sync pod",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "monitor": {
                                    "description": "Deployment state of the monitor pod",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "reconciler_manager": {
                                    "description": "Deployment state of reconciler-manager pod",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "root_reconciler": {
                                    "description": "Deployment state of root-reconciler",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "admission_webhook": {
                                    "description": "Deployment state of admission-webhook",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  }
                                }
                              }
                            },
                            "sync_state": {
                              "description": "The state of ConfigSync's process to sync configs to a cluster",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncState",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "source_token": {
                                    "description": "Token indicating the state of the repo.",
                                    "type": "string"
                                  },
                                  "import_token": {
                                    "description": "Token indicating the state of the importer.",
                                    "type": "string"
                                  },
                                  "sync_token": {
                                    "description": "Token indicating the state of the syncer.",
                                    "type": "string"
                                  },
                                  "last_sync": {
                                    "description": "Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String",
                                    "type": "string"
                                  },
                                  "last_sync_time": {
                                    "description": "Timestamp type of when ACM last successfully synced the repo",
                                    "type": "object",
                                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                                  },
                                  "code": {
                                    "description": "Sync status code",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncState.SyncCode"
                                  },
                                  "errors": {
                                    "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncError",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "description": "An ACM defined error code",
                                            "type": "string"
                                          },
                                          "error_message": {
                                            "description": "A description of the error",
                                            "type": "string"
                                          },
                                          "error_resources": {
                                            "description": "A list of config(s) associated with the error, if any",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ErrorResource",
                                              "resolved_schema": {
                                                "type": "object",
                                                "properties": {
                                                  "source_path": {
                                                    "description": "Path in the git repo of the erroneous config",
                                                    "type": "string"
                                                  },
                                                  "resource_name": {
                                                    "description": "Metadata name of the resource that is causing an error",
                                                    "type": "string"
                                                  },
                                                  "resource_namespace": {
                                                    "description": "Namespace of the resource that is causing an error",
                                                    "type": "string"
                                                  },
                                                  "resource_gvk": {
                                                    "description": "Group/version/kind of the resource that is causing an error",
                                                    "type": "object",
                                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.GroupVersionKind",
                                                    "resolved_schema": {
                                                      "type": "object",
                                                      "properties": {
                                                        "group": {
                                                          "description": "Kubernetes Group",
                                                          "type": "string"
                                                        },
                                                        "version": {
                                                          "description": "Kubernetes Version",
                                                          "type": "string"
                                                        },
                                                        "kind": {
                                                          "description": "Kubernetes Kind",
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "errors": {
                              "description": "Errors pertaining to the installation of Config Sync.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncError",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "error_message": {
                                      "description": "A string representing the user facing error message",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "rootsync_crd": {
                              "description": "The state of the RootSync CRD",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState"
                            },
                            "reposync_crd": {
                              "description": "The state of the Reposync CRD",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState"
                            },
                            "state": {
                              "description": "The state of CS This field summarizes the other fields in this message.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.State"
                            }
                          }
                        }
                      },
                      "policy_controller_state": {
                        "description": "PolicyController status",
                        "type": "object",
                        "reference": "google.cloud.gkehub.configmanagement_v1.types.PolicyControllerState",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "description": "The version of Gatekeeper Policy Controller deployed.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.PolicyControllerVersion",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "deployment_state": {
                              "description": "The state about the policy controller installation.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.GatekeeperDeploymentState",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "gatekeeper_controller_manager_state": {
                                    "description": "Status of gatekeeper-controller-manager pod.",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "gatekeeper_audit": {
                                    "description": "Status of gatekeeper-audit deployment.",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "hierarchy_controller_state": {
                        "description": "Hierarchy Controller status",
                        "type": "object",
                        "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerState",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "description": "The version for Hierarchy Controller",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerVersion",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "hnc": {
                                    "description": "Version for open source HNC",
                                    "type": "string"
                                  },
                                  "extension": {
                                    "description": "Version for Hierarchy Controller extension",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "state": {
                              "description": "The deployment state for Hierarchy Controller",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerDeploymentState",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "hnc": {
                                    "description": "The deployment state for open source HNC (e.g. v0.7.0-hc.0)",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "extension": {
                                    "description": "The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "create_time": {
                  "description": "Output only. When the Membership was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. When the Membership was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "delete_time": {
                  "description": "Output only. When the Membership was deleted.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "external_id": {
                  "description": "Optional. An externally-generated and managed ID for this Membership. This ID may be modified after creation, but this is not recommended.  The ID must match the regex: ``[a-zA-Z0-9][a-zA-Z0-9_\\-\\.]*``  If this Membership represents a Kubernetes cluster, this value should be set to the UID of the ``kube-system`` namespace object.",
                  "type": "string"
                },
                "last_connection_time": {
                  "description": "Output only. For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "unique_id": {
                  "description": "Output only. Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.",
                  "type": "string",
                  "output_only": true
                },
                "authority": {
                  "description": "Optional. How to identify workloads from this Membership. See the documentation on Workload Identity for more details:  https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
                  "type": "object",
                  "reference": "google.cloud.gkehub_v1.types.Authority",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "issuer": {
                        "description": "Optional. A JSON Web Token (JWT) issuer URI. ``issuer`` must start with ``https://`` and be a valid URL with length <2000 characters.  If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer.  Clearing ``issuer`` disables Workload Identity. ``issuer`` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).",
                        "type": "string"
                      },
                      "workload_identity_pool": {
                        "description": "Output only. The name of the workload identity pool in which ``issuer`` will be recognized.  There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is ``{PROJECT_ID}.hub.id.goog``, although this is subject to change in newer versions of this API.",
                        "type": "string",
                        "output_only": true
                      },
                      "identity_provider": {
                        "description": "Output only. An identity provider that reflects the ``issuer`` in the workload identity pool.",
                        "type": "string",
                        "output_only": true
                      },
                      "oidc_jwks": {
                        "description": "Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517).  When this field is set, OIDC discovery will NOT be performed on ``issuer``, and instead OIDC tokens will be validated using this field.",
                        "type": "object",
                        "reference": "bytes"
                      }
                    }
                  }
                },
                "monitoring_config": {
                  "description": "Optional. The monitoring config information for this membership.",
                  "type": "object",
                  "reference": "google.cloud.gkehub_v1.types.MonitoringConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "component_config": {
                        "description": "Monitoring components configuration",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.MonitoringComponentConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enable_components": {
                              "description": "Select components to collect metrics. An empty set would disable all monitoring.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.MonitoringComponentConfig.Component"
                              }
                            }
                          }
                        }
                      },
                      "managed_prometheus_config": {
                        "description": "Enable Google Cloud Managed Service for Prometheus in the cluster.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ManagedPrometheusConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Enable Managed Collection.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "advanced_datapath_observability_config": {
                        "description": "Configuration of Advanced Datapath Observability features.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.AdvancedDatapathObservabilityConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enable_metrics": {
                              "description": "Expose flow metrics on nodes",
                              "type": "boolean"
                            },
                            "relay_mode": {
                              "description": "Method used to make Relay available",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.AdvancedDatapathObservabilityConfig.RelayMode"
                            },
                            "enable_relay": {
                              "description": "Enable Relay component  This field is a member of `oneof`_ ``_enable_relay``.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "use_admin_access": {
            "description": "When ``true``, the method runs using the user's Google Workspace administrator privileges.  The calling user must be a Google Workspace administrator with the `manage chat and spaces conversations privilege <https://support.google.com/a/answer/13369245>`__.  Requires the ``chat.admin.memberships`` `OAuth 2.0 scope <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.  Creating app memberships or creating memberships for users outside the administrator's Google Workspace organization isn't supported using admin access.",
            "type": "boolean"
          }
        },
        "required": [
          "parent",
          "membership"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateMembershipRequest",
      "description": "Request message for updating a membership.\n\nAttributes:\n    membership (google.apps.chat_v1.types.Membership):\n        Required. The membership to update. Only fields specified by\n        ``update_mask`` are updated.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The field paths to update. Separate multiple\n        values with commas or use ``*`` to update all field paths.\n\n        Currently supported field paths:\n\n        -  ``role``\n    use_admin_access (bool):\n        When ``true``, the method runs using the user's Google\n        Workspace administrator privileges.\n\n        The calling user must be a Google Workspace administrator\n        with the `manage chat and spaces conversations\n        privilege <https://support.google.com/a/answer/13369245>`__.\n\n        Requires the ``chat.admin.memberships`` `OAuth 2.0\n        scope <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.",
      "parameters": {
        "type": "object",
        "properties": {
          "membership": {
            "description": "Required. The membership to update. Only fields specified by ``update_mask`` are updated.",
            "reference": "google.apps.chat_v1.types.Membership",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "description": "Optional. Endpoint information to reach this member.  This field is a member of `oneof`_ ``type``.",
                  "type": "object",
                  "reference": "google.cloud.gkehub_v1.types.MembershipEndpoint",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "gke_cluster": {
                        "description": "Optional. GKE-specific information. Only present if this Membership is a GKE cluster.",
                        "type": "object",
                        "reference": "google.cloud.gkehub_v1.types.GkeCluster",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "cluster": {
                              "description": "Optional. Information specifying a GKE Cluster. Format is ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}``.",
                              "type": "string"
                            },
                            "internal_ip": {
                              "description": "Optional. If true, ``cluster`` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise.  Only specify this option when ``cluster`` is a `private GKE cluster <https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept>`__.",
                              "type": "boolean"
                            },
                            "proxy_url": {
                              "description": "Optional. If set, used to configure a `proxy <https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#proxy>`__ to the Kubernetes server.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "kubernetes_metadata": {
                        "description": "Output only. Useful Kubernetes-specific metadata.",
                        "type": "object",
                        "reference": "google.cloud.gkehub_v1.types.KubernetesMetadata",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "kubernetes_api_server_version": {
                              "description": "Output only. Kubernetes API server version string as reported by ``/version``.",
                              "type": "string",
                              "output_only": true
                            },
                            "node_provider_id": {
                              "description": "Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.",
                              "type": "string",
                              "output_only": true
                            },
                            "node_count": {
                              "description": "Output only. Node count as reported by Kubernetes nodes resources.",
                              "type": "integer",
                              "output_only": true
                            },
                            "vcpu_count": {
                              "description": "Output only. vCPU count as reported by Kubernetes nodes resources.",
                              "type": "integer",
                              "output_only": true
                            },
                            "memory_mb": {
                              "description": "Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.",
                              "type": "integer",
                              "output_only": true
                            },
                            "update_time": {
                              "description": "Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp",
                              "output_only": true
                            }
                          }
                        }
                      },
                      "kubernetes_resource": {
                        "description": "Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources:  -  Ensure that the cluster is exclusively registered to one and only one Hub Membership. -  Propagate Workload Pool Information available in the Membership Authority field. -  Ensure proper initial configuration of default Hub Features.",
                        "type": "object",
                        "reference": "google.cloud.gkehub_v1.types.KubernetesResource",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "membership_cr_manifest": {
                              "description": "Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly.  Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.",
                              "type": "string"
                            },
                            "membership_resources": {
                              "description": "Output only. Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update.  This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.gkehub_v1.types.ResourceManifest",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "manifest": {
                                      "description": "YAML manifest of the resource.",
                                      "type": "string"
                                    },
                                    "cluster_scoped": {
                                      "description": "Whether the resource provided in the manifest is ``cluster_scoped``. If unset, the manifest is assumed to be namespace scoped.  This field is used for REST mapping when applying the resource in a cluster.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "output_only": true
                            },
                            "connect_resources": {
                              "description": "Output only. The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.gkehub_v1.types.ResourceManifest",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "manifest": {
                                      "description": "YAML manifest of the resource.",
                                      "type": "string"
                                    },
                                    "cluster_scoped": {
                                      "description": "Whether the resource provided in the manifest is ``cluster_scoped``. If unset, the manifest is assumed to be namespace scoped.  This field is used for REST mapping when applying the resource in a cluster.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "output_only": true
                            },
                            "resource_options": {
                              "description": "Optional. Options for Kubernetes resource generation.",
                              "type": "object",
                              "reference": "google.cloud.gkehub_v1.types.ResourceOptions",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "connect_version": {
                                    "description": "Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.",
                                    "type": "string"
                                  },
                                  "v1beta1_crd": {
                                    "description": "Optional. Use ``apiextensions/v1beta1`` instead of ``apiextensions/v1`` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.",
                                    "type": "boolean"
                                  },
                                  "k8s_version": {
                                    "description": "Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, ``apiextensions/v1beta1`` or\\ ``apiextensions/v1``.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "google_managed": {
                        "description": "Output only. Whether the lifecycle of this membership is managed by a google cluster platform service.",
                        "type": "boolean",
                        "output_only": true
                      }
                    }
                  }
                },
                "name": {
                  "description": "Output only. The full, unique name of this Membership resource in the format ``projects/*/locations/*/memberships/{membership_id}``, set during creation.  ``membership_id`` must be a valid RFC 1123 compliant DNS label:  1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or ``-`` 3. It must start and end with an alphanumeric character  Which can be expressed as the regex: ``[a-z0-9]([-a-z0-9]*[a-z0-9])?``, with a maximum length of 63 characters.",
                  "type": "string",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Labels for this membership.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "description": {
                  "description": "Output only. Description of this membership, limited to 63 characters. Must match the regex: ``[a-zA-Z0-9][a-zA-Z0-9_\\-\\.\\ ]*``  This field is present for legacy purposes.",
                  "type": "string",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. State of the Membership resource.",
                  "type": "object",
                  "reference": "google.cloud.gkehub_v1.types.MembershipState",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "cluster_name": {
                        "description": "This field is set to the ``cluster_name`` field of the Membership Spec if it is not empty. Otherwise, it is set to the cluster's fleet membership name.",
                        "type": "string"
                      },
                      "membership_spec": {
                        "description": "Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state",
                        "type": "object",
                        "reference": "google.cloud.gkehub.configmanagement_v1.types.MembershipSpec",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "config_sync": {
                              "description": "Config Sync configuration for the cluster.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSync",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "git": {
                                    "description": "Git repo configuration for the cluster.",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.GitConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "sync_repo": {
                                          "description": "The URL of the Git repository to use as the source of truth.",
                                          "type": "string"
                                        },
                                        "sync_branch": {
                                          "description": "The branch of the repository to sync from. Default: master.",
                                          "type": "string"
                                        },
                                        "policy_dir": {
                                          "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.",
                                          "type": "string"
                                        },
                                        "sync_wait_secs": {
                                          "description": "Period in seconds between consecutive syncs. Default: 15.",
                                          "type": "integer"
                                        },
                                        "sync_rev": {
                                          "description": "Git revision (tag or hash) to check out. Default HEAD.",
                                          "type": "string"
                                        },
                                        "secret_type": {
                                          "description": "Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.",
                                          "type": "string"
                                        },
                                        "https_proxy": {
                                          "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
                                          "type": "string"
                                        },
                                        "gcp_service_account_email": {
                                          "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "source_format": {
                                    "description": "Specifies whether the Config Sync Repo is in \"hierarchical\" or \"unstructured\" mode.",
                                    "type": "string"
                                  },
                                  "enabled": {
                                    "description": "Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of the git or oci field.  This field is a member of `oneof`_ ``_enabled``.",
                                    "type": "boolean"
                                  },
                                  "prevent_drift": {
                                    "description": "Set to true to enable the Config Sync admission webhook to prevent drifts. If set to ``false``, disables the Config Sync admission webhook and does not prevent drifts.",
                                    "type": "boolean"
                                  },
                                  "oci": {
                                    "description": "OCI repo configuration for the cluster",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.OciConfig",
                                    "resolved_schema": {
                                      "type": "object",
                                      "properties": {
                                        "sync_repo": {
                                          "description": "The OCI image repository URL for the package to sync from. e.g. ``LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME``.",
                                          "type": "string"
                                        },
                                        "policy_dir": {
                                          "description": "The absolute path of the directory that contains the local resources.  Default: the root directory of the image.",
                                          "type": "string"
                                        },
                                        "sync_wait_secs": {
                                          "description": "Period in seconds between consecutive syncs. Default: 15.",
                                          "type": "integer"
                                        },
                                        "secret_type": {
                                          "description": "Type of secret configured for access to the Git repo.",
                                          "type": "string"
                                        },
                                        "gcp_service_account_email": {
                                          "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "metrics_gcp_service_account_email": {
                                    "description": "The Email of the Google Cloud Service Account (GSA) used for exporting Config Sync metrics to Cloud Monitoring when Workload Identity is enabled. The GSA should have the Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role. The Kubernetes ServiceAccount ``default`` in the namespace ``config-management-monitoring`` should be bound to the GSA.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "policy_controller": {
                              "description": "Policy Controller configuration for the cluster.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.PolicyController",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.",
                                    "type": "boolean"
                                  },
                                  "template_library_installed": {
                                    "description": "Installs the default template library along with Policy Controller.  This field is a member of `oneof`_ ``_template_library_installed``.",
                                    "type": "boolean"
                                  },
                                  "audit_interval_seconds": {
                                    "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.  This field is a member of `oneof`_ ``_audit_interval_seconds``.",
                                    "type": "integer"
                                  },
                                  "exemptable_namespaces": {
                                    "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "referential_rules_enabled": {
                                    "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
                                    "type": "boolean"
                                  },
                                  "log_denies_enabled": {
                                    "description": "Logs all denies and dry run failures.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "hierarchy_controller": {
                              "description": "Hierarchy Controller configuration for the cluster.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerConfig",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "Whether Hierarchy Controller is enabled in this cluster.",
                                    "type": "boolean"
                                  },
                                  "enable_pod_tree_labels": {
                                    "description": "Whether pod tree labels are enabled in this cluster.",
                                    "type": "boolean"
                                  },
                                  "enable_hierarchical_resource_quota": {
                                    "description": "Whether hierarchical resource quota is enabled in this cluster.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "version": {
                              "description": "Version of ACM installed.",
                              "type": "string"
                            },
                            "cluster": {
                              "description": "The user-specified cluster name used by Config Sync cluster-name-selector annotation or ClusterSelector, for applying configs to only a subset of clusters. Omit this field if the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector. Set this field if a name different from the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector.",
                              "type": "string"
                            },
                            "management": {
                              "description": "Enables automatic Feature management.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.MembershipSpec.Management"
                            }
                          }
                        }
                      },
                      "operator_state": {
                        "description": "Current install status of ACM's Operator",
                        "type": "object",
                        "reference": "google.cloud.gkehub.configmanagement_v1.types.OperatorState",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "description": "The semenatic version number of the operator",
                              "type": "string"
                            },
                            "deployment_state": {
                              "description": "The state of the Operator's deployment",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                            },
                            "errors": {
                              "description": "Install errors.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.InstallError",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "error_message": {
                                      "description": "A string representing the user facing error message",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "config_sync_state": {
                        "description": "Current sync status",
                        "type": "object",
                        "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "description": "The version of ConfigSync deployed",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncVersion",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "importer": {
                                    "description": "Version of the deployed importer pod",
                                    "type": "string"
                                  },
                                  "syncer": {
                                    "description": "Version of the deployed syncer pod",
                                    "type": "string"
                                  },
                                  "git_sync": {
                                    "description": "Version of the deployed git-sync pod",
                                    "type": "string"
                                  },
                                  "monitor": {
                                    "description": "Version of the deployed monitor pod",
                                    "type": "string"
                                  },
                                  "reconciler_manager": {
                                    "description": "Version of the deployed reconciler-manager pod",
                                    "type": "string"
                                  },
                                  "root_reconciler": {
                                    "description": "Version of the deployed reconciler container in root-reconciler pod",
                                    "type": "string"
                                  },
                                  "admission_webhook": {
                                    "description": "Version of the deployed admission_webhook pod",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "deployment_state": {
                              "description": "Information about the deployment of ConfigSync, including the version of the various Pods deployed",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncDeploymentState",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "importer": {
                                    "description": "Deployment state of the importer pod",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "syncer": {
                                    "description": "Deployment state of the syncer pod",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "git_sync": {
                                    "description": "Deployment state of the git-sync pod",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "monitor": {
                                    "description": "Deployment state of the monitor pod",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "reconciler_manager": {
                                    "description": "Deployment state of reconciler-manager pod",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "root_reconciler": {
                                    "description": "Deployment state of root-reconciler",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "admission_webhook": {
                                    "description": "Deployment state of admission-webhook",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  }
                                }
                              }
                            },
                            "sync_state": {
                              "description": "The state of ConfigSync's process to sync configs to a cluster",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncState",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "source_token": {
                                    "description": "Token indicating the state of the repo.",
                                    "type": "string"
                                  },
                                  "import_token": {
                                    "description": "Token indicating the state of the importer.",
                                    "type": "string"
                                  },
                                  "sync_token": {
                                    "description": "Token indicating the state of the syncer.",
                                    "type": "string"
                                  },
                                  "last_sync": {
                                    "description": "Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String",
                                    "type": "string"
                                  },
                                  "last_sync_time": {
                                    "description": "Timestamp type of when ACM last successfully synced the repo",
                                    "type": "object",
                                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                                  },
                                  "code": {
                                    "description": "Sync status code",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncState.SyncCode"
                                  },
                                  "errors": {
                                    "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncError",
                                      "resolved_schema": {
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "description": "An ACM defined error code",
                                            "type": "string"
                                          },
                                          "error_message": {
                                            "description": "A description of the error",
                                            "type": "string"
                                          },
                                          "error_resources": {
                                            "description": "A list of config(s) associated with the error, if any",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ErrorResource",
                                              "resolved_schema": {
                                                "type": "object",
                                                "properties": {
                                                  "source_path": {
                                                    "description": "Path in the git repo of the erroneous config",
                                                    "type": "string"
                                                  },
                                                  "resource_name": {
                                                    "description": "Metadata name of the resource that is causing an error",
                                                    "type": "string"
                                                  },
                                                  "resource_namespace": {
                                                    "description": "Namespace of the resource that is causing an error",
                                                    "type": "string"
                                                  },
                                                  "resource_gvk": {
                                                    "description": "Group/version/kind of the resource that is causing an error",
                                                    "type": "object",
                                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.GroupVersionKind",
                                                    "resolved_schema": {
                                                      "type": "object",
                                                      "properties": {
                                                        "group": {
                                                          "description": "Kubernetes Group",
                                                          "type": "string"
                                                        },
                                                        "version": {
                                                          "description": "Kubernetes Version",
                                                          "type": "string"
                                                        },
                                                        "kind": {
                                                          "description": "Kubernetes Kind",
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "errors": {
                              "description": "Errors pertaining to the installation of Config Sync.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncError",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "error_message": {
                                      "description": "A string representing the user facing error message",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "rootsync_crd": {
                              "description": "The state of the RootSync CRD",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState"
                            },
                            "reposync_crd": {
                              "description": "The state of the Reposync CRD",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState"
                            },
                            "state": {
                              "description": "The state of CS This field summarizes the other fields in this message.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.State"
                            }
                          }
                        }
                      },
                      "policy_controller_state": {
                        "description": "PolicyController status",
                        "type": "object",
                        "reference": "google.cloud.gkehub.configmanagement_v1.types.PolicyControllerState",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "description": "The version of Gatekeeper Policy Controller deployed.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.PolicyControllerVersion",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "deployment_state": {
                              "description": "The state about the policy controller installation.",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.GatekeeperDeploymentState",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "gatekeeper_controller_manager_state": {
                                    "description": "Status of gatekeeper-controller-manager pod.",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "gatekeeper_audit": {
                                    "description": "Status of gatekeeper-audit deployment.",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "hierarchy_controller_state": {
                        "description": "Hierarchy Controller status",
                        "type": "object",
                        "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerState",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "description": "The version for Hierarchy Controller",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerVersion",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "hnc": {
                                    "description": "Version for open source HNC",
                                    "type": "string"
                                  },
                                  "extension": {
                                    "description": "Version for Hierarchy Controller extension",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "state": {
                              "description": "The deployment state for Hierarchy Controller",
                              "type": "object",
                              "reference": "google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerDeploymentState",
                              "resolved_schema": {
                                "type": "object",
                                "properties": {
                                  "hnc": {
                                    "description": "The deployment state for open source HNC (e.g. v0.7.0-hc.0)",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  },
                                  "extension": {
                                    "description": "The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)",
                                    "type": "object",
                                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "create_time": {
                  "description": "Output only. When the Membership was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. When the Membership was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "delete_time": {
                  "description": "Output only. When the Membership was deleted.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "external_id": {
                  "description": "Optional. An externally-generated and managed ID for this Membership. This ID may be modified after creation, but this is not recommended.  The ID must match the regex: ``[a-zA-Z0-9][a-zA-Z0-9_\\-\\.]*``  If this Membership represents a Kubernetes cluster, this value should be set to the UID of the ``kube-system`` namespace object.",
                  "type": "string"
                },
                "last_connection_time": {
                  "description": "Output only. For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "unique_id": {
                  "description": "Output only. Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.",
                  "type": "string",
                  "output_only": true
                },
                "authority": {
                  "description": "Optional. How to identify workloads from this Membership. See the documentation on Workload Identity for more details:  https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
                  "type": "object",
                  "reference": "google.cloud.gkehub_v1.types.Authority",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "issuer": {
                        "description": "Optional. A JSON Web Token (JWT) issuer URI. ``issuer`` must start with ``https://`` and be a valid URL with length <2000 characters.  If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer.  Clearing ``issuer`` disables Workload Identity. ``issuer`` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).",
                        "type": "string"
                      },
                      "workload_identity_pool": {
                        "description": "Output only. The name of the workload identity pool in which ``issuer`` will be recognized.  There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is ``{PROJECT_ID}.hub.id.goog``, although this is subject to change in newer versions of this API.",
                        "type": "string",
                        "output_only": true
                      },
                      "identity_provider": {
                        "description": "Output only. An identity provider that reflects the ``issuer`` in the workload identity pool.",
                        "type": "string",
                        "output_only": true
                      },
                      "oidc_jwks": {
                        "description": "Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517).  When this field is set, OIDC discovery will NOT be performed on ``issuer``, and instead OIDC tokens will be validated using this field.",
                        "type": "object",
                        "reference": "bytes"
                      }
                    }
                  }
                },
                "monitoring_config": {
                  "description": "Optional. The monitoring config information for this membership.",
                  "type": "object",
                  "reference": "google.cloud.gkehub_v1.types.MonitoringConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "component_config": {
                        "description": "Monitoring components configuration",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.MonitoringComponentConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enable_components": {
                              "description": "Select components to collect metrics. An empty set would disable all monitoring.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.container_v1beta1.types.MonitoringComponentConfig.Component"
                              }
                            }
                          }
                        }
                      },
                      "managed_prometheus_config": {
                        "description": "Enable Google Cloud Managed Service for Prometheus in the cluster.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.ManagedPrometheusConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Enable Managed Collection.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "advanced_datapath_observability_config": {
                        "description": "Configuration of Advanced Datapath Observability features.",
                        "type": "object",
                        "reference": "google.cloud.container_v1beta1.types.AdvancedDatapathObservabilityConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "enable_metrics": {
                              "description": "Expose flow metrics on nodes",
                              "type": "boolean"
                            },
                            "relay_mode": {
                              "description": "Method used to make Relay available",
                              "type": "object",
                              "reference": "google.cloud.container_v1beta1.types.AdvancedDatapathObservabilityConfig.RelayMode"
                            },
                            "enable_relay": {
                              "description": "Enable Relay component  This field is a member of `oneof`_ ``_enable_relay``.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "Required. The field paths to update. Separate multiple values with commas or use ``*`` to update all field paths.  Currently supported field paths:  -  ``role``",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "use_admin_access": {
            "description": "When ``true``, the method runs using the user's Google Workspace administrator privileges.  The calling user must be a Google Workspace administrator with the `manage chat and spaces conversations privilege <https://support.google.com/a/answer/13369245>`__.  Requires the ``chat.admin.memberships`` `OAuth 2.0 scope <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.",
            "type": "boolean"
          }
        },
        "required": [
          "membership",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListMembershipsRequest",
      "description": "Request message for listing memberships.\n\nAttributes:\n    parent (str):\n        Required. The resource name of the space for\n        which to fetch a membership list.\n\n        Format: spaces/{space}\n    page_size (int):\n        Optional. The maximum number of memberships to return. The\n        service might return fewer than this value.\n\n        If unspecified, at most 100 memberships are returned.\n\n        The maximum value is 1000. If you use a value more than\n        1000, it's automatically changed to 1000.\n\n        Negative values return an ``INVALID_ARGUMENT`` error.\n    page_token (str):\n        Optional. A page token, received from a\n        previous call to list memberships. Provide this\n        parameter to retrieve the subsequent page.\n\n        When paginating, all other parameters provided\n        should match the call that provided the page\n        token. Passing different values to the other\n        parameters might lead to unexpected results.\n    filter (str):\n        Optional. A query filter.\n",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the space for which to fetch a membership list.  Format: spaces/{space}",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of memberships to return. The service might return fewer than this value.  If unspecified, at most 100 memberships are returned.  The maximum value is 1000. If you use a value more than 1000, it's automatically changed to 1000.  Negative values return an ``INVALID_ARGUMENT`` error.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous call to list memberships. Provide this parameter to retrieve the subsequent page.  When paginating, all other parameters provided should match the call that provided the page token. Passing different values to the other parameters might lead to unexpected results.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. A query filter.  You can filter memberships by a member's role (```role`` <https://developers.google.com/workspace/chat/api/reference/rest/v1/spaces.members#membershiprole>`__) and type (```member.type`` <https://developers.google.com/workspace/chat/api/reference/rest/v1/User#type>`__).  To filter by role, set ``role`` to ``ROLE_MEMBER`` or ``ROLE_MANAGER``.  To filter by type, set ``member.type`` to ``HUMAN`` or ``BOT``. You can also filter for ``member.type`` using the ``!=`` operator.  To filter by both role and type, use the ``AND`` operator. To filter by either role or type, use the ``OR`` operator.  Either ``member.type = \"HUMAN\"`` or ``member.type != \"BOT\"`` is required when ``use_admin_access`` is set to true. Other member type filters will be rejected.  For example, the following queries are valid:  ::  role = \"ROLE_MANAGER\" OR role = \"ROLE_MEMBER\" member.type = \"HUMAN\" AND role = \"ROLE_MANAGER\"  member.type != \"BOT\"  The following queries are invalid:  ::  member.type = \"HUMAN\" AND member.type = \"BOT\" role = \"ROLE_MANAGER\" AND role = \"ROLE_MEMBER\"  Invalid queries are rejected by the server with an ``INVALID_ARGUMENT`` error.",
            "type": "string"
          },
          "show_groups": {
            "description": "Optional. When ``true``, also returns memberships associated with a [Google Group][google.chat.v1.Membership.group_member], in addition to other types of memberships. If a [filter][google.chat.v1.ListMembershipsRequest.filter] is set, [Google Group][google.chat.v1.Membership.group_member] memberships that don't match the filter criteria aren't returned.",
            "type": "boolean"
          },
          "show_invited": {
            "description": "Optional. When ``true``, also returns memberships associated with [invited][google.chat.v1.Membership.MembershipState.INVITED] members, in addition to other types of memberships. If a filter is set, [invited][google.chat.v1.Membership.MembershipState.INVITED] memberships that don't match the filter criteria aren't returned.  Currently requires `user authentication <https://developers.google.com/workspace/chat/authenticate-authorize-chat-user>`__.",
            "type": "boolean"
          },
          "use_admin_access": {
            "description": "When ``true``, the method runs using the user's Google Workspace administrator privileges.  The calling user must be a Google Workspace administrator with the `manage chat and spaces conversations privilege <https://support.google.com/a/answer/13369245>`__.  Requires either the ``chat.admin.memberships.readonly`` or ``chat.admin.memberships`` `OAuth 2.0 scope <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.  Listing app memberships in a space isn't supported when using admin access.",
            "type": "boolean",
            "output_only": true
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetMembershipRequest",
      "description": "Request to get a membership of a space.\n\nAttributes:\n    name (str):\n        Required. Resource name of the membership to retrieve.\n\n        To get the app's own membership `by using user\n        authentication <https://developers.google.com/workspace/chat/authenticate-authorize-chat-user>`__,\n        you can optionally use ``spaces/{space}/members/app``.\n\n        Format: ``spaces/{space}/members/{member}`` or\n        ``spaces/{space}/members/app``\n\n        When `authenticated as a\n        user <https://developers.google.com/workspace/chat/authenticate-authorize-chat-user>`__,\n        you can use the user's email as an alias for ``{member}``.\n        For example, ``spaces/{space}/members/example@gmail.com``\n        where ``example@gmail.com`` is the email of the Google Chat\n        user.\n    use_admin_access (bool):\n        When ``true``, the method runs using the user's Google\n        Workspace administrator privileges.\n\n        The calling user must be a Google Workspace administrator\n        with the `mana",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the membership to retrieve.  To get the app's own membership `by using user authentication <https://developers.google.com/workspace/chat/authenticate-authorize-chat-user>`__, you can optionally use ``spaces/{space}/members/app``.  Format: ``spaces/{space}/members/{member}`` or ``spaces/{space}/members/app``  When `authenticated as a user <https://developers.google.com/workspace/chat/authenticate-authorize-chat-user>`__, you can use the user's email as an alias for ``{member}``. For example, ``spaces/{space}/members/example@gmail.com`` where ``example@gmail.com`` is the email of the Google Chat user.",
            "type": "string"
          },
          "use_admin_access": {
            "description": "When ``true``, the method runs using the user's Google Workspace administrator privileges.  The calling user must be a Google Workspace administrator with the `manage chat and spaces conversations privilege <https://support.google.com/a/answer/13369245>`__.  Requires the ``chat.admin.memberships`` or ``chat.admin.memberships.readonly`` `OAuth 2.0 scopes <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.  Getting app memberships in a space isn't supported when using admin access.",
            "type": "boolean",
            "output_only": true
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteMembershipRequest",
      "description": "Request to delete a membership in a space.\n\nAttributes:\n    name (str):\n        Required. Resource name of the membership to delete. Chat\n        apps can delete human users' or their own memberships. Chat\n        apps can't delete other apps' memberships.\n\n        When deleting a human membership, requires the\n        ``chat.memberships`` scope and\n        ``spaces/{space}/members/{member}`` format. You can use the\n        email as an alias for ``{member}``. For example,\n        ``spaces/{space}/members/example@gmail.com`` where\n        ``example@gmail.com`` is the email of the Google Chat user.\n\n        When deleting an app membership, requires the\n        ``chat.memberships.app`` scope and\n        ``spaces/{space}/members/app`` format.\n\n        Format: ``spaces/{space}/members/{member}`` or\n        ``spaces/{space}/members/app``.\n    use_admin_access (bool):\n        When ``true``, the method runs using the user's Google\n        Workspace administrator privileges.\n\n        The calling user must be a Google ",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the membership to delete. Chat apps can delete human users' or their own memberships. Chat apps can't delete other apps' memberships.  When deleting a human membership, requires the ``chat.memberships`` scope and ``spaces/{space}/members/{member}`` format. You can use the email as an alias for ``{member}``. For example, ``spaces/{space}/members/example@gmail.com`` where ``example@gmail.com`` is the email of the Google Chat user.  When deleting an app membership, requires the ``chat.memberships.app`` scope and ``spaces/{space}/members/app`` format.  Format: ``spaces/{space}/members/{member}`` or ``spaces/{space}/members/app``.",
            "type": "string"
          },
          "use_admin_access": {
            "description": "When ``true``, the method runs using the user's Google Workspace administrator privileges.  The calling user must be a Google Workspace administrator with the `manage chat and spaces conversations privilege <https://support.google.com/a/answer/13369245>`__.  Requires the ``chat.admin.memberships`` `OAuth 2.0 scope <https://developers.google.com/workspace/chat/authenticate-authorize#chat-api-scopes>`__.  Deleting app memberships in a space isn't supported using admin access.",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-apps-chat/google/apps/chat_v1/types/reaction.py": [
    {
      "type": "function",
      "name": "CreateReactionRequest",
      "description": "Creates a reaction to a message.\n\nAttributes:\n    parent (str):\n        Required. The message where the reaction is created.\n\n        Format: ``spaces/{space}/messages/{message}``\n    reaction (google.apps.chat_v1.types.Reaction):\n        Required. The reaction to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The message where the reaction is created.  Format: ``spaces/{space}/messages/{message}``",
            "type": "string"
          },
          "reaction": {
            "description": "Required. The reaction to create.",
            "reference": "google.apps.chat_v1.types.Reaction",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The resource name of the reaction.  Format: ``spaces/{space}/messages/{message}/reactions/{reaction}``",
                  "type": "string"
                },
                "user": {
                  "description": "Output only. The user who created the reaction.",
                  "type": "object",
                  "reference": "google.apps.chat_v1.types.User",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Identifier. The resource name of the User. Format: ``networks/{network_code}/users/{user_id}``",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Output only. ``User`` ID.",
                        "type": "integer",
                        "output_only": true
                      },
                      "display_name": {
                        "description": "Required. The name of the User. It has a maximum length of 128 characters.",
                        "type": "string"
                      },
                      "email": {
                        "description": "Required. The email or login of the User. In order to create a new user, you must already have a Google Account.",
                        "type": "string"
                      },
                      "role": {
                        "description": "Required. The unique Role ID of the User. Roles that are created by Google will have negative IDs.",
                        "type": "string"
                      },
                      "active": {
                        "description": "Output only. Specifies whether or not the User is active. An inactive user cannot log in to the system or perform any operations.",
                        "type": "boolean",
                        "output_only": true
                      },
                      "external_id": {
                        "description": "Optional. An identifier for the User that is meaningful to the publisher. This attribute has a maximum length of 255 characters.",
                        "type": "string"
                      },
                      "service_account": {
                        "description": "Output only. Whether the user is an OAuth2 service account user. Service account users can only be added through the UI.",
                        "type": "boolean",
                        "output_only": true
                      },
                      "orders_ui_local_time_zone": {
                        "description": "Optional. The IANA Time Zone Database time zone, e.g. \"America/New_York\", used in the orders and line items UI for this User. If not provided, the UI then defaults to using the Network's timezone. This setting only affects the UI for this user and does not affect the timezone of any dates and times returned in API responses.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "display_name",
                      "email",
                      "role"
                    ]
                  }
                },
                "emoji": {
                  "description": "The emoji used in the reaction.",
                  "type": "object",
                  "reference": "google.apps.chat_v1.types.Emoji",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "unicode": {
                        "description": "A basic emoji represented by a unicode string.  This field is a member of `oneof`_ ``content``.",
                        "type": "string"
                      },
                      "custom_emoji": {
                        "description": "Output only. A custom emoji.  This field is a member of `oneof`_ ``content``.",
                        "type": "object",
                        "reference": "google.apps.chat_v1.types.CustomEmoji",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "uid": {
                              "description": "Output only. Unique key for the custom emoji resource.",
                              "type": "string",
                              "output_only": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "reaction"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListReactionsRequest",
      "description": "Lists reactions to a message.\n\nAttributes:\n    parent (str):\n        Required. The message users reacted to.\n\n        Format: ``spaces/{space}/messages/{message}``\n    page_size (int):\n        Optional. The maximum number of reactions\n        returned. The service can return fewer reactions\n        than this value. If unspecified, the default\n        value is 25. The maximum value is 200; values\n        above 200 are changed to 200.\n    page_token (str):\n        Optional. (If resuming from a previous\n        query.)\n        A page token received from a previous list\n        reactions call. Provide this to retrieve the\n        subsequent page.\n\n        When paginating, the filter value should match\n        the call that provided the page token. Passing a\n        different value might lead to unexpected\n        results.\n    filter (str):\n        Optional. A query filter.\n\n        You can filter reactions by\n        `emoji <https://developers.google.com/workspace/chat/api/reference/rest/v1/Emoji>`__\n        (eit",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The message users reacted to.  Format: ``spaces/{space}/messages/{message}``",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of reactions returned. The service can return fewer reactions than this value. If unspecified, the default value is 25. The maximum value is 200; values above 200 are changed to 200.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. (If resuming from a previous query.) A page token received from a previous list reactions call. Provide this to retrieve the subsequent page.  When paginating, the filter value should match the call that provided the page token. Passing a different value might lead to unexpected results.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. A query filter.  You can filter reactions by `emoji <https://developers.google.com/workspace/chat/api/reference/rest/v1/Emoji>`__ (either ``emoji.unicode`` or ``emoji.custom_emoji.uid``) and `user <https://developers.google.com/workspace/chat/api/reference/rest/v1/User>`__ (``user.name``).  To filter reactions for multiple emojis or users, join similar fields with the ``OR`` operator, such as ``emoji.unicode = \"\ud83d\ude42\" OR emoji.unicode = \"\ud83d\udc4d\"`` and ``user.name = \"users/AAAAAA\" OR user.name = \"users/BBBBBB\"``.  To filter reactions by emoji and user, use the ``AND`` operator, such as ``emoji.unicode = \"\ud83d\ude42\" AND user.name = \"users/AAAAAA\"``.  If your query uses both ``AND`` and ``OR``, group them with parentheses.  For example, the following queries are valid:  ::  user.name = \"users/{user}\" emoji.unicode = \"\ud83d\ude42\" emoji.custom_emoji.uid = \"{uid}\" emoji.unicode = \"\ud83d\ude42\" OR emoji.unicode = \"\ud83d\udc4d\" emoji.unicode = \"\ud83d\ude42\" OR emoji.custom_emoji.uid = \"{uid}\" emoji.unicode = \"\ud83d\ude42\" AND user.name = \"users/{user}\" (emoji.unicode = \"\ud83d\ude42\" OR emoji.custom_emoji.uid = \"{uid}\") AND user.name = \"users/{user}\"  The following queries are invalid:  ::  emoji.unicode = \"\ud83d\ude42\" AND emoji.unicode = \"\ud83d\udc4d\" emoji.unicode = \"\ud83d\ude42\" AND emoji.custom_emoji.uid = \"{uid}\" emoji.unicode = \"\ud83d\ude42\" OR user.name = \"users/{user}\" emoji.unicode = \"\ud83d\ude42\" OR emoji.custom_emoji.uid = \"{uid}\" OR user.name = \"users/{user}\" emoji.unicode = \"\ud83d\ude42\" OR emoji.custom_emoji.uid = \"{uid}\" AND user.name = \"users/{user}\"  Invalid queries are rejected by the server with an ``INVALID_ARGUMENT`` error.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteReactionRequest",
      "description": "Deletes a reaction to a message.\n\nAttributes:\n    name (str):\n        Required. Name of the reaction to delete.\n\n        Format:\n        ``spaces/{space}/messages/{message}/reactions/{reaction}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the reaction to delete.  Format: ``spaces/{space}/messages/{message}/reactions/{reaction}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}