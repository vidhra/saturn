{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-gke-hub\\google\\cloud\\gkehub_v1\\configmanagement_v1\\types\\configmanagement.py": [
    {
      "type": "function",
      "name": "MembershipState",
      "description": "**Anthos Config Management**: State for a single cluster.\n\nAttributes:\n    cluster_name (str):\n        This field is set to the ``cluster_name`` field of the\n        Membership Spec if it is not empty. Otherwise, it is set to\n        the cluster's fleet membership name.\n    membership_spec (google.cloud.gkehub.configmanagement_v1.types.MembershipSpec):\n        Membership configuration in the cluster. This\n        represents the actual state in the cluster,\n        while the MembershipSpec in the FeatureSpec\n        represents the intended state\n    operator_state (google.cloud.gkehub.configmanagement_v1.types.OperatorState):\n        Current install status of ACM's Operator\n    config_sync_state (google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState):\n        Current sync status\n    policy_controller_state (google.cloud.gkehub.configmanagement_v1.types.PolicyControllerState):\n        PolicyController status\n    hierarchy_controller_state (google.cloud.gkehub.configmanagement_v1.types.HierarchyControlle",
      "parameters": {
        "type": "object",
        "properties": {
          "cluster_name": {
            "description": "This field is set to the ``cluster_name`` field of the Membership Spec if it is not empty. Otherwise, it is set to the cluster's fleet membership name.",
            "type": "string"
          },
          "membership_spec": {
            "description": "Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state",
            "type": "object",
            "properties": {
              "config_sync": {
                "type": "object",
                "properties": {
                  "git": {
                    "type": "object",
                    "properties": {
                      "sync_repo": {
                        "description": "The URL of the Git repository to use as the source of truth.",
                        "type": "string"
                      },
                      "sync_branch": {
                        "description": "The branch of the repository to sync from. Default: master.",
                        "type": "string"
                      },
                      "policy_dir": {
                        "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.",
                        "type": "string"
                      },
                      "sync_wait_secs": {
                        "description": "Period in seconds between consecutive syncs. Default: 15.",
                        "type": "integer"
                      },
                      "sync_rev": {
                        "description": "Git revision (tag or hash) to check out. Default HEAD.",
                        "type": "string"
                      },
                      "secret_type": {
                        "description": "Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.",
                        "type": "string"
                      },
                      "https_proxy": {
                        "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
                        "type": "string"
                      },
                      "gcp_service_account_email": {
                        "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                        "type": "string"
                      }
                    }
                  },
                  "source_format": {
                    "description": "Specifies whether the Config Sync Repo is in \"hierarchical\" or \"unstructured\" mode.",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of the git or oci field.  This field is a member of `oneof`_ ``_enabled``.",
                    "type": "boolean"
                  },
                  "prevent_drift": {
                    "description": "Set to true to enable the Config Sync admission webhook to prevent drifts. If set to ``false``, disables the Config Sync admission webhook and does not prevent drifts.",
                    "type": "boolean"
                  },
                  "oci": {
                    "type": "object",
                    "properties": {
                      "sync_repo": {
                        "description": "The OCI image repository URL for the package to sync from. e.g. ``LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME``.",
                        "type": "string"
                      },
                      "policy_dir": {
                        "description": "The absolute path of the directory that contains the local resources.  Default: the root directory of the image.",
                        "type": "string"
                      },
                      "sync_wait_secs": {
                        "description": "Period in seconds between consecutive syncs. Default: 15.",
                        "type": "integer"
                      },
                      "secret_type": {
                        "description": "Type of secret configured for access to the Git repo.",
                        "type": "string"
                      },
                      "gcp_service_account_email": {
                        "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                        "type": "string"
                      }
                    }
                  },
                  "metrics_gcp_service_account_email": {
                    "description": "The Email of the Google Cloud Service Account (GSA) used for exporting Config Sync metrics to Cloud Monitoring when Workload Identity is enabled. The GSA should have the Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role. The Kubernetes ServiceAccount ``default`` in the namespace ``config-management-monitoring`` should be bound to the GSA.",
                    "type": "string"
                  }
                }
              },
              "policy_controller": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.",
                    "type": "boolean"
                  },
                  "template_library_installed": {
                    "description": "Installs the default template library along with Policy Controller.  This field is a member of `oneof`_ ``_template_library_installed``.",
                    "type": "boolean"
                  },
                  "audit_interval_seconds": {
                    "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.  This field is a member of `oneof`_ ``_audit_interval_seconds``.",
                    "type": "integer"
                  },
                  "exemptable_namespaces": {
                    "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "referential_rules_enabled": {
                    "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
                    "type": "boolean"
                  },
                  "log_denies_enabled": {
                    "description": "Logs all denies and dry run failures.",
                    "type": "boolean"
                  }
                }
              },
              "hierarchy_controller": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Whether Hierarchy Controller is enabled in this cluster.",
                    "type": "boolean"
                  },
                  "enable_pod_tree_labels": {
                    "description": "Whether pod tree labels are enabled in this cluster.",
                    "type": "boolean"
                  },
                  "enable_hierarchical_resource_quota": {
                    "description": "Whether hierarchical resource quota is enabled in this cluster.",
                    "type": "boolean"
                  }
                }
              },
              "version": {
                "description": "Version of ACM installed.",
                "type": "string"
              },
              "cluster": {
                "description": "The user-specified cluster name used by Config Sync cluster-name-selector annotation or ClusterSelector, for applying configs to only a subset of clusters. Omit this field if the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector. Set this field if a name different from the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector.",
                "type": "string"
              },
              "management": {
                "description": "Enables automatic Feature management.",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.MembershipSpec.Management"
              }
            }
          },
          "operator_state": {
            "description": "Current install status of ACM's Operator",
            "type": "object",
            "properties": {
              "version": {
                "description": "The semenatic version number of the operator",
                "type": "string"
              },
              "deployment_state": {
                "description": "The state of the Operator's deployment",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              },
              "errors": {
                "description": "Install errors.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "error_message": {
                      "description": "A string representing the user facing error message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "config_sync_state": {
            "description": "Current sync status",
            "type": "object",
            "properties": {
              "version": {
                "type": "object",
                "properties": {
                  "importer": {
                    "description": "Version of the deployed importer pod",
                    "type": "string"
                  },
                  "syncer": {
                    "description": "Version of the deployed syncer pod",
                    "type": "string"
                  },
                  "git_sync": {
                    "description": "Version of the deployed git-sync pod",
                    "type": "string"
                  },
                  "monitor": {
                    "description": "Version of the deployed monitor pod",
                    "type": "string"
                  },
                  "reconciler_manager": {
                    "description": "Version of the deployed reconciler-manager pod",
                    "type": "string"
                  },
                  "root_reconciler": {
                    "description": "Version of the deployed reconciler container in root-reconciler pod",
                    "type": "string"
                  },
                  "admission_webhook": {
                    "description": "Version of the deployed admission_webhook pod",
                    "type": "string"
                  }
                }
              },
              "deployment_state": {
                "type": "object",
                "properties": {
                  "importer": {
                    "description": "Deployment state of the importer pod",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                  },
                  "syncer": {
                    "description": "Deployment state of the syncer pod",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                  },
                  "git_sync": {
                    "description": "Deployment state of the git-sync pod",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                  },
                  "monitor": {
                    "description": "Deployment state of the monitor pod",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                  },
                  "reconciler_manager": {
                    "description": "Deployment state of reconciler-manager pod",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                  },
                  "root_reconciler": {
                    "description": "Deployment state of root-reconciler",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                  },
                  "admission_webhook": {
                    "description": "Deployment state of admission-webhook",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                  }
                }
              },
              "sync_state": {
                "type": "object",
                "properties": {
                  "source_token": {
                    "description": "Token indicating the state of the repo.",
                    "type": "string"
                  },
                  "import_token": {
                    "description": "Token indicating the state of the importer.",
                    "type": "string"
                  },
                  "sync_token": {
                    "description": "Token indicating the state of the syncer.",
                    "type": "string"
                  },
                  "last_sync": {
                    "description": "Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String",
                    "type": "string"
                  },
                  "last_sync_time": {
                    "description": "Timestamp type of when ACM last successfully synced the repo",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "code": {
                    "description": "Sync status code",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncState.SyncCode"
                  },
                  "errors": {
                    "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "An ACM defined error code",
                          "type": "string"
                        },
                        "error_message": {
                          "description": "A description of the error",
                          "type": "string"
                        },
                        "error_resources": {
                          "description": "A list of config(s) associated with the error, if any",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "source_path": {
                                "description": "Path in the git repo of the erroneous config",
                                "type": "string"
                              },
                              "resource_name": {
                                "description": "Metadata name of the resource that is causing an error",
                                "type": "string"
                              },
                              "resource_namespace": {
                                "description": "Namespace of the resource that is causing an error",
                                "type": "string"
                              },
                              "resource_gvk": {
                                "type": "object",
                                "properties": {
                                  "group": {
                                    "description": "Kubernetes Group",
                                    "type": "string"
                                  },
                                  "version": {
                                    "description": "Kubernetes Version",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "Kubernetes Kind",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "errors": {
                "description": "Errors pertaining to the installation of Config Sync.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "error_message": {
                      "description": "A string representing the user facing error message",
                      "type": "string"
                    }
                  }
                }
              },
              "rootsync_crd": {
                "description": "The state of the RootSync CRD",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState"
              },
              "reposync_crd": {
                "description": "The state of the Reposync CRD",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState"
              },
              "state": {
                "description": "The state of CS This field summarizes the other fields in this message.",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.State"
              }
            }
          },
          "policy_controller_state": {
            "description": "PolicyController status",
            "type": "object",
            "properties": {
              "version": {
                "type": "object",
                "properties": {
                  "version": {
                    "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number.",
                    "type": "string"
                  }
                }
              },
              "deployment_state": {
                "type": "object",
                "properties": {
                  "gatekeeper_controller_manager_state": {
                    "description": "Status of gatekeeper-controller-manager pod.",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                  },
                  "gatekeeper_audit": {
                    "description": "Status of gatekeeper-audit deployment.",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                  }
                }
              }
            }
          },
          "hierarchy_controller_state": {
            "description": "Hierarchy Controller status",
            "type": "object",
            "properties": {
              "version": {
                "type": "object",
                "properties": {
                  "hnc": {
                    "description": "Version for open source HNC",
                    "type": "string"
                  },
                  "extension": {
                    "description": "Version for Hierarchy Controller extension",
                    "type": "string"
                  }
                }
              },
              "state": {
                "type": "object",
                "properties": {
                  "hnc": {
                    "description": "The deployment state for open source HNC (e.g. v0.7.0-hc.0)",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                  },
                  "extension": {
                    "description": "The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)",
                    "type": "object",
                    "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "MembershipSpec",
      "description": "**Anthos Config Management**: Configuration for a single cluster.\nIntended to parallel the ConfigManagement CR.\n\nAttributes:\n    config_sync (google.cloud.gkehub.configmanagement_v1.types.ConfigSync):\n        Config Sync configuration for the cluster.\n    policy_controller (google.cloud.gkehub.configmanagement_v1.types.PolicyController):\n        Policy Controller configuration for the\n        cluster.\n    hierarchy_controller (google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerConfig):\n        Hierarchy Controller configuration for the\n        cluster.\n    version (str):\n        Version of ACM installed.\n    cluster (str):\n        The user-specified cluster name used by\n        Config Sync cluster-name-selector annotation or\n        ClusterSelector, for applying configs to only a\n        subset of clusters.\n        Omit this field if the cluster's fleet\n        membership name is used by Config Sync\n        cluster-name-selector annotation or\n        ClusterSelector. Set this field if a name\n   ",
      "parameters": {
        "type": "object",
        "properties": {
          "config_sync": {
            "description": "Config Sync configuration for the cluster.",
            "type": "object",
            "properties": {
              "git": {
                "type": "object",
                "properties": {
                  "sync_repo": {
                    "description": "The URL of the Git repository to use as the source of truth.",
                    "type": "string"
                  },
                  "sync_branch": {
                    "description": "The branch of the repository to sync from. Default: master.",
                    "type": "string"
                  },
                  "policy_dir": {
                    "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.",
                    "type": "string"
                  },
                  "sync_wait_secs": {
                    "description": "Period in seconds between consecutive syncs. Default: 15.",
                    "type": "integer"
                  },
                  "sync_rev": {
                    "description": "Git revision (tag or hash) to check out. Default HEAD.",
                    "type": "string"
                  },
                  "secret_type": {
                    "description": "Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.",
                    "type": "string"
                  },
                  "https_proxy": {
                    "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
                    "type": "string"
                  },
                  "gcp_service_account_email": {
                    "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                    "type": "string"
                  }
                }
              },
              "source_format": {
                "description": "Specifies whether the Config Sync Repo is in \"hierarchical\" or \"unstructured\" mode.",
                "type": "string"
              },
              "enabled": {
                "description": "Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of the git or oci field.  This field is a member of `oneof`_ ``_enabled``.",
                "type": "boolean"
              },
              "prevent_drift": {
                "description": "Set to true to enable the Config Sync admission webhook to prevent drifts. If set to ``false``, disables the Config Sync admission webhook and does not prevent drifts.",
                "type": "boolean"
              },
              "oci": {
                "type": "object",
                "properties": {
                  "sync_repo": {
                    "description": "The OCI image repository URL for the package to sync from. e.g. ``LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME``.",
                    "type": "string"
                  },
                  "policy_dir": {
                    "description": "The absolute path of the directory that contains the local resources.  Default: the root directory of the image.",
                    "type": "string"
                  },
                  "sync_wait_secs": {
                    "description": "Period in seconds between consecutive syncs. Default: 15.",
                    "type": "integer"
                  },
                  "secret_type": {
                    "description": "Type of secret configured for access to the Git repo.",
                    "type": "string"
                  },
                  "gcp_service_account_email": {
                    "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                    "type": "string"
                  }
                }
              },
              "metrics_gcp_service_account_email": {
                "description": "The Email of the Google Cloud Service Account (GSA) used for exporting Config Sync metrics to Cloud Monitoring when Workload Identity is enabled. The GSA should have the Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role. The Kubernetes ServiceAccount ``default`` in the namespace ``config-management-monitoring`` should be bound to the GSA.",
                "type": "string"
              }
            }
          },
          "policy_controller": {
            "description": "Policy Controller configuration for the cluster.",
            "type": "object",
            "properties": {
              "enabled": {
                "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.",
                "type": "boolean"
              },
              "template_library_installed": {
                "description": "Installs the default template library along with Policy Controller.  This field is a member of `oneof`_ ``_template_library_installed``.",
                "type": "boolean"
              },
              "audit_interval_seconds": {
                "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.  This field is a member of `oneof`_ ``_audit_interval_seconds``.",
                "type": "integer"
              },
              "exemptable_namespaces": {
                "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "referential_rules_enabled": {
                "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
                "type": "boolean"
              },
              "log_denies_enabled": {
                "description": "Logs all denies and dry run failures.",
                "type": "boolean"
              }
            }
          },
          "hierarchy_controller": {
            "description": "Hierarchy Controller configuration for the cluster.",
            "type": "object",
            "properties": {
              "enabled": {
                "description": "Whether Hierarchy Controller is enabled in this cluster.",
                "type": "boolean"
              },
              "enable_pod_tree_labels": {
                "description": "Whether pod tree labels are enabled in this cluster.",
                "type": "boolean"
              },
              "enable_hierarchical_resource_quota": {
                "description": "Whether hierarchical resource quota is enabled in this cluster.",
                "type": "boolean"
              }
            }
          },
          "version": {
            "description": "Version of ACM installed.",
            "type": "string"
          },
          "cluster": {
            "description": "The user-specified cluster name used by Config Sync cluster-name-selector annotation or ClusterSelector, for applying configs to only a subset of clusters. Omit this field if the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector. Set this field if a name different from the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector.",
            "type": "string"
          },
          "management": {
            "description": "Enables automatic Feature management.",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.MembershipSpec.Management"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "ConfigSync",
      "description": "Configuration for Config Sync\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    git (google.cloud.gkehub.configmanagement_v1.types.GitConfig):\n        Git repo configuration for the cluster.\n    source_format (str):\n        Specifies whether the Config Sync Repo is\n        in \"hierarchical\" or \"unstructured\" mode.\n    enabled (bool):\n        Enables the installation of ConfigSync.\n        If set to true, ConfigSync resources will be\n        created and the other ConfigSync fields will be\n        applied if exist.\n        If set to false, all other ConfigSync fields\n        will be ignored, ConfigSync resources will be\n        deleted.\n        If omitted, ConfigSync resources will be managed\n        depends on the presence of the git or oci field.\n\n        This field is a member of `oneof`_ ``_enabled``.\n    prevent_drift (bool):\n        Set to true to enable the Config Sync admission webhook to\n        prevent drifts. If set to ``false",
      "parameters": {
        "type": "object",
        "properties": {
          "git": {
            "description": "Git repo configuration for the cluster.",
            "type": "object",
            "properties": {
              "sync_repo": {
                "description": "The URL of the Git repository to use as the source of truth.",
                "type": "string"
              },
              "sync_branch": {
                "description": "The branch of the repository to sync from. Default: master.",
                "type": "string"
              },
              "policy_dir": {
                "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.",
                "type": "string"
              },
              "sync_wait_secs": {
                "description": "Period in seconds between consecutive syncs. Default: 15.",
                "type": "integer"
              },
              "sync_rev": {
                "description": "Git revision (tag or hash) to check out. Default HEAD.",
                "type": "string"
              },
              "secret_type": {
                "description": "Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.",
                "type": "string"
              },
              "https_proxy": {
                "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
                "type": "string"
              },
              "gcp_service_account_email": {
                "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                "type": "string"
              }
            }
          },
          "source_format": {
            "description": "Specifies whether the Config Sync Repo is in \"hierarchical\" or \"unstructured\" mode.",
            "type": "string"
          },
          "enabled": {
            "description": "Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of the git or oci field.  This field is a member of `oneof`_ ``_enabled``.",
            "type": "boolean"
          },
          "prevent_drift": {
            "description": "Set to true to enable the Config Sync admission webhook to prevent drifts. If set to ``false``, disables the Config Sync admission webhook and does not prevent drifts.",
            "type": "boolean"
          },
          "oci": {
            "description": "OCI repo configuration for the cluster",
            "type": "object",
            "properties": {
              "sync_repo": {
                "description": "The OCI image repository URL for the package to sync from. e.g. ``LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME``.",
                "type": "string"
              },
              "policy_dir": {
                "description": "The absolute path of the directory that contains the local resources.  Default: the root directory of the image.",
                "type": "string"
              },
              "sync_wait_secs": {
                "description": "Period in seconds between consecutive syncs. Default: 15.",
                "type": "integer"
              },
              "secret_type": {
                "description": "Type of secret configured for access to the Git repo.",
                "type": "string"
              },
              "gcp_service_account_email": {
                "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
                "type": "string"
              }
            }
          },
          "metrics_gcp_service_account_email": {
            "description": "The Email of the Google Cloud Service Account (GSA) used for exporting Config Sync metrics to Cloud Monitoring when Workload Identity is enabled. The GSA should have the Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role. The Kubernetes ServiceAccount ``default`` in the namespace ``config-management-monitoring`` should be bound to the GSA.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "GitConfig",
      "description": "Git repo configuration for a single cluster.\n\nAttributes:\n    sync_repo (str):\n        The URL of the Git repository to use as the\n        source of truth.\n    sync_branch (str):\n        The branch of the repository to sync from.\n        Default: master.\n    policy_dir (str):\n        The path within the Git repository that\n        represents the top level of the repo to sync.\n        Default: the root directory of the repository.\n    sync_wait_secs (int):\n        Period in seconds between consecutive syncs.\n        Default: 15.\n    sync_rev (str):\n        Git revision (tag or hash) to check out.\n        Default HEAD.\n    secret_type (str):\n        Type of secret configured for access to the\n        Git repo. Must be one of ssh, cookiefile,\n        gcenode, token, gcpserviceaccount or none. The\n        validation of this is case-sensitive. Required.\n    https_proxy (str):\n        URL for the HTTPS proxy to be used when\n        communicating with the Git repo.\n    gcp_service_account_email (str):\n        The Go",
      "parameters": {
        "type": "object",
        "properties": {
          "sync_repo": {
            "description": "The URL of the Git repository to use as the source of truth.",
            "type": "string"
          },
          "sync_branch": {
            "description": "The branch of the repository to sync from. Default: master.",
            "type": "string"
          },
          "policy_dir": {
            "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.",
            "type": "string"
          },
          "sync_wait_secs": {
            "description": "Period in seconds between consecutive syncs. Default: 15.",
            "type": "integer"
          },
          "sync_rev": {
            "description": "Git revision (tag or hash) to check out. Default HEAD.",
            "type": "string"
          },
          "secret_type": {
            "description": "Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.",
            "type": "string"
          },
          "https_proxy": {
            "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
            "type": "string"
          },
          "gcp_service_account_email": {
            "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "OciConfig",
      "description": "OCI repo configuration for a single cluster\n\nAttributes:\n    sync_repo (str):\n        The OCI image repository URL for the package to sync from.\n        e.g.\n        ``LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME``.\n    policy_dir (str):\n        The absolute path of the directory that\n        contains the local resources.  Default: the root\n        directory of the image.\n    sync_wait_secs (int):\n        Period in seconds between consecutive syncs.\n        Default: 15.\n    secret_type (str):\n        Type of secret configured for access to the\n        Git repo.\n    gcp_service_account_email (str):\n        The Google Cloud Service Account Email used for auth when\n        secret_type is gcpServiceAccount.",
      "parameters": {
        "type": "object",
        "properties": {
          "sync_repo": {
            "description": "The OCI image repository URL for the package to sync from. e.g. ``LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME``.",
            "type": "string"
          },
          "policy_dir": {
            "description": "The absolute path of the directory that contains the local resources.  Default: the root directory of the image.",
            "type": "string"
          },
          "sync_wait_secs": {
            "description": "Period in seconds between consecutive syncs. Default: 15.",
            "type": "integer"
          },
          "secret_type": {
            "description": "Type of secret configured for access to the Git repo.",
            "type": "string"
          },
          "gcp_service_account_email": {
            "description": "The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "PolicyController",
      "description": "Configuration for Policy Controller\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    enabled (bool):\n        Enables the installation of Policy\n        Controller. If false, the rest of\n        PolicyController fields take no effect.\n    template_library_installed (bool):\n        Installs the default template library along\n        with Policy Controller.\n\n        This field is a member of `oneof`_ ``_template_library_installed``.\n    audit_interval_seconds (int):\n        Sets the interval for Policy Controller Audit\n        Scans (in seconds). When set to 0, this disables\n        audit functionality altogether.\n\n        This field is a member of `oneof`_ ``_audit_interval_seconds``.\n    exemptable_namespaces (MutableSequence[str]):\n        The set of namespaces that are excluded from\n        Policy Controller checks. Namespaces do not need\n        to currently exist on the cluster.\n    referential_rules_enabled (bool):\n        Enables",
      "parameters": {
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.",
            "type": "boolean"
          },
          "template_library_installed": {
            "description": "Installs the default template library along with Policy Controller.  This field is a member of `oneof`_ ``_template_library_installed``.",
            "type": "boolean"
          },
          "audit_interval_seconds": {
            "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.  This field is a member of `oneof`_ ``_audit_interval_seconds``.",
            "type": "integer"
          },
          "exemptable_namespaces": {
            "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referential_rules_enabled": {
            "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
            "type": "boolean"
          },
          "log_denies_enabled": {
            "description": "Logs all denies and dry run failures.",
            "type": "boolean"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "HierarchyControllerConfig",
      "description": "Configuration for Hierarchy Controller\n\nAttributes:\n    enabled (bool):\n        Whether Hierarchy Controller is enabled in\n        this cluster.\n    enable_pod_tree_labels (bool):\n        Whether pod tree labels are enabled in this\n        cluster.\n    enable_hierarchical_resource_quota (bool):\n        Whether hierarchical resource quota is\n        enabled in this cluster.",
      "parameters": {
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Whether Hierarchy Controller is enabled in this cluster.",
            "type": "boolean"
          },
          "enable_pod_tree_labels": {
            "description": "Whether pod tree labels are enabled in this cluster.",
            "type": "boolean"
          },
          "enable_hierarchical_resource_quota": {
            "description": "Whether hierarchical resource quota is enabled in this cluster.",
            "type": "boolean"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "HierarchyControllerDeploymentState",
      "description": "Deployment state for Hierarchy Controller\n\nAttributes:\n    hnc (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        The deployment state for open source HNC\n        (e.g. v0.7.0-hc.0)\n    extension (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        The deployment state for Hierarchy Controller\n        extension (e.g. v0.7.0-hc.1)",
      "parameters": {
        "type": "object",
        "properties": {
          "hnc": {
            "description": "The deployment state for open source HNC (e.g. v0.7.0-hc.0)",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          },
          "extension": {
            "description": "The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "HierarchyControllerVersion",
      "description": "Version for Hierarchy Controller\n\nAttributes:\n    hnc (str):\n        Version for open source HNC\n    extension (str):\n        Version for Hierarchy Controller extension",
      "parameters": {
        "type": "object",
        "properties": {
          "hnc": {
            "description": "Version for open source HNC",
            "type": "string"
          },
          "extension": {
            "description": "Version for Hierarchy Controller extension",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "HierarchyControllerState",
      "description": "State for Hierarchy Controller\n\nAttributes:\n    version (google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerVersion):\n        The version for Hierarchy Controller\n    state (google.cloud.gkehub.configmanagement_v1.types.HierarchyControllerDeploymentState):\n        The deployment state for Hierarchy Controller",
      "parameters": {
        "type": "object",
        "properties": {
          "version": {
            "description": "The version for Hierarchy Controller",
            "type": "object",
            "properties": {
              "hnc": {
                "description": "Version for open source HNC",
                "type": "string"
              },
              "extension": {
                "description": "Version for Hierarchy Controller extension",
                "type": "string"
              }
            }
          },
          "state": {
            "description": "The deployment state for Hierarchy Controller",
            "type": "object",
            "properties": {
              "hnc": {
                "description": "The deployment state for open source HNC (e.g. v0.7.0-hc.0)",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              },
              "extension": {
                "description": "The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "OperatorState",
      "description": "State information for an ACM's Operator\n\nAttributes:\n    version (str):\n        The semenatic version number of the operator\n    deployment_state (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        The state of the Operator's deployment\n    errors (MutableSequence[google.cloud.gkehub.configmanagement_v1.types.InstallError]):\n        Install errors.",
      "parameters": {
        "type": "object",
        "properties": {
          "version": {
            "description": "The semenatic version number of the operator",
            "type": "string"
          },
          "deployment_state": {
            "description": "The state of the Operator's deployment",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          },
          "errors": {
            "description": "Install errors.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "error_message": {
                  "description": "A string representing the user facing error message",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "InstallError",
      "description": "Errors pertaining to the installation of ACM\n\nAttributes:\n    error_message (str):\n        A string representing the user facing error\n        message",
      "parameters": {
        "type": "object",
        "properties": {
          "error_message": {
            "description": "A string representing the user facing error message",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "ConfigSyncState",
      "description": "State information for ConfigSync\n\nAttributes:\n    version (google.cloud.gkehub.configmanagement_v1.types.ConfigSyncVersion):\n        The version of ConfigSync deployed\n    deployment_state (google.cloud.gkehub.configmanagement_v1.types.ConfigSyncDeploymentState):\n        Information about the deployment of\n        ConfigSync, including the version of the various\n        Pods deployed\n    sync_state (google.cloud.gkehub.configmanagement_v1.types.SyncState):\n        The state of ConfigSync's process to sync\n        configs to a cluster\n    errors (MutableSequence[google.cloud.gkehub.configmanagement_v1.types.ConfigSyncError]):\n        Errors pertaining to the installation of\n        Config Sync.\n    rootsync_crd (google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState):\n        The state of the RootSync CRD\n    reposync_crd (google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState):\n        The state of the Reposync CRD\n    state (google.cloud.gkehub.configmanagement_v1.types.Config",
      "parameters": {
        "type": "object",
        "properties": {
          "version": {
            "description": "The version of ConfigSync deployed",
            "type": "object",
            "properties": {
              "importer": {
                "description": "Version of the deployed importer pod",
                "type": "string"
              },
              "syncer": {
                "description": "Version of the deployed syncer pod",
                "type": "string"
              },
              "git_sync": {
                "description": "Version of the deployed git-sync pod",
                "type": "string"
              },
              "monitor": {
                "description": "Version of the deployed monitor pod",
                "type": "string"
              },
              "reconciler_manager": {
                "description": "Version of the deployed reconciler-manager pod",
                "type": "string"
              },
              "root_reconciler": {
                "description": "Version of the deployed reconciler container in root-reconciler pod",
                "type": "string"
              },
              "admission_webhook": {
                "description": "Version of the deployed admission_webhook pod",
                "type": "string"
              }
            }
          },
          "deployment_state": {
            "description": "Information about the deployment of ConfigSync, including the version of the various Pods deployed",
            "type": "object",
            "properties": {
              "importer": {
                "description": "Deployment state of the importer pod",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              },
              "syncer": {
                "description": "Deployment state of the syncer pod",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              },
              "git_sync": {
                "description": "Deployment state of the git-sync pod",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              },
              "monitor": {
                "description": "Deployment state of the monitor pod",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              },
              "reconciler_manager": {
                "description": "Deployment state of reconciler-manager pod",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              },
              "root_reconciler": {
                "description": "Deployment state of root-reconciler",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              },
              "admission_webhook": {
                "description": "Deployment state of admission-webhook",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              }
            }
          },
          "sync_state": {
            "description": "The state of ConfigSync's process to sync configs to a cluster",
            "type": "object",
            "properties": {
              "source_token": {
                "description": "Token indicating the state of the repo.",
                "type": "string"
              },
              "import_token": {
                "description": "Token indicating the state of the importer.",
                "type": "string"
              },
              "sync_token": {
                "description": "Token indicating the state of the syncer.",
                "type": "string"
              },
              "last_sync": {
                "description": "Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String",
                "type": "string"
              },
              "last_sync_time": {
                "description": "Timestamp type of when ACM last successfully synced the repo",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "code": {
                "description": "Sync status code",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncState.SyncCode"
              },
              "errors": {
                "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "An ACM defined error code",
                      "type": "string"
                    },
                    "error_message": {
                      "description": "A description of the error",
                      "type": "string"
                    },
                    "error_resources": {
                      "description": "A list of config(s) associated with the error, if any",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "source_path": {
                            "description": "Path in the git repo of the erroneous config",
                            "type": "string"
                          },
                          "resource_name": {
                            "description": "Metadata name of the resource that is causing an error",
                            "type": "string"
                          },
                          "resource_namespace": {
                            "description": "Namespace of the resource that is causing an error",
                            "type": "string"
                          },
                          "resource_gvk": {
                            "type": "object",
                            "properties": {
                              "group": {
                                "description": "Kubernetes Group",
                                "type": "string"
                              },
                              "version": {
                                "description": "Kubernetes Version",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kubernetes Kind",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "errors": {
            "description": "Errors pertaining to the installation of Config Sync.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "error_message": {
                  "description": "A string representing the user facing error message",
                  "type": "string"
                }
              }
            }
          },
          "rootsync_crd": {
            "description": "The state of the RootSync CRD",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState"
          },
          "reposync_crd": {
            "description": "The state of the Reposync CRD",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.CRDState"
          },
          "state": {
            "description": "The state of CS This field summarizes the other fields in this message.",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.ConfigSyncState.State"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "ConfigSyncError",
      "description": "Errors pertaining to the installation of Config Sync\n\nAttributes:\n    error_message (str):\n        A string representing the user facing error\n        message",
      "parameters": {
        "type": "object",
        "properties": {
          "error_message": {
            "description": "A string representing the user facing error message",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "ConfigSyncVersion",
      "description": "Specific versioning information pertaining to ConfigSync's\nPods\n\nAttributes:\n    importer (str):\n        Version of the deployed importer pod\n    syncer (str):\n        Version of the deployed syncer pod\n    git_sync (str):\n        Version of the deployed git-sync pod\n    monitor (str):\n        Version of the deployed monitor pod\n    reconciler_manager (str):\n        Version of the deployed reconciler-manager\n        pod\n    root_reconciler (str):\n        Version of the deployed reconciler container\n        in root-reconciler pod\n    admission_webhook (str):\n        Version of the deployed admission_webhook pod",
      "parameters": {
        "type": "object",
        "properties": {
          "importer": {
            "description": "Version of the deployed importer pod",
            "type": "string"
          },
          "syncer": {
            "description": "Version of the deployed syncer pod",
            "type": "string"
          },
          "git_sync": {
            "description": "Version of the deployed git-sync pod",
            "type": "string"
          },
          "monitor": {
            "description": "Version of the deployed monitor pod",
            "type": "string"
          },
          "reconciler_manager": {
            "description": "Version of the deployed reconciler-manager pod",
            "type": "string"
          },
          "root_reconciler": {
            "description": "Version of the deployed reconciler container in root-reconciler pod",
            "type": "string"
          },
          "admission_webhook": {
            "description": "Version of the deployed admission_webhook pod",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "ConfigSyncDeploymentState",
      "description": "The state of ConfigSync's deployment on a cluster\n\nAttributes:\n    importer (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        Deployment state of the importer pod\n    syncer (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        Deployment state of the syncer pod\n    git_sync (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        Deployment state of the git-sync pod\n    monitor (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        Deployment state of the monitor pod\n    reconciler_manager (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        Deployment state of reconciler-manager pod\n    root_reconciler (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        Deployment state of root-reconciler\n    admission_webhook (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        Deployment state of admission-webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "importer": {
            "description": "Deployment state of the importer pod",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          },
          "syncer": {
            "description": "Deployment state of the syncer pod",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          },
          "git_sync": {
            "description": "Deployment state of the git-sync pod",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          },
          "monitor": {
            "description": "Deployment state of the monitor pod",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          },
          "reconciler_manager": {
            "description": "Deployment state of reconciler-manager pod",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          },
          "root_reconciler": {
            "description": "Deployment state of root-reconciler",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          },
          "admission_webhook": {
            "description": "Deployment state of admission-webhook",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "SyncState",
      "description": "State indicating an ACM's progress syncing configurations to\na cluster\n\nAttributes:\n    source_token (str):\n        Token indicating the state of the repo.\n    import_token (str):\n        Token indicating the state of the importer.\n    sync_token (str):\n        Token indicating the state of the syncer.\n    last_sync (str):\n        Deprecated: use last_sync_time instead. Timestamp of when\n        ACM last successfully synced the repo The time format is\n        specified in https://golang.org/pkg/time/#Time.String\n    last_sync_time (google.protobuf.timestamp_pb2.Timestamp):\n        Timestamp type of when ACM last successfully\n        synced the repo\n    code (google.cloud.gkehub.configmanagement_v1.types.SyncState.SyncCode):\n        Sync status code\n    errors (MutableSequence[google.cloud.gkehub.configmanagement_v1.types.SyncError]):\n        A list of errors resulting from problematic\n        configs. This list will be truncated after 100\n        errors, although it is unlikely for that many\n        errors to",
      "parameters": {
        "type": "object",
        "properties": {
          "source_token": {
            "description": "Token indicating the state of the repo.",
            "type": "string"
          },
          "import_token": {
            "description": "Token indicating the state of the importer.",
            "type": "string"
          },
          "sync_token": {
            "description": "Token indicating the state of the syncer.",
            "type": "string"
          },
          "last_sync": {
            "description": "Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String",
            "type": "string"
          },
          "last_sync_time": {
            "description": "Timestamp type of when ACM last successfully synced the repo",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          },
          "code": {
            "description": "Sync status code",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.SyncState.SyncCode"
          },
          "errors": {
            "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "An ACM defined error code",
                  "type": "string"
                },
                "error_message": {
                  "description": "A description of the error",
                  "type": "string"
                },
                "error_resources": {
                  "description": "A list of config(s) associated with the error, if any",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "source_path": {
                        "description": "Path in the git repo of the erroneous config",
                        "type": "string"
                      },
                      "resource_name": {
                        "description": "Metadata name of the resource that is causing an error",
                        "type": "string"
                      },
                      "resource_namespace": {
                        "description": "Namespace of the resource that is causing an error",
                        "type": "string"
                      },
                      "resource_gvk": {
                        "type": "object",
                        "properties": {
                          "group": {
                            "description": "Kubernetes Group",
                            "type": "string"
                          },
                          "version": {
                            "description": "Kubernetes Version",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kubernetes Kind",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "SyncError",
      "description": "An ACM created error representing a problem syncing\nconfigurations\n\nAttributes:\n    code (str):\n        An ACM defined error code\n    error_message (str):\n        A description of the error\n    error_resources (MutableSequence[google.cloud.gkehub.configmanagement_v1.types.ErrorResource]):\n        A list of config(s) associated with the\n        error, if any",
      "parameters": {
        "type": "object",
        "properties": {
          "code": {
            "description": "An ACM defined error code",
            "type": "string"
          },
          "error_message": {
            "description": "A description of the error",
            "type": "string"
          },
          "error_resources": {
            "description": "A list of config(s) associated with the error, if any",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source_path": {
                  "description": "Path in the git repo of the erroneous config",
                  "type": "string"
                },
                "resource_name": {
                  "description": "Metadata name of the resource that is causing an error",
                  "type": "string"
                },
                "resource_namespace": {
                  "description": "Namespace of the resource that is causing an error",
                  "type": "string"
                },
                "resource_gvk": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "Kubernetes Group",
                      "type": "string"
                    },
                    "version": {
                      "description": "Kubernetes Version",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kubernetes Kind",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "ErrorResource",
      "description": "Model for a config file in the git repo with an associated\nSync error\n\nAttributes:\n    source_path (str):\n        Path in the git repo of the erroneous config\n    resource_name (str):\n        Metadata name of the resource that is causing\n        an error\n    resource_namespace (str):\n        Namespace of the resource that is causing an\n        error\n    resource_gvk (google.cloud.gkehub.configmanagement_v1.types.GroupVersionKind):\n        Group/version/kind of the resource that is\n        causing an error",
      "parameters": {
        "type": "object",
        "properties": {
          "source_path": {
            "description": "Path in the git repo of the erroneous config",
            "type": "string"
          },
          "resource_name": {
            "description": "Metadata name of the resource that is causing an error",
            "type": "string"
          },
          "resource_namespace": {
            "description": "Namespace of the resource that is causing an error",
            "type": "string"
          },
          "resource_gvk": {
            "description": "Group/version/kind of the resource that is causing an error",
            "type": "object",
            "properties": {
              "group": {
                "description": "Kubernetes Group",
                "type": "string"
              },
              "version": {
                "description": "Kubernetes Version",
                "type": "string"
              },
              "kind": {
                "description": "Kubernetes Kind",
                "type": "string"
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "GroupVersionKind",
      "description": "A Kubernetes object's GVK\n\nAttributes:\n    group (str):\n        Kubernetes Group\n    version (str):\n        Kubernetes Version\n    kind (str):\n        Kubernetes Kind",
      "parameters": {
        "type": "object",
        "properties": {
          "group": {
            "description": "Kubernetes Group",
            "type": "string"
          },
          "version": {
            "description": "Kubernetes Version",
            "type": "string"
          },
          "kind": {
            "description": "Kubernetes Kind",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "PolicyControllerState",
      "description": "State for PolicyControllerState.\n\nAttributes:\n    version (google.cloud.gkehub.configmanagement_v1.types.PolicyControllerVersion):\n        The version of Gatekeeper Policy Controller\n        deployed.\n    deployment_state (google.cloud.gkehub.configmanagement_v1.types.GatekeeperDeploymentState):\n        The state about the policy controller\n        installation.",
      "parameters": {
        "type": "object",
        "properties": {
          "version": {
            "description": "The version of Gatekeeper Policy Controller deployed.",
            "type": "object",
            "properties": {
              "version": {
                "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number.",
                "type": "string"
              }
            }
          },
          "deployment_state": {
            "description": "The state about the policy controller installation.",
            "type": "object",
            "properties": {
              "gatekeeper_controller_manager_state": {
                "description": "Status of gatekeeper-controller-manager pod.",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              },
              "gatekeeper_audit": {
                "description": "Status of gatekeeper-audit deployment.",
                "type": "object",
                "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "PolicyControllerVersion",
      "description": "The build version of Gatekeeper Policy Controller is using.\n\nAttributes:\n    version (str):\n        The gatekeeper image tag that is composed of\n        ACM version, git tag, build number.",
      "parameters": {
        "type": "object",
        "properties": {
          "version": {
            "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "GatekeeperDeploymentState",
      "description": "State of Policy Controller installation.\n\nAttributes:\n    gatekeeper_controller_manager_state (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        Status of gatekeeper-controller-manager pod.\n    gatekeeper_audit (google.cloud.gkehub.configmanagement_v1.types.DeploymentState):\n        Status of gatekeeper-audit deployment.",
      "parameters": {
        "type": "object",
        "properties": {
          "gatekeeper_controller_manager_state": {
            "description": "Status of gatekeeper-controller-manager pod.",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          },
          "gatekeeper_audit": {
            "description": "Status of gatekeeper-audit deployment.",
            "type": "object",
            "reference": "google.cloud.gkehub.configmanagement_v1.types.DeploymentState"
          }
        }
      }
    }
  ]
}