{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-video-stitcher\\google\\cloud\\video\\stitcher_v1\\types\\ad_tag_details.py": [
    {
      "type": "request_class",
      "name": "LiveAdTagDetail",
      "docstring": "Information related to the details for one ad tag. This\nresource is only available for live sessions that do not\nimplement Google Ad Manager ad insertion.\n\nAttributes:\n    name (str):\n        The resource name in the form of\n        ``projects/{project}/locations/{location}/liveSessions/{live_session}/liveAdTagDetails/{id}``.\n    ad_requests (MutableSequence[google.cloud.video.stitcher_v1.types.AdRequest]):\n        A list of ad requests.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The resource name in the form of ``projects/{project}/locations/{location}/liveSessions/{live_session}/liveAdTagDetails/{id}``."
        },
        "ad_requests": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.AdRequest]",
          "description": "A list of ad requests."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VodAdTagDetail",
      "docstring": "Information related to the details for one ad tag. This\nresource is only available for VOD sessions that do not\nimplement Google Ad Manager ad insertion.\n\nAttributes:\n    name (str):\n        The name of the ad tag detail for the specified VOD session,\n        in the form of\n        ``projects/{project}/locations/{location}/vodSessions/{vod_session_id}/vodAdTagDetails/{id}``.\n    ad_requests (MutableSequence[google.cloud.video.stitcher_v1.types.AdRequest]):\n        A list of ad requests for one ad tag.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The name of the ad tag detail for the specified VOD session, in the form of ``projects/{project}/locations/{location}/vodSessions/{vod_session_id}/vodAdTagDetails/{id}``."
        },
        "ad_requests": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.AdRequest]",
          "description": "A list of ad requests for one ad tag."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AdRequest",
      "docstring": "Details of an ad request to an ad server.\n\nAttributes:\n    uri (str):\n        The ad tag URI processed with integrated\n        macros.\n    request_metadata (google.cloud.video.stitcher_v1.types.RequestMetadata):\n        The request metadata used to make the ad\n        request.\n    response_metadata (google.cloud.video.stitcher_v1.types.ResponseMetadata):\n        The response metadata received from the ad\n        request.",
      "attributes": {
        "uri": {
          "type": "str",
          "description": "The ad tag URI processed with integrated macros."
        },
        "request_metadata": {
          "type": "google.cloud.video.stitcher_v1.types.RequestMetadata",
          "description": "The request metadata used to make the ad request."
        },
        "response_metadata": {
          "type": "google.cloud.video.stitcher_v1.types.ResponseMetadata",
          "description": "The response metadata received from the ad request."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RequestMetadata",
      "docstring": "Metadata for an ad request.\n\nAttributes:\n    headers (google.protobuf.struct_pb2.Struct):\n        The HTTP headers of the ad request.",
      "attributes": {
        "headers": {
          "type": "google.protobuf.struct_pb2.Struct",
          "description": "The HTTP headers of the ad request."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ResponseMetadata",
      "docstring": "Metadata for the response of an ad request.\n\nAttributes:\n    error (str):\n        Error message received when making the ad\n        request.\n    headers (google.protobuf.struct_pb2.Struct):\n        Headers from the response.\n    status_code (str):\n        Status code for the response.\n    size_bytes (int):\n        Size in bytes of the response.\n    duration (google.protobuf.duration_pb2.Duration):\n        Total time elapsed for the response.\n    body (str):\n        The body of the response.",
      "attributes": {
        "error": {
          "type": "str",
          "description": "Error message received when making the ad request."
        },
        "headers": {
          "type": "google.protobuf.struct_pb2.Struct",
          "description": "Headers from the response."
        },
        "status_code": {
          "type": "str",
          "description": "Status code for the response."
        },
        "size_bytes": {
          "type": "int",
          "description": "Size in bytes of the response."
        },
        "duration": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Total time elapsed for the response."
        },
        "body": {
          "type": "str",
          "description": "The body of the response."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-video-stitcher\\google\\cloud\\video\\stitcher_v1\\types\\cdn_keys.py": [
    {
      "type": "request_class",
      "name": "CdnKey",
      "docstring": "Configuration for a CDN key. Used by the Video Stitcher\nto sign URIs for fetching video manifests and signing media\nsegments for playback.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    google_cdn_key (google.cloud.video.stitcher_v1.types.GoogleCdnKey):\n        The configuration for a Google Cloud CDN key.\n\n        This field is a member of `oneof`_ ``cdn_key_config``.\n    akamai_cdn_key (google.cloud.video.stitcher_v1.types.AkamaiCdnKey):\n        The configuration for an Akamai CDN key.\n\n        This field is a member of `oneof`_ ``cdn_key_config``.\n    media_cdn_key (google.cloud.video.stitcher_v1.types.MediaCdnKey):\n        The configuration for a Media CDN key.\n\n        This field is a member of `oneof`_ ``cdn_key_config``.\n   ",
      "attributes": {
        "google_cdn_key": {
          "type": "google.cloud.video.stitcher_v1.types.GoogleCdnKey",
          "description": "The configuration for a Google Cloud CDN key.  This field is a member of `oneof`_ ``cdn_key_config``."
        },
        "akamai_cdn_key": {
          "type": "google.cloud.video.stitcher_v1.types.AkamaiCdnKey",
          "description": "The configuration for an Akamai CDN key.  This field is a member of `oneof`_ ``cdn_key_config``."
        },
        "media_cdn_key": {
          "type": "google.cloud.video.stitcher_v1.types.MediaCdnKey",
          "description": "The configuration for a Media CDN key.  This field is a member of `oneof`_ ``cdn_key_config``."
        },
        "name": {
          "type": "str",
          "description": "The resource name of the CDN key, in the form of ``projects/{project}/locations/{location}/cdnKeys/{id}``. The name is ignored when creating a CDN key."
        },
        "hostname": {
          "type": "str",
          "description": "The hostname this key applies to."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GoogleCdnKey",
      "docstring": "Configuration for a Google Cloud CDN key.\n\nAttributes:\n    private_key (bytes):\n        Input only. Secret for this Google Cloud CDN\n        key.\n    key_name (str):\n        The public name of the Google Cloud CDN key.",
      "attributes": {
        "private_key": {
          "type": "bytes",
          "description": "Input only. Secret for this Google Cloud CDN key."
        },
        "key_name": {
          "type": "str",
          "description": "The public name of the Google Cloud CDN key."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AkamaiCdnKey",
      "docstring": "Configuration for an Akamai CDN key.\n\nAttributes:\n    token_key (bytes):\n        Input only. Token key for the Akamai CDN edge\n        configuration.",
      "attributes": {
        "token_key": {
          "type": "bytes",
          "description": "Input only. Token key for the Akamai CDN edge configuration."
        }
      }
    },
    {
      "type": "request_class",
      "name": "MediaCdnKey",
      "docstring": "Configuration for a Media CDN key.\n\nAttributes:\n    private_key (bytes):\n        Input only. 64-byte ed25519 private key for\n        this Media CDN key.\n    key_name (str):\n        The keyset name of the Media CDN key.\n    token_config (google.cloud.video.stitcher_v1.types.MediaCdnKey.TokenConfig):\n        Optional. If set, the URL will be signed\n        using the Media CDN token. Otherwise, the URL\n        would be signed using the standard Media CDN\n        signature.",
      "attributes": {
        "private_key": {
          "type": "bytes",
          "description": "Input only. 64-byte ed25519 private key for this Media CDN key."
        },
        "key_name": {
          "type": "str",
          "description": "The keyset name of the Media CDN key."
        },
        "token_config": {
          "type": "google.cloud.video.stitcher_v1.types.MediaCdnKey.TokenConfig",
          "description": "Optional. If set, the URL will be signed using the Media CDN token. Otherwise, the URL would be signed using the standard Media CDN signature."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TokenConfig",
      "docstring": "Configuration for a Media CDN token.\n\nAttributes:\n    query_parameter (str):\n        Optional. The query parameter in which to find the token.\n\n        The name must be 1-64 characters long and match the regular\n        expression ``[a-zA-Z]([a-zA-Z0-9_-])*`` which means the\n        first character must be a letter, and all following\n        characters must be a dash, underscore, letter or digit.\n\n        Defaults to ``edge-cache-token``.",
      "attributes": {
        "query_parameter": {
          "type": "str",
          "description": "Optional. The query parameter in which to find the token.  The name must be 1-64 characters long and match the regular expression ``[a-zA-Z]([a-zA-Z0-9_-])*`` which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.  Defaults to ``edge-cache-token``."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-video-stitcher\\google\\cloud\\video\\stitcher_v1\\types\\companions.py": [
    {
      "type": "request_class",
      "name": "CompanionAds",
      "docstring": "Metadata for companion ads.\n\nAttributes:\n    display_requirement (google.cloud.video.stitcher_v1.types.CompanionAds.DisplayRequirement):\n        Indicates how many of the companions should\n        be displayed with the ad.\n    companions (MutableSequence[google.cloud.video.stitcher_v1.types.Companion]):\n        List of companion ads.",
      "attributes": {
        "display_requirement": {
          "type": "google.cloud.video.stitcher_v1.types.CompanionAds.DisplayRequirement",
          "description": "Indicates how many of the companions should be displayed with the ad."
        },
        "companions": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.Companion]",
          "description": "List of companion ads."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Companion",
      "docstring": "Metadata for a companion.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    iframe_ad_resource (google.cloud.video.stitcher_v1.types.IframeAdResource):\n        The IFrame ad resource associated with the\n        companion ad.\n\n        This field is a member of `oneof`_ ``ad_resource``.\n    static_ad_resource (google.cloud.video.stitcher_v1.types.StaticAdResource):\n        The static ad resource associated with the\n        companion ad.\n\n        This field is a member of `oneof`_ ``ad_resource``.\n    html_ad_resource (google.cloud.video.stitcher_v1.types.HtmlAdResource):\n        The HTML ad resource associated with the\n        companion ad.\n\n        This field is a member of `oneof`_ ``ad_resource``.\n    api_framework (str):\n        The",
      "attributes": {
        "iframe_ad_resource": {
          "type": "google.cloud.video.stitcher_v1.types.IframeAdResource",
          "description": "The IFrame ad resource associated with the companion ad.  This field is a member of `oneof`_ ``ad_resource``."
        },
        "static_ad_resource": {
          "type": "google.cloud.video.stitcher_v1.types.StaticAdResource",
          "description": "The static ad resource associated with the companion ad.  This field is a member of `oneof`_ ``ad_resource``."
        },
        "html_ad_resource": {
          "type": "google.cloud.video.stitcher_v1.types.HtmlAdResource",
          "description": "The HTML ad resource associated with the companion ad.  This field is a member of `oneof`_ ``ad_resource``."
        },
        "api_framework": {
          "type": "str",
          "description": "The API necessary to communicate with the creative if available."
        },
        "height_px": {
          "type": "int",
          "description": "The pixel height of the placement slot for the intended creative."
        },
        "width_px": {
          "type": "int",
          "description": "The pixel width of the placement slot for the intended creative."
        },
        "asset_height_px": {
          "type": "int",
          "description": "The pixel height of the creative."
        },
        "expanded_height_px": {
          "type": "int",
          "description": "The maximum pixel height of the creative in its expanded state."
        },
        "asset_width_px": {
          "type": "int",
          "description": "The pixel width of the creative."
        },
        "expanded_width_px": {
          "type": "int",
          "description": "The maximum pixel width of the creative in its expanded state."
        },
        "ad_slot_id": {
          "type": "str",
          "description": "The ID used to identify the desired placement on a publisher's page. Values to be used should be discussed between publishers and advertisers."
        },
        "events": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.Event]",
          "description": "The list of tracking events for the companion."
        }
      }
    },
    {
      "type": "request_class",
      "name": "HtmlAdResource",
      "docstring": "Metadata for an HTML ad resource.\n\nAttributes:\n    html_source (str):\n        The HTML to display for the ad resource.",
      "attributes": {
        "html_source": {
          "type": "str",
          "description": "The HTML to display for the ad resource."
        }
      }
    },
    {
      "type": "request_class",
      "name": "IframeAdResource",
      "docstring": "Metadata for an IFrame ad resource.\n\nAttributes:\n    uri (str):\n        URI source for an IFrame to display for the\n        ad resource.",
      "attributes": {
        "uri": {
          "type": "str",
          "description": "URI source for an IFrame to display for the ad resource."
        }
      }
    },
    {
      "type": "request_class",
      "name": "StaticAdResource",
      "docstring": "Metadata for a static ad resource.\n\nAttributes:\n    uri (str):\n        URI to the static file for the ad resource.\n    creative_type (str):\n        Describes the MIME type of the ad resource.",
      "attributes": {
        "uri": {
          "type": "str",
          "description": "URI to the static file for the ad resource."
        },
        "creative_type": {
          "type": "str",
          "description": "Describes the MIME type of the ad resource."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-video-stitcher\\google\\cloud\\video\\stitcher_v1\\types\\events.py": [
    {
      "type": "request_class",
      "name": "Event",
      "docstring": "Describes an event and a trigger URI.\n\nAttributes:\n    type_ (google.cloud.video.stitcher_v1.types.Event.EventType):\n        Describes the event that occurred.\n    uri (str):\n        The URI to trigger for this event.\n    id (str):\n        The ID of the event.\n    offset (google.protobuf.duration_pb2.Duration):\n        The offset in seconds if the event type is ``PROGRESS``.",
      "attributes": {
        "type_": {
          "type": "google.cloud.video.stitcher_v1.types.Event.EventType",
          "description": "Describes the event that occurred."
        },
        "uri": {
          "type": "str",
          "description": "The URI to trigger for this event."
        },
        "id": {
          "type": "str",
          "description": "The ID of the event."
        },
        "offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "The offset in seconds if the event type is ``PROGRESS``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ProgressEvent",
      "docstring": "Indicates a time in which a list of events should be\ntriggered during media playback.\n\nAttributes:\n    time_offset (google.protobuf.duration_pb2.Duration):\n        The time when the following tracking events\n        occurs. The time is in seconds relative to the\n        start of the VOD asset.\n    events (MutableSequence[google.cloud.video.stitcher_v1.types.Event]):\n        The list of progress tracking events for the ad break. These\n        can be of the following IAB types: ``BREAK_START``,\n        ``BREAK_END``, ``IMPRESSION``, ``CREATIVE_VIEW``, ``START``,\n        ``FIRST_QUARTILE``, ``MIDPOINT``, ``THIRD_QUARTILE``,\n        ``COMPLETE``, ``PROGRESS``.",
      "attributes": {
        "time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "The time when the following tracking events occurs. The time is in seconds relative to the start of the VOD asset."
        },
        "events": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.Event]",
          "description": "The list of progress tracking events for the ad break. These can be of the following IAB types: ``BREAK_START``, ``BREAK_END``, ``IMPRESSION``, ``CREATIVE_VIEW``, ``START``, ``FIRST_QUARTILE``, ``MIDPOINT``, ``THIRD_QUARTILE``, ``COMPLETE``, ``PROGRESS``."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-video-stitcher\\google\\cloud\\video\\stitcher_v1\\types\\fetch_options.py": [
    {
      "type": "request_class",
      "name": "FetchOptions",
      "docstring": "Options on how fetches should be made.\n\nAttributes:\n    headers (MutableMapping[str, str]):\n        Custom headers to pass into fetch request.\n        Headers must have a maximum of 3 key value\n        pairs. Each key value pair must have a maximum\n        of 256 characters per key and 256 characters per\n        value.",
      "attributes": {
        "headers": {
          "type": "MutableMapping[str, str]",
          "description": "Custom headers to pass into fetch request. Headers must have a maximum of 3 key value pairs. Each key value pair must have a maximum of 256 characters per key and 256 characters per value."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-video-stitcher\\google\\cloud\\video\\stitcher_v1\\types\\live_configs.py": [
    {
      "type": "request_class",
      "name": "LiveConfig",
      "docstring": "Metadata for used to register live configs.\n\nAttributes:\n    name (str):\n        Output only. The resource name of the live config, in the\n        form of\n        ``projects/{project}/locations/{location}/liveConfigs/{id}``.\n    source_uri (str):\n        Required. Source URI for the live stream\n        manifest.\n    ad_tag_uri (str):\n        The default ad tag associated with this live\n        stream config.\n    gam_live_config (google.cloud.video.stitcher_v1.types.GamLiveConfig):\n        Additional metadata used to register a live\n        stream with Google Ad Manager (GAM)\n    state (google.cloud.video.stitcher_v1.types.LiveConfig.State):\n        Output only. State of the live config.\n    ad_tracking (google.cloud.video.stitcher_v1.types.AdTracking):\n        Required. Determines how the ads are tracked.\n    default_slate (str):\n        This must refer to a slate in the same project. If Google Ad\n        Manager (GAM) is used for ads, this string sets the value of\n        ``slateCreativeId`` in\n        https",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. The resource name of the live config, in the form of ``projects/{project}/locations/{location}/liveConfigs/{id}``."
        },
        "source_uri": {
          "type": "str",
          "description": "Required. Source URI for the live stream manifest."
        },
        "ad_tag_uri": {
          "type": "str",
          "description": "The default ad tag associated with this live stream config."
        },
        "gam_live_config": {
          "type": "google.cloud.video.stitcher_v1.types.GamLiveConfig",
          "description": "Additional metadata used to register a live stream with Google Ad Manager (GAM)"
        },
        "state": {
          "type": "google.cloud.video.stitcher_v1.types.LiveConfig.State",
          "description": "Output only. State of the live config."
        },
        "ad_tracking": {
          "type": "google.cloud.video.stitcher_v1.types.AdTracking",
          "description": "Required. Determines how the ads are tracked."
        },
        "default_slate": {
          "type": "str",
          "description": "This must refer to a slate in the same project. If Google Ad Manager (GAM) is used for ads, this string sets the value of ``slateCreativeId`` in https://developers.google.com/ad-manager/api/reference/v202211/LiveStreamEventService.LiveStreamEvent#slateCreativeId"
        },
        "stitching_policy": {
          "type": "google.cloud.video.stitcher_v1.types.LiveConfig.StitchingPolicy",
          "description": "Defines the stitcher behavior in case an ad does not align exactly with the ad break boundaries. If not specified, the default is ``CUT_CURRENT``."
        },
        "prefetch_config": {
          "type": "google.cloud.video.stitcher_v1.types.PrefetchConfig",
          "description": "The configuration for prefetching ads."
        },
        "source_fetch_options": {
          "type": "google.cloud.video.stitcher_v1.types.FetchOptions",
          "description": "Options for fetching source manifests and segments."
        }
      }
    },
    {
      "type": "request_class",
      "name": "PrefetchConfig",
      "docstring": "The configuration for prefetch ads.\n\nAttributes:\n    enabled (bool):\n        Required. Indicates whether the option to\n        prefetch ad requests is enabled.\n    initial_ad_request_duration (google.protobuf.duration_pb2.Duration):\n        The duration in seconds of the part of the\n        break to be prefetched. This field is only\n        relevant if prefetch is enabled. You should set\n        this duration to as long as possible to increase\n        the benefits of prefetching, but not longer than\n        the shortest ad break expected. For example, for\n        a live event with 30s and 60s ad breaks, the\n        initial duration should be set to 30s.",
      "attributes": {
        "enabled": {
          "type": "bool",
          "description": "Required. Indicates whether the option to prefetch ad requests is enabled."
        },
        "initial_ad_request_duration": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "The duration in seconds of the part of the break to be prefetched. This field is only relevant if prefetch is enabled. You should set this duration to as long as possible to increase the benefits of prefetching, but not longer than the shortest ad break expected. For example, for a live event with 30s and 60s ad breaks, the initial duration should be set to 30s."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GamLiveConfig",
      "docstring": "Metadata used to register a live stream with Google Ad\nManager (GAM)\n\nAttributes:\n    network_code (str):\n        Required. Ad Manager network code to\n        associate with the live config.\n    asset_key (str):\n        Output only. The asset key identifier\n        generated for the live config.\n    custom_asset_key (str):\n        Output only. The custom asset key identifier\n        generated for the live config.",
      "attributes": {
        "network_code": {
          "type": "str",
          "description": "Required. Ad Manager network code to associate with the live config."
        },
        "asset_key": {
          "type": "str",
          "description": "Output only. The asset key identifier generated for the live config."
        },
        "custom_asset_key": {
          "type": "str",
          "description": "Output only. The custom asset key identifier generated for the live config."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-video-stitcher\\google\\cloud\\video\\stitcher_v1\\types\\sessions.py": [
    {
      "type": "request_class",
      "name": "VodSession",
      "docstring": "Metadata for a VOD session. The session expires 4 hours after\nits creation.\n\nAttributes:\n    name (str):\n        Output only. The name of the VOD session, in the form of\n        ``projects/{project_number}/locations/{location}/vodSessions/{id}``.\n    interstitials (google.cloud.video.stitcher_v1.types.Interstitials):\n        Output only. Metadata of what was stitched\n        into the content.\n    play_uri (str):\n        Output only. The playback URI of the stitched\n        content.\n    source_uri (str):\n        URI of the media to stitch. For most use cases, you should\n        create a\n        [VodConfig][google.cloud.video.stitcher.v1.VodConfig] with\n        this information rather than setting this field directly.\n    ad_tag_uri (str):\n        Ad tag URI. For most use cases, you should create a\n        [VodConfig][google.cloud.video.stitcher.v1.VodConfig] with\n        this information rather than setting this field directly.\n    ad_tag_macro_map (MutableMapping[str, str]):\n        Key value pairs for ad tag",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. The name of the VOD session, in the form of ``projects/{project_number}/locations/{location}/vodSessions/{id}``."
        },
        "interstitials": {
          "type": "google.cloud.video.stitcher_v1.types.Interstitials",
          "description": "Output only. Metadata of what was stitched into the content."
        },
        "play_uri": {
          "type": "str",
          "description": "Output only. The playback URI of the stitched content."
        },
        "source_uri": {
          "type": "str",
          "description": "URI of the media to stitch. For most use cases, you should create a [VodConfig][google.cloud.video.stitcher.v1.VodConfig] with this information rather than setting this field directly."
        },
        "ad_tag_uri": {
          "type": "str",
          "description": "Ad tag URI. For most use cases, you should create a [VodConfig][google.cloud.video.stitcher.v1.VodConfig] with this information rather than setting this field directly."
        },
        "ad_tag_macro_map": {
          "type": "MutableMapping[str, str]",
          "description": "Key value pairs for ad tag macro replacement, only available for VOD sessions that do not implement Google Ad manager ad insertion. If the specified ad tag URI has macros, this field provides the mapping to the value that will replace the macro in the ad tag URI.  Macros are designated by square brackets, for example:  Ad tag URI: ``\"https://doubleclick.google.com/ad/1?geo_id=[geoId]\"``  Ad tag macro map: ``{\"geoId\": \"123\"}``  Fully qualified ad tag: ``\"https://doubleclick.google.com/ad/1?geo_id=123\"``"
        },
        "manifest_options": {
          "type": "google.cloud.video.stitcher_v1.types.ManifestOptions",
          "description": "Additional options that affect the output of the manifest."
        },
        "asset_id": {
          "type": "str",
          "description": "Output only. The generated ID of the VodSession's source media."
        },
        "ad_tracking": {
          "type": "google.cloud.video.stitcher_v1.types.AdTracking",
          "description": "Required. Determines how the ad should be tracked."
        },
        "gam_settings": {
          "type": "google.cloud.video.stitcher_v1.types.VodSession.GamSettings",
          "description": "This field should be set with appropriate values if GAM is being used for ads."
        },
        "vod_config": {
          "type": "str",
          "description": "The resource name of the VOD config for this session, in the form of ``projects/{project}/locations/{location}/vodConfigs/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Interstitials",
      "docstring": "Describes what was stitched into a VOD session's manifest.\n\nAttributes:\n    ad_breaks (MutableSequence[google.cloud.video.stitcher_v1.types.VodSessionAdBreak]):\n        List of ad breaks ordered by time.\n    session_content (google.cloud.video.stitcher_v1.types.VodSessionContent):\n        Information related to the content of the VOD\n        session.",
      "attributes": {
        "ad_breaks": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.VodSessionAdBreak]",
          "description": "List of ad breaks ordered by time."
        },
        "session_content": {
          "type": "google.cloud.video.stitcher_v1.types.VodSessionContent",
          "description": "Information related to the content of the VOD session."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VodSessionAd",
      "docstring": "Metadata for an inserted ad in a VOD session.\n\nAttributes:\n    duration (google.protobuf.duration_pb2.Duration):\n        Duration in seconds of the ad.\n    companion_ads (google.cloud.video.stitcher_v1.types.CompanionAds):\n        Metadata of companion ads associated with the\n        ad.\n    activity_events (MutableSequence[google.cloud.video.stitcher_v1.types.Event]):\n        The list of progress tracking events for the ad break. These\n        can be of the following IAB types: ``MUTE``, ``UNMUTE``,\n        ``PAUSE``, ``CLICK``, ``CLICK_THROUGH``, ``REWIND``,\n        ``RESUME``, ``ERROR``, ``FULLSCREEN``, ``EXIT_FULLSCREEN``,\n        ``EXPAND``, ``COLLAPSE``, ``ACCEPT_INVITATION_LINEAR``,\n        ``CLOSE_LINEAR``, ``SKIP``.",
      "attributes": {
        "duration": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Duration in seconds of the ad."
        },
        "companion_ads": {
          "type": "google.cloud.video.stitcher_v1.types.CompanionAds",
          "description": "Metadata of companion ads associated with the ad."
        },
        "activity_events": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.Event]",
          "description": "The list of progress tracking events for the ad break. These can be of the following IAB types: ``MUTE``, ``UNMUTE``, ``PAUSE``, ``CLICK``, ``CLICK_THROUGH``, ``REWIND``, ``RESUME``, ``ERROR``, ``FULLSCREEN``, ``EXIT_FULLSCREEN``, ``EXPAND``, ``COLLAPSE``, ``ACCEPT_INVITATION_LINEAR``, ``CLOSE_LINEAR``, ``SKIP``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VodSessionContent",
      "docstring": "Metadata for the entire stitched content in a VOD session.\n\nAttributes:\n    duration (google.protobuf.duration_pb2.Duration):\n        The total duration in seconds of the content\n        including the ads stitched in.",
      "attributes": {
        "duration": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "The total duration in seconds of the content including the ads stitched in."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VodSessionAdBreak",
      "docstring": "Metadata for an inserted ad break.\n\nAttributes:\n    progress_events (MutableSequence[google.cloud.video.stitcher_v1.types.ProgressEvent]):\n        List of events that are expected to be\n        triggered, ordered by time.\n    ads (MutableSequence[google.cloud.video.stitcher_v1.types.VodSessionAd]):\n        Ordered list of ads stitched into the ad\n        break.\n    end_time_offset (google.protobuf.duration_pb2.Duration):\n        Ad break end time in seconds relative to the\n        start of the VOD asset.\n    start_time_offset (google.protobuf.duration_pb2.Duration):\n        Ad break start time in seconds relative to\n        the start of the VOD asset.",
      "attributes": {
        "progress_events": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.ProgressEvent]",
          "description": "List of events that are expected to be triggered, ordered by time."
        },
        "ads": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.VodSessionAd]",
          "description": "Ordered list of ads stitched into the ad break."
        },
        "end_time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Ad break end time in seconds relative to the start of the VOD asset."
        },
        "start_time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Ad break start time in seconds relative to the start of the VOD asset."
        }
      }
    },
    {
      "type": "request_class",
      "name": "LiveSession",
      "docstring": "Metadata for a live session. The session expires 5 minutes\nafter the client stops fetching the session's playlists.\n\nAttributes:\n    name (str):\n        Output only. The name of the live session, in the form of\n        ``projects/{project}/locations/{location}/liveSessions/{id}``.\n    play_uri (str):\n        Output only. The URI to play the live\n        session's ad-stitched stream.\n    ad_tag_macros (MutableMapping[str, str]):\n        Key value pairs for ad tag macro replacement, only available\n        for live sessions that do not implement Google Ad manager ad\n        insertion. If the specified ad tag URI has macros, this\n        field provides the mapping to the value that will replace\n        the macro in the ad tag URI.\n\n        Macros are designated by square brackets, for example:\n\n        Ad tag URI:\n        \"https://doubleclick.google.com/ad/1?geo_id=[geoId]\"\n\n        Ad tag macros: ``{\"geoId\": \"123\"}``\n\n        Fully qualified ad tag:\n        ``\"https://doubleclick.google.com/ad/1?geo_id=123\"``\n  ",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. The name of the live session, in the form of ``projects/{project}/locations/{location}/liveSessions/{id}``."
        },
        "play_uri": {
          "type": "str",
          "description": "Output only. The URI to play the live session's ad-stitched stream."
        },
        "ad_tag_macros": {
          "type": "MutableMapping[str, str]",
          "description": "Key value pairs for ad tag macro replacement, only available for live sessions that do not implement Google Ad manager ad insertion. If the specified ad tag URI has macros, this field provides the mapping to the value that will replace the macro in the ad tag URI.  Macros are designated by square brackets, for example:  Ad tag URI: \"https://doubleclick.google.com/ad/1?geo_id=[geoId]\"  Ad tag macros: ``{\"geoId\": \"123\"}``  Fully qualified ad tag: ``\"https://doubleclick.google.com/ad/1?geo_id=123\"``"
        },
        "manifest_options": {
          "type": "google.cloud.video.stitcher_v1.types.ManifestOptions",
          "description": "Additional options that affect the output of the manifest."
        },
        "gam_settings": {
          "type": "google.cloud.video.stitcher_v1.types.LiveSession.GamSettings",
          "description": "This field should be set with appropriate values if GAM is being used for ads."
        },
        "live_config": {
          "type": "str",
          "description": "Required. The resource name of the live config for this session, in the form of ``projects/{project}/locations/{location}/liveConfigs/{id}``."
        },
        "ad_tracking": {
          "type": "google.cloud.video.stitcher_v1.types.AdTracking",
          "description": "Determines how the ad should be tracked. This overrides the value set in the live config for this session."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ManifestOptions",
      "docstring": "Options for manifest generation.\n\nAttributes:\n    include_renditions (MutableSequence[google.cloud.video.stitcher_v1.types.RenditionFilter]):\n        If specified, the output manifest will only\n        return renditions matching the specified\n        filters.\n    bitrate_order (google.cloud.video.stitcher_v1.types.ManifestOptions.OrderPolicy):\n        If specified, the output manifest will orders\n        the video and muxed renditions by bitrate\n        according to the ordering policy.",
      "attributes": {
        "include_renditions": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.RenditionFilter]",
          "description": "If specified, the output manifest will only return renditions matching the specified filters."
        },
        "bitrate_order": {
          "type": "google.cloud.video.stitcher_v1.types.ManifestOptions.OrderPolicy",
          "description": "If specified, the output manifest will orders the video and muxed renditions by bitrate according to the ordering policy."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RenditionFilter",
      "docstring": "Filters for a video or muxed redition.\n\nAttributes:\n    bitrate_bps (int):\n        Bitrate in bits per second for the rendition.\n        If set, only renditions with the exact bitrate\n        will match.\n    codecs (str):\n        Codecs for the rendition. If set, only\n        renditions with the exact value will match.",
      "attributes": {
        "bitrate_bps": {
          "type": "int",
          "description": "Bitrate in bits per second for the rendition. If set, only renditions with the exact bitrate will match."
        },
        "codecs": {
          "type": "str",
          "description": "Codecs for the rendition. If set, only renditions with the exact value will match."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GamSettings",
      "docstring": "Defines fields related to Google Ad Manager (GAM). This\nshould be set if GAM is being used for ads.\n\nAttributes:\n    network_code (str):\n        Required. Ad Manager network code.\n    stream_id (str):\n        Required. The stream ID generated by Ad\n        Manager.",
      "attributes": {
        "network_code": {
          "type": "str",
          "description": "Required. Ad Manager network code."
        },
        "stream_id": {
          "type": "str",
          "description": "Required. The stream ID generated by Ad Manager."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GamSettings",
      "docstring": "Defines fields related to Google Ad Manager (GAM).\n\nAttributes:\n    stream_id (str):\n        Required. The stream ID generated by Ad\n        Manager. This must be set if GAM is being used\n        for ads and the session uses client-side ad\n        tracking.\n    targeting_parameters (MutableMapping[str, str]):\n        `Targeting\n        parameters <https://support.google.com/admanager/answer/7320899>`__\n        to send to Ad Manager to generate a stream ID. This should\n        only be set if the session uses server-side ad tracking.",
      "attributes": {
        "stream_id": {
          "type": "str",
          "description": "Required. The stream ID generated by Ad Manager. This must be set if GAM is being used for ads and the session uses client-side ad tracking."
        },
        "targeting_parameters": {
          "type": "MutableMapping[str, str]",
          "description": "`Targeting parameters <https://support.google.com/admanager/answer/7320899>`__ to send to Ad Manager to generate a stream ID. This should only be set if the session uses server-side ad tracking."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-video-stitcher\\google\\cloud\\video\\stitcher_v1\\types\\slates.py": [
    {
      "type": "request_class",
      "name": "Slate",
      "docstring": "Slate object\n\nAttributes:\n    name (str):\n        Output only. The name of the slate, in the form of\n        ``projects/{project_number}/locations/{location}/slates/{id}``.\n    uri (str):\n        The URI to fetch the source content for the\n        slate. This URI must return an MP4 video with at\n        least one audio track.\n    gam_slate (google.cloud.video.stitcher_v1.types.Slate.GamSlate):\n        gam_slate has all the GAM-related attributes of slates.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. The name of the slate, in the form of ``projects/{project_number}/locations/{location}/slates/{id}``."
        },
        "uri": {
          "type": "str",
          "description": "The URI to fetch the source content for the slate. This URI must return an MP4 video with at least one audio track."
        },
        "gam_slate": {
          "type": "google.cloud.video.stitcher_v1.types.Slate.GamSlate",
          "description": "gam_slate has all the GAM-related attributes of slates."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GamSlate",
      "docstring": "GamSlate object has Google Ad Manager (GAM) related\nproperties for the slate.\n\nAttributes:\n    network_code (str):\n        Required. Ad Manager network code to\n        associate with the live config.\n    gam_slate_id (int):\n        Output only. The identifier generated for the\n        slate by GAM.",
      "attributes": {
        "network_code": {
          "type": "str",
          "description": "Required. Ad Manager network code to associate with the live config."
        },
        "gam_slate_id": {
          "type": "int",
          "description": "Output only. The identifier generated for the slate by GAM."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-video-stitcher\\google\\cloud\\video\\stitcher_v1\\types\\stitch_details.py": [
    {
      "type": "request_class",
      "name": "VodStitchDetail",
      "docstring": "Information related to the interstitial of a VOD session.\nThis resource is only available for VOD sessions that do not\nimplement Google Ad Manager ad insertion.\n\nAttributes:\n    name (str):\n        The name of the stitch detail in the specified VOD session,\n        in the form of\n        ``projects/{project}/locations/{location}/vodSessions/{vod_session_id}/vodStitchDetails/{id}``.\n    ad_stitch_details (MutableSequence[google.cloud.video.stitcher_v1.types.AdStitchDetail]):\n        A list of ad processing details for the\n        fetched ad playlist.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "The name of the stitch detail in the specified VOD session, in the form of ``projects/{project}/locations/{location}/vodSessions/{vod_session_id}/vodStitchDetails/{id}``."
        },
        "ad_stitch_details": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.AdStitchDetail]",
          "description": "A list of ad processing details for the fetched ad playlist."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AdStitchDetail",
      "docstring": "Metadata for a stitched ad.\n\nAttributes:\n    ad_break_id (str):\n        Required. The ad break ID of the processed\n        ad.\n    ad_id (str):\n        Required. The ad ID of the processed ad.\n    ad_time_offset (google.protobuf.duration_pb2.Duration):\n        Required. The time offset of the processed\n        ad.\n    skip_reason (str):\n        Optional. Indicates the reason why the ad has\n        been skipped.\n    media (MutableMapping[str, google.protobuf.struct_pb2.Value]):\n        Optional. The metadata of the chosen media\n        file for the ad.",
      "attributes": {
        "ad_break_id": {
          "type": "str",
          "description": "Required. The ad break ID of the processed ad."
        },
        "ad_id": {
          "type": "str",
          "description": "Required. The ad ID of the processed ad."
        },
        "ad_time_offset": {
          "type": "google.protobuf.duration_pb2.Duration",
          "description": "Required. The time offset of the processed ad."
        },
        "skip_reason": {
          "type": "str",
          "description": "Optional. Indicates the reason why the ad has been skipped."
        },
        "media": {
          "type": "MutableMapping[str, google.protobuf.struct_pb2.Value]",
          "description": "Optional. The metadata of the chosen media file for the ad."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-video-stitcher\\google\\cloud\\video\\stitcher_v1\\types\\video_stitcher_service.py": [
    {
      "type": "request_class",
      "name": "CreateCdnKeyRequest",
      "docstring": "Request message for VideoStitcherService.createCdnKey.\n\nAttributes:\n    parent (str):\n        Required. The project in which the CDN key should be\n        created, in the form of\n        ``projects/{project_number}/locations/{location}``.\n    cdn_key (google.cloud.video.stitcher_v1.types.CdnKey):\n        Required. The CDN key resource to create.\n    cdn_key_id (str):\n        Required. The ID to use for the CDN key,\n        which will become the final component of the CDN\n        key's resource name.\n\n        This value should conform to RFC-1034, which\n        restricts to lower-case letters, numbers, and\n        hyphen, with the first character a letter, the\n        last a letter or a number, and a 63 character\n        maximum.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project in which the CDN key should be created, in the form of ``projects/{project_number}/locations/{location}``."
        },
        "cdn_key": {
          "type": "google.cloud.video.stitcher_v1.types.CdnKey",
          "description": "Required. The CDN key resource to create."
        },
        "cdn_key_id": {
          "type": "str",
          "description": "Required. The ID to use for the CDN key, which will become the final component of the CDN key's resource name.  This value should conform to RFC-1034, which restricts to lower-case letters, numbers, and hyphen, with the first character a letter, the last a letter or a number, and a 63 character maximum."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListCdnKeysRequest",
      "docstring": "Request message for VideoStitcherService.listCdnKeys.\n\nAttributes:\n    parent (str):\n        Required. The project that contains the list of CDN keys, in\n        the form of\n        ``projects/{project_number}/locations/{location}``.\n    page_size (int):\n        Requested page size. Server may return fewer\n        items than requested. If unspecified, server\n        will pick an appropriate default.\n    page_token (str):\n        A token identifying a page of results the\n        server should return.\n    filter (str):\n        Filtering results\n    order_by (str):\n        Hint for how to order the results",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project that contains the list of CDN keys, in the form of ``projects/{project_number}/locations/{location}``."
        },
        "page_size": {
          "type": "int",
          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
        },
        "page_token": {
          "type": "str",
          "description": "A token identifying a page of results the server should return."
        },
        "filter": {
          "type": "str",
          "description": "Filtering results"
        },
        "order_by": {
          "type": "str",
          "description": "Hint for how to order the results"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListCdnKeysResponse",
      "docstring": "Response message for VideoStitcher.ListCdnKeys.\n\nAttributes:\n    cdn_keys (MutableSequence[google.cloud.video.stitcher_v1.types.CdnKey]):\n        List of CDN keys.\n    next_page_token (str):\n        A token identifying a page of results the\n        server should return.\n    unreachable (MutableSequence[str]):\n        Locations that could not be reached.",
      "attributes": {
        "cdn_keys": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.CdnKey]",
          "description": "List of CDN keys."
        },
        "next_page_token": {
          "type": "str",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Locations that could not be reached."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetCdnKeyRequest",
      "docstring": "Request message for VideoStitcherService.getCdnKey.\n\nAttributes:\n    name (str):\n        Required. The name of the CDN key to be retrieved, in the\n        form of\n        ``projects/{project}/locations/{location}/cdnKeys/{id}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the CDN key to be retrieved, in the form of ``projects/{project}/locations/{location}/cdnKeys/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteCdnKeyRequest",
      "docstring": "Request message for VideoStitcherService.deleteCdnKey.\n\nAttributes:\n    name (str):\n        Required. The name of the CDN key to be deleted, in the form\n        of\n        ``projects/{project_number}/locations/{location}/cdnKeys/{id}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the CDN key to be deleted, in the form of ``projects/{project_number}/locations/{location}/cdnKeys/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateCdnKeyRequest",
      "docstring": "Request message for VideoStitcherService.updateCdnKey.\n\nAttributes:\n    cdn_key (google.cloud.video.stitcher_v1.types.CdnKey):\n        Required. The CDN key resource which replaces\n        the resource on the server.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The update mask applies to the resource. For the\n        ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
      "attributes": {
        "cdn_key": {
          "type": "google.cloud.video.stitcher_v1.types.CdnKey",
          "description": "Required. The CDN key resource which replaces the resource on the server."
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "Required. The update mask applies to the resource. For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateVodSessionRequest",
      "docstring": "Request message for VideoStitcherService.createVodSession\n\nAttributes:\n    parent (str):\n        Required. The project and location in which the VOD session\n        should be created, in the form of\n        ``projects/{project_number}/locations/{location}``.\n    vod_session (google.cloud.video.stitcher_v1.types.VodSession):\n        Required. Parameters for creating a session.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project and location in which the VOD session should be created, in the form of ``projects/{project_number}/locations/{location}``."
        },
        "vod_session": {
          "type": "google.cloud.video.stitcher_v1.types.VodSession",
          "description": "Required. Parameters for creating a session."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetVodSessionRequest",
      "docstring": "Request message for VideoStitcherService.getVodSession\n\nAttributes:\n    name (str):\n        Required. The name of the VOD session to be retrieved, in\n        the form of\n        ``projects/{project_number}/locations/{location}/vodSessions/{id}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the VOD session to be retrieved, in the form of ``projects/{project_number}/locations/{location}/vodSessions/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListVodStitchDetailsRequest",
      "docstring": "Request message for\nVideoStitcherService.listVodStitchDetails.\n\nAttributes:\n    parent (str):\n        Required. The VOD session where the stitch details belong\n        to, in the form of\n        ``projects/{project}/locations/{location}/vodSessions/{id}``.\n    page_size (int):\n        The maximum number of items to return.\n    page_token (str):\n        The next_page_token value returned from a previous List\n        request, if any.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The VOD session where the stitch details belong to, in the form of ``projects/{project}/locations/{location}/vodSessions/{id}``."
        },
        "page_size": {
          "type": "int",
          "description": "The maximum number of items to return."
        },
        "page_token": {
          "type": "str",
          "description": "The next_page_token value returned from a previous List request, if any."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListVodStitchDetailsResponse",
      "docstring": "Response message for\nVideoStitcherService.listVodStitchDetails.\n\nAttributes:\n    vod_stitch_details (MutableSequence[google.cloud.video.stitcher_v1.types.VodStitchDetail]):\n        A List of stitch Details.\n    next_page_token (str):\n        The pagination token.",
      "attributes": {
        "vod_stitch_details": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.VodStitchDetail]",
          "description": "A List of stitch Details."
        },
        "next_page_token": {
          "type": "str",
          "description": "The pagination token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetVodStitchDetailRequest",
      "docstring": "Request message for VideoStitcherService.getVodStitchDetail.\n\nAttributes:\n    name (str):\n        Required. The name of the stitch detail in the specified VOD\n        session, in the form of\n        ``projects/{project}/locations/{location}/vodSessions/{vod_session_id}/vodStitchDetails/{id}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the stitch detail in the specified VOD session, in the form of ``projects/{project}/locations/{location}/vodSessions/{vod_session_id}/vodStitchDetails/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListVodAdTagDetailsRequest",
      "docstring": "Request message for VideoStitcherService.listVodAdTagDetails.\n\nAttributes:\n    parent (str):\n        Required. The VOD session which the ad tag details belong\n        to, in the form of\n        ``projects/{project}/locations/{location}/vodSessions/{vod_session_id}``.\n    page_size (int):\n        The maximum number of items to return.\n    page_token (str):\n        The next_page_token value returned from a previous List\n        request, if any.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The VOD session which the ad tag details belong to, in the form of ``projects/{project}/locations/{location}/vodSessions/{vod_session_id}``."
        },
        "page_size": {
          "type": "int",
          "description": "The maximum number of items to return."
        },
        "page_token": {
          "type": "str",
          "description": "The next_page_token value returned from a previous List request, if any."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListVodAdTagDetailsResponse",
      "docstring": "Response message for\nVideoStitcherService.listVodAdTagDetails.\n\nAttributes:\n    vod_ad_tag_details (MutableSequence[google.cloud.video.stitcher_v1.types.VodAdTagDetail]):\n        A List of ad tag details.\n    next_page_token (str):\n        The pagination token.",
      "attributes": {
        "vod_ad_tag_details": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.VodAdTagDetail]",
          "description": "A List of ad tag details."
        },
        "next_page_token": {
          "type": "str",
          "description": "The pagination token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetVodAdTagDetailRequest",
      "docstring": "Request message for VideoStitcherService.getVodAdTagDetail\n\nAttributes:\n    name (str):\n        Required. The name of the ad tag detail for the specified\n        VOD session, in the form of\n        ``projects/{project}/locations/{location}/vodSessions/{vod_session_id}/vodAdTagDetails/{vod_ad_tag_detail}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the ad tag detail for the specified VOD session, in the form of ``projects/{project}/locations/{location}/vodSessions/{vod_session_id}/vodAdTagDetails/{vod_ad_tag_detail}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListLiveAdTagDetailsRequest",
      "docstring": "Request message for\nVideoStitcherService.listLiveAdTagDetails.\n\nAttributes:\n    parent (str):\n        Required. The resource parent in the form of\n        ``projects/{project}/locations/{location}/liveSessions/{live_session}``.\n    page_size (int):\n        The maximum number of items to return.\n    page_token (str):\n        The pagination token returned from a previous\n        List request.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The resource parent in the form of ``projects/{project}/locations/{location}/liveSessions/{live_session}``."
        },
        "page_size": {
          "type": "int",
          "description": "The maximum number of items to return."
        },
        "page_token": {
          "type": "str",
          "description": "The pagination token returned from a previous List request."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListLiveAdTagDetailsResponse",
      "docstring": "Response message for\nVideoStitcherService.listLiveAdTagDetails.\n\nAttributes:\n    live_ad_tag_details (MutableSequence[google.cloud.video.stitcher_v1.types.LiveAdTagDetail]):\n        A list of live session ad tag details.\n    next_page_token (str):\n        The pagination token.",
      "attributes": {
        "live_ad_tag_details": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.LiveAdTagDetail]",
          "description": "A list of live session ad tag details."
        },
        "next_page_token": {
          "type": "str",
          "description": "The pagination token."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetLiveAdTagDetailRequest",
      "docstring": "Request message for VideoStitcherService.getLiveAdTagDetail\n\nAttributes:\n    name (str):\n        Required. The resource name in the form of\n        ``projects/{project}/locations/{location}/liveSessions/{live_session}/liveAdTagDetails/{live_ad_tag_detail}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The resource name in the form of ``projects/{project}/locations/{location}/liveSessions/{live_session}/liveAdTagDetails/{live_ad_tag_detail}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateSlateRequest",
      "docstring": "Request message for VideoStitcherService.createSlate.\n\nAttributes:\n    parent (str):\n        Required. The project in which the slate should be created,\n        in the form of\n        ``projects/{project_number}/locations/{location}``.\n    slate_id (str):\n        Required. The unique identifier for the\n        slate. This value should conform to RFC-1034,\n        which restricts to lower-case letters, numbers,\n        and hyphen, with the first character a letter,\n        the last a letter or a number, and a 63\n        character maximum.\n    slate (google.cloud.video.stitcher_v1.types.Slate):\n        Required. The slate to create.\n    request_id (str):\n        A request ID to identify requests. Specify a unique request\n        ID so that if you must retry your request, the server will\n        know to ignore the request if it has already been completed.\n        The server will guarantee that for at least 60 minutes since\n        the first request.\n\n        For example, consider a situation where you make an in",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project in which the slate should be created, in the form of ``projects/{project_number}/locations/{location}``."
        },
        "slate_id": {
          "type": "str",
          "description": "Required. The unique identifier for the slate. This value should conform to RFC-1034, which restricts to lower-case letters, numbers, and hyphen, with the first character a letter, the last a letter or a number, and a 63 character maximum."
        },
        "slate": {
          "type": "google.cloud.video.stitcher_v1.types.Slate",
          "description": "Required. The slate to create."
        },
        "request_id": {
          "type": "str",
          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported ``(00000000-0000-0000-0000-000000000000)``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetSlateRequest",
      "docstring": "Request message for VideoStitcherService.getSlate.\n\nAttributes:\n    name (str):\n        Required. The name of the slate to be retrieved, of the\n        slate, in the form of\n        ``projects/{project_number}/locations/{location}/slates/{id}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the slate to be retrieved, of the slate, in the form of ``projects/{project_number}/locations/{location}/slates/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListSlatesRequest",
      "docstring": "Request message for VideoStitcherService.listSlates.\n\nAttributes:\n    parent (str):\n        Required. The project to list slates, in the form of\n        ``projects/{project_number}/locations/{location}``.\n    page_size (int):\n        Requested page size. Server may return fewer\n        items than requested. If unspecified, server\n        will pick an appropriate default.\n    page_token (str):\n        A token identifying a page of results the\n        server should return.\n    filter (str):\n        Filtering results\n    order_by (str):\n        Hint for how to order the results",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project to list slates, in the form of ``projects/{project_number}/locations/{location}``."
        },
        "page_size": {
          "type": "int",
          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
        },
        "page_token": {
          "type": "str",
          "description": "A token identifying a page of results the server should return."
        },
        "filter": {
          "type": "str",
          "description": "Filtering results"
        },
        "order_by": {
          "type": "str",
          "description": "Hint for how to order the results"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListSlatesResponse",
      "docstring": "Response message for VideoStitcherService.listSlates.\n\nAttributes:\n    slates (MutableSequence[google.cloud.video.stitcher_v1.types.Slate]):\n        The list of slates\n    next_page_token (str):\n        A token identifying a page of results the\n        server should return.\n    unreachable (MutableSequence[str]):\n        Locations that could not be reached.",
      "attributes": {
        "slates": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.Slate]",
          "description": "The list of slates"
        },
        "next_page_token": {
          "type": "str",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Locations that could not be reached."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateSlateRequest",
      "docstring": "Request message for VideoStitcherService.updateSlate.\n\nAttributes:\n    slate (google.cloud.video.stitcher_v1.types.Slate):\n        Required. The resource with updated fields.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The update mask which specifies\n        fields which should be updated.",
      "attributes": {
        "slate": {
          "type": "google.cloud.video.stitcher_v1.types.Slate",
          "description": "Required. The resource with updated fields."
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "Required. The update mask which specifies fields which should be updated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteSlateRequest",
      "docstring": "Request message for VideoStitcherService.deleteSlate.\n\nAttributes:\n    name (str):\n        Required. The name of the slate to be deleted, in the form\n        of\n        ``projects/{project_number}/locations/{location}/slates/{id}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the slate to be deleted, in the form of ``projects/{project_number}/locations/{location}/slates/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateLiveSessionRequest",
      "docstring": "Request message for VideoStitcherService.createLiveSession.\n\nAttributes:\n    parent (str):\n        Required. The project and location in which the live session\n        should be created, in the form of\n        ``projects/{project_number}/locations/{location}``.\n    live_session (google.cloud.video.stitcher_v1.types.LiveSession):\n        Required. Parameters for creating a live\n        session.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project and location in which the live session should be created, in the form of ``projects/{project_number}/locations/{location}``."
        },
        "live_session": {
          "type": "google.cloud.video.stitcher_v1.types.LiveSession",
          "description": "Required. Parameters for creating a live session."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetLiveSessionRequest",
      "docstring": "Request message for VideoStitcherService.getSession.\n\nAttributes:\n    name (str):\n        Required. The name of the live session, in the form of\n        ``projects/{project_number}/locations/{location}/liveSessions/{id}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the live session, in the form of ``projects/{project_number}/locations/{location}/liveSessions/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateLiveConfigRequest",
      "docstring": "Request message for VideoStitcherService.createLiveConfig\n\nAttributes:\n    parent (str):\n        Required. The project in which the live config should be\n        created, in the form of\n        ``projects/{project_number}/locations/{location}``.\n    live_config_id (str):\n        Required. The unique identifier ID to use for\n        the live config.\n    live_config (google.cloud.video.stitcher_v1.types.LiveConfig):\n        Required. The live config resource to create.\n    request_id (str):\n        A request ID to identify requests. Specify a unique request\n        ID so that if you must retry your request, the server will\n        know to ignore the request if it has already been completed.\n        The server will guarantee that for at least 60 minutes since\n        the first request.\n\n        For example, consider a situation where you make an initial\n        request and the request times out. If you make the request\n        again with the same request ID, the server can check if\n        original operation wit",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project in which the live config should be created, in the form of ``projects/{project_number}/locations/{location}``."
        },
        "live_config_id": {
          "type": "str",
          "description": "Required. The unique identifier ID to use for the live config."
        },
        "live_config": {
          "type": "google.cloud.video.stitcher_v1.types.LiveConfig",
          "description": "Required. The live config resource to create."
        },
        "request_id": {
          "type": "str",
          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported ``(00000000-0000-0000-0000-000000000000)``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListLiveConfigsRequest",
      "docstring": "Request message for VideoStitcherService.listLiveConfig.\n\nAttributes:\n    parent (str):\n        Required. The project that contains the list of live\n        configs, in the form of\n        ``projects/{project_number}/locations/{location}``.\n    page_size (int):\n        The maximum number of items to return.\n    page_token (str):\n        The next_page_token value returned from a previous List\n        request, if any.\n    filter (str):\n        Optional. The filter to apply to list results (see\n        `Filtering <https://google.aip.dev/160>`__).\n    order_by (str):\n        Optional. Specifies the ordering of results following `Cloud\n        API\n        syntax <https://cloud.google.com/apis/design/design_patterns#sorting_order>`__.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project that contains the list of live configs, in the form of ``projects/{project_number}/locations/{location}``."
        },
        "page_size": {
          "type": "int",
          "description": "The maximum number of items to return."
        },
        "page_token": {
          "type": "str",
          "description": "The next_page_token value returned from a previous List request, if any."
        },
        "filter": {
          "type": "str",
          "description": "Optional. The filter to apply to list results (see `Filtering <https://google.aip.dev/160>`__)."
        },
        "order_by": {
          "type": "str",
          "description": "Optional. Specifies the ordering of results following `Cloud API syntax <https://cloud.google.com/apis/design/design_patterns#sorting_order>`__."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListLiveConfigsResponse",
      "docstring": "Response message for VideoStitcher.ListLiveConfig.\n\nAttributes:\n    live_configs (MutableSequence[google.cloud.video.stitcher_v1.types.LiveConfig]):\n        List of live configs.\n    next_page_token (str):\n        The pagination token.\n    unreachable (MutableSequence[str]):\n        Locations that could not be reached.",
      "attributes": {
        "live_configs": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.LiveConfig]",
          "description": "List of live configs."
        },
        "next_page_token": {
          "type": "str",
          "description": "The pagination token."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Locations that could not be reached."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetLiveConfigRequest",
      "docstring": "Request message for VideoStitcherService.getLiveConfig.\n\nAttributes:\n    name (str):\n        Required. The name of the live config to be retrieved, in\n        the form of\n        ``projects/{project_number}/locations/{location}/liveConfigs/{id}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the live config to be retrieved, in the form of ``projects/{project_number}/locations/{location}/liveConfigs/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteLiveConfigRequest",
      "docstring": "Request message for VideoStitcherService.deleteLiveConfig.\n\nAttributes:\n    name (str):\n        Required. The name of the live config to be deleted, in the\n        form of\n        ``projects/{project_number}/locations/{location}/liveConfigs/{id}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the live config to be deleted, in the form of ``projects/{project_number}/locations/{location}/liveConfigs/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateLiveConfigRequest",
      "docstring": "Request message for VideoStitcherService.updateLiveConfig.\n\nAttributes:\n    live_config (google.cloud.video.stitcher_v1.types.LiveConfig):\n        Required. The LiveConfig resource which\n        replaces the resource on the server.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The update mask applies to the resource. For the\n        ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
      "attributes": {
        "live_config": {
          "type": "google.cloud.video.stitcher_v1.types.LiveConfig",
          "description": "Required. The LiveConfig resource which replaces the resource on the server."
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "Required. The update mask applies to the resource. For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateVodConfigRequest",
      "docstring": "Request message for VideoStitcherService.createVodConfig\n\nAttributes:\n    parent (str):\n        Required. The project in which the VOD config should be\n        created, in the form of\n        ``projects/{project_number}/locations/{location}``.\n    vod_config_id (str):\n        Required. The unique identifier ID to use for\n        the VOD config.\n    vod_config (google.cloud.video.stitcher_v1.types.VodConfig):\n        Required. The VOD config resource to create.\n    request_id (str):\n        Optional. A request ID to identify requests. Specify a\n        unique request ID so that if you must retry your request,\n        the server will know to ignore the request if it has already\n        been completed. The server will guarantee that for at least\n        60 minutes since the first request.\n\n        For example, consider a situation where you make an initial\n        request and the request times out. If you make the request\n        again with the same request ID, the server can check if\n        original operation ",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project in which the VOD config should be created, in the form of ``projects/{project_number}/locations/{location}``."
        },
        "vod_config_id": {
          "type": "str",
          "description": "Required. The unique identifier ID to use for the VOD config."
        },
        "vod_config": {
          "type": "google.cloud.video.stitcher_v1.types.VodConfig",
          "description": "Required. The VOD config resource to create."
        },
        "request_id": {
          "type": "str",
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.  The request ID must be a valid UUID with the exception that zero UUID is not supported ``(00000000-0000-0000-0000-000000000000)``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListVodConfigsRequest",
      "docstring": "Request message for VideoStitcherService.listVodConfig.\n\nAttributes:\n    parent (str):\n        Required. The project that contains the list of VOD configs,\n        in the form of\n        ``projects/{project_number}/locations/{location}``.\n    page_size (int):\n        Optional. The maximum number of items to\n        return.\n    page_token (str):\n        Optional. The next_page_token value returned from a previous\n        List request, if any.\n    filter (str):\n        Optional. The filter to apply to list results (see\n        `Filtering <https://google.aip.dev/160>`__).\n    order_by (str):\n        Optional. Specifies the ordering of results following `Cloud\n        API\n        syntax <https://cloud.google.com/apis/design/design_patterns#sorting_order>`__.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The project that contains the list of VOD configs, in the form of ``projects/{project_number}/locations/{location}``."
        },
        "page_size": {
          "type": "int",
          "description": "Optional. The maximum number of items to return."
        },
        "page_token": {
          "type": "str",
          "description": "Optional. The next_page_token value returned from a previous List request, if any."
        },
        "filter": {
          "type": "str",
          "description": "Optional. The filter to apply to list results (see `Filtering <https://google.aip.dev/160>`__)."
        },
        "order_by": {
          "type": "str",
          "description": "Optional. Specifies the ordering of results following `Cloud API syntax <https://cloud.google.com/apis/design/design_patterns#sorting_order>`__."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListVodConfigsResponse",
      "docstring": "Response message for VideoStitcher.ListVodConfig.\n\nAttributes:\n    vod_configs (MutableSequence[google.cloud.video.stitcher_v1.types.VodConfig]):\n        List of VOD configs.\n    next_page_token (str):\n        The pagination token.\n    unreachable (MutableSequence[str]):\n        Locations that could not be reached.",
      "attributes": {
        "vod_configs": {
          "type": "MutableSequence[google.cloud.video.stitcher_v1.types.VodConfig]",
          "description": "List of VOD configs."
        },
        "next_page_token": {
          "type": "str",
          "description": "The pagination token."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Locations that could not be reached."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetVodConfigRequest",
      "docstring": "Request message for VideoStitcherService.getVodConfig.\n\nAttributes:\n    name (str):\n        Required. The name of the VOD config to be retrieved, in the\n        form of\n        ``projects/{project_number}/locations/{location}/vodConfigs/{id}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the VOD config to be retrieved, in the form of ``projects/{project_number}/locations/{location}/vodConfigs/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteVodConfigRequest",
      "docstring": "Request message for VideoStitcherService.deleteVodConfig.\n\nAttributes:\n    name (str):\n        Required. The name of the VOD config to be deleted, in the\n        form of\n        ``projects/{project_number}/locations/{location}/vodConfigs/{id}``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The name of the VOD config to be deleted, in the form of ``projects/{project_number}/locations/{location}/vodConfigs/{id}``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateVodConfigRequest",
      "docstring": "Request message for VideoStitcherService.updateVodConfig.\n\nAttributes:\n    vod_config (google.cloud.video.stitcher_v1.types.VodConfig):\n        Required. The VOD config resource which\n        replaces the resource on the server.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. The update mask applies to the resource. For the\n        ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
      "attributes": {
        "vod_config": {
          "type": "google.cloud.video.stitcher_v1.types.VodConfig",
          "description": "Required. The VOD config resource which replaces the resource on the server."
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "Required. The update mask applies to the resource. For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
        }
      }
    },
    {
      "type": "request_class",
      "name": "OperationMetadata",
      "docstring": "Represents the metadata of the long-running operation.\n\nAttributes:\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time the operation was created.\n    end_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time the operation finished running.\n    target (str):\n        Server-defined resource path for the target\n        of the operation.\n    verb (str):\n        Name of the verb executed by the operation.",
      "attributes": {
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The time the operation was created."
        },
        "end_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The time the operation finished running."
        },
        "target": {
          "type": "str",
          "description": "Server-defined resource path for the target of the operation."
        },
        "verb": {
          "type": "str",
          "description": "Name of the verb executed by the operation."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-video-stitcher\\google\\cloud\\video\\stitcher_v1\\types\\vod_configs.py": [
    {
      "type": "request_class",
      "name": "VodConfig",
      "docstring": "Metadata used to register VOD configs.\n\nAttributes:\n    name (str):\n        Output only. The resource name of the VOD config, in the\n        form of\n        ``projects/{project}/locations/{location}/vodConfigs/{id}``.\n    source_uri (str):\n        Required. Source URI for the VOD stream\n        manifest.\n    ad_tag_uri (str):\n        Required. The default ad tag associated with\n        this VOD config.\n    gam_vod_config (google.cloud.video.stitcher_v1.types.GamVodConfig):\n        Optional. Google Ad Manager (GAM) metadata.\n    state (google.cloud.video.stitcher_v1.types.VodConfig.State):\n        Output only. State of the VOD config.\n    source_fetch_options (google.cloud.video.stitcher_v1.types.FetchOptions):\n        Options for fetching source manifests and\n        segments.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. The resource name of the VOD config, in the form of ``projects/{project}/locations/{location}/vodConfigs/{id}``."
        },
        "source_uri": {
          "type": "str",
          "description": "Required. Source URI for the VOD stream manifest."
        },
        "ad_tag_uri": {
          "type": "str",
          "description": "Required. The default ad tag associated with this VOD config."
        },
        "gam_vod_config": {
          "type": "google.cloud.video.stitcher_v1.types.GamVodConfig",
          "description": "Optional. Google Ad Manager (GAM) metadata."
        },
        "state": {
          "type": "google.cloud.video.stitcher_v1.types.VodConfig.State",
          "description": "Output only. State of the VOD config."
        },
        "source_fetch_options": {
          "type": "google.cloud.video.stitcher_v1.types.FetchOptions",
          "description": "Options for fetching source manifests and segments."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GamVodConfig",
      "docstring": "Metadata used for GAM ad decisioning.\n\nAttributes:\n    network_code (str):\n        Required. Ad Manager network code to\n        associate with the VOD config.",
      "attributes": {
        "network_code": {
          "type": "str",
          "description": "Required. Ad Manager network code to associate with the VOD config."
        }
      }
    }
  ]
}