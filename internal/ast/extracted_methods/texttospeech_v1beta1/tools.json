{
  "TextToSpeech": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_voices",
          "description": "Returns a list of Voice supported for synthesis.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import texttospeech_v1beta1\n\n    async def sample_list_voices():\n        # Create a client\n        client = texttospeech_v1beta1.TextToSpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = texttospeech_v1beta1.ListVoicesRequest(\n        )\n\n        # Make the request\n        response = await client.list_voices(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.texttospeech_v1beta1.types.ListVoicesRequest, dict]]):\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "language_code": {
                "type": "str",
                "description": "Optional. Recommended. `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language tag. If not specified, the API will return all supported voices. If specified, the ListVoices call will only return voices that can be used to synthesize this language_code. For example, if you specify ``\"en-NZ\"``, all ``\"en-NZ\"`` voices will be returned. If you specify ``\"no\"``, both ``\"no-\\*\"`` (Norwegian) and ``\"nb-\\*\"`` (Norwegian Bokmal) voices will be returned.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.texttospeech_v1beta1.types.ListVoicesResponse: The message returned to the client by the ListVoices method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "synthesize_speech",
          "description": "Synthesizes speech synchronously: receive results\nafter all text input has been processed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import texttospeech_v1beta1\n\n    async def sample_synthesize_speech():\n        # Create a client\n        client = texttospeech_v1beta1.TextToSpeechAsyncClient()\n\n        # Initialize request argument(s)\n        input = texttospeech_v1beta1.SynthesisInput()\n        input.text = \"text_value\"\n\n        voice = texttospeech_v1beta1.VoiceSelectionParams()\n        voice.language_code = \"language_code_value\"\n\n        audio_config = texttospeech_v1beta1.AudioConfig()\n        a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "input": {
                "type": "google.cloud.texttospeech_v1beta1.types.SynthesisInput",
                "description": "Required. The Synthesizer requires either plain text or SSML as input.  This corresponds to the ``input`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "voice": {
                "type": "google.cloud.texttospeech_v1beta1.types.VoiceSelectionParams",
                "description": "Required. The desired voice of the synthesized audio.  This corresponds to the ``voice`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "audio_config": {
                "type": "google.cloud.texttospeech_v1beta1.types.AudioConfig",
                "description": "Required. The configuration of the synthesized audio.  This corresponds to the ``audio_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.texttospeech_v1beta1.types.SynthesizeSpeechResponse: The message returned to the client by the SynthesizeSpeech method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "input",
              "voice",
              "audio_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "streaming_synthesize",
          "description": "Performs bidirectional streaming speech synthesis:\nreceive audio while sending text.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import texttospeech_v1beta1\n\n    async def sample_streaming_synthesize():\n        # Create a client\n        client = texttospeech_v1beta1.TextToSpeechAsyncClient()\n\n        # Initialize request argument(s)\n        streaming_config = texttospeech_v1beta1.StreamingSynthesizeConfig()\n        streaming_config.voice.language_code = \"language_code_value\"\n\n        request = texttospeech_v1beta1.StreamingSynthesizeRequest(\n            streaming_config=streaming_config,\n        )\n\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "requests": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "TextToSpeechLongAudioSynthesize": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "synthesize_long_audio",
          "description": "Synthesizes long form text asynchronously.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import texttospeech_v1beta1\n\n    async def sample_synthesize_long_audio():\n        # Create a client\n        client = texttospeech_v1beta1.TextToSpeechLongAudioSynthesizeAsyncClient()\n\n        # Initialize request argument(s)\n        input = texttospeech_v1beta1.SynthesisInput()\n        input.text = \"text_value\"\n\n        audio_config = texttospeech_v1beta1.AudioConfig()\n        audio_config.audio_encoding = \"ALAW\"\n\n        voice = texttospeech_v1beta1.VoiceSelectionParams()\n        voice.language_code = \"language_c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}