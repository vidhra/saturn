{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-texttospeech\\google\\cloud\\texttospeech_v1beta1\\types\\cloud_tts.py": [
    {
      "type": "function",
      "name": "ListVoicesRequest",
      "description": "The top-level message sent by the client for the ``ListVoices``\nmethod.\n\nAttributes:\n    language_code (str):\n        Optional. Recommended.\n        `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__\n        language tag. If not specified, the API will return all\n        supported voices. If specified, the ListVoices call will\n        only return voices that can be used to synthesize this\n        language_code. For example, if you specify ``\"en-NZ\"``, all\n        ``\"en-NZ\"`` voices will be returned. If you specify\n        ``\"no\"``, both ``\"no-\\*\"`` (Norwegian) and ``\"nb-\\*\"``\n        (Norwegian Bokmal) voices will be returned.",
      "parameters": {
        "type": "object",
        "properties": {
          "language_code": {
            "description": "Optional. Recommended. `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language tag. If not specified, the API will return all supported voices. If specified, the ListVoices call will only return voices that can be used to synthesize this language_code. For example, if you specify ``\"en-NZ\"``, all ``\"en-NZ\"`` voices will be returned. If you specify ``\"no\"``, both ``\"no-\\*\"`` (Norwegian) and ``\"nb-\\*\"`` (Norwegian Bokmal) voices will be returned.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "SynthesizeSpeechRequest",
      "description": "The top-level message sent by the client for the\n``SynthesizeSpeech`` method.\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    input (google.cloud.texttospeech_v1beta1.types.SynthesisInput):\n        Required. The Synthesizer requires either\n        plain text or SSML as input.\n    voice (google.cloud.texttospeech_v1beta1.types.VoiceSelectionParams):\n        Required. The desired voice of the\n        synthesized audio.\n    audio_config (google.cloud.texttospeech_v1beta1.types.AudioConfig):\n        Required. The configuration of the\n        synthesized audio.\n    enable_time_pointing (MutableSequence[google.cloud.texttospeech_v1beta1.types.SynthesizeSpeechRequest.TimepointType]):\n        Whether and what timepoints are returned in\n        the response.\n    advanced_voice_options (google.cloud.texttospeech_v1beta1.types.AdvancedVoiceOptions):\n        Advanced voice options.\n\n        This field is a member of `oneof`_ ``_advanced_voice_o",
      "parameters": {
        "type": "object",
        "properties": {
          "input": {
            "description": "Required. The Synthesizer requires either plain text or SSML as input.",
            "type": "object",
            "properties": {
              "text": {
                "description": "The raw text to be synthesized.  This field is a member of `oneof`_ ``input_source``.",
                "type": "string"
              },
              "ssml": {
                "description": "The SSML document to be synthesized. The SSML document must be valid and well-formed. Otherwise the RPC will fail and return [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]. For more information, see `SSML <https://cloud.google.com/text-to-speech/docs/ssml>`__.  This field is a member of `oneof`_ ``input_source``.",
                "type": "string"
              },
              "multi_speaker_markup": {
                "type": "object",
                "properties": {
                  "turns": {
                    "description": "Required. Speaker turns.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "speaker": {
                          "description": "Required. The speaker of the turn, for example, 'O' or 'Q'. Please refer to documentation for available speakers.",
                          "type": "string"
                        },
                        "text": {
                          "description": "Required. The text to speak.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "speaker",
                        "text"
                      ]
                    }
                  }
                },
                "required": [
                  "turns"
                ]
              },
              "custom_pronunciations": {
                "type": "object",
                "properties": {
                  "pronunciations": {
                    "description": "The pronunciation customizations to be applied.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "phrase": {
                          "description": "The phrase to which the customization will be applied. The phrase can be multiple words (in the case of proper nouns etc), but should not span to a whole sentence.  This field is a member of `oneof`_ ``_phrase``.",
                          "type": "string"
                        },
                        "phonetic_encoding": {
                          "type": "enum",
                          "name": "PhoneticEncoding",
                          "description": "The phonetic encoding of the phrase.\n\nValues:\n    PHONETIC_ENCODING_UNSPECIFIED (0):\n        Not specified.\n    PHONETIC_ENCODING_IPA (1):\n        IPA. (e.g. apple -> \u02c8\u00e6p\u0259l )\n        https://en.wikipedia.org/wiki/International_Phonetic_Alphabet\n    PHONETIC_ENCODING_X_SAMPA (2):\n        X-SAMPA (e.g. apple -> \"{p@l\" )\n        https://en.wikipedia.org/wiki/X-SAMPA",
                          "values": {
                            "PHONETIC_ENCODING_UNSPECIFIED": {
                              "value": 0
                            },
                            "PHONETIC_ENCODING_IPA": {
                              "value": 1
                            },
                            "PHONETIC_ENCODING_X_SAMPA": {
                              "value": 2
                            }
                          }
                        },
                        "pronunciation": {
                          "description": "The pronunciation of the phrase. This must be in the phonetic encoding specified above.  This field is a member of `oneof`_ ``_pronunciation``.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "voice": {
            "description": "Required. The desired voice of the synthesized audio.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "Required. The language (and potentially also the region) of the voice expressed as a `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language tag, e.g. \"en-US\". This should not include a script tag (e.g. use \"cmn-cn\" rather than \"cmn-Hant-cn\"), because the script will be inferred from the input provided in the SynthesisInput. The TTS service will use this parameter to help choose an appropriate voice. Note that the TTS service may choose a voice with a slightly different language code than the one selected; it may substitute a different region (e.g. using en-US rather than en-CA if there isn't a Canadian voice available), or even a different language, e.g. using \"nb\" (Norwegian Bokmal) instead of \"no\" (Norwegian)\".",
                "type": "string"
              },
              "name": {
                "description": "The name of the voice. If both the name and the gender are not set, the service will choose a voice based on the other parameters such as language_code.",
                "type": "string"
              },
              "ssml_gender": {
                "type": "enum",
                "name": "SsmlVoiceGender",
                "description": "Gender of the voice as described in `SSML voice\nelement <https://www.w3.org/TR/speech-synthesis11/#edef_voice>`__.\n\nValues:\n    SSML_VOICE_GENDER_UNSPECIFIED (0):\n        An unspecified gender.\n        In VoiceSelectionParams, this means that the\n        client doesn't care which gender the selected\n        voice will have. In the Voice field of\n        ListVoicesResponse, this may mean that the voice\n        doesn't fit any of the other categories in this\n        enum, or that the gender of the voice isn't\n        known.\n    MALE (1):\n        A male voice.\n    FEMALE (2):\n        A female voice.\n    NEUTRAL (3):\n        A gender-neutral voice. This voice is not yet\n        supported.",
                "values": {
                  "SSML_VOICE_GENDER_UNSPECIFIED": {
                    "value": 0
                  },
                  "MALE": {
                    "value": 1
                  },
                  "FEMALE": {
                    "value": 2
                  },
                  "NEUTRAL": {
                    "value": 3
                  }
                }
              },
              "custom_voice": {
                "type": "object",
                "properties": {
                  "model": {
                    "description": "Required. The name of the AutoML model that synthesizes the custom voice.",
                    "type": "string"
                  },
                  "reported_usage": {
                    "type": "enum",
                    "name": "ReportedUsage",
                    "description": "Deprecated. The usage of the synthesized audio. Usage does\nnot affect billing.\n\nValues:\n    REPORTED_USAGE_UNSPECIFIED (0):\n        Request with reported usage unspecified will\n        be rejected.\n    REALTIME (1):\n        For scenarios where the synthesized audio is\n        not downloadable and can only be used once. For\n        example, real-time request in IVR system.\n    OFFLINE (2):\n        For scenarios where the synthesized audio is\n        downloadable and can be reused. For example, the\n        synthesized audio is downloaded, stored in\n        customer service system and played repeatedly.",
                    "values": {
                      "REPORTED_USAGE_UNSPECIFIED": {
                        "value": 0
                      },
                      "REALTIME": {
                        "value": 1
                      },
                      "OFFLINE": {
                        "value": 2
                      }
                    }
                  }
                },
                "required": [
                  "model"
                ]
              },
              "voice_clone": {
                "type": "object",
                "properties": {
                  "voice_cloning_key": {
                    "description": "Required. Created by GenerateVoiceCloningKey.",
                    "type": "string"
                  }
                },
                "required": [
                  "voice_cloning_key"
                ]
              }
            },
            "required": [
              "language_code"
            ]
          },
          "audio_config": {
            "description": "Required. The configuration of the synthesized audio.",
            "type": "object",
            "properties": {
              "audio_encoding": {
                "type": "enum",
                "name": "AudioEncoding",
                "description": "Configuration to set up audio encoder. The encoding\ndetermines the output audio format that we'd like.\n\nValues:\n    AUDIO_ENCODING_UNSPECIFIED (0):\n        Not specified. Will return result\n        [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT].\n    LINEAR16 (1):\n        Uncompressed 16-bit signed little-endian\n        samples (Linear PCM). Audio content returned as\n        LINEAR16 also contains a WAV header.\n    MP3 (2):\n        MP3 audio at 32kbps.\n    MP3_64_KBPS (4):\n        MP3 at 64kbps.\n    OGG_OPUS (3):\n        Opus encoded audio wrapped in an ogg\n        container. The result will be a file which can\n        be played natively on Android, and in browsers\n        (at least Chrome and Firefox). The quality of\n        the encoding is considerably higher than MP3\n        while using approximately the same bitrate.\n    MULAW (5):\n        8-bit samples that compand 14-bit audio\n        samples using G.711 PCMU/mu-law. Audio content\n        returned as MULAW also contains a WAV header",
                "values": {
                  "AUDIO_ENCODING_UNSPECIFIED": {
                    "value": 0
                  },
                  "LINEAR16": {
                    "value": 1
                  },
                  "MP3": {
                    "value": 2
                  },
                  "MP3_64_KBPS": {
                    "value": 4
                  },
                  "OGG_OPUS": {
                    "value": 3
                  },
                  "MULAW": {
                    "value": 5
                  },
                  "ALAW": {
                    "value": 6
                  }
                }
              },
              "speaking_rate": {
                "description": "Optional. Input only. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.",
                "type": "number"
              },
              "pitch": {
                "description": "Optional. Input only. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
                "type": "number"
              },
              "volume_gain_db": {
                "description": "Optional. Input only. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. Strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
                "type": "number"
              },
              "sample_rate_hertz": {
                "description": "Optional. The synthesis sample rate (in hertz) for this audio. When this is specified in SynthesizeSpeechRequest, if this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality), unless the specified sample rate is not supported for the encoding chosen, in which case it will fail the request and return [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT].",
                "type": "integer"
              },
              "effects_profile_id": {
                "description": "Optional. Input only. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given. See `audio profiles <https://cloud.google.com/text-to-speech/docs/audio-profiles>`__ for current supported profile ids.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "audio_encoding"
            ]
          },
          "enable_time_pointing": {
            "description": "Whether and what timepoints are returned in the response.",
            "type": "array",
            "items": {
              "type": "enum",
              "name": "TimepointType",
              "description": "The type of timepoint information that is returned in the\nresponse.\n\nValues:\n    TIMEPOINT_TYPE_UNSPECIFIED (0):\n        Not specified. No timepoint information will\n        be returned.\n    SSML_MARK (1):\n        Timepoint information of ``<mark>`` tags in SSML input will\n        be returned.",
              "values": {
                "TIMEPOINT_TYPE_UNSPECIFIED": {
                  "value": 0
                },
                "SSML_MARK": {
                  "value": 1
                }
              }
            }
          },
          "advanced_voice_options": {
            "description": "Advanced voice options.  This field is a member of `oneof`_ ``_advanced_voice_options``.",
            "type": "object",
            "properties": {
              "low_latency_journey_synthesis": {
                "description": "Only for Journey voices. If false, the synthesis will be context aware and have higher latency.  This field is a member of `oneof`_ ``_low_latency_journey_synthesis``.",
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "input",
          "voice",
          "audio_config"
        ]
      }
    },
    {
      "type": "function",
      "name": "StreamingSynthesizeRequest",
      "description": "Request message for the ``StreamingSynthesize`` method. Multiple\n``StreamingSynthesizeRequest`` messages are sent in one call. The\nfirst message must contain a ``streaming_config`` that fully\nspecifies the request configuration and must not contain ``input``.\nAll subsequent messages must only have ``input`` set.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    streaming_config (google.cloud.texttospeech_v1beta1.types.StreamingSynthesizeConfig):\n        StreamingSynthesizeConfig to be used in this streaming\n        attempt. Only specified in the first message sent in a\n        ``StreamingSynthesize`` call.\n\n        This field is a member of `oneof`_ ``streaming_request``.\n    input (google.cloud.texttospeech_v1beta1.types.StreamingSyn",
      "parameters": {
        "type": "object",
        "properties": {
          "streaming_config": {
            "description": "StreamingSynthesizeConfig to be used in this streaming attempt. Only specified in the first message sent in a ``StreamingSynthesize`` call.  This field is a member of `oneof`_ ``streaming_request``.",
            "type": "object",
            "properties": {
              "voice": {
                "type": "object",
                "properties": {
                  "language_code": {
                    "description": "Required. The language (and potentially also the region) of the voice expressed as a `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language tag, e.g. \"en-US\". This should not include a script tag (e.g. use \"cmn-cn\" rather than \"cmn-Hant-cn\"), because the script will be inferred from the input provided in the SynthesisInput. The TTS service will use this parameter to help choose an appropriate voice. Note that the TTS service may choose a voice with a slightly different language code than the one selected; it may substitute a different region (e.g. using en-US rather than en-CA if there isn't a Canadian voice available), or even a different language, e.g. using \"nb\" (Norwegian Bokmal) instead of \"no\" (Norwegian)\".",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the voice. If both the name and the gender are not set, the service will choose a voice based on the other parameters such as language_code.",
                    "type": "string"
                  },
                  "ssml_gender": {
                    "type": "enum",
                    "name": "SsmlVoiceGender",
                    "description": "Gender of the voice as described in `SSML voice\nelement <https://www.w3.org/TR/speech-synthesis11/#edef_voice>`__.\n\nValues:\n    SSML_VOICE_GENDER_UNSPECIFIED (0):\n        An unspecified gender.\n        In VoiceSelectionParams, this means that the\n        client doesn't care which gender the selected\n        voice will have. In the Voice field of\n        ListVoicesResponse, this may mean that the voice\n        doesn't fit any of the other categories in this\n        enum, or that the gender of the voice isn't\n        known.\n    MALE (1):\n        A male voice.\n    FEMALE (2):\n        A female voice.\n    NEUTRAL (3):\n        A gender-neutral voice. This voice is not yet\n        supported.",
                    "values": {
                      "SSML_VOICE_GENDER_UNSPECIFIED": {
                        "value": 0
                      },
                      "MALE": {
                        "value": 1
                      },
                      "FEMALE": {
                        "value": 2
                      },
                      "NEUTRAL": {
                        "value": 3
                      }
                    }
                  },
                  "custom_voice": {
                    "type": "object",
                    "properties": {
                      "model": {
                        "description": "Required. The name of the AutoML model that synthesizes the custom voice.",
                        "type": "string"
                      },
                      "reported_usage": {
                        "type": "enum",
                        "name": "ReportedUsage",
                        "description": "Deprecated. The usage of the synthesized audio. Usage does\nnot affect billing.\n\nValues:\n    REPORTED_USAGE_UNSPECIFIED (0):\n        Request with reported usage unspecified will\n        be rejected.\n    REALTIME (1):\n        For scenarios where the synthesized audio is\n        not downloadable and can only be used once. For\n        example, real-time request in IVR system.\n    OFFLINE (2):\n        For scenarios where the synthesized audio is\n        downloadable and can be reused. For example, the\n        synthesized audio is downloaded, stored in\n        customer service system and played repeatedly.",
                        "values": {
                          "REPORTED_USAGE_UNSPECIFIED": {
                            "value": 0
                          },
                          "REALTIME": {
                            "value": 1
                          },
                          "OFFLINE": {
                            "value": 2
                          }
                        }
                      }
                    },
                    "required": [
                      "model"
                    ]
                  },
                  "voice_clone": {
                    "type": "object",
                    "properties": {
                      "voice_cloning_key": {
                        "description": "Required. Created by GenerateVoiceCloningKey.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "voice_cloning_key"
                    ]
                  }
                },
                "required": [
                  "language_code"
                ]
              }
            },
            "required": [
              "voice"
            ]
          },
          "input": {
            "description": "Input to synthesize. Specified in all messages but the first in a ``StreamingSynthesize`` call.  This field is a member of `oneof`_ ``streaming_request``.",
            "type": "object",
            "properties": {
              "text": {
                "description": "The raw text to be synthesized. It is recommended that each input contains complete, terminating sentences, as this will likely result in better prosody in the output audio. That being said, users are free to input text however they please.  This field is a member of `oneof`_ ``input_source``.",
                "type": "string"
              }
            }
          }
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-texttospeech\\google\\cloud\\texttospeech_v1beta1\\types\\cloud_tts_lrs.py": [
    {
      "type": "function",
      "name": "SynthesizeLongAudioRequest",
      "description": "The top-level message sent by the client for the\n``SynthesizeLongAudio`` method.\n\nAttributes:\n    parent (str):\n        The resource states of the request in the form of\n        ``projects/*/locations/*``.\n    input (google.cloud.texttospeech_v1beta1.types.SynthesisInput):\n        Required. The Synthesizer requires either\n        plain text or SSML as input.\n    audio_config (google.cloud.texttospeech_v1beta1.types.AudioConfig):\n        Required. The configuration of the\n        synthesized audio.\n    output_gcs_uri (str):\n        Required. Specifies a Cloud Storage URI for the synthesis\n        results. Must be specified in the format:\n        ``gs://bucket_name/object_name``, and the bucket must\n        already exist.\n    voice (google.cloud.texttospeech_v1beta1.types.VoiceSelectionParams):\n        Required. The desired voice of the\n        synthesized audio.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "The resource states of the request in the form of ``projects/*/locations/*``.",
            "type": "string"
          },
          "input": {
            "description": "Required. The Synthesizer requires either plain text or SSML as input.",
            "type": "object",
            "properties": {
              "text": {
                "description": "The raw text to be synthesized.  This field is a member of `oneof`_ ``input_source``.",
                "type": "string"
              },
              "ssml": {
                "description": "The SSML document to be synthesized. The SSML document must be valid and well-formed. Otherwise the RPC will fail and return [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]. For more information, see `SSML <https://cloud.google.com/text-to-speech/docs/ssml>`__.  This field is a member of `oneof`_ ``input_source``.",
                "type": "string"
              },
              "multi_speaker_markup": {
                "type": "object",
                "properties": {
                  "turns": {
                    "description": "Required. Speaker turns.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "speaker": {
                          "description": "Required. The speaker of the turn, for example, 'O' or 'Q'. Please refer to documentation for available speakers.",
                          "type": "string"
                        },
                        "text": {
                          "description": "Required. The text to speak.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "speaker",
                        "text"
                      ]
                    }
                  }
                },
                "required": [
                  "turns"
                ]
              },
              "custom_pronunciations": {
                "type": "object",
                "properties": {
                  "pronunciations": {
                    "description": "The pronunciation customizations to be applied.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "phrase": {
                          "description": "The phrase to which the customization will be applied. The phrase can be multiple words (in the case of proper nouns etc), but should not span to a whole sentence.  This field is a member of `oneof`_ ``_phrase``.",
                          "type": "string"
                        },
                        "phonetic_encoding": {
                          "type": "enum",
                          "name": "PhoneticEncoding",
                          "description": "The phonetic encoding of the phrase.\n\nValues:\n    PHONETIC_ENCODING_UNSPECIFIED (0):\n        Not specified.\n    PHONETIC_ENCODING_IPA (1):\n        IPA. (e.g. apple -> \u02c8\u00e6p\u0259l )\n        https://en.wikipedia.org/wiki/International_Phonetic_Alphabet\n    PHONETIC_ENCODING_X_SAMPA (2):\n        X-SAMPA (e.g. apple -> \"{p@l\" )\n        https://en.wikipedia.org/wiki/X-SAMPA",
                          "values": {
                            "PHONETIC_ENCODING_UNSPECIFIED": {
                              "value": 0
                            },
                            "PHONETIC_ENCODING_IPA": {
                              "value": 1
                            },
                            "PHONETIC_ENCODING_X_SAMPA": {
                              "value": 2
                            }
                          }
                        },
                        "pronunciation": {
                          "description": "The pronunciation of the phrase. This must be in the phonetic encoding specified above.  This field is a member of `oneof`_ ``_pronunciation``.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "audio_config": {
            "description": "Required. The configuration of the synthesized audio.",
            "type": "object",
            "properties": {
              "audio_encoding": {
                "type": "enum",
                "name": "AudioEncoding",
                "description": "Configuration to set up audio encoder. The encoding\ndetermines the output audio format that we'd like.\n\nValues:\n    AUDIO_ENCODING_UNSPECIFIED (0):\n        Not specified. Will return result\n        [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT].\n    LINEAR16 (1):\n        Uncompressed 16-bit signed little-endian\n        samples (Linear PCM). Audio content returned as\n        LINEAR16 also contains a WAV header.\n    MP3 (2):\n        MP3 audio at 32kbps.\n    MP3_64_KBPS (4):\n        MP3 at 64kbps.\n    OGG_OPUS (3):\n        Opus encoded audio wrapped in an ogg\n        container. The result will be a file which can\n        be played natively on Android, and in browsers\n        (at least Chrome and Firefox). The quality of\n        the encoding is considerably higher than MP3\n        while using approximately the same bitrate.\n    MULAW (5):\n        8-bit samples that compand 14-bit audio\n        samples using G.711 PCMU/mu-law. Audio content\n        returned as MULAW also contains a WAV header",
                "values": {
                  "AUDIO_ENCODING_UNSPECIFIED": {
                    "value": 0
                  },
                  "LINEAR16": {
                    "value": 1
                  },
                  "MP3": {
                    "value": 2
                  },
                  "MP3_64_KBPS": {
                    "value": 4
                  },
                  "OGG_OPUS": {
                    "value": 3
                  },
                  "MULAW": {
                    "value": 5
                  },
                  "ALAW": {
                    "value": 6
                  }
                }
              },
              "speaking_rate": {
                "description": "Optional. Input only. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.",
                "type": "number"
              },
              "pitch": {
                "description": "Optional. Input only. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
                "type": "number"
              },
              "volume_gain_db": {
                "description": "Optional. Input only. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. Strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
                "type": "number"
              },
              "sample_rate_hertz": {
                "description": "Optional. The synthesis sample rate (in hertz) for this audio. When this is specified in SynthesizeSpeechRequest, if this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality), unless the specified sample rate is not supported for the encoding chosen, in which case it will fail the request and return [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT].",
                "type": "integer"
              },
              "effects_profile_id": {
                "description": "Optional. Input only. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given. See `audio profiles <https://cloud.google.com/text-to-speech/docs/audio-profiles>`__ for current supported profile ids.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "audio_encoding"
            ]
          },
          "output_gcs_uri": {
            "description": "Required. Specifies a Cloud Storage URI for the synthesis results. Must be specified in the format: ``gs://bucket_name/object_name``, and the bucket must already exist.",
            "type": "string"
          },
          "voice": {
            "description": "Required. The desired voice of the synthesized audio.",
            "type": "object",
            "properties": {
              "language_code": {
                "description": "Required. The language (and potentially also the region) of the voice expressed as a `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language tag, e.g. \"en-US\". This should not include a script tag (e.g. use \"cmn-cn\" rather than \"cmn-Hant-cn\"), because the script will be inferred from the input provided in the SynthesisInput. The TTS service will use this parameter to help choose an appropriate voice. Note that the TTS service may choose a voice with a slightly different language code than the one selected; it may substitute a different region (e.g. using en-US rather than en-CA if there isn't a Canadian voice available), or even a different language, e.g. using \"nb\" (Norwegian Bokmal) instead of \"no\" (Norwegian)\".",
                "type": "string"
              },
              "name": {
                "description": "The name of the voice. If both the name and the gender are not set, the service will choose a voice based on the other parameters such as language_code.",
                "type": "string"
              },
              "ssml_gender": {
                "type": "enum",
                "name": "SsmlVoiceGender",
                "description": "Gender of the voice as described in `SSML voice\nelement <https://www.w3.org/TR/speech-synthesis11/#edef_voice>`__.\n\nValues:\n    SSML_VOICE_GENDER_UNSPECIFIED (0):\n        An unspecified gender.\n        In VoiceSelectionParams, this means that the\n        client doesn't care which gender the selected\n        voice will have. In the Voice field of\n        ListVoicesResponse, this may mean that the voice\n        doesn't fit any of the other categories in this\n        enum, or that the gender of the voice isn't\n        known.\n    MALE (1):\n        A male voice.\n    FEMALE (2):\n        A female voice.\n    NEUTRAL (3):\n        A gender-neutral voice. This voice is not yet\n        supported.",
                "values": {
                  "SSML_VOICE_GENDER_UNSPECIFIED": {
                    "value": 0
                  },
                  "MALE": {
                    "value": 1
                  },
                  "FEMALE": {
                    "value": 2
                  },
                  "NEUTRAL": {
                    "value": 3
                  }
                }
              },
              "custom_voice": {
                "type": "object",
                "properties": {
                  "model": {
                    "description": "Required. The name of the AutoML model that synthesizes the custom voice.",
                    "type": "string"
                  },
                  "reported_usage": {
                    "type": "enum",
                    "name": "ReportedUsage",
                    "description": "Deprecated. The usage of the synthesized audio. Usage does\nnot affect billing.\n\nValues:\n    REPORTED_USAGE_UNSPECIFIED (0):\n        Request with reported usage unspecified will\n        be rejected.\n    REALTIME (1):\n        For scenarios where the synthesized audio is\n        not downloadable and can only be used once. For\n        example, real-time request in IVR system.\n    OFFLINE (2):\n        For scenarios where the synthesized audio is\n        downloadable and can be reused. For example, the\n        synthesized audio is downloaded, stored in\n        customer service system and played repeatedly.",
                    "values": {
                      "REPORTED_USAGE_UNSPECIFIED": {
                        "value": 0
                      },
                      "REALTIME": {
                        "value": 1
                      },
                      "OFFLINE": {
                        "value": 2
                      }
                    }
                  }
                },
                "required": [
                  "model"
                ]
              },
              "voice_clone": {
                "type": "object",
                "properties": {
                  "voice_cloning_key": {
                    "description": "Required. Created by GenerateVoiceCloningKey.",
                    "type": "string"
                  }
                },
                "required": [
                  "voice_cloning_key"
                ]
              }
            },
            "required": [
              "language_code"
            ]
          }
        },
        "required": [
          "input",
          "audio_config",
          "output_gcs_uri",
          "voice"
        ]
      }
    }
  ]
}