{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-recommendations-ai/google/cloud/recommendationengine_v1beta1/types/catalog_service.py": [
    {
      "type": "function",
      "name": "CreateCatalogItemRequest",
      "description": "Request message for CreateCatalogItem method.\n\nAttributes:\n    parent (str):\n        Required. The parent catalog resource name, such as\n        ``projects/*/locations/global/catalogs/default_catalog``.\n    catalog_item (google.cloud.recommendationengine_v1beta1.types.CatalogItem):\n        Required. The catalog item to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent catalog resource name, such as ``projects/*/locations/global/catalogs/default_catalog``.",
            "type": "string"
          },
          "catalog_item": {
            "description": "Required. The catalog item to create.",
            "reference": "google.cloud.recommendationengine_v1beta1.types.CatalogItem",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Required. Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes.  This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.",
                  "type": "string"
                },
                "category_hierarchies": {
                  "description": "Required. Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies.  For example, if a shoes product belongs to both [\"Shoes & Accessories\" -> \"Shoes\"] and [\"Sports & Fitness\" -> \"Athletic Clothing\" -> \"Shoes\"], it could be represented as:  ::  \"categoryHierarchies\": [ { \"categories\": [\"Shoes & Accessories\", \"Shoes\"]}, { \"categories\": [\"Sports & Fitness\", \"Athletic Clothing\", \"Shoes\"] } ]",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.recommendationengine_v1beta1.types.CatalogItem.CategoryHierarchy",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "description": "Required. Catalog item categories. Each category should be a UTF-8 encoded string with a length limit of 2 KiB.  Note that the order in the list denotes the specificity (from least to most specific).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "categories"
                      ]
                    }
                  }
                },
                "title": {
                  "description": "Required. Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.",
                  "type": "string"
                },
                "item_attributes": {
                  "description": "Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "categorical_features": {
                        "description": "Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer.  Feature names and values must be UTF-8 encoded strings.  For example: ``{ \"colors\": {\"value\": [\"yellow\", \"green\"]}, \"sizes\": {\"value\":[\"S\", \"M\"]}``",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.StringList",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "description": "The values",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "numerical_features": {
                        "description": "Numerical features. Some examples would be the height/weight of a product, or age of a customer.  Feature names must be UTF-8 encoded strings.  For example: ``{ \"lengths_cm\": {\"value\":[2.3, 15.4]}, \"heights_cm\": {\"value\":[8.1, 6.4]} }``",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.FloatList",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "description": "Float feature value.",
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "language_code": {
                  "description": "Optional. Language of the title/description/item_attributes. Use language tags defined by BCP 47. https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Our supported language codes include 'en', 'es', 'fr', 'de', 'ar', 'fa', 'zh', 'ja', 'ko', 'sv', 'ro', 'nl'. For other languages, contact your Google account manager.",
                  "type": "string"
                },
                "tags": {
                  "description": "Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB.  This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "item_group_id": {
                  "description": "Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes.  This field must be enabled before it can be used. `Learn more </recommendations-ai/docs/catalog#item-group-id>`__.",
                  "type": "string"
                },
                "product_metadata": {
                  "description": "Optional. Metadata specific to retail products.  This field is a member of `oneof`_ ``recommendation_type``.",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.ProductCatalogItem",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "exact_price": {
                        "description": "Optional. The exact product price.  This field is a member of `oneof`_ ``price``.",
                        "type": "object",
                        "reference": "google.cloud.recommendationengine_v1beta1.types.ProductCatalogItem.ExactPrice",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "display_price": {
                              "description": "Optional. Display price of the product.",
                              "type": "number"
                            },
                            "original_price": {
                              "description": "Optional. Price of the product without any discount. If zero, by default set to be the 'displayPrice'.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "price_range": {
                        "description": "Optional. The product price range.  This field is a member of `oneof`_ ``price``.",
                        "type": "object",
                        "reference": "google.cloud.recommendationengine_v1beta1.types.ProductCatalogItem.PriceRange",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "min_": {
                              "description": "Required. The minimum product price.",
                              "type": "number"
                            },
                            "max_": {
                              "description": "Required. The maximum product price.",
                              "type": "number"
                            }
                          },
                          "required": [
                            "min_",
                            "max_"
                          ]
                        }
                      },
                      "costs": {
                        "description": "Optional. A map to pass the costs associated with the product.  For example: {\"manufacturing\": 45.5} The profit of selling this item is computed like so:  -  If 'exactPrice' is provided, profit = displayPrice - sum(costs) -  If 'priceRange' is provided, profit = minPrice - sum(costs)",
                        "type": "object",
                        "additionalProperties": {
                          "type": "number"
                        }
                      },
                      "currency_code": {
                        "description": "Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.",
                        "type": "string"
                      },
                      "stock_state": {
                        "description": "Optional. Online stock state of the catalog item. Default is ``IN_STOCK``.",
                        "type": "object",
                        "reference": "google.cloud.recommendationengine_v1beta1.types.ProductCatalogItem.StockState"
                      },
                      "available_quantity": {
                        "description": "Optional. The available quantity of the item.",
                        "type": "integer"
                      },
                      "canonical_product_uri": {
                        "description": "Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..",
                        "type": "string"
                      },
                      "images": {
                        "description": "Optional. Product images for the catalog item.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.recommendationengine_v1beta1.types.Image",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "Required. URL of the image with a length limit of 5 KiB.",
                                "type": "string"
                              },
                              "height": {
                                "description": "Optional. Height of the image in number of pixels.",
                                "type": "integer"
                              },
                              "width": {
                                "description": "Optional. Width of the image in number of pixels.",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "uri"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "id",
                "category_hierarchies",
                "title"
              ]
            }
          }
        },
        "required": [
          "parent",
          "catalog_item"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetCatalogItemRequest",
      "description": "Request message for GetCatalogItem method.\n\nAttributes:\n    name (str):\n        Required. Full resource name of catalog item, such as\n        ``projects/*/locations/global/catalogs/default_catalog/catalogitems/some_catalog_item_id``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Full resource name of catalog item, such as ``projects/*/locations/global/catalogs/default_catalog/catalogitems/some_catalog_item_id``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListCatalogItemsRequest",
      "description": "Request message for ListCatalogItems method.\n\nAttributes:\n    parent (str):\n        Required. The parent catalog resource name, such as\n        ``projects/*/locations/global/catalogs/default_catalog``.\n    page_size (int):\n        Optional. Maximum number of results to return\n        per page. If zero, the service will choose a\n        reasonable default.\n    page_token (str):\n        Optional. The previous\n        ListCatalogItemsResponse.next_page_token.\n    filter (str):\n        Optional. A filter to apply on the list\n        results.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent catalog resource name, such as ``projects/*/locations/global/catalogs/default_catalog``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. Maximum number of results to return per page. If zero, the service will choose a reasonable default.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. The previous ListCatalogItemsResponse.next_page_token.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. A filter to apply on the list results.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateCatalogItemRequest",
      "description": "Request message for UpdateCatalogItem method.\n\nAttributes:\n    name (str):\n        Required. Full resource name of catalog item, such as\n        ``projects/*/locations/global/catalogs/default_catalog/catalogItems/some_catalog_item_id``.\n    catalog_item (google.cloud.recommendationengine_v1beta1.types.CatalogItem):\n        Required. The catalog item to update/create. The\n        'catalog_item_id' field has to match that in the 'name'.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Optional. Indicates which fields in the\n        provided 'item' to update. If not set, will by\n        default update all fields.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Full resource name of catalog item, such as ``projects/*/locations/global/catalogs/default_catalog/catalogItems/some_catalog_item_id``.",
            "type": "string"
          },
          "catalog_item": {
            "description": "Required. The catalog item to update/create. The 'catalog_item_id' field has to match that in the 'name'.",
            "reference": "google.cloud.recommendationengine_v1beta1.types.CatalogItem",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Required. Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes.  This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.",
                  "type": "string"
                },
                "category_hierarchies": {
                  "description": "Required. Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies.  For example, if a shoes product belongs to both [\"Shoes & Accessories\" -> \"Shoes\"] and [\"Sports & Fitness\" -> \"Athletic Clothing\" -> \"Shoes\"], it could be represented as:  ::  \"categoryHierarchies\": [ { \"categories\": [\"Shoes & Accessories\", \"Shoes\"]}, { \"categories\": [\"Sports & Fitness\", \"Athletic Clothing\", \"Shoes\"] } ]",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.recommendationengine_v1beta1.types.CatalogItem.CategoryHierarchy",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "description": "Required. Catalog item categories. Each category should be a UTF-8 encoded string with a length limit of 2 KiB.  Note that the order in the list denotes the specificity (from least to most specific).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "categories"
                      ]
                    }
                  }
                },
                "title": {
                  "description": "Required. Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.",
                  "type": "string"
                },
                "item_attributes": {
                  "description": "Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "categorical_features": {
                        "description": "Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer.  Feature names and values must be UTF-8 encoded strings.  For example: ``{ \"colors\": {\"value\": [\"yellow\", \"green\"]}, \"sizes\": {\"value\":[\"S\", \"M\"]}``",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.StringList",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "description": "The values",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "numerical_features": {
                        "description": "Numerical features. Some examples would be the height/weight of a product, or age of a customer.  Feature names must be UTF-8 encoded strings.  For example: ``{ \"lengths_cm\": {\"value\":[2.3, 15.4]}, \"heights_cm\": {\"value\":[8.1, 6.4]} }``",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.FloatList",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "description": "Float feature value.",
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "language_code": {
                  "description": "Optional. Language of the title/description/item_attributes. Use language tags defined by BCP 47. https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Our supported language codes include 'en', 'es', 'fr', 'de', 'ar', 'fa', 'zh', 'ja', 'ko', 'sv', 'ro', 'nl'. For other languages, contact your Google account manager.",
                  "type": "string"
                },
                "tags": {
                  "description": "Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB.  This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "item_group_id": {
                  "description": "Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes.  This field must be enabled before it can be used. `Learn more </recommendations-ai/docs/catalog#item-group-id>`__.",
                  "type": "string"
                },
                "product_metadata": {
                  "description": "Optional. Metadata specific to retail products.  This field is a member of `oneof`_ ``recommendation_type``.",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.ProductCatalogItem",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "exact_price": {
                        "description": "Optional. The exact product price.  This field is a member of `oneof`_ ``price``.",
                        "type": "object",
                        "reference": "google.cloud.recommendationengine_v1beta1.types.ProductCatalogItem.ExactPrice",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "display_price": {
                              "description": "Optional. Display price of the product.",
                              "type": "number"
                            },
                            "original_price": {
                              "description": "Optional. Price of the product without any discount. If zero, by default set to be the 'displayPrice'.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "price_range": {
                        "description": "Optional. The product price range.  This field is a member of `oneof`_ ``price``.",
                        "type": "object",
                        "reference": "google.cloud.recommendationengine_v1beta1.types.ProductCatalogItem.PriceRange",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "min_": {
                              "description": "Required. The minimum product price.",
                              "type": "number"
                            },
                            "max_": {
                              "description": "Required. The maximum product price.",
                              "type": "number"
                            }
                          },
                          "required": [
                            "min_",
                            "max_"
                          ]
                        }
                      },
                      "costs": {
                        "description": "Optional. A map to pass the costs associated with the product.  For example: {\"manufacturing\": 45.5} The profit of selling this item is computed like so:  -  If 'exactPrice' is provided, profit = displayPrice - sum(costs) -  If 'priceRange' is provided, profit = minPrice - sum(costs)",
                        "type": "object",
                        "additionalProperties": {
                          "type": "number"
                        }
                      },
                      "currency_code": {
                        "description": "Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.",
                        "type": "string"
                      },
                      "stock_state": {
                        "description": "Optional. Online stock state of the catalog item. Default is ``IN_STOCK``.",
                        "type": "object",
                        "reference": "google.cloud.recommendationengine_v1beta1.types.ProductCatalogItem.StockState"
                      },
                      "available_quantity": {
                        "description": "Optional. The available quantity of the item.",
                        "type": "integer"
                      },
                      "canonical_product_uri": {
                        "description": "Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..",
                        "type": "string"
                      },
                      "images": {
                        "description": "Optional. Product images for the catalog item.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.recommendationengine_v1beta1.types.Image",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "Required. URL of the image with a length limit of 5 KiB.",
                                "type": "string"
                              },
                              "height": {
                                "description": "Optional. Height of the image in number of pixels.",
                                "type": "integer"
                              },
                              "width": {
                                "description": "Optional. Width of the image in number of pixels.",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "uri"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "id",
                "category_hierarchies",
                "title"
              ]
            }
          },
          "update_mask": {
            "description": "Optional. Indicates which fields in the provided 'item' to update. If not set, will by default update all fields.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "name",
          "catalog_item"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteCatalogItemRequest",
      "description": "Request message for DeleteCatalogItem method.\n\nAttributes:\n    name (str):\n        Required. Full resource name of catalog item, such as\n        ``projects/*/locations/global/catalogs/default_catalog/catalogItems/some_catalog_item_id``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Full resource name of catalog item, such as ``projects/*/locations/global/catalogs/default_catalog/catalogItems/some_catalog_item_id``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-recommendations-ai/google/cloud/recommendationengine_v1beta1/types/prediction_service.py": [
    {
      "type": "function",
      "name": "PredictRequest",
      "description": "Request message for Predict method.\n\nAttributes:\n    name (str):\n        Required. Full resource name of the format:\n        ``{name=projects/*/locations/global/catalogs/default_catalog/eventStores/default_event_store/placements/*}``\n        The id of the recommendation engine placement. This id is\n        used to identify the set of models that will be used to make\n        the prediction.\n\n        We currently support three placements with the following IDs\n        by default:\n\n        -  ``shopping_cart``: Predicts items frequently bought\n           together with one or more catalog items in the same\n           shopping session. Commonly displayed after\n           ``add-to-cart`` events, on product detail pages, or on\n           the shopping cart page.\n\n        -  ``home_page``: Predicts the next product that a user will\n           most likely engage with or purchase based on the shopping\n           or viewing history of the specified ``userId`` or\n           ``visitorId``. For example - Recommendations for",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Full resource name of the format: ``{name=projects/*/locations/global/catalogs/default_catalog/eventStores/default_event_store/placements/*}`` The id of the recommendation engine placement. This id is used to identify the set of models that will be used to make the prediction.  We currently support three placements with the following IDs by default:  -  ``shopping_cart``: Predicts items frequently bought together with one or more catalog items in the same shopping session. Commonly displayed after ``add-to-cart`` events, on product detail pages, or on the shopping cart page.  -  ``home_page``: Predicts the next product that a user will most likely engage with or purchase based on the shopping or viewing history of the specified ``userId`` or ``visitorId``. For example - Recommendations for you.  -  ``product_detail``: Predicts the next product that a user will most likely engage with or purchase. The prediction is based on the shopping or viewing history of the specified ``userId`` or ``visitorId`` and its relevance to a specified ``CatalogItem``. Typically used on product detail pages. For example - More items like this.  -  ``recently_viewed_default``: Returns up to 75 items recently viewed by the specified ``userId`` or ``visitorId``, most recent ones first. Returns nothing if neither of them has viewed any items yet. For example - Recently viewed.  The full list of available placements can be seen at https://console.cloud.google.com/recommendation/datafeeds/default_catalog/dashboard",
            "type": "string"
          },
          "user_event": {
            "description": "Required. Context about the user, what they are looking at and what action they took to trigger the predict request. Note that this user event detail won't be ingested to userEvent logs. Thus, a separate userEvent write request is required for event logging.",
            "reference": "google.cloud.recommendationengine_v1beta1.types.UserEvent",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "event_type": {
                  "description": "Required. User event type. Allowed values are:  -  ``add-to-cart`` Products being added to cart. -  ``add-to-list`` Items being added to a list (shopping list, favorites etc). -  ``category-page-view`` Special pages such as sale or promotion pages viewed. -  ``checkout-start`` User starting a checkout process. -  ``detail-page-view`` Products detail page viewed. -  ``home-page-view`` Homepage viewed. -  ``page-visit`` Generic page visits not included in the event types above. -  ``purchase-complete`` User finishing a purchase. -  ``refund`` Purchased items being refunded or returned. -  ``remove-from-cart`` Products being removed from cart. -  ``remove-from-list`` Items being removed from a list. -  ``search`` Product search. -  ``shopping-cart-page-view`` User viewing a shopping cart. -  ``impression`` List of items displayed. Used by Google Tag Manager.",
                  "type": "string"
                },
                "user_info": {
                  "description": "Required. User information.",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                },
                "event_detail": {
                  "description": "Optional. User event detailed information common across different recommendation types.",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.EventDetail",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "uri": {
                        "description": "Optional. Complete url (window.location.href) of the user's current page. When using the JavaScript pixel, this value is filled in automatically. Maximum length 5KB.",
                        "type": "string"
                      },
                      "referrer_uri": {
                        "description": "Optional. The referrer url of the current page. When using the JavaScript pixel, this value is filled in automatically.",
                        "type": "string"
                      },
                      "page_view_id": {
                        "description": "Optional. A unique id of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The ``pageViewId`` property should be kept the same for all these events so that they can be grouped together properly. This ``pageViewId`` will be automatically generated if using the JavaScript pixel.",
                        "type": "string"
                      },
                      "experiment_ids": {
                        "description": "Optional. A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups (e.g. using Recommendation Engine system, using different recommendation models).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "recommendation_token": {
                        "description": "Optional. Recommendation token included in the recommendation prediction response.  This field enables accurate attribution of recommendation model performance.  This token enables us to accurately attribute page view or purchase back to the event and the particular predict response containing this clicked/purchased item. If user clicks on product K in the recommendation results, pass the ``PredictResponse.recommendationToken`` property as a url parameter to product K's page. When recording events on product K's page, log the PredictResponse.recommendation_token to this field.  Optional, but highly encouraged for user events that are the result of a recommendation prediction query.",
                        "type": "string"
                      },
                      "event_attributes": {
                        "description": "Optional. Extra user event features to include in the recommendation model.  For product recommendation, an example of extra user information is traffic_channel, i.e. how user arrives at the site. Users can arrive at the site by coming to the site directly, or coming through Google search, and etc.",
                        "type": "object",
                        "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "categorical_features": {
                              "description": "Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer.  Feature names and values must be UTF-8 encoded strings.  For example: ``{ \"colors\": {\"value\": [\"yellow\", \"green\"]}, \"sizes\": {\"value\":[\"S\", \"M\"]}``",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.StringList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "values": {
                                      "description": "The values",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "numerical_features": {
                              "description": "Numerical features. Some examples would be the height/weight of a product, or age of a customer.  Feature names must be UTF-8 encoded strings.  For example: ``{ \"lengths_cm\": {\"value\":[2.3, 15.4]}, \"heights_cm\": {\"value\":[8.1, 6.4]} }``",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.FloatList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "description": "Float feature value.",
                                      "type": "array",
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "product_event_detail": {
                  "description": "Optional. Retail product specific user event metadata.  This field is required for the following event types:  -  ``add-to-cart`` -  ``add-to-list`` -  ``category-page-view`` -  ``checkout-start`` -  ``detail-page-view`` -  ``purchase-complete`` -  ``refund`` -  ``remove-from-cart`` -  ``remove-from-list`` -  ``search``  This field is optional for the following event types:  -  ``page-visit`` -  ``shopping-cart-page-view`` - note that 'product_event_detail' should be set for this unless the shopping cart is empty.  This field is not allowed for the following event types:  -  ``home-page-view``",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.ProductEventDetail",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "search_query": {
                        "description": "Required for ``search`` events. Other event types should not set this field. The user's search query as UTF-8 encoded text with a length limit of 5 KiB.",
                        "type": "string"
                      },
                      "page_categories": {
                        "description": "Required for ``category-page-view`` events. Other event types should not set this field. The categories associated with a category page. Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: categories : [\"Sales\", \"2017 Black Friday Deals\"].",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.recommendationengine_v1beta1.types.CatalogItem.CategoryHierarchy",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "categories": {
                                "description": "Required. Catalog item categories. Each category should be a UTF-8 encoded string with a length limit of 2 KiB.  Note that the order in the list denotes the specificity (from least to most specific).",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "categories"
                            ]
                          }
                        }
                      },
                      "product_details": {
                        "description": "The main product details related to the event.  This field is required for the following event types:  -  ``add-to-cart`` -  ``add-to-list`` -  ``checkout-start`` -  ``detail-page-view`` -  ``purchase-complete`` -  ``refund`` -  ``remove-from-cart`` -  ``remove-from-list``  This field is optional for the following event types:  -  ``page-visit`` -  ``shopping-cart-page-view`` - note that 'product_details' should be set for this unless the shopping cart is empty.  This field is not allowed for the following event types:  -  ``category-page-view`` -  ``home-page-view`` -  ``search``",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.recommendationengine_v1beta1.types.ProductDetail",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Required. Catalog item ID. UTF-8 encoded string with a length limit of 128 characters.",
                                "type": "string"
                              },
                              "currency_code": {
                                "description": "Optional. Currency code for price/costs. Use three-character ISO-4217 code. Required only if originalPrice or displayPrice is set.",
                                "type": "string"
                              },
                              "original_price": {
                                "description": "Optional. Original price of the product. If provided, this will override the original price in Catalog for this product.",
                                "type": "number"
                              },
                              "display_price": {
                                "description": "Optional. Display price of the product (e.g. discounted price). If provided, this will override the display price in Catalog for this product.",
                                "type": "number"
                              },
                              "stock_state": {
                                "description": "Optional. Item stock state. If provided, this overrides the stock state in Catalog for items in this event.",
                                "type": "object",
                                "reference": "google.cloud.recommendationengine_v1beta1.types.ProductCatalogItem.StockState"
                              },
                              "quantity": {
                                "description": "Optional. Quantity of the product associated with the user event. For example, this field will be 2 if two products are added to the shopping cart for ``add-to-cart`` event. Required for ``add-to-cart``, ``add-to-list``, ``remove-from-cart``, ``checkout-start``, ``purchase-complete``, ``refund`` event types.",
                                "type": "integer"
                              },
                              "available_quantity": {
                                "description": "Optional. Quantity of the products in stock when a user event happens. Optional. If provided, this overrides the available quantity in Catalog for this event. and can only be set if ``stock_status`` is set to ``IN_STOCK``.  Note that if an item is out of stock, you must set the ``stock_state`` field to be ``OUT_OF_STOCK``. Leaving this field unspecified / as zero is not sufficient to mark the item out of stock.",
                                "type": "integer"
                              },
                              "item_attributes": {
                                "description": "Optional. Extra features associated with a product in the user event.",
                                "type": "object",
                                "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "categorical_features": {
                                      "description": "Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer.  Feature names and values must be UTF-8 encoded strings.  For example: ``{ \"colors\": {\"value\": [\"yellow\", \"green\"]}, \"sizes\": {\"value\":[\"S\", \"M\"]}``",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "object",
                                        "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.StringList",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "values": {
                                              "description": "The values",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "numerical_features": {
                                      "description": "Numerical features. Some examples would be the height/weight of a product, or age of a customer.  Feature names must be UTF-8 encoded strings.  For example: ``{ \"lengths_cm\": {\"value\":[2.3, 15.4]}, \"heights_cm\": {\"value\":[8.1, 6.4]} }``",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "object",
                                        "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.FloatList",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "description": "Float feature value.",
                                              "type": "array",
                                              "items": {
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      },
                      "list_id": {
                        "description": "Required for ``add-to-list`` and ``remove-from-list`` events. The id or name of the list that the item is being added to or removed from. Other event types should not set this field.",
                        "type": "string"
                      },
                      "cart_id": {
                        "description": "Optional. The id or name of the associated shopping cart. This id is used to associate multiple items added or present in the cart before purchase.  This can only be set for ``add-to-cart``, ``remove-from-cart``, ``checkout-start``, ``purchase-complete``, or ``shopping-cart-page-view`` events.",
                        "type": "string"
                      },
                      "purchase_transaction": {
                        "description": "Optional. A transaction represents the entire purchase transaction. Required for ``purchase-complete`` events. Optional for ``checkout-start`` events. Other event types should not set this field.",
                        "type": "object",
                        "reference": "google.cloud.recommendationengine_v1beta1.types.PurchaseTransaction",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Optional. The transaction ID with a length limit of 128 bytes.",
                              "type": "string"
                            },
                            "revenue": {
                              "description": "Required. Total revenue or grand total associated with the transaction. This value include shipping, tax, or other adjustments to total revenue that you want to include as part of your revenue calculations. This field is not required if the event type is ``refund``.",
                              "type": "number"
                            },
                            "taxes": {
                              "description": "Optional. All the taxes associated with the transaction.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "number"
                              }
                            },
                            "costs": {
                              "description": "Optional. All the costs associated with the product. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs.  Total product cost such that profit = revenue - (sum(taxes) + sum(costs)) If product_cost is not set, then profit = revenue - tax - shipping - sum(CatalogItem.costs).  If CatalogItem.cost is not specified for one of the items, CatalogItem.cost based profit *cannot* be calculated for this Transaction.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "number"
                              }
                            },
                            "currency_code": {
                              "description": "Required. Currency code. Use three-character ISO-4217 code. This field is not required if the event type is ``refund``.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "revenue",
                            "currency_code"
                          ]
                        }
                      }
                    },
                    "required": [
                      "search_query",
                      "page_categories",
                      "list_id"
                    ]
                  }
                },
                "event_time": {
                  "description": "Optional. Only required for ImportUserEvents method. Timestamp of user event created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "event_source": {
                  "description": "Optional. This field should *not* be set when using JavaScript pixel or the Recommendations AI Tag. Defaults to ``EVENT_SOURCE_UNSPECIFIED``.",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.UserEvent.EventSource"
                }
              },
              "required": [
                "event_type",
                "user_info"
              ]
            }
          },
          "page_size": {
            "description": "Optional. Maximum number of results to return per page. Set this property to the number of prediction results required. If zero, the service will choose a reasonable default.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. The previous PredictResponse.next_page_token.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. Filter for restricting prediction results. Accepts values for tags and the ``filterOutOfStockItems`` flag.  -  Tag expressions. Restricts predictions to items that match all of the specified tags. Boolean operators ``OR`` and ``NOT`` are supported if the expression is enclosed in parentheses, and must be separated from the tag values by a space. ``-\"tagA\"`` is also supported and is equivalent to ``NOT \"tagA\"``. Tag values must be double quoted UTF-8 encoded strings with a size limit of 1 KiB.  -  filterOutOfStockItems. Restricts predictions to items that do not have a stockState value of OUT_OF_STOCK.  Examples:  -  tag=(\"Red\" OR \"Blue\") tag=\"New-Arrival\" tag=(NOT \"promotional\") -  filterOutOfStockItems tag=(-\"promotional\") -  filterOutOfStockItems",
            "type": "string"
          },
          "dry_run": {
            "description": "Optional. Use dryRun mode for this prediction query. If set to true, a dummy model will be used that returns arbitrary catalog items. Note that the dryRun mode should only be used for testing the API, or if the model is not ready.",
            "type": "boolean"
          },
          "params": {
            "description": "Optional. Additional domain specific parameters for the predictions.  Allowed values:  -  ``returnCatalogItem``: Boolean. If set to true, the associated catalogItem object will be returned in the ``PredictResponse.PredictionResult.itemMetadata`` object in the method response. -  ``returnItemScore``: Boolean. If set to true, the prediction 'score' corresponding to each returned item will be set in the ``metadata`` field in the prediction response. The given 'score' indicates the probability of an item being clicked/purchased given the user's context and history.",
            "type": "object",
            "additionalProperties": {
              "reference": "google.protobuf.struct_pb2.Value",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "dropdown_value": {
                    "description": "The custom_field_option_id, if the CustomFieldDataType is DROPDOWN.  This field is a member of `oneof`_ ``value``.",
                    "type": "integer"
                  },
                  "string_value": {
                    "description": "The value, if the CustomFieldDataType is STRING.  This field is a member of `oneof`_ ``value``.",
                    "type": "string"
                  },
                  "number_value": {
                    "description": "The value, if the CustomFieldDataType is NUMBER.  This field is a member of `oneof`_ ``value``.",
                    "type": "number"
                  },
                  "toggle_value": {
                    "description": "The value, if the CustomFieldDataType is TOGGLE.  This field is a member of `oneof`_ ``value``.",
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "labels": {
            "description": "Optional. The labels for the predict request.  -  Label keys can contain lowercase letters, digits and hyphens, must start with a letter, and must end with a letter or digit. -  Non-zero label values can contain lowercase letters, digits and hyphens, must start with a letter, and must end with a letter or digit. -  No more than 64 labels can be associated with a given request.  See https://goo.gl/xmQnxf for more information on and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "user_event"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-recommendations-ai/google/cloud/recommendationengine_v1beta1/types/prediction_apikey_registry_service.py": [
    {
      "type": "function",
      "name": "CreatePredictionApiKeyRegistrationRequest",
      "description": "Request message for the ``CreatePredictionApiKeyRegistration``\nmethod.\n\nAttributes:\n    parent (str):\n        Required. The parent resource path.\n        ``projects/*/locations/global/catalogs/default_catalog/eventStores/default_event_store``.\n    prediction_api_key_registration (google.cloud.recommendationengine_v1beta1.types.PredictionApiKeyRegistration):\n        Required. The prediction API key\n        registration.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource path. ``projects/*/locations/global/catalogs/default_catalog/eventStores/default_event_store``.",
            "type": "string"
          },
          "prediction_api_key_registration": {
            "description": "Required. The prediction API key registration.",
            "reference": "google.cloud.recommendationengine_v1beta1.types.PredictionApiKeyRegistration",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "api_key": {
                  "description": "The API key.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "prediction_api_key_registration"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListPredictionApiKeyRegistrationsRequest",
      "description": "Request message for the ``ListPredictionApiKeyRegistrations``.\n\nAttributes:\n    parent (str):\n        Required. The parent placement resource name such as\n        ``projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store``\n    page_size (int):\n        Optional. Maximum number of results to return\n        per page. If unset, the service will choose a\n        reasonable default.\n    page_token (str):\n        Optional. The previous\n        ``ListPredictionApiKeyRegistration.nextPageToken``.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent placement resource name such as ``projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store``",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. Maximum number of results to return per page. If unset, the service will choose a reasonable default.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. The previous ``ListPredictionApiKeyRegistration.nextPageToken``.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeletePredictionApiKeyRegistrationRequest",
      "description": "Request message for ``DeletePredictionApiKeyRegistration`` method.\n\nAttributes:\n    name (str):\n        Required. The API key to unregister including full resource\n        path.\n        ``projects/*/locations/global/catalogs/default_catalog/eventStores/default_event_store/predictionApiKeyRegistrations/<YOUR_API_KEY>``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The API key to unregister including full resource path. ``projects/*/locations/global/catalogs/default_catalog/eventStores/default_event_store/predictionApiKeyRegistrations/<YOUR_API_KEY>``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-recommendations-ai/google/cloud/recommendationengine_v1beta1/types/user_event_service.py": [
    {
      "type": "function",
      "name": "PurgeUserEventsRequest",
      "description": "Request message for PurgeUserEvents method.\n\nAttributes:\n    parent (str):\n        Required. The resource name of the event_store under which\n        the events are created. The format is\n        ``projects/${projectId}/locations/global/catalogs/${catalogId}/eventStores/${eventStoreId}``\n    filter (str):\n        Required. The filter string to specify the events to be\n        deleted. Empty string filter is not allowed. This filter can\n        also be used with ListUserEvents API to list events that\n        will be deleted. The eligible fields for filtering are:\n\n        -  eventType - UserEvent.eventType field of type string.\n        -  eventTime - in ISO 8601 \"zulu\" format.\n        -  visitorId - field of type string. Specifying this will\n           delete all events associated with a visitor.\n        -  userId - field of type string. Specifying this will\n           delete all events associated with a user. Example 1:\n           Deleting all events in a time range.\n           ``eventTime > \"2012-04-23T18:25",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the event_store under which the events are created. The format is ``projects/${projectId}/locations/global/catalogs/${catalogId}/eventStores/${eventStoreId}``",
            "type": "string"
          },
          "filter": {
            "description": "Required. The filter string to specify the events to be deleted. Empty string filter is not allowed. This filter can also be used with ListUserEvents API to list events that will be deleted. The eligible fields for filtering are:  -  eventType - UserEvent.eventType field of type string. -  eventTime - in ISO 8601 \"zulu\" format. -  visitorId - field of type string. Specifying this will delete all events associated with a visitor. -  userId - field of type string. Specifying this will delete all events associated with a user. Example 1: Deleting all events in a time range. ``eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"`` Example 2: Deleting specific eventType in time range. ``eventTime > \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"`` Example 3: Deleting all events for a specific visitor ``visitorId = visitor1024`` The filtering fields are assumed to have an implicit AND.",
            "type": "string"
          },
          "force": {
            "description": "Optional. The default value is false. Override this flag to true to actually perform the purge. If the field is not set to true, a sampling of events to be deleted will be returned.",
            "type": "boolean"
          }
        },
        "required": [
          "parent",
          "filter"
        ]
      }
    },
    {
      "type": "function",
      "name": "WriteUserEventRequest",
      "description": "Request message for WriteUserEvent method.\n\nAttributes:\n    parent (str):\n        Required. The parent eventStore resource name, such as\n        ``projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store``.\n    user_event (google.cloud.recommendationengine_v1beta1.types.UserEvent):\n        Required. User event to write.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent eventStore resource name, such as ``projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store``.",
            "type": "string"
          },
          "user_event": {
            "description": "Required. User event to write.",
            "reference": "google.cloud.recommendationengine_v1beta1.types.UserEvent",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "event_type": {
                  "description": "Required. User event type. Allowed values are:  -  ``add-to-cart`` Products being added to cart. -  ``add-to-list`` Items being added to a list (shopping list, favorites etc). -  ``category-page-view`` Special pages such as sale or promotion pages viewed. -  ``checkout-start`` User starting a checkout process. -  ``detail-page-view`` Products detail page viewed. -  ``home-page-view`` Homepage viewed. -  ``page-visit`` Generic page visits not included in the event types above. -  ``purchase-complete`` User finishing a purchase. -  ``refund`` Purchased items being refunded or returned. -  ``remove-from-cart`` Products being removed from cart. -  ``remove-from-list`` Items being removed from a list. -  ``search`` Product search. -  ``shopping-cart-page-view`` User viewing a shopping cart. -  ``impression`` List of items displayed. Used by Google Tag Manager.",
                  "type": "string"
                },
                "user_info": {
                  "description": "Required. User information.",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                },
                "event_detail": {
                  "description": "Optional. User event detailed information common across different recommendation types.",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.EventDetail",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "uri": {
                        "description": "Optional. Complete url (window.location.href) of the user's current page. When using the JavaScript pixel, this value is filled in automatically. Maximum length 5KB.",
                        "type": "string"
                      },
                      "referrer_uri": {
                        "description": "Optional. The referrer url of the current page. When using the JavaScript pixel, this value is filled in automatically.",
                        "type": "string"
                      },
                      "page_view_id": {
                        "description": "Optional. A unique id of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The ``pageViewId`` property should be kept the same for all these events so that they can be grouped together properly. This ``pageViewId`` will be automatically generated if using the JavaScript pixel.",
                        "type": "string"
                      },
                      "experiment_ids": {
                        "description": "Optional. A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups (e.g. using Recommendation Engine system, using different recommendation models).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "recommendation_token": {
                        "description": "Optional. Recommendation token included in the recommendation prediction response.  This field enables accurate attribution of recommendation model performance.  This token enables us to accurately attribute page view or purchase back to the event and the particular predict response containing this clicked/purchased item. If user clicks on product K in the recommendation results, pass the ``PredictResponse.recommendationToken`` property as a url parameter to product K's page. When recording events on product K's page, log the PredictResponse.recommendation_token to this field.  Optional, but highly encouraged for user events that are the result of a recommendation prediction query.",
                        "type": "string"
                      },
                      "event_attributes": {
                        "description": "Optional. Extra user event features to include in the recommendation model.  For product recommendation, an example of extra user information is traffic_channel, i.e. how user arrives at the site. Users can arrive at the site by coming to the site directly, or coming through Google search, and etc.",
                        "type": "object",
                        "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "categorical_features": {
                              "description": "Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer.  Feature names and values must be UTF-8 encoded strings.  For example: ``{ \"colors\": {\"value\": [\"yellow\", \"green\"]}, \"sizes\": {\"value\":[\"S\", \"M\"]}``",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.StringList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "values": {
                                      "description": "The values",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "numerical_features": {
                              "description": "Numerical features. Some examples would be the height/weight of a product, or age of a customer.  Feature names must be UTF-8 encoded strings.  For example: ``{ \"lengths_cm\": {\"value\":[2.3, 15.4]}, \"heights_cm\": {\"value\":[8.1, 6.4]} }``",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.FloatList",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "description": "Float feature value.",
                                      "type": "array",
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "product_event_detail": {
                  "description": "Optional. Retail product specific user event metadata.  This field is required for the following event types:  -  ``add-to-cart`` -  ``add-to-list`` -  ``category-page-view`` -  ``checkout-start`` -  ``detail-page-view`` -  ``purchase-complete`` -  ``refund`` -  ``remove-from-cart`` -  ``remove-from-list`` -  ``search``  This field is optional for the following event types:  -  ``page-visit`` -  ``shopping-cart-page-view`` - note that 'product_event_detail' should be set for this unless the shopping cart is empty.  This field is not allowed for the following event types:  -  ``home-page-view``",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.ProductEventDetail",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "search_query": {
                        "description": "Required for ``search`` events. Other event types should not set this field. The user's search query as UTF-8 encoded text with a length limit of 5 KiB.",
                        "type": "string"
                      },
                      "page_categories": {
                        "description": "Required for ``category-page-view`` events. Other event types should not set this field. The categories associated with a category page. Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: categories : [\"Sales\", \"2017 Black Friday Deals\"].",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.recommendationengine_v1beta1.types.CatalogItem.CategoryHierarchy",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "categories": {
                                "description": "Required. Catalog item categories. Each category should be a UTF-8 encoded string with a length limit of 2 KiB.  Note that the order in the list denotes the specificity (from least to most specific).",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "categories"
                            ]
                          }
                        }
                      },
                      "product_details": {
                        "description": "The main product details related to the event.  This field is required for the following event types:  -  ``add-to-cart`` -  ``add-to-list`` -  ``checkout-start`` -  ``detail-page-view`` -  ``purchase-complete`` -  ``refund`` -  ``remove-from-cart`` -  ``remove-from-list``  This field is optional for the following event types:  -  ``page-visit`` -  ``shopping-cart-page-view`` - note that 'product_details' should be set for this unless the shopping cart is empty.  This field is not allowed for the following event types:  -  ``category-page-view`` -  ``home-page-view`` -  ``search``",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.recommendationengine_v1beta1.types.ProductDetail",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Required. Catalog item ID. UTF-8 encoded string with a length limit of 128 characters.",
                                "type": "string"
                              },
                              "currency_code": {
                                "description": "Optional. Currency code for price/costs. Use three-character ISO-4217 code. Required only if originalPrice or displayPrice is set.",
                                "type": "string"
                              },
                              "original_price": {
                                "description": "Optional. Original price of the product. If provided, this will override the original price in Catalog for this product.",
                                "type": "number"
                              },
                              "display_price": {
                                "description": "Optional. Display price of the product (e.g. discounted price). If provided, this will override the display price in Catalog for this product.",
                                "type": "number"
                              },
                              "stock_state": {
                                "description": "Optional. Item stock state. If provided, this overrides the stock state in Catalog for items in this event.",
                                "type": "object",
                                "reference": "google.cloud.recommendationengine_v1beta1.types.ProductCatalogItem.StockState"
                              },
                              "quantity": {
                                "description": "Optional. Quantity of the product associated with the user event. For example, this field will be 2 if two products are added to the shopping cart for ``add-to-cart`` event. Required for ``add-to-cart``, ``add-to-list``, ``remove-from-cart``, ``checkout-start``, ``purchase-complete``, ``refund`` event types.",
                                "type": "integer"
                              },
                              "available_quantity": {
                                "description": "Optional. Quantity of the products in stock when a user event happens. Optional. If provided, this overrides the available quantity in Catalog for this event. and can only be set if ``stock_status`` is set to ``IN_STOCK``.  Note that if an item is out of stock, you must set the ``stock_state`` field to be ``OUT_OF_STOCK``. Leaving this field unspecified / as zero is not sufficient to mark the item out of stock.",
                                "type": "integer"
                              },
                              "item_attributes": {
                                "description": "Optional. Extra features associated with a product in the user event.",
                                "type": "object",
                                "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "categorical_features": {
                                      "description": "Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer.  Feature names and values must be UTF-8 encoded strings.  For example: ``{ \"colors\": {\"value\": [\"yellow\", \"green\"]}, \"sizes\": {\"value\":[\"S\", \"M\"]}``",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "object",
                                        "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.StringList",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "values": {
                                              "description": "The values",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "numerical_features": {
                                      "description": "Numerical features. Some examples would be the height/weight of a product, or age of a customer.  Feature names must be UTF-8 encoded strings.  For example: ``{ \"lengths_cm\": {\"value\":[2.3, 15.4]}, \"heights_cm\": {\"value\":[8.1, 6.4]} }``",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "object",
                                        "reference": "google.cloud.recommendationengine_v1beta1.types.FeatureMap.FloatList",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "description": "Float feature value.",
                                              "type": "array",
                                              "items": {
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      },
                      "list_id": {
                        "description": "Required for ``add-to-list`` and ``remove-from-list`` events. The id or name of the list that the item is being added to or removed from. Other event types should not set this field.",
                        "type": "string"
                      },
                      "cart_id": {
                        "description": "Optional. The id or name of the associated shopping cart. This id is used to associate multiple items added or present in the cart before purchase.  This can only be set for ``add-to-cart``, ``remove-from-cart``, ``checkout-start``, ``purchase-complete``, or ``shopping-cart-page-view`` events.",
                        "type": "string"
                      },
                      "purchase_transaction": {
                        "description": "Optional. A transaction represents the entire purchase transaction. Required for ``purchase-complete`` events. Optional for ``checkout-start`` events. Other event types should not set this field.",
                        "type": "object",
                        "reference": "google.cloud.recommendationengine_v1beta1.types.PurchaseTransaction",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Optional. The transaction ID with a length limit of 128 bytes.",
                              "type": "string"
                            },
                            "revenue": {
                              "description": "Required. Total revenue or grand total associated with the transaction. This value include shipping, tax, or other adjustments to total revenue that you want to include as part of your revenue calculations. This field is not required if the event type is ``refund``.",
                              "type": "number"
                            },
                            "taxes": {
                              "description": "Optional. All the taxes associated with the transaction.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "number"
                              }
                            },
                            "costs": {
                              "description": "Optional. All the costs associated with the product. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs.  Total product cost such that profit = revenue - (sum(taxes) + sum(costs)) If product_cost is not set, then profit = revenue - tax - shipping - sum(CatalogItem.costs).  If CatalogItem.cost is not specified for one of the items, CatalogItem.cost based profit *cannot* be calculated for this Transaction.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "number"
                              }
                            },
                            "currency_code": {
                              "description": "Required. Currency code. Use three-character ISO-4217 code. This field is not required if the event type is ``refund``.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "revenue",
                            "currency_code"
                          ]
                        }
                      }
                    },
                    "required": [
                      "search_query",
                      "page_categories",
                      "list_id"
                    ]
                  }
                },
                "event_time": {
                  "description": "Optional. Only required for ImportUserEvents method. Timestamp of user event created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "event_source": {
                  "description": "Optional. This field should *not* be set when using JavaScript pixel or the Recommendations AI Tag. Defaults to ``EVENT_SOURCE_UNSPECIFIED``.",
                  "type": "object",
                  "reference": "google.cloud.recommendationengine_v1beta1.types.UserEvent.EventSource"
                }
              },
              "required": [
                "event_type",
                "user_info"
              ]
            }
          }
        },
        "required": [
          "parent",
          "user_event"
        ]
      }
    },
    {
      "type": "function",
      "name": "CollectUserEventRequest",
      "description": "Request message for CollectUserEvent method.\n\nAttributes:\n    parent (str):\n        Required. The parent eventStore name, such as\n        ``projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store``.\n    user_event (str):\n        Required. URL encoded UserEvent proto.\n    uri (str):\n        Optional. The url including cgi-parameters\n        but excluding the hash fragment. The URL must be\n        truncated to 1.5K bytes to conservatively be\n        under the 2K bytes. This is often more useful\n        than the referer url, because many browsers only\n        send the domain for 3rd party requests.\n    ets (int):\n        Optional. The event timestamp in\n        milliseconds. This prevents browser caching of\n        otherwise identical get requests. The name is\n        abbreviated to reduce the payload bytes.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent eventStore name, such as ``projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store``.",
            "type": "string"
          },
          "user_event": {
            "description": "Required. URL encoded UserEvent proto.",
            "type": "string"
          },
          "uri": {
            "description": "Optional. The url including cgi-parameters but excluding the hash fragment. The URL must be truncated to 1.5K bytes to conservatively be under the 2K bytes. This is often more useful than the referer url, because many browsers only send the domain for 3rd party requests.",
            "type": "string"
          },
          "ets": {
            "description": "Optional. The event timestamp in milliseconds. This prevents browser caching of otherwise identical get requests. The name is abbreviated to reduce the payload bytes.",
            "type": "integer"
          }
        },
        "required": [
          "parent",
          "user_event"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListUserEventsRequest",
      "description": "Request message for ListUserEvents method.\n\nAttributes:\n    parent (str):\n        Required. The parent eventStore resource name, such as\n        ``projects/*/locations/*/catalogs/default_catalog/eventStores/default_event_store``.\n    page_size (int):\n        Optional. Maximum number of results to return\n        per page. If zero, the service will choose a\n        reasonable default.\n    page_token (str):\n        Optional. The previous\n        ListUserEventsResponse.next_page_token.\n    filter (str):\n        Optional. Filtering expression to specify restrictions over\n        returned events. This is a sequence of terms, where each\n        term applies some kind of a restriction to the returned user\n        events. Use this expression to restrict results to a\n        specific time range, or filter events by eventType. eg:\n        eventTime > \"2012-04-23T18:25:43.511Z\"\n        eventsMissingCatalogItems\n        eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search\n\n        We expect only 3 types of fields:\n\n     ",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent eventStore resource name, such as ``projects/*/locations/*/catalogs/default_catalog/eventStores/default_event_store``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. Maximum number of results to return per page. If zero, the service will choose a reasonable default.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. The previous ListUserEventsResponse.next_page_token.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. Filtering expression to specify restrictions over returned events. This is a sequence of terms, where each term applies some kind of a restriction to the returned user events. Use this expression to restrict results to a specific time range, or filter events by eventType. eg: eventTime > \"2012-04-23T18:25:43.511Z\" eventsMissingCatalogItems eventTime<\"2012-04-23T18:25:43.511Z\" eventType=search  We expect only 3 types of fields:  ::  * eventTime: this can be specified a maximum of 2 times, once with a less than operator and once with a greater than operator. The eventTime restrict should result in one contiguous valid eventTime range.  * eventType: only 1 eventType restriction can be specified.  * eventsMissingCatalogItems: specififying this will restrict results to events for which catalog items were not found in the catalog. The default behavior is to return only those events for which catalog items were found.  Some examples of valid filters expressions:  -  Example 1: eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\" -  Example 2: eventTime > \"2012-04-23T18:25:43.511Z\" eventType = detail-page-view -  Example 3: eventsMissingCatalogItems eventType = search eventTime < \"2018-04-23T18:30:43.511Z\" -  Example 4: eventTime > \"2012-04-23T18:25:43.511Z\" -  Example 5: eventType = search -  Example 6: eventsMissingCatalogItems",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-recommendations-ai/google/cloud/recommendationengine_v1beta1/types/import_.py": [
    {
      "type": "function",
      "name": "ImportCatalogItemsRequest",
      "description": "Request message for Import methods.\n\nAttributes:\n    parent (str):\n        Required.\n        ``projects/1234/locations/global/catalogs/default_catalog``\n    request_id (str):\n        Optional. Unique identifier provided by\n        client, within the ancestor dataset scope.\n        Ensures idempotency and used for request\n        deduplication. Server-generated if unspecified.\n        Up to 128 characters long. This is returned as\n        google.longrunning.Operation.name in the\n        response.\n    input_config (google.cloud.recommendationengine_v1beta1.types.InputConfig):\n        Required. The desired input location of the\n        data.\n    errors_config (google.cloud.recommendationengine_v1beta1.types.ImportErrorsConfig):\n        Optional. The desired location of errors\n        incurred during the Import.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. ``projects/1234/locations/global/catalogs/default_catalog``",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. Unique identifier provided by client, within the ancestor dataset scope. Ensures idempotency and used for request deduplication. Server-generated if unspecified. Up to 128 characters long. This is returned as google.longrunning.Operation.name in the response.",
            "type": "string"
          },
          "input_config": {
            "description": "Required. The desired input location of the data.",
            "reference": "google.cloud.recommendationengine_v1beta1.types.InputConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "bigquery_input_configs": {
                  "description": "Set of input BigQuery tables.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.enterpriseknowledgegraph_v1.types.BigQueryInputConfig",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "bigquery_table": {
                          "description": "Required. Format is ``projects/*/datasets/*/tables/*``.",
                          "type": "string"
                        },
                        "gcs_uri": {
                          "description": "Required. Schema mapping file",
                          "type": "string"
                        }
                      },
                      "required": [
                        "bigquery_table",
                        "gcs_uri"
                      ]
                    }
                  }
                },
                "entity_type": {
                  "description": "Entity type",
                  "type": "object",
                  "reference": "google.cloud.enterpriseknowledgegraph_v1.types.InputConfig.EntityType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The unique identifier of the entity type. Required for [EntityTypes.UpdateEntityType][google.cloud.dialogflow.v2.EntityTypes.UpdateEntityType] and [EntityTypes.BatchUpdateEntityTypes][google.cloud.dialogflow.v2.EntityTypes.BatchUpdateEntityTypes] methods. Format: ``projects/<Project ID>/agent/entityTypes/<Entity Type ID>``.",
                        "type": "string"
                      },
                      "display_name": {
                        "description": "Required. The name of the entity type.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Required. Indicates the kind of entity type.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.EntityType.Kind"
                      },
                      "auto_expansion_mode": {
                        "description": "Optional. Indicates whether the entity type can be automatically expanded.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.EntityType.AutoExpansionMode"
                      },
                      "entities": {
                        "description": "Optional. The collection of entity entries associated with the entity type.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.EntityType.Entity",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*.  For ``KIND_MAP`` entity types:  -  A reference value to be used in place of synonyms.  For ``KIND_LIST`` entity types:  -  A string that can contain references to other entity types (with or without aliases).",
                                "type": "string"
                              },
                              "synonyms": {
                                "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and ``value`` is *scallions*, a synonym could be *green onions*.  For ``KIND_LIST`` entity types:  -  This collection must contain exactly one synonym equal to ``value``.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "value",
                              "synonyms"
                            ]
                          }
                        }
                      },
                      "enable_fuzzy_extraction": {
                        "description": "Optional. Enables fuzzy entity extraction during classification.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "display_name",
                      "kind"
                    ]
                  }
                },
                "previous_result_bigquery_table": {
                  "description": "Optional. Provide the bigquery table containing the previous results if cluster ID stability is desired. Format is ``projects/*/datasets/*/tables/*``.",
                  "type": "string"
                }
              }
            }
          },
          "errors_config": {
            "description": "Optional. The desired location of errors incurred during the Import.",
            "reference": "google.cloud.recommendationengine_v1beta1.types.ImportErrorsConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "gcs_prefix": {
                  "description": "Google Cloud Storage path for import errors. This must be an empty, existing Cloud Storage bucket. Import errors will be written to a file in this bucket, one per line, as a JSON-encoded ``google.rpc.Status`` message.  This field is a member of `oneof`_ ``destination``.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "input_config"
        ]
      }
    },
    {
      "type": "function",
      "name": "ImportUserEventsRequest",
      "description": "Request message for the ImportUserEvents request.\n\nAttributes:\n    parent (str):\n        Required.\n        ``projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store``\n    request_id (str):\n        Optional. Unique identifier provided by client, within the\n        ancestor dataset scope. Ensures idempotency for expensive\n        long running operations. Server-generated if unspecified. Up\n        to 128 characters long. This is returned as\n        google.longrunning.Operation.name in the response. Note that\n        this field must not be set if the desired input config is\n        catalog_inline_source.\n    input_config (google.cloud.recommendationengine_v1beta1.types.InputConfig):\n        Required. The desired input location of the\n        data.\n    errors_config (google.cloud.recommendationengine_v1beta1.types.ImportErrorsConfig):\n        Optional. The desired location of errors\n        incurred during the Import.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. ``projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store``",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. Unique identifier provided by client, within the ancestor dataset scope. Ensures idempotency for expensive long running operations. Server-generated if unspecified. Up to 128 characters long. This is returned as google.longrunning.Operation.name in the response. Note that this field must not be set if the desired input config is catalog_inline_source.",
            "type": "string"
          },
          "input_config": {
            "description": "Required. The desired input location of the data.",
            "reference": "google.cloud.recommendationengine_v1beta1.types.InputConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "bigquery_input_configs": {
                  "description": "Set of input BigQuery tables.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.enterpriseknowledgegraph_v1.types.BigQueryInputConfig",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "bigquery_table": {
                          "description": "Required. Format is ``projects/*/datasets/*/tables/*``.",
                          "type": "string"
                        },
                        "gcs_uri": {
                          "description": "Required. Schema mapping file",
                          "type": "string"
                        }
                      },
                      "required": [
                        "bigquery_table",
                        "gcs_uri"
                      ]
                    }
                  }
                },
                "entity_type": {
                  "description": "Entity type",
                  "type": "object",
                  "reference": "google.cloud.enterpriseknowledgegraph_v1.types.InputConfig.EntityType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The unique identifier of the entity type. Required for [EntityTypes.UpdateEntityType][google.cloud.dialogflow.v2.EntityTypes.UpdateEntityType] and [EntityTypes.BatchUpdateEntityTypes][google.cloud.dialogflow.v2.EntityTypes.BatchUpdateEntityTypes] methods. Format: ``projects/<Project ID>/agent/entityTypes/<Entity Type ID>``.",
                        "type": "string"
                      },
                      "display_name": {
                        "description": "Required. The name of the entity type.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Required. Indicates the kind of entity type.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.EntityType.Kind"
                      },
                      "auto_expansion_mode": {
                        "description": "Optional. Indicates whether the entity type can be automatically expanded.",
                        "type": "object",
                        "reference": "google.cloud.dialogflow_v2.types.EntityType.AutoExpansionMode"
                      },
                      "entities": {
                        "description": "Optional. The collection of entity entries associated with the entity type.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.EntityType.Entity",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*.  For ``KIND_MAP`` entity types:  -  A reference value to be used in place of synonyms.  For ``KIND_LIST`` entity types:  -  A string that can contain references to other entity types (with or without aliases).",
                                "type": "string"
                              },
                              "synonyms": {
                                "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and ``value`` is *scallions*, a synonym could be *green onions*.  For ``KIND_LIST`` entity types:  -  This collection must contain exactly one synonym equal to ``value``.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "value",
                              "synonyms"
                            ]
                          }
                        }
                      },
                      "enable_fuzzy_extraction": {
                        "description": "Optional. Enables fuzzy entity extraction during classification.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "display_name",
                      "kind"
                    ]
                  }
                },
                "previous_result_bigquery_table": {
                  "description": "Optional. Provide the bigquery table containing the previous results if cluster ID stability is desired. Format is ``projects/*/datasets/*/tables/*``.",
                  "type": "string"
                }
              }
            }
          },
          "errors_config": {
            "description": "Optional. The desired location of errors incurred during the Import.",
            "reference": "google.cloud.recommendationengine_v1beta1.types.ImportErrorsConfig",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "gcs_prefix": {
                  "description": "Google Cloud Storage path for import errors. This must be an empty, existing Cloud Storage bucket. Import errors will be written to a file in this bucket, one per line, as a JSON-encoded ``google.rpc.Status`` message.  This field is a member of `oneof`_ ``destination``.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "input_config"
        ]
      }
    }
  ]
}