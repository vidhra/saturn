{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\managed_service.py": [
    {
      "type": "function",
      "name": "ListRuntimesRequest",
      "description": "Request for listing Managed Notebook Runtimes.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum return size of the list call.",
            "type": "integer"
          },
          "page_token": {
            "description": "A previous returned page token that can be used to continue listing from the last result.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetRuntimeRequest",
      "description": "Request for getting a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateRuntimeRequest",
      "description": "Request for creating a Managed Notebook Runtime.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    runtime_id (str):\n        Required. User-defined unique ID of this\n        Runtime.\n    runtime (google.cloud.notebooks_v1.types.Runtime):\n        Required. The Runtime to be created.\n    request_id (str):\n        Idempotent request UUID.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "runtime_id": {
            "description": "Required. User-defined unique ID of this Runtime.",
            "type": "string"
          },
          "runtime": {
            "description": "Required. The Runtime to be created.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Output only. The resource name of the runtime. Format: ``projects/{project}/locations/{location}/runtimes/{runtimeId}``",
                "type": "string"
              },
              "virtual_machine": {
                "type": "object",
                "properties": {
                  "instance_name": {
                    "description": "Output only. The user-friendly name of the Managed Compute Engine instance.",
                    "type": "string"
                  },
                  "instance_id": {
                    "description": "Output only. The unique identifier of the Managed Compute Engine instance.",
                    "type": "string"
                  },
                  "virtual_machine_config": {
                    "type": "object",
                    "properties": {
                      "zone": {
                        "description": "Output only. The zone where the virtual machine is located. If using regional request, the notebooks service will pick a location in the corresponding runtime region. On a get request, zone will always be present. Example:  -  ``us-central1-b``",
                        "type": "string"
                      },
                      "machine_type": {
                        "description": "Required. The Compute Engine machine type used for runtimes. Short name is valid. Examples:  -  ``n1-standard-2`` -  ``e2-standard-8``",
                        "type": "string"
                      },
                      "container_images": {
                        "description": "Optional. Use a list of container images to use as Kernels in the notebook instance.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "repository": {
                              "description": "Required. The path to the container image repository. For example: ``gcr.io/{project_id}/{image_name}``",
                              "type": "string"
                            },
                            "tag": {
                              "description": "Optional. The tag of the container image. If not specified, this defaults to the latest tag.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "repository"
                          ]
                        }
                      },
                      "data_disk": {
                        "type": "object",
                        "properties": {
                          "auto_delete": {
                            "description": "Optional. Output only. Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
                            "type": "boolean"
                          },
                          "boot": {
                            "description": "Optional. Output only. Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.",
                            "type": "boolean"
                          },
                          "device_name": {
                            "description": "Optional. Output only. Specifies a unique device name of your choice that is reflected into the ``/dev/disk/by-id/google-*`` tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.  If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
                            "type": "string"
                          },
                          "guest_os_features": {
                            "description": "Output only. Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. Read  Enabling guest operating system features to see a list of available options.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type_": {
                                  "description": "The ID of a supported feature. Read `Enabling guest operating system features <https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features>`__ to see a list of available options.  Valid values:  -  ``FEATURE_TYPE_UNSPECIFIED`` -  ``MULTI_IP_SUBNET`` -  ``SECURE_BOOT`` -  ``UEFI_COMPATIBLE`` -  ``VIRTIO_SCSI_MULTIQUEUE`` -  ``WINDOWS``",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "index": {
                            "description": "Output only. A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.",
                            "type": "integer"
                          },
                          "initialize_params": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "Optional. Provide this property when creating the disk.",
                                "type": "string"
                              },
                              "disk_name": {
                                "description": "Optional. Specifies the disk name. If not specified, the default is to use the name of the instance. If the disk with the instance name exists already in the given zone/region, a new name will be automatically generated.",
                                "type": "string"
                              },
                              "disk_size_gb": {
                                "description": "Optional. Specifies the size of the disk in base-2 GB. If not specified, the disk will be the same size as the image (usually 10GB). If specified, the size must be equal to or larger than 10GB. Default 100 GB.",
                                "type": "integer"
                              },
                              "disk_type": {
                                "type": "enum",
                                "name": "DiskType",
                                "description": "Possible disk types.\n\nValues:\n    DISK_TYPE_UNSPECIFIED (0):\n        Disk type not set.\n    PD_STANDARD (1):\n        Standard persistent disk type.\n    PD_SSD (2):\n        SSD persistent disk type.\n    PD_BALANCED (3):\n        Balanced persistent disk type.\n    PD_EXTREME (4):\n        Extreme persistent disk type.",
                                "values": {
                                  "DISK_TYPE_UNSPECIFIED": {
                                    "value": 0
                                  },
                                  "PD_STANDARD": {
                                    "value": 1
                                  },
                                  "PD_SSD": {
                                    "value": 2
                                  },
                                  "PD_BALANCED": {
                                    "value": 3
                                  },
                                  "PD_EXTREME": {
                                    "value": 4
                                  }
                                }
                              },
                              "labels": {
                                "description": "Optional. Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "interface": {
                            "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values:  -  ``NVME`` -  ``SCSI``",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Output only. Type of the resource. Always compute#attachedDisk for attached disks.",
                            "type": "string"
                          },
                          "licenses": {
                            "description": "Output only. Any valid publicly visible licenses.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "mode": {
                            "description": "The mode in which to attach this disk, either ``READ_WRITE`` or ``READ_ONLY``. If not specified, the default is to attach the disk in ``READ_WRITE`` mode. Valid values:  -  ``READ_ONLY`` -  ``READ_WRITE``",
                            "type": "string"
                          },
                          "source": {
                            "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource.",
                            "type": "string"
                          },
                          "type_": {
                            "description": "Specifies the type of the disk, either ``SCRATCH`` or ``PERSISTENT``. If not specified, the default is ``PERSISTENT``. Valid values:  -  ``PERSISTENT`` -  ``SCRATCH``",
                            "type": "string"
                          }
                        }
                      },
                      "encryption_config": {
                        "type": "object",
                        "properties": {
                          "kms_key_name": {
                            "description": "Optional. Customer-managed Encryption Key available through Google's Key Management Service. Cannot be updated. If not specified, Google-managed key will be used.",
                            "type": "string"
                          }
                        }
                      },
                      "shielded_instance_config": {
                        "type": "object",
                        "properties": {
                          "enable_secure_boot": {
                            "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.",
                            "type": "boolean"
                          },
                          "enable_vtpm": {
                            "description": "Defines whether the instance has the vTPM enabled. Enabled by default.",
                            "type": "boolean"
                          },
                          "enable_integrity_monitoring": {
                            "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.",
                            "type": "boolean"
                          }
                        }
                      },
                      "accelerator_config": {
                        "type": "object",
                        "properties": {
                          "type_": {
                            "type": "enum",
                            "name": "AcceleratorType",
                            "description": "Represents a hardware accelerator type.\n\nValues:\n    ACCELERATOR_TYPE_UNSPECIFIED (0):\n        Unspecified accelerator type, which means no\n        accelerator.\n    NVIDIA_TESLA_K80 (1):\n        Nvidia Tesla K80 GPU.\n    NVIDIA_TESLA_P100 (2):\n        Nvidia Tesla P100 GPU.\n    NVIDIA_TESLA_V100 (3):\n        Nvidia Tesla V100 GPU.\n    NVIDIA_TESLA_P4 (4):\n        Nvidia Tesla P4 GPU.\n    NVIDIA_TESLA_T4 (5):\n        Nvidia Tesla T4 GPU.\n    NVIDIA_TESLA_A100 (8):\n        Nvidia Tesla A100 GPU.\n    TPU_V2 (6):\n        TPU v2.\n    TPU_V3 (7):\n        TPU v3.",
                            "values": {
                              "ACCELERATOR_TYPE_UNSPECIFIED": {
                                "value": 0
                              },
                              "NVIDIA_TESLA_K80": {
                                "value": 1
                              },
                              "NVIDIA_TESLA_P100": {
                                "value": 2
                              },
                              "NVIDIA_TESLA_V100": {
                                "value": 3
                              },
                              "NVIDIA_TESLA_P4": {
                                "value": 4
                              },
                              "NVIDIA_TESLA_T4": {
                                "value": 5
                              },
                              "NVIDIA_TESLA_A100": {
                                "value": 8
                              },
                              "TPU_V2": {
                                "value": 6
                              },
                              "TPU_V3": {
                                "value": 7
                              }
                            }
                          },
                          "core_count": {
                            "description": "Count of cores of this accelerator.",
                            "type": "integer"
                          }
                        }
                      },
                      "network": {
                        "description": "Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither ``network`` nor ``subnet`` is specified, the \"default\" network of the project is used, if it exists.  A full URL or partial URI. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default`` -  ``projects/[project_id]/global/networks/default``  Runtimes are managed resources inside Google Infrastructure. Runtimes support the following network configurations:  -  Google Managed Network (Network & subnet are empty) -  Consumer Project VPC (network & subnet are required). Requires configuring Private Service Access. -  Shared VPC (network & subnet are required). Requires configuring Private Service Access.",
                        "type": "string"
                      },
                      "subnet": {
                        "description": "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network.  A full URL or partial URI are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0`` -  ``projects/[project_id]/regions/us-east1/subnetworks/sub0``",
                        "type": "string"
                      },
                      "internal_ip_only": {
                        "description": "Optional. If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This ``internal_ip_only`` restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.",
                        "type": "boolean"
                      },
                      "tags": {
                        "description": "Optional. The Compute Engine tags to add to runtime (see `Tagging instances <https://cloud.google.com/compute/docs/label-or-tag-resources#tags>`__).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "guest_attributes": {
                        "description": "Output only. The Compute Engine guest attributes. (see `Project and instance guest attributes <https://cloud.google.com/compute/docs/storing-retrieving-metadata#guest_attributes>`__).",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "metadata": {
                        "description": "Optional. The Compute Engine metadata entries to add to virtual machine. (see `Project and instance metadata <https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata>`__).",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "labels": {
                        "description": "Optional. The labels to associate with this runtime. Label **keys** must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. No more than 32 labels can be associated with a cluster.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nic_type": {
                        "type": "enum",
                        "name": "NicType",
                        "description": "The type of vNIC driver. Default should be NIC_TYPE_UNSPECIFIED.\n\nValues:\n    NIC_TYPE_UNSPECIFIED (0):\n        No type specified.\n    VIRTIO_NET (1):\n        VIRTIO\n    GVNIC (2):\n        GVNIC",
                        "values": {
                          "NIC_TYPE_UNSPECIFIED": {
                            "value": 0
                          },
                          "VIRTIO_NET": {
                            "value": 1
                          },
                          "GVNIC": {
                            "value": 2
                          }
                        }
                      },
                      "reserved_ip_range": {
                        "description": "Optional. Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range *name* if it's assigned.  Example: managed-notebooks-range-c  ::  PEERING_RANGE_NAME_3=managed-notebooks-range-c gcloud compute addresses create $PEERING_RANGE_NAME_3 \\ --global \\ --prefix-length=24 \\ --description=\"Google Cloud Managed Notebooks Range 24 c\" \\ --network=$NETWORK \\ --addresses=192.168.0.0 \\ --purpose=VPC_PEERING  Field value will be: ``managed-notebooks-range-c``",
                        "type": "string"
                      },
                      "boot_image": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "machine_type",
                      "data_disk"
                    ]
                  }
                }
              },
              "state": {
                "type": "enum",
                "name": "State",
                "description": "Provides the state of this Vulnerability assessment.\n\nValues:\n    STATE_UNSPECIFIED (0):\n        No state is specified.\n    AFFECTED (1):\n        This product is known to be affected by this\n        vulnerability.\n    NOT_AFFECTED (2):\n        This product is known to be not affected by\n        this vulnerability.\n    FIXED (3):\n        This product contains a fix for this\n        vulnerability.\n    UNDER_INVESTIGATION (4):\n        It is not known yet whether these versions\n        are or are not affected by the vulnerability.\n        However, it is still under investigation.",
                "values": {
                  "STATE_UNSPECIFIED": {
                    "value": 0
                  },
                  "AFFECTED": {
                    "value": 1
                  },
                  "NOT_AFFECTED": {
                    "value": 2
                  },
                  "FIXED": {
                    "value": 3
                  },
                  "UNDER_INVESTIGATION": {
                    "value": 4
                  }
                }
              },
              "health_state": {
                "type": "enum",
                "name": "HealthState",
                "description": "The instance health state.\n\nValues:\n    HEALTH_STATE_UNSPECIFIED (0):\n        The instance substate is unknown.\n    HEALTHY (1):\n        The instance is known to be in an healthy\n        state (for example, critical daemons are\n        running) Applies to ACTIVE state.\n    UNHEALTHY (2):\n        The instance is known to be in an unhealthy\n        state (for example, critical daemons are not\n        running) Applies to ACTIVE state.\n    AGENT_NOT_INSTALLED (3):\n        The instance has not installed health\n        monitoring agent. Applies to ACTIVE state.\n    AGENT_NOT_RUNNING (4):\n        The instance health monitoring agent is not\n        running. Applies to ACTIVE state.",
                "values": {
                  "HEALTH_STATE_UNSPECIFIED": {
                    "value": 0
                  },
                  "HEALTHY": {
                    "value": 1
                  },
                  "UNHEALTHY": {
                    "value": 2
                  },
                  "AGENT_NOT_INSTALLED": {
                    "value": 3
                  },
                  "AGENT_NOT_RUNNING": {
                    "value": 4
                  }
                }
              },
              "access_config": {
                "type": "object",
                "properties": {
                  "access_type": {
                    "type": "enum",
                    "name": "RuntimeAccessType",
                    "description": "Possible ways to access runtime. Authentication mode.\nCurrently supports: Single User only.\n\nValues:\n    RUNTIME_ACCESS_TYPE_UNSPECIFIED (0):\n        Unspecified access.\n    SINGLE_USER (1):\n        Single user login.\n    SERVICE_ACCOUNT (2):\n        Service Account mode.\n        In Service Account mode, Runtime creator will\n        specify a SA that exists in the consumer\n        project. Using Runtime Service Account field.\n        Users accessing the Runtime need ActAs (Service\n        Account User) permission.",
                    "values": {
                      "RUNTIME_ACCESS_TYPE_UNSPECIFIED": {
                        "value": 0
                      },
                      "SINGLE_USER": {
                        "value": 1
                      },
                      "SERVICE_ACCOUNT": {
                        "value": 2
                      }
                    }
                  },
                  "runtime_owner": {
                    "description": "The owner of this runtime after creation. Format: ``alias@example.com`` Currently supports one owner only.",
                    "type": "string"
                  },
                  "proxy_uri": {
                    "description": "Output only. The proxy endpoint that is used to access the runtime.",
                    "type": "string"
                  }
                }
              },
              "software_config": {
                "type": "object",
                "properties": {
                  "notebook_upgrade_schedule": {
                    "description": "Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the `cron format <https://en.wikipedia.org/wiki/Cron>`__.",
                    "type": "string"
                  },
                  "enable_health_monitoring": {
                    "description": "Verifies core internal services are running. Default: True  This field is a member of `oneof`_ ``_enable_health_monitoring``.",
                    "type": "boolean"
                  },
                  "idle_shutdown": {
                    "description": "Runtime will automatically shutdown after idle_shutdown_time. Default: True  This field is a member of `oneof`_ ``_idle_shutdown``.",
                    "type": "boolean"
                  },
                  "idle_shutdown_timeout": {
                    "description": "Time in minutes to wait before shutting down runtime. Default: 180 minutes",
                    "type": "integer"
                  },
                  "install_gpu_driver": {
                    "description": "Install Nvidia Driver automatically. Default: True",
                    "type": "boolean"
                  },
                  "custom_gpu_driver_path": {
                    "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.",
                    "type": "string"
                  },
                  "post_startup_script": {
                    "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (``gs://path-to-file/file-name``).",
                    "type": "string"
                  },
                  "kernels": {
                    "description": "Optional. Use a list of container images to use as Kernels in the notebook instance.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "repository": {
                          "description": "Required. The path to the container image repository. For example: ``gcr.io/{project_id}/{image_name}``",
                          "type": "string"
                        },
                        "tag": {
                          "description": "Optional. The tag of the container image. If not specified, this defaults to the latest tag.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "repository"
                      ]
                    }
                  },
                  "upgradeable": {
                    "description": "Output only. Bool indicating whether an newer image is available in an image family.  This field is a member of `oneof`_ ``_upgradeable``.",
                    "type": "boolean"
                  },
                  "post_startup_script_behavior": {
                    "type": "enum",
                    "name": "PostStartupScriptBehavior",
                    "description": "Behavior for the post startup script.\n\nValues:\n    POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED (0):\n        Unspecified post startup script behavior.\n        Will run only once at creation.\n    RUN_EVERY_START (1):\n        Runs the post startup script provided during\n        creation at every start.\n    DOWNLOAD_AND_RUN_EVERY_START (2):\n        Downloads and runs the provided post startup\n        script at every start.",
                    "values": {
                      "POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED": {
                        "value": 0
                      },
                      "RUN_EVERY_START": {
                        "value": 1
                      },
                      "DOWNLOAD_AND_RUN_EVERY_START": {
                        "value": 2
                      }
                    }
                  },
                  "disable_terminal": {
                    "description": "Bool indicating whether JupyterLab terminal will be available or not. Default: False  This field is a member of `oneof`_ ``_disable_terminal``.",
                    "type": "boolean"
                  },
                  "version": {
                    "description": "Output only. version of boot image such as M100, from release label of the image.  This field is a member of `oneof`_ ``_version``.",
                    "type": "string"
                  }
                }
              },
              "metrics": {
                "type": "object",
                "properties": {
                  "system_metrics": {
                    "description": "Output only. The system metrics.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "create_time": {
                "description": "Output only. Runtime creation time.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. Runtime update time.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              }
            }
          },
          "request_id": {
            "description": "Idempotent request UUID.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "runtime_id",
          "runtime"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteRuntimeRequest",
      "description": "Request for deleting a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    request_id (str):\n        Idempotent request UUID.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``",
            "type": "string"
          },
          "request_id": {
            "description": "Idempotent request UUID.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StartRuntimeRequest",
      "description": "Request for starting a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    request_id (str):\n        Idempotent request UUID.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``",
            "type": "string"
          },
          "request_id": {
            "description": "Idempotent request UUID.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StopRuntimeRequest",
      "description": "Request for stopping a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    request_id (str):\n        Idempotent request UUID.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``",
            "type": "string"
          },
          "request_id": {
            "description": "Idempotent request UUID.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "SwitchRuntimeRequest",
      "description": "Request for switching a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    machine_type (str):\n        machine type.\n    accelerator_config (google.cloud.notebooks_v1.types.RuntimeAcceleratorConfig):\n        accelerator config.\n    request_id (str):\n        Idempotent request UUID.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``",
            "type": "string"
          },
          "machine_type": {
            "description": "machine type.",
            "type": "string"
          },
          "accelerator_config": {
            "description": "accelerator config.",
            "type": "object",
            "properties": {
              "type_": {
                "type": "enum",
                "name": "AcceleratorType",
                "description": "Represents a hardware accelerator type.\n\nValues:\n    ACCELERATOR_TYPE_UNSPECIFIED (0):\n        Unspecified accelerator type, which means no\n        accelerator.\n    NVIDIA_TESLA_K80 (1):\n        Nvidia Tesla K80 GPU.\n    NVIDIA_TESLA_P100 (2):\n        Nvidia Tesla P100 GPU.\n    NVIDIA_TESLA_V100 (3):\n        Nvidia Tesla V100 GPU.\n    NVIDIA_TESLA_P4 (4):\n        Nvidia Tesla P4 GPU.\n    NVIDIA_TESLA_T4 (5):\n        Nvidia Tesla T4 GPU.\n    NVIDIA_TESLA_A100 (8):\n        Nvidia Tesla A100 GPU.\n    TPU_V2 (6):\n        TPU v2.\n    TPU_V3 (7):\n        TPU v3.",
                "values": {
                  "ACCELERATOR_TYPE_UNSPECIFIED": {
                    "value": 0
                  },
                  "NVIDIA_TESLA_K80": {
                    "value": 1
                  },
                  "NVIDIA_TESLA_P100": {
                    "value": 2
                  },
                  "NVIDIA_TESLA_V100": {
                    "value": 3
                  },
                  "NVIDIA_TESLA_P4": {
                    "value": 4
                  },
                  "NVIDIA_TESLA_T4": {
                    "value": 5
                  },
                  "NVIDIA_TESLA_A100": {
                    "value": 8
                  },
                  "TPU_V2": {
                    "value": 6
                  },
                  "TPU_V3": {
                    "value": 7
                  }
                }
              },
              "core_count": {
                "description": "Count of cores of this accelerator.",
                "type": "integer"
              }
            }
          },
          "request_id": {
            "description": "Idempotent request UUID.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ResetRuntimeRequest",
      "description": "Request for resetting a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    request_id (str):\n        Idempotent request UUID.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``",
            "type": "string"
          },
          "request_id": {
            "description": "Idempotent request UUID.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpgradeRuntimeRequest",
      "description": "Request for upgrading a Managed Notebook Runtime to the latest\nversion. option (google.api.message_visibility).restriction =\n\"TRUSTED_TESTER,SPECIAL_TESTER\";\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    request_id (str):\n        Idempotent request UUID.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``",
            "type": "string"
          },
          "request_id": {
            "description": "Idempotent request UUID.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ReportRuntimeEventRequest",
      "description": "Request for reporting a Managed Notebook Event.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity\n    event (google.cloud.notebooks_v1.types.Event):\n        Required. The Event to be reported.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``",
            "type": "string"
          },
          "vm_id": {
            "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
            "type": "string"
          },
          "event": {
            "description": "Required. The Event to be reported.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the resource.",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. The create timestamp.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. The update timestamp.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "labels": {
                "description": "Labels as key value pairs.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "annotations": {
                "description": "Annotations to allow clients to store small amounts of arbitrary data.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "alignment_clock": {
                "type": "enum",
                "name": "Clock",
                "description": "Clock that will be used for joining streams.\n\nValues:\n    CLOCK_UNSPECIFIED (0):\n        Clock is not specified.\n    CAPTURE (1):\n        Use the timestamp when the data is captured.\n        Clients need to sync the clock.\n    INGEST (2):\n        Use the timestamp when the data is received.",
                "values": {
                  "CLOCK_UNSPECIFIED": {
                    "value": 0
                  },
                  "CAPTURE": {
                    "value": 1
                  },
                  "INGEST": {
                    "value": 2
                  }
                }
              },
              "grace_period": {
                "type": "enum",
                "name": "Duration",
                "description": "From how long ago in the past these intervals were observed.\n\nValues:\n    UNDEFINED_DURATION (0):\n        A value indicating that the enum field is not\n        set.\n    DURATION_UNSPECIFIED (529071340):\n        No description available.\n    HOUR (2223588):\n        No description available.\n    MAX (76100):\n        From BfdSession object creation time.\n    MINUTE (126786068):\n        No description available.",
                "values": {
                  "UNDEFINED_DURATION": {
                    "value": 0
                  },
                  "DURATION_UNSPECIFIED": {
                    "value": 529071340
                  },
                  "HOUR": {
                    "value": 2223588
                  },
                  "MAX": {
                    "value": 76100
                  },
                  "MINUTE": {
                    "value": 126786068
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "vm_id",
          "event"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateRuntimeRequest",
      "description": "Request for updating a Managed Notebook configuration.\n\nAttributes:\n    runtime (google.cloud.notebooks_v1.types.Runtime):\n        Required. The Runtime to be updated.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Specifies the path, relative to ``Runtime``, of\n        the field to update. For example, to change the software\n        configuration kernels, the ``update_mask`` parameter would\n        be specified as ``software_config.kernels``, and the\n        ``PATCH`` request body would specify the new value, as\n        follows:\n\n        ::\n\n            {\n              \"software_config\":{\n                \"kernels\": [{\n                   'repository':\n                   'gcr.io/deeplearning-platform-release/pytorch-gpu', 'tag':\n                   'latest' }],\n                }\n            }\n\n        Currently, only the following fields can be updated:\n\n        -  ``software_config.kernels``\n        -  ``software_config.post_startup_script``\n        -  ``software_config.custom_gp",
      "parameters": {
        "type": "object",
        "properties": {
          "runtime": {
            "description": "Required. The Runtime to be updated.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Output only. The resource name of the runtime. Format: ``projects/{project}/locations/{location}/runtimes/{runtimeId}``",
                "type": "string"
              },
              "virtual_machine": {
                "type": "object",
                "properties": {
                  "instance_name": {
                    "description": "Output only. The user-friendly name of the Managed Compute Engine instance.",
                    "type": "string"
                  },
                  "instance_id": {
                    "description": "Output only. The unique identifier of the Managed Compute Engine instance.",
                    "type": "string"
                  },
                  "virtual_machine_config": {
                    "type": "object",
                    "properties": {
                      "zone": {
                        "description": "Output only. The zone where the virtual machine is located. If using regional request, the notebooks service will pick a location in the corresponding runtime region. On a get request, zone will always be present. Example:  -  ``us-central1-b``",
                        "type": "string"
                      },
                      "machine_type": {
                        "description": "Required. The Compute Engine machine type used for runtimes. Short name is valid. Examples:  -  ``n1-standard-2`` -  ``e2-standard-8``",
                        "type": "string"
                      },
                      "container_images": {
                        "description": "Optional. Use a list of container images to use as Kernels in the notebook instance.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "repository": {
                              "description": "Required. The path to the container image repository. For example: ``gcr.io/{project_id}/{image_name}``",
                              "type": "string"
                            },
                            "tag": {
                              "description": "Optional. The tag of the container image. If not specified, this defaults to the latest tag.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "repository"
                          ]
                        }
                      },
                      "data_disk": {
                        "type": "object",
                        "properties": {
                          "auto_delete": {
                            "description": "Optional. Output only. Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
                            "type": "boolean"
                          },
                          "boot": {
                            "description": "Optional. Output only. Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.",
                            "type": "boolean"
                          },
                          "device_name": {
                            "description": "Optional. Output only. Specifies a unique device name of your choice that is reflected into the ``/dev/disk/by-id/google-*`` tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.  If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
                            "type": "string"
                          },
                          "guest_os_features": {
                            "description": "Output only. Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. Read  Enabling guest operating system features to see a list of available options.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type_": {
                                  "description": "The ID of a supported feature. Read `Enabling guest operating system features <https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features>`__ to see a list of available options.  Valid values:  -  ``FEATURE_TYPE_UNSPECIFIED`` -  ``MULTI_IP_SUBNET`` -  ``SECURE_BOOT`` -  ``UEFI_COMPATIBLE`` -  ``VIRTIO_SCSI_MULTIQUEUE`` -  ``WINDOWS``",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "index": {
                            "description": "Output only. A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.",
                            "type": "integer"
                          },
                          "initialize_params": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "Optional. Provide this property when creating the disk.",
                                "type": "string"
                              },
                              "disk_name": {
                                "description": "Optional. Specifies the disk name. If not specified, the default is to use the name of the instance. If the disk with the instance name exists already in the given zone/region, a new name will be automatically generated.",
                                "type": "string"
                              },
                              "disk_size_gb": {
                                "description": "Optional. Specifies the size of the disk in base-2 GB. If not specified, the disk will be the same size as the image (usually 10GB). If specified, the size must be equal to or larger than 10GB. Default 100 GB.",
                                "type": "integer"
                              },
                              "disk_type": {
                                "type": "enum",
                                "name": "DiskType",
                                "description": "Possible disk types.\n\nValues:\n    DISK_TYPE_UNSPECIFIED (0):\n        Disk type not set.\n    PD_STANDARD (1):\n        Standard persistent disk type.\n    PD_SSD (2):\n        SSD persistent disk type.\n    PD_BALANCED (3):\n        Balanced persistent disk type.\n    PD_EXTREME (4):\n        Extreme persistent disk type.",
                                "values": {
                                  "DISK_TYPE_UNSPECIFIED": {
                                    "value": 0
                                  },
                                  "PD_STANDARD": {
                                    "value": 1
                                  },
                                  "PD_SSD": {
                                    "value": 2
                                  },
                                  "PD_BALANCED": {
                                    "value": 3
                                  },
                                  "PD_EXTREME": {
                                    "value": 4
                                  }
                                }
                              },
                              "labels": {
                                "description": "Optional. Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "interface": {
                            "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values:  -  ``NVME`` -  ``SCSI``",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Output only. Type of the resource. Always compute#attachedDisk for attached disks.",
                            "type": "string"
                          },
                          "licenses": {
                            "description": "Output only. Any valid publicly visible licenses.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "mode": {
                            "description": "The mode in which to attach this disk, either ``READ_WRITE`` or ``READ_ONLY``. If not specified, the default is to attach the disk in ``READ_WRITE`` mode. Valid values:  -  ``READ_ONLY`` -  ``READ_WRITE``",
                            "type": "string"
                          },
                          "source": {
                            "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource.",
                            "type": "string"
                          },
                          "type_": {
                            "description": "Specifies the type of the disk, either ``SCRATCH`` or ``PERSISTENT``. If not specified, the default is ``PERSISTENT``. Valid values:  -  ``PERSISTENT`` -  ``SCRATCH``",
                            "type": "string"
                          }
                        }
                      },
                      "encryption_config": {
                        "type": "object",
                        "properties": {
                          "kms_key_name": {
                            "description": "Optional. Customer-managed Encryption Key available through Google's Key Management Service. Cannot be updated. If not specified, Google-managed key will be used.",
                            "type": "string"
                          }
                        }
                      },
                      "shielded_instance_config": {
                        "type": "object",
                        "properties": {
                          "enable_secure_boot": {
                            "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.",
                            "type": "boolean"
                          },
                          "enable_vtpm": {
                            "description": "Defines whether the instance has the vTPM enabled. Enabled by default.",
                            "type": "boolean"
                          },
                          "enable_integrity_monitoring": {
                            "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.",
                            "type": "boolean"
                          }
                        }
                      },
                      "accelerator_config": {
                        "type": "object",
                        "properties": {
                          "type_": {
                            "type": "enum",
                            "name": "AcceleratorType",
                            "description": "Represents a hardware accelerator type.\n\nValues:\n    ACCELERATOR_TYPE_UNSPECIFIED (0):\n        Unspecified accelerator type, which means no\n        accelerator.\n    NVIDIA_TESLA_K80 (1):\n        Nvidia Tesla K80 GPU.\n    NVIDIA_TESLA_P100 (2):\n        Nvidia Tesla P100 GPU.\n    NVIDIA_TESLA_V100 (3):\n        Nvidia Tesla V100 GPU.\n    NVIDIA_TESLA_P4 (4):\n        Nvidia Tesla P4 GPU.\n    NVIDIA_TESLA_T4 (5):\n        Nvidia Tesla T4 GPU.\n    NVIDIA_TESLA_A100 (8):\n        Nvidia Tesla A100 GPU.\n    TPU_V2 (6):\n        TPU v2.\n    TPU_V3 (7):\n        TPU v3.",
                            "values": {
                              "ACCELERATOR_TYPE_UNSPECIFIED": {
                                "value": 0
                              },
                              "NVIDIA_TESLA_K80": {
                                "value": 1
                              },
                              "NVIDIA_TESLA_P100": {
                                "value": 2
                              },
                              "NVIDIA_TESLA_V100": {
                                "value": 3
                              },
                              "NVIDIA_TESLA_P4": {
                                "value": 4
                              },
                              "NVIDIA_TESLA_T4": {
                                "value": 5
                              },
                              "NVIDIA_TESLA_A100": {
                                "value": 8
                              },
                              "TPU_V2": {
                                "value": 6
                              },
                              "TPU_V3": {
                                "value": 7
                              }
                            }
                          },
                          "core_count": {
                            "description": "Count of cores of this accelerator.",
                            "type": "integer"
                          }
                        }
                      },
                      "network": {
                        "description": "Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither ``network`` nor ``subnet`` is specified, the \"default\" network of the project is used, if it exists.  A full URL or partial URI. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default`` -  ``projects/[project_id]/global/networks/default``  Runtimes are managed resources inside Google Infrastructure. Runtimes support the following network configurations:  -  Google Managed Network (Network & subnet are empty) -  Consumer Project VPC (network & subnet are required). Requires configuring Private Service Access. -  Shared VPC (network & subnet are required). Requires configuring Private Service Access.",
                        "type": "string"
                      },
                      "subnet": {
                        "description": "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network.  A full URL or partial URI are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0`` -  ``projects/[project_id]/regions/us-east1/subnetworks/sub0``",
                        "type": "string"
                      },
                      "internal_ip_only": {
                        "description": "Optional. If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This ``internal_ip_only`` restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.",
                        "type": "boolean"
                      },
                      "tags": {
                        "description": "Optional. The Compute Engine tags to add to runtime (see `Tagging instances <https://cloud.google.com/compute/docs/label-or-tag-resources#tags>`__).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "guest_attributes": {
                        "description": "Output only. The Compute Engine guest attributes. (see `Project and instance guest attributes <https://cloud.google.com/compute/docs/storing-retrieving-metadata#guest_attributes>`__).",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "metadata": {
                        "description": "Optional. The Compute Engine metadata entries to add to virtual machine. (see `Project and instance metadata <https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata>`__).",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "labels": {
                        "description": "Optional. The labels to associate with this runtime. Label **keys** must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. No more than 32 labels can be associated with a cluster.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nic_type": {
                        "type": "enum",
                        "name": "NicType",
                        "description": "The type of vNIC driver. Default should be NIC_TYPE_UNSPECIFIED.\n\nValues:\n    NIC_TYPE_UNSPECIFIED (0):\n        No type specified.\n    VIRTIO_NET (1):\n        VIRTIO\n    GVNIC (2):\n        GVNIC",
                        "values": {
                          "NIC_TYPE_UNSPECIFIED": {
                            "value": 0
                          },
                          "VIRTIO_NET": {
                            "value": 1
                          },
                          "GVNIC": {
                            "value": 2
                          }
                        }
                      },
                      "reserved_ip_range": {
                        "description": "Optional. Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range *name* if it's assigned.  Example: managed-notebooks-range-c  ::  PEERING_RANGE_NAME_3=managed-notebooks-range-c gcloud compute addresses create $PEERING_RANGE_NAME_3 \\ --global \\ --prefix-length=24 \\ --description=\"Google Cloud Managed Notebooks Range 24 c\" \\ --network=$NETWORK \\ --addresses=192.168.0.0 \\ --purpose=VPC_PEERING  Field value will be: ``managed-notebooks-range-c``",
                        "type": "string"
                      },
                      "boot_image": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "machine_type",
                      "data_disk"
                    ]
                  }
                }
              },
              "state": {
                "type": "enum",
                "name": "State",
                "description": "Provides the state of this Vulnerability assessment.\n\nValues:\n    STATE_UNSPECIFIED (0):\n        No state is specified.\n    AFFECTED (1):\n        This product is known to be affected by this\n        vulnerability.\n    NOT_AFFECTED (2):\n        This product is known to be not affected by\n        this vulnerability.\n    FIXED (3):\n        This product contains a fix for this\n        vulnerability.\n    UNDER_INVESTIGATION (4):\n        It is not known yet whether these versions\n        are or are not affected by the vulnerability.\n        However, it is still under investigation.",
                "values": {
                  "STATE_UNSPECIFIED": {
                    "value": 0
                  },
                  "AFFECTED": {
                    "value": 1
                  },
                  "NOT_AFFECTED": {
                    "value": 2
                  },
                  "FIXED": {
                    "value": 3
                  },
                  "UNDER_INVESTIGATION": {
                    "value": 4
                  }
                }
              },
              "health_state": {
                "type": "enum",
                "name": "HealthState",
                "description": "The instance health state.\n\nValues:\n    HEALTH_STATE_UNSPECIFIED (0):\n        The instance substate is unknown.\n    HEALTHY (1):\n        The instance is known to be in an healthy\n        state (for example, critical daemons are\n        running) Applies to ACTIVE state.\n    UNHEALTHY (2):\n        The instance is known to be in an unhealthy\n        state (for example, critical daemons are not\n        running) Applies to ACTIVE state.\n    AGENT_NOT_INSTALLED (3):\n        The instance has not installed health\n        monitoring agent. Applies to ACTIVE state.\n    AGENT_NOT_RUNNING (4):\n        The instance health monitoring agent is not\n        running. Applies to ACTIVE state.",
                "values": {
                  "HEALTH_STATE_UNSPECIFIED": {
                    "value": 0
                  },
                  "HEALTHY": {
                    "value": 1
                  },
                  "UNHEALTHY": {
                    "value": 2
                  },
                  "AGENT_NOT_INSTALLED": {
                    "value": 3
                  },
                  "AGENT_NOT_RUNNING": {
                    "value": 4
                  }
                }
              },
              "access_config": {
                "type": "object",
                "properties": {
                  "access_type": {
                    "type": "enum",
                    "name": "RuntimeAccessType",
                    "description": "Possible ways to access runtime. Authentication mode.\nCurrently supports: Single User only.\n\nValues:\n    RUNTIME_ACCESS_TYPE_UNSPECIFIED (0):\n        Unspecified access.\n    SINGLE_USER (1):\n        Single user login.\n    SERVICE_ACCOUNT (2):\n        Service Account mode.\n        In Service Account mode, Runtime creator will\n        specify a SA that exists in the consumer\n        project. Using Runtime Service Account field.\n        Users accessing the Runtime need ActAs (Service\n        Account User) permission.",
                    "values": {
                      "RUNTIME_ACCESS_TYPE_UNSPECIFIED": {
                        "value": 0
                      },
                      "SINGLE_USER": {
                        "value": 1
                      },
                      "SERVICE_ACCOUNT": {
                        "value": 2
                      }
                    }
                  },
                  "runtime_owner": {
                    "description": "The owner of this runtime after creation. Format: ``alias@example.com`` Currently supports one owner only.",
                    "type": "string"
                  },
                  "proxy_uri": {
                    "description": "Output only. The proxy endpoint that is used to access the runtime.",
                    "type": "string"
                  }
                }
              },
              "software_config": {
                "type": "object",
                "properties": {
                  "notebook_upgrade_schedule": {
                    "description": "Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the `cron format <https://en.wikipedia.org/wiki/Cron>`__.",
                    "type": "string"
                  },
                  "enable_health_monitoring": {
                    "description": "Verifies core internal services are running. Default: True  This field is a member of `oneof`_ ``_enable_health_monitoring``.",
                    "type": "boolean"
                  },
                  "idle_shutdown": {
                    "description": "Runtime will automatically shutdown after idle_shutdown_time. Default: True  This field is a member of `oneof`_ ``_idle_shutdown``.",
                    "type": "boolean"
                  },
                  "idle_shutdown_timeout": {
                    "description": "Time in minutes to wait before shutting down runtime. Default: 180 minutes",
                    "type": "integer"
                  },
                  "install_gpu_driver": {
                    "description": "Install Nvidia Driver automatically. Default: True",
                    "type": "boolean"
                  },
                  "custom_gpu_driver_path": {
                    "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.",
                    "type": "string"
                  },
                  "post_startup_script": {
                    "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (``gs://path-to-file/file-name``).",
                    "type": "string"
                  },
                  "kernels": {
                    "description": "Optional. Use a list of container images to use as Kernels in the notebook instance.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "repository": {
                          "description": "Required. The path to the container image repository. For example: ``gcr.io/{project_id}/{image_name}``",
                          "type": "string"
                        },
                        "tag": {
                          "description": "Optional. The tag of the container image. If not specified, this defaults to the latest tag.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "repository"
                      ]
                    }
                  },
                  "upgradeable": {
                    "description": "Output only. Bool indicating whether an newer image is available in an image family.  This field is a member of `oneof`_ ``_upgradeable``.",
                    "type": "boolean"
                  },
                  "post_startup_script_behavior": {
                    "type": "enum",
                    "name": "PostStartupScriptBehavior",
                    "description": "Behavior for the post startup script.\n\nValues:\n    POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED (0):\n        Unspecified post startup script behavior.\n        Will run only once at creation.\n    RUN_EVERY_START (1):\n        Runs the post startup script provided during\n        creation at every start.\n    DOWNLOAD_AND_RUN_EVERY_START (2):\n        Downloads and runs the provided post startup\n        script at every start.",
                    "values": {
                      "POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED": {
                        "value": 0
                      },
                      "RUN_EVERY_START": {
                        "value": 1
                      },
                      "DOWNLOAD_AND_RUN_EVERY_START": {
                        "value": 2
                      }
                    }
                  },
                  "disable_terminal": {
                    "description": "Bool indicating whether JupyterLab terminal will be available or not. Default: False  This field is a member of `oneof`_ ``_disable_terminal``.",
                    "type": "boolean"
                  },
                  "version": {
                    "description": "Output only. version of boot image such as M100, from release label of the image.  This field is a member of `oneof`_ ``_version``.",
                    "type": "string"
                  }
                }
              },
              "metrics": {
                "type": "object",
                "properties": {
                  "system_metrics": {
                    "description": "Output only. The system metrics.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "create_time": {
                "description": "Output only. Runtime creation time.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. Runtime update time.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              }
            }
          },
          "update_mask": {
            "description": "Required. Specifies the path, relative to ``Runtime``, of the field to update. For example, to change the software configuration kernels, the ``update_mask`` parameter would be specified as ``software_config.kernels``, and the ``PATCH`` request body would specify the new value, as follows:  ::  { \"software_config\":{ \"kernels\": [{ 'repository': 'gcr.io/deeplearning-platform-release/pytorch-gpu', 'tag': 'latest' }], } }  Currently, only the following fields can be updated:  -  ``software_config.kernels`` -  ``software_config.post_startup_script`` -  ``software_config.custom_gpu_driver_path`` -  ``software_config.idle_shutdown`` -  ``software_config.idle_shutdown_timeout`` -  ``software_config.disable_terminal``",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "request_id": {
            "description": "Idempotent request UUID.",
            "type": "string"
          }
        },
        "required": [
          "runtime",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "RefreshRuntimeTokenInternalRequest",
      "description": "Request for getting a new access token.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``",
            "type": "string"
          },
          "vm_id": {
            "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
            "type": "string"
          }
        },
        "required": [
          "name",
          "vm_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DiagnoseRuntimeRequest",
      "description": "Request for creating a notebook instance diagnostic file.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtimes_id}``\n    diagnostic_config (google.cloud.notebooks_v1.types.DiagnosticConfig):\n        Required. Defines flags that are used to run\n        the diagnostic tool",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtimes_id}``",
            "type": "string"
          },
          "diagnostic_config": {
            "description": "Required. Defines flags that are used to run the diagnostic tool",
            "type": "object",
            "properties": {
              "gcs_bucket": {
                "description": "Required. User Cloud Storage bucket location (REQUIRED). Must be formatted with path prefix (``gs://$GCS_BUCKET``).  Permissions: User Managed Notebooks:  -  storage.buckets.writer: Must be given to the project's service account attached to VM. Google Managed Notebooks: -  storage.buckets.writer: Must be given to the project's service account or user credentials attached to VM depending on authentication mode.  Cloud Storage bucket Log file will be written to ``gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz``",
                "type": "string"
              },
              "relative_path": {
                "description": "Optional. Defines the relative storage path in the Cloud Storage bucket where the diagnostic logs will be written: Default path will be the root directory of the Cloud Storage bucket (``gs://$GCS_BUCKET/$DATE_$TIME.tar.gz``) Example of full path where Log file will be written: ``gs://$GCS_BUCKET/$RELATIVE_PATH/``",
                "type": "string"
              },
              "enable_repair_flag": {
                "description": "Optional. Enables flag to repair service for instance",
                "type": "boolean"
              },
              "enable_packet_capture_flag": {
                "description": "Optional. Enables flag to capture packets from the instance for 30 seconds",
                "type": "boolean"
              },
              "enable_copy_home_files_flag": {
                "description": "Optional. Enables flag to copy all ``/home/jupyter`` folder contents",
                "type": "boolean"
              }
            },
            "required": [
              "gcs_bucket"
            ]
          }
        },
        "required": [
          "name",
          "diagnostic_config"
        ]
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\service.py": [
    {
      "type": "function",
      "name": "ListInstancesRequest",
      "description": "Request for listing notebook instances.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum return size of the list call.",
            "type": "integer"
          },
          "page_token": {
            "description": "A previous returned page token that can be used to continue listing from the last result.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetInstanceRequest",
      "description": "Request for getting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateInstanceRequest",
      "description": "Request for creating a notebook instance.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    instance_id (str):\n        Required. User-defined unique ID of this\n        instance.\n    instance (google.cloud.notebooks_v1.types.Instance):\n        Required. The instance to be created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "instance_id": {
            "description": "Required. User-defined unique ID of this instance.",
            "type": "string"
          },
          "instance": {
            "description": "Required. The instance to be created.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Output only. name of resource",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. [Output only] Create timestamp",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. [Output only] Update timestamp",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "labels": {
                "description": "Labels as key value pairs",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "display_name": {
                "description": "Required. A user friendly display name for the solution.",
                "type": "string"
              },
              "description": {
                "description": "A description for this application.",
                "type": "string"
              },
              "input_resources": {
                "description": "The input resources for the current application instance. For example: input_resources: visionai.googleapis.com/v1/projects/123/locations/us-central1/clusters/456/streams/stream-a",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "input_resource": {
                      "description": "The direct input resource name.  This field is a member of `oneof`_ ``input_resource_information``.",
                      "type": "string"
                    },
                    "annotated_stream": {
                      "type": "object",
                      "properties": {
                        "stream": {
                          "description": "Vision AI Stream resource name.",
                          "type": "string"
                        },
                        "application_annotations": {
                          "description": "Annotations that will be applied to the whole application.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "active_zone": {
                                "type": "object",
                                "properties": {
                                  "normalized_vertices": {
                                    "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "description": "X coordinate.",
                                          "type": "number"
                                        },
                                        "y": {
                                          "description": "Y coordinate.",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "crossing_line": {
                                "type": "object",
                                "properties": {
                                  "normalized_vertices": {
                                    "description": "A sequence of vertices connected by straight lines.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "description": "X coordinate.",
                                          "type": "number"
                                        },
                                        "y": {
                                          "description": "Y coordinate.",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "id": {
                                "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "User-friendly name for the annotation.",
                                "type": "string"
                              },
                              "source_stream": {
                                "description": "The Vision AI stream resource name.",
                                "type": "string"
                              },
                              "type_": {
                                "type": "enum",
                                "name": "StreamAnnotationType",
                                "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                                "values": {
                                  "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                    "value": 0
                                  },
                                  "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                    "value": 1
                                  },
                                  "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                    "value": 2
                                  }
                                }
                              }
                            }
                          }
                        },
                        "node_annotations": {
                          "description": "Annotations that will be applied to the specific node of the application. If the same type of the annotations is applied to both application and node, the node annotation will be added in addition to the global application one. For example, if there is one active zone annotation for the whole application and one active zone annotation for the Occupancy Analytic processor, then the Occupancy Analytic processor will have two active zones defined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "node": {
                                "description": "The node name of the application graph.",
                                "type": "string"
                              },
                              "annotations": {
                                "description": "The node specific stream annotations.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "active_zone": {
                                      "type": "object",
                                      "properties": {
                                        "normalized_vertices": {
                                          "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "x": {
                                                "description": "X coordinate.",
                                                "type": "number"
                                              },
                                              "y": {
                                                "description": "Y coordinate.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "crossing_line": {
                                      "type": "object",
                                      "properties": {
                                        "normalized_vertices": {
                                          "description": "A sequence of vertices connected by straight lines.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "x": {
                                                "description": "X coordinate.",
                                                "type": "number"
                                              },
                                              "y": {
                                                "description": "Y coordinate.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "id": {
                                      "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                                      "type": "string"
                                    },
                                    "display_name": {
                                      "description": "User-friendly name for the annotation.",
                                      "type": "string"
                                    },
                                    "source_stream": {
                                      "description": "The Vision AI stream resource name.",
                                      "type": "string"
                                    },
                                    "type_": {
                                      "type": "enum",
                                      "name": "StreamAnnotationType",
                                      "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                                      "values": {
                                        "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                          "value": 0
                                        },
                                        "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                          "value": 1
                                        },
                                        "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                          "value": 2
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "consumer_node": {
                      "description": "The name of graph node who receives the input resource. For example: input_resource: visionai.googleapis.com/v1/projects/123/locations/us-central1/clusters/456/streams/input-stream-a consumer_node: stream-input",
                      "type": "string"
                    },
                    "input_resource_binding": {
                      "description": "The specific input resource binding which will consume the current Input Resource, can be ignored is there is only 1 input binding.",
                      "type": "string"
                    },
                    "annotations": {
                      "type": "object",
                      "properties": {
                        "application_annotations": {
                          "description": "Annotations that will be applied to the whole application.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "active_zone": {
                                "type": "object",
                                "properties": {
                                  "normalized_vertices": {
                                    "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "description": "X coordinate.",
                                          "type": "number"
                                        },
                                        "y": {
                                          "description": "Y coordinate.",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "crossing_line": {
                                "type": "object",
                                "properties": {
                                  "normalized_vertices": {
                                    "description": "A sequence of vertices connected by straight lines.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "description": "X coordinate.",
                                          "type": "number"
                                        },
                                        "y": {
                                          "description": "Y coordinate.",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "id": {
                                "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "User-friendly name for the annotation.",
                                "type": "string"
                              },
                              "source_stream": {
                                "description": "The Vision AI stream resource name.",
                                "type": "string"
                              },
                              "type_": {
                                "type": "enum",
                                "name": "StreamAnnotationType",
                                "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                                "values": {
                                  "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                    "value": 0
                                  },
                                  "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                    "value": 1
                                  },
                                  "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                    "value": 2
                                  }
                                }
                              }
                            }
                          }
                        },
                        "node_annotations": {
                          "description": "Annotations that will be applied to the specific node of the application. If the same type of the annotations is applied to both application and node, the node annotation will be added in addition to the global application one. For example, if there is one active zone annotation for the whole application and one active zone annotation for the Occupancy Analytic processor, then the Occupancy Analytic processor will have two active zones defined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "node": {
                                "description": "The node name of the application graph.",
                                "type": "string"
                              },
                              "annotations": {
                                "description": "The node specific stream annotations.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "active_zone": {
                                      "type": "object",
                                      "properties": {
                                        "normalized_vertices": {
                                          "description": "The bounding polygon normalized vertices. Top left corner of the image will be [0, 0].",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "x": {
                                                "description": "X coordinate.",
                                                "type": "number"
                                              },
                                              "y": {
                                                "description": "Y coordinate.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "crossing_line": {
                                      "type": "object",
                                      "properties": {
                                        "normalized_vertices": {
                                          "description": "A sequence of vertices connected by straight lines.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "x": {
                                                "description": "X coordinate.",
                                                "type": "number"
                                              },
                                              "y": {
                                                "description": "Y coordinate.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "id": {
                                      "description": "ID of the annotation. It must be unique when used in the certain context. For example, all the annotations to one input streams of a Vision AI application.",
                                      "type": "string"
                                    },
                                    "display_name": {
                                      "description": "User-friendly name for the annotation.",
                                      "type": "string"
                                    },
                                    "source_stream": {
                                      "description": "The Vision AI stream resource name.",
                                      "type": "string"
                                    },
                                    "type_": {
                                      "type": "enum",
                                      "name": "StreamAnnotationType",
                                      "description": "Enum describing all possible types of a stream annotation.\n\nValues:\n    STREAM_ANNOTATION_TYPE_UNSPECIFIED (0):\n        Type UNSPECIFIED.\n    STREAM_ANNOTATION_TYPE_ACTIVE_ZONE (1):\n        active_zone annotation defines a polygon on top of the\n        content from an image/video based stream, following\n        processing will only focus on the content inside the active\n        zone.\n    STREAM_ANNOTATION_TYPE_CROSSING_LINE (2):\n        crossing_line annotation defines a polyline on top of the\n        content from an image/video based Vision AI stream, events\n        happening across the line will be captured. For example, the\n        counts of people who goes acroos the line in Occupancy\n        Analytic Processor.",
                                      "values": {
                                        "STREAM_ANNOTATION_TYPE_UNSPECIFIED": {
                                          "value": 0
                                        },
                                        "STREAM_ANNOTATION_TYPE_ACTIVE_ZONE": {
                                          "value": 1
                                        },
                                        "STREAM_ANNOTATION_TYPE_CROSSING_LINE": {
                                          "value": 2
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "output_resources": {
                "description": "All the output resources associated to one application instance.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "output_resource": {
                      "description": "The output resource name for the current application instance.",
                      "type": "string"
                    },
                    "producer_node": {
                      "description": "The name of graph node who produces the output resource name. For example: output_resource: /projects/123/locations/us-central1/clusters/456/streams/output-application-789-stream-a-occupancy-counting producer_node: occupancy-counting",
                      "type": "string"
                    },
                    "output_resource_binding": {
                      "description": "The specific output resource binding which produces the current OutputResource.",
                      "type": "string"
                    },
                    "is_temporary": {
                      "description": "Output only. Whether the output resource is temporary which means the resource is generated during the deployment of the application. Temporary resource will be deleted during the undeployment of the application.",
                      "type": "boolean"
                    },
                    "autogen": {
                      "description": "Output only. Whether the output resource is created automatically by the Vision AI App Platform.",
                      "type": "boolean"
                    }
                  }
                }
              },
              "state": {
                "type": "enum",
                "name": "State",
                "description": "Provides the state of this Vulnerability assessment.\n\nValues:\n    STATE_UNSPECIFIED (0):\n        No state is specified.\n    AFFECTED (1):\n        This product is known to be affected by this\n        vulnerability.\n    NOT_AFFECTED (2):\n        This product is known to be not affected by\n        this vulnerability.\n    FIXED (3):\n        This product contains a fix for this\n        vulnerability.\n    UNDER_INVESTIGATION (4):\n        It is not known yet whether these versions\n        are or are not affected by the vulnerability.\n        However, it is still under investigation.",
                "values": {
                  "STATE_UNSPECIFIED": {
                    "value": 0
                  },
                  "AFFECTED": {
                    "value": 1
                  },
                  "NOT_AFFECTED": {
                    "value": 2
                  },
                  "FIXED": {
                    "value": 3
                  },
                  "UNDER_INVESTIGATION": {
                    "value": 4
                  }
                }
              }
            },
            "required": [
              "display_name"
            ]
          }
        },
        "required": [
          "parent",
          "instance_id",
          "instance"
        ]
      }
    },
    {
      "type": "function",
      "name": "RegisterInstanceRequest",
      "description": "Request for registering a notebook instance.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    instance_id (str):\n        Required. User defined unique ID of this instance. The\n        ``instance_id`` must be 1 to 63 characters long and contain\n        only lowercase letters, numeric characters, and dashes. The\n        first character must be a lowercase letter and the last\n        character cannot be a dash.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "instance_id": {
            "description": "Required. User defined unique ID of this instance. The ``instance_id`` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "instance_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetInstanceAcceleratorRequest",
      "description": "Request for setting instance accelerator.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    type_ (google.cloud.notebooks_v1.types.Instance.AcceleratorType):\n        Required. Type of this accelerator.\n    core_count (int):\n        Required. Count of cores of this accelerator. Note that not\n        all combinations of ``type`` and ``core_count`` are valid.\n        Check `GPUs on Compute\n        Engine <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__\n        to find a valid combination. TPUs are not supported.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "type_": {
            "description": "Represents a hardware accelerator type.\n\nValues:\n    ACCELERATOR_TYPE_UNSPECIFIED (0):\n        Unspecified accelerator type, which means no\n        accelerator.\n    NVIDIA_TESLA_K80 (1):\n        Nvidia Tesla K80 GPU.\n    NVIDIA_TESLA_P100 (2):\n        Nvidia Tesla P100 GPU.\n    NVIDIA_TESLA_V100 (3):\n        Nvidia Tesla V100 GPU.\n    NVIDIA_TESLA_P4 (4):\n        Nvidia Tesla P4 GPU.\n    NVIDIA_TESLA_T4 (5):\n        Nvidia Tesla T4 GPU.\n    NVIDIA_TESLA_A100 (8):\n        Nvidia Tesla A100 GPU.\n    TPU_V2 (6):\n        TPU v2.\n    TPU_V3 (7):\n        TPU v3.",
            "type": "enum",
            "name": "AcceleratorType",
            "values": {
              "ACCELERATOR_TYPE_UNSPECIFIED": {
                "value": 0
              },
              "NVIDIA_TESLA_K80": {
                "value": 1
              },
              "NVIDIA_TESLA_P100": {
                "value": 2
              },
              "NVIDIA_TESLA_V100": {
                "value": 3
              },
              "NVIDIA_TESLA_P4": {
                "value": 4
              },
              "NVIDIA_TESLA_T4": {
                "value": 5
              },
              "NVIDIA_TESLA_A100": {
                "value": 8
              },
              "TPU_V2": {
                "value": 6
              },
              "TPU_V3": {
                "value": 7
              }
            }
          },
          "core_count": {
            "description": "Required. Count of cores of this accelerator. Note that not all combinations of ``type`` and ``core_count`` are valid. Check `GPUs on Compute Engine <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__ to find a valid combination. TPUs are not supported.",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "type_",
          "core_count"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetInstanceMachineTypeRequest",
      "description": "Request for setting instance machine type.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    machine_type (str):\n        Required. The `Compute Engine machine\n        type <https://cloud.google.com/compute/docs/machine-types>`__.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "machine_type": {
            "description": "Required. The `Compute Engine machine type <https://cloud.google.com/compute/docs/machine-types>`__.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "machine_type"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateInstanceConfigRequest",
      "description": "Request for updating instance configurations.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    config (google.cloud.notebooks_v1.types.InstanceConfig):\n        The instance configurations to be updated.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "config": {
            "description": "The instance configurations to be updated.",
            "type": "object",
            "properties": {
              "notebook_upgrade_schedule": {
                "description": "Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the `cron format <https://en.wikipedia.org/wiki/Cron>`__.",
                "type": "string"
              },
              "enable_health_monitoring": {
                "description": "Verifies core internal services are running.",
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetInstanceLabelsRequest",
      "description": "Request for setting instance labels.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    labels (MutableMapping[str, str]):\n        Labels to apply to this instance.\n        These can be later modified by the setLabels\n        method",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "labels": {
            "description": "Labels to apply to this instance. These can be later modified by the setLabels method",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateInstanceMetadataItemsRequest",
      "description": "Request for adding/changing metadata items  for an instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    items (MutableMapping[str, str]):\n        Metadata items to add/update for the\n        instance.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "items": {
            "description": "Metadata items to add/update for the instance.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateShieldedInstanceConfigRequest",
      "description": "Request for updating the Shielded Instance config for a\nnotebook instance. You can only use this method on a stopped\ninstance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    shielded_instance_config (google.cloud.notebooks_v1.types.Instance.ShieldedInstanceConfig):\n        ShieldedInstance configuration to be updated.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "shielded_instance_config": {
            "description": "ShieldedInstance configuration to be updated.",
            "type": "object",
            "properties": {
              "enable_secure_boot": {
                "description": "Defines whether the instance has Secure Boot enabled.",
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteInstanceRequest",
      "description": "Request for deleting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StartInstanceRequest",
      "description": "Request for starting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "StopInstanceRequest",
      "description": "Request for stopping a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ResetInstanceRequest",
      "description": "Request for resetting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ReportInstanceInfoRequest",
      "description": "Request for notebook instances to report information to\nNotebooks API.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity\n    metadata (MutableMapping[str, str]):\n        The metadata reported to Notebooks API. This\n        will be merged to the instance metadata store",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "vm_id": {
            "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
            "type": "string"
          },
          "metadata": {
            "description": "The metadata reported to Notebooks API. This will be merged to the instance metadata store",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "vm_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "IsInstanceUpgradeableRequest",
      "description": "Request for checking if a notebook instance is upgradeable.\n\nAttributes:\n    notebook_instance (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    type_ (google.cloud.notebooks_v1.types.UpgradeType):\n        Optional. The optional UpgradeType. Setting\n        this field will search for additional compute\n        images to upgrade this instance.",
      "parameters": {
        "type": "object",
        "properties": {
          "notebook_instance": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "type_": {
            "description": "Definition of the types of upgrade that can be used on this\ninstance.\n\nValues:\n    UPGRADE_TYPE_UNSPECIFIED (0):\n        Upgrade type is not specified.\n    UPGRADE_FRAMEWORK (1):\n        Upgrade ML framework.\n    UPGRADE_OS (2):\n        Upgrade Operating System.\n    UPGRADE_CUDA (3):\n        Upgrade CUDA.\n    UPGRADE_ALL (4):\n        Upgrade All (OS, Framework and CUDA).",
            "type": "enum",
            "name": "UpgradeType",
            "values": {
              "UPGRADE_TYPE_UNSPECIFIED": {
                "value": 0
              },
              "UPGRADE_FRAMEWORK": {
                "value": 1
              },
              "UPGRADE_OS": {
                "value": 2
              },
              "UPGRADE_CUDA": {
                "value": 3
              },
              "UPGRADE_ALL": {
                "value": 4
              }
            }
          }
        },
        "required": [
          "notebook_instance"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetInstanceHealthRequest",
      "description": "Request for checking if a notebook instance is healthy.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpgradeInstanceRequest",
      "description": "Request for upgrading a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    type_ (google.cloud.notebooks_v1.types.UpgradeType):\n        Optional. The optional UpgradeType. Setting\n        this field will search for additional compute\n        images to upgrade this instance.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "type_": {
            "description": "Definition of the types of upgrade that can be used on this\ninstance.\n\nValues:\n    UPGRADE_TYPE_UNSPECIFIED (0):\n        Upgrade type is not specified.\n    UPGRADE_FRAMEWORK (1):\n        Upgrade ML framework.\n    UPGRADE_OS (2):\n        Upgrade Operating System.\n    UPGRADE_CUDA (3):\n        Upgrade CUDA.\n    UPGRADE_ALL (4):\n        Upgrade All (OS, Framework and CUDA).",
            "type": "enum",
            "name": "UpgradeType",
            "values": {
              "UPGRADE_TYPE_UNSPECIFIED": {
                "value": 0
              },
              "UPGRADE_FRAMEWORK": {
                "value": 1
              },
              "UPGRADE_OS": {
                "value": 2
              },
              "UPGRADE_CUDA": {
                "value": 3
              },
              "UPGRADE_ALL": {
                "value": 4
              }
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "RollbackInstanceRequest",
      "description": "Request for rollbacking a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    target_snapshot (str):\n        Required. The snapshot for rollback. Example:\n        ``projects/test-project/global/snapshots/krwlzipynril``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "target_snapshot": {
            "description": "Required. The snapshot for rollback. Example: ``projects/test-project/global/snapshots/krwlzipynril``.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "target_snapshot"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpgradeInstanceInternalRequest",
      "description": "Request for upgrading a notebook instance from within the VM\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity\n    type_ (google.cloud.notebooks_v1.types.UpgradeType):\n        Optional. The optional UpgradeType. Setting\n        this field will search for additional compute\n        images to upgrade this instance.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "vm_id": {
            "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
            "type": "string"
          },
          "type_": {
            "description": "Definition of the types of upgrade that can be used on this\ninstance.\n\nValues:\n    UPGRADE_TYPE_UNSPECIFIED (0):\n        Upgrade type is not specified.\n    UPGRADE_FRAMEWORK (1):\n        Upgrade ML framework.\n    UPGRADE_OS (2):\n        Upgrade Operating System.\n    UPGRADE_CUDA (3):\n        Upgrade CUDA.\n    UPGRADE_ALL (4):\n        Upgrade All (OS, Framework and CUDA).",
            "type": "enum",
            "name": "UpgradeType",
            "values": {
              "UPGRADE_TYPE_UNSPECIFIED": {
                "value": 0
              },
              "UPGRADE_FRAMEWORK": {
                "value": 1
              },
              "UPGRADE_OS": {
                "value": 2
              },
              "UPGRADE_CUDA": {
                "value": 3
              },
              "UPGRADE_ALL": {
                "value": 4
              }
            }
          }
        },
        "required": [
          "name",
          "vm_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListEnvironmentsRequest",
      "description": "Request for listing environments.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum return size of the list call.",
            "type": "integer"
          },
          "page_token": {
            "description": "A previous returned page token that can be used to continue listing from the last result.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DiagnoseInstanceRequest",
      "description": "Request for creating a notebook instance diagnostic file.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    diagnostic_config (google.cloud.notebooks_v1.types.DiagnosticConfig):\n        Required. Defines flags that are used to run\n        the diagnostic tool",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
            "type": "string"
          },
          "diagnostic_config": {
            "description": "Required. Defines flags that are used to run the diagnostic tool",
            "type": "object",
            "properties": {
              "gcs_bucket": {
                "description": "Required. User Cloud Storage bucket location (REQUIRED). Must be formatted with path prefix (``gs://$GCS_BUCKET``).  Permissions: User Managed Notebooks:  -  storage.buckets.writer: Must be given to the project's service account attached to VM. Google Managed Notebooks: -  storage.buckets.writer: Must be given to the project's service account or user credentials attached to VM depending on authentication mode.  Cloud Storage bucket Log file will be written to ``gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz``",
                "type": "string"
              },
              "relative_path": {
                "description": "Optional. Defines the relative storage path in the Cloud Storage bucket where the diagnostic logs will be written: Default path will be the root directory of the Cloud Storage bucket (``gs://$GCS_BUCKET/$DATE_$TIME.tar.gz``) Example of full path where Log file will be written: ``gs://$GCS_BUCKET/$RELATIVE_PATH/``",
                "type": "string"
              },
              "enable_repair_flag": {
                "description": "Optional. Enables flag to repair service for instance",
                "type": "boolean"
              },
              "enable_packet_capture_flag": {
                "description": "Optional. Enables flag to capture packets from the instance for 30 seconds",
                "type": "boolean"
              },
              "enable_copy_home_files_flag": {
                "description": "Optional. Enables flag to copy all ``/home/jupyter`` folder contents",
                "type": "boolean"
              }
            },
            "required": [
              "gcs_bucket"
            ]
          }
        },
        "required": [
          "name",
          "diagnostic_config"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetEnvironmentRequest",
      "description": "Request for getting a notebook environment.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateEnvironmentRequest",
      "description": "Request for creating a notebook environment.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}``\n    environment_id (str):\n        Required. User-defined unique ID of this environment. The\n        ``environment_id`` must be 1 to 63 characters long and\n        contain only lowercase letters, numeric characters, and\n        dashes. The first character must be a lowercase letter and\n        the last character cannot be a dash.\n    environment (google.cloud.notebooks_v1.types.Environment):\n        Required. The environment to be created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "environment_id": {
            "description": "Required. User-defined unique ID of this environment. The ``environment_id`` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash.",
            "type": "string"
          },
          "environment": {
            "description": "Required. The environment to be created.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Immutable. Full name of this resource, in the format ``users/{owner_email}/environments/{environment_id}``. ``{owner_email}`` is the email address of the user to whom this environment belongs, and ``{environment_id}`` is the identifier of this environment. For example, ``users/someone@example.com/environments/default``.",
                "type": "string"
              },
              "id": {
                "description": "Output only. The environment's identifier, unique among the user's environments.",
                "type": "string"
              },
              "docker_image": {
                "description": "Required. Immutable. Full path to the Docker image used to run this environment, e.g. \"gcr.io/dev-con/cloud-devshell:latest\".",
                "type": "string"
              },
              "state": {
                "type": "enum",
                "name": "State",
                "description": "Provides the state of this Vulnerability assessment.\n\nValues:\n    STATE_UNSPECIFIED (0):\n        No state is specified.\n    AFFECTED (1):\n        This product is known to be affected by this\n        vulnerability.\n    NOT_AFFECTED (2):\n        This product is known to be not affected by\n        this vulnerability.\n    FIXED (3):\n        This product contains a fix for this\n        vulnerability.\n    UNDER_INVESTIGATION (4):\n        It is not known yet whether these versions\n        are or are not affected by the vulnerability.\n        However, it is still under investigation.",
                "values": {
                  "STATE_UNSPECIFIED": {
                    "value": 0
                  },
                  "AFFECTED": {
                    "value": 1
                  },
                  "NOT_AFFECTED": {
                    "value": 2
                  },
                  "FIXED": {
                    "value": 3
                  },
                  "UNDER_INVESTIGATION": {
                    "value": 4
                  }
                }
              },
              "web_host": {
                "description": "Output only. Host to which clients can connect to initiate HTTPS or WSS connections with the environment.",
                "type": "string"
              },
              "ssh_username": {
                "description": "Output only. Username that clients should use when initiating SSH sessions with the environment.",
                "type": "string"
              },
              "ssh_host": {
                "description": "Output only. Host to which clients can connect to initiate SSH sessions with the environment.",
                "type": "string"
              },
              "ssh_port": {
                "description": "Output only. Port to which clients can connect to initiate SSH sessions with the environment.",
                "type": "integer"
              },
              "public_keys": {
                "description": "Output only. Public keys associated with the environment. Clients can connect to this environment via SSH only if they possess a private key corresponding to at least one of these public keys. Keys can be added to or removed from the environment using the AddPublicKey and RemovePublicKey methods.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "docker_image"
            ]
          }
        },
        "required": [
          "parent",
          "environment_id",
          "environment"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteEnvironmentRequest",
      "description": "Request for deleting a notebook environment.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListSchedulesRequest",
      "description": "Request for listing scheduled notebook job.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.\n    filter (str):\n        Filter applied to resulting schedules.\n    order_by (str):\n        Field to order results by.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum return size of the list call.",
            "type": "integer"
          },
          "page_token": {
            "description": "A previous returned page token that can be used to continue listing from the last result.",
            "type": "string"
          },
          "filter": {
            "description": "Filter applied to resulting schedules.",
            "type": "string"
          },
          "order_by": {
            "description": "Field to order results by.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetScheduleRequest",
      "description": "Request for getting scheduled notebook.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/schedules/{schedule_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/schedules/{schedule_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteScheduleRequest",
      "description": "Request for deleting an Schedule\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/schedules/{schedule_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/schedules/{schedule_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateScheduleRequest",
      "description": "Request for created scheduled notebooks\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    schedule_id (str):\n        Required. User-defined unique ID of this\n        schedule.\n    schedule (google.cloud.notebooks_v1.types.Schedule):\n        Required. The schedule to be created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "schedule_id": {
            "description": "Required. User-defined unique ID of this schedule.",
            "type": "string"
          },
          "schedule": {
            "description": "Required. The schedule to be created.",
            "type": "object",
            "properties": {
              "schedule_time": {
                "description": "A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "interval_duration_days": {
                "description": "Required. The duration of time between executions in days.",
                "type": "integer"
              }
            },
            "required": [
              "interval_duration_days"
            ]
          }
        },
        "required": [
          "parent",
          "schedule_id",
          "schedule"
        ]
      }
    },
    {
      "type": "function",
      "name": "TriggerScheduleRequest",
      "description": "Request for created scheduled notebooks\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}/schedules/{schedule_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}/schedules/{schedule_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListExecutionsRequest",
      "description": "Request for listing scheduled notebook executions.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.\n    filter (str):\n        Filter applied to resulting executions. Currently only\n        supports filtering executions by a specified\n        ``schedule_id``. Format: ``schedule_id=<Schedule_ID>``\n    order_by (str):\n        Sort by field.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum return size of the list call.",
            "type": "integer"
          },
          "page_token": {
            "description": "A previous returned page token that can be used to continue listing from the last result.",
            "type": "string"
          },
          "filter": {
            "description": "Filter applied to resulting executions. Currently only supports filtering executions by a specified ``schedule_id``. Format: ``schedule_id=<Schedule_ID>``",
            "type": "string"
          },
          "order_by": {
            "description": "Sort by field.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetExecutionRequest",
      "description": "Request for getting scheduled notebook execution\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/executions/{execution_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/executions/{execution_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteExecutionRequest",
      "description": "Request for deleting a scheduled notebook execution\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/executions/{execution_id}``",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Format: ``projects/{project_id}/locations/{location}/executions/{execution_id}``",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateExecutionRequest",
      "description": "Request to create notebook execution\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    execution_id (str):\n        Required. User-defined unique ID of this\n        execution.\n    execution (google.cloud.notebooks_v1.types.Execution):\n        Required. The execution to be created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``",
            "type": "string"
          },
          "execution_id": {
            "description": "Required. User-defined unique ID of this execution.",
            "type": "string"
          },
          "execution": {
            "description": "Required. The execution to be created.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Output only. The resource name of the execution. Format:  projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}",
                "type": "string"
              },
              "start_time": {
                "description": "Output only. Marks the beginning of execution.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "end_time": {
                "description": "Output only. Marks the end of execution, successful or not.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "state": {
                "type": "enum",
                "name": "State",
                "description": "Provides the state of this Vulnerability assessment.\n\nValues:\n    STATE_UNSPECIFIED (0):\n        No state is specified.\n    AFFECTED (1):\n        This product is known to be affected by this\n        vulnerability.\n    NOT_AFFECTED (2):\n        This product is known to be not affected by\n        this vulnerability.\n    FIXED (3):\n        This product contains a fix for this\n        vulnerability.\n    UNDER_INVESTIGATION (4):\n        It is not known yet whether these versions\n        are or are not affected by the vulnerability.\n        However, it is still under investigation.",
                "values": {
                  "STATE_UNSPECIFIED": {
                    "value": 0
                  },
                  "AFFECTED": {
                    "value": 1
                  },
                  "NOT_AFFECTED": {
                    "value": 2
                  },
                  "FIXED": {
                    "value": 3
                  },
                  "UNDER_INVESTIGATION": {
                    "value": 4
                  }
                }
              },
              "argument": {
                "description": "Input parameters of the execution represented as a JSON string. The size limit is 32KB.",
                "type": "string"
              },
              "result": {
                "description": "Output only. Output of the execution represented as a JSON string. The value can only be present if the execution's state is ``SUCCEEDED``.",
                "type": "string"
              },
              "error": {
                "type": "object",
                "properties": {
                  "payload": {
                    "description": "Error payload returned by the execution, represented as a JSON string.",
                    "type": "string"
                  },
                  "context": {
                    "description": "Human readable error context, helpful for debugging purposes.",
                    "type": "string"
                  }
                }
              },
              "workflow_revision_id": {
                "description": "Output only. Revision of the workflow this execution is using.",
                "type": "string"
              }
            }
          }
        },
        "required": [
          "parent",
          "execution_id",
          "execution"
        ]
      }
    }
  ]
}