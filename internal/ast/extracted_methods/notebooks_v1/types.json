{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\diagnostic_config.py": [
    {
      "type": "request_class",
      "name": "DiagnosticConfig",
      "docstring": "Defines flags that are used to run the diagnostic tool\n\nAttributes:\n    gcs_bucket (str):\n        Required. User Cloud Storage bucket location (REQUIRED).\n        Must be formatted with path prefix (``gs://$GCS_BUCKET``).\n\n        Permissions: User Managed Notebooks:\n\n        -  storage.buckets.writer: Must be given to the project's\n           service account attached to VM. Google Managed Notebooks:\n        -  storage.buckets.writer: Must be given to the project's\n           service account or user credentials attached to VM\n           depending on authentication mode.\n\n        Cloud Storage bucket Log file will be written to\n        ``gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz``\n    relative_path (str):\n        Optional. Defines the relative storage path in the Cloud\n        Storage bucket where the diagnostic logs will be written:\n        Default path will be the root directory of the Cloud Storage\n        bucket (``gs://$GCS_BUCKET/$DATE_$TIME.tar.gz``) Example of\n        full path where Log fi",
      "attributes": {
        "gcs_bucket": {
          "type": "str",
          "description": "Required. User Cloud Storage bucket location (REQUIRED). Must be formatted with path prefix (``gs://$GCS_BUCKET``).  Permissions: User Managed Notebooks:  -  storage.buckets.writer: Must be given to the project's service account attached to VM. Google Managed Notebooks: -  storage.buckets.writer: Must be given to the project's service account or user credentials attached to VM depending on authentication mode.  Cloud Storage bucket Log file will be written to ``gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz``"
        },
        "relative_path": {
          "type": "str",
          "description": "Optional. Defines the relative storage path in the Cloud Storage bucket where the diagnostic logs will be written: Default path will be the root directory of the Cloud Storage bucket (``gs://$GCS_BUCKET/$DATE_$TIME.tar.gz``) Example of full path where Log file will be written: ``gs://$GCS_BUCKET/$RELATIVE_PATH/``"
        },
        "repair_flag_enabled": {
          "type": "bool",
          "description": "Optional. Enables flag to repair service for instance"
        },
        "packet_capture_flag_enabled": {
          "type": "bool",
          "description": "Optional. Enables flag to capture packets from the instance for 30 seconds"
        },
        "copy_home_files_flag_enabled": {
          "type": "bool",
          "description": "Optional. Enables flag to copy all ``/home/jupyter`` folder contents"
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\environment.py": [
    {
      "type": "request_class",
      "name": "Environment",
      "docstring": "Definition of a software environment that is used to start a\nnotebook instance.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Output only. Name of this environment. Format:\n        ``projects/{project_id}/locations/{location}/environments/{environment_id}``\n    display_name (str):\n        Display name of this environment for the UI.\n    description (str):\n        A brief description of this environment.\n    vm_image (google.cloud.notebooks_v1.types.VmImage):\n        Use a Compute Engine VM image to start the\n        notebook instance.\n\n        This field is a member of `oneof`_ ``image_type``.\n    container_image (google.cloud.notebooks_v1.types.ContainerImage):\n        Use a container image to start the notebo",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. Name of this environment. Format: ``projects/{project_id}/locations/{location}/environments/{environment_id}``"
        },
        "display_name": {
          "type": "str",
          "description": "Display name of this environment for the UI."
        },
        "description": {
          "type": "str",
          "description": "A brief description of this environment."
        },
        "vm_image": {
          "type": "google.cloud.notebooks_v1.types.VmImage",
          "description": "Use a Compute Engine VM image to start the notebook instance.  This field is a member of `oneof`_ ``image_type``."
        },
        "container_image": {
          "type": "google.cloud.notebooks_v1.types.ContainerImage",
          "description": "Use a container image to start the notebook instance.  This field is a member of `oneof`_ ``image_type``."
        },
        "post_startup_script": {
          "type": "str",
          "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path. Example: ``\"gs://path-to-file/file-name\"``"
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. The time at which this environment was created."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VmImage",
      "docstring": "Definition of a custom Compute Engine virtual machine image\nfor starting a notebook instance with the environment installed\ndirectly on the VM.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    project (str):\n        Required. The name of the Google Cloud project that this VM\n        image belongs to. Format: ``{project_id}``\n    image_name (str):\n        Use VM image name to find the image.\n\n        This field is a member of `oneof`_ ``image``.\n    image_family (str):\n        Use this VM image family to find the image;\n        the newest image in this family will be used.\n\n        This field is a member of `oneof`_ ``image``.",
      "attributes": {
        "project": {
          "type": "str",
          "description": "Required. The name of the Google Cloud project that this VM image belongs to. Format: ``{project_id}``"
        },
        "image_name": {
          "type": "str",
          "description": "Use VM image name to find the image.  This field is a member of `oneof`_ ``image``."
        },
        "image_family": {
          "type": "str",
          "description": "Use this VM image family to find the image; the newest image in this family will be used.  This field is a member of `oneof`_ ``image``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ContainerImage",
      "docstring": "Definition of a container image for starting a notebook\ninstance with the environment installed in a container.\n\nAttributes:\n    repository (str):\n        Required. The path to the container image repository. For\n        example: ``gcr.io/{project_id}/{image_name}``\n    tag (str):\n        The tag of the container image. If not\n        specified, this defaults to the latest tag.",
      "attributes": {
        "repository": {
          "type": "str",
          "description": "Required. The path to the container image repository. For example: ``gcr.io/{project_id}/{image_name}``"
        },
        "tag": {
          "type": "str",
          "description": "The tag of the container image. If not specified, this defaults to the latest tag."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\event.py": [
    {
      "type": "request_class",
      "name": "Event",
      "docstring": "The definition of an Event for a managed / semi-managed\nnotebook instance.\n\nAttributes:\n    report_time (google.protobuf.timestamp_pb2.Timestamp):\n        Event report time.\n    type_ (google.cloud.notebooks_v1.types.Event.EventType):\n        Event type.\n    details (MutableMapping[str, str]):\n        Optional. Event details. This field is used\n        to pass event information.",
      "attributes": {
        "report_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Event report time."
        },
        "type_": {
          "type": "google.cloud.notebooks_v1.types.Event.EventType",
          "description": "Event type."
        },
        "details": {
          "type": "MutableMapping[str, str]",
          "description": "Optional. Event details. This field is used to pass event information."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\execution.py": [
    {
      "type": "request_class",
      "name": "ExecutionTemplate",
      "docstring": "The description a notebook execution workload.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    scale_tier (google.cloud.notebooks_v1.types.ExecutionTemplate.ScaleTier):\n        Required. Scale tier of the hardware used for\n        notebook execution. DEPRECATED Will be\n        discontinued. As right now only CUSTOM is\n        supported.\n    master_type (str):\n        Specifies the type of virtual machine to use for your\n        training job's master worker. You must specify this field\n        when ``scaleTier`` is set to ``CUSTOM``.\n\n        You can use certain Compute Engine machine types directly in\n        this field. The following types are supported:\n\n        -  ``n1-standard-4``\n        -  ``n1-standard-8``\n        -  ``n1-sta",
      "attributes": {
        "scale_tier": {
          "type": "google.cloud.notebooks_v1.types.ExecutionTemplate.ScaleTier",
          "description": "Required. Scale tier of the hardware used for notebook execution. DEPRECATED Will be discontinued. As right now only CUSTOM is supported."
        },
        "master_type": {
          "type": "str",
          "description": "Specifies the type of virtual machine to use for your training job's master worker. You must specify this field when ``scaleTier`` is set to ``CUSTOM``.  You can use certain Compute Engine machine types directly in this field. The following types are supported:  -  ``n1-standard-4`` -  ``n1-standard-8`` -  ``n1-standard-16`` -  ``n1-standard-32`` -  ``n1-standard-64`` -  ``n1-standard-96`` -  ``n1-highmem-2`` -  ``n1-highmem-4`` -  ``n1-highmem-8`` -  ``n1-highmem-16`` -  ``n1-highmem-32`` -  ``n1-highmem-64`` -  ``n1-highmem-96`` -  ``n1-highcpu-16`` -  ``n1-highcpu-32`` -  ``n1-highcpu-64`` -  ``n1-highcpu-96``  Alternatively, you can use the following legacy machine types:  -  ``standard`` -  ``large_model`` -  ``complex_model_s`` -  ``complex_model_m`` -  ``complex_model_l`` -  ``standard_gpu`` -  ``complex_model_m_gpu`` -  ``complex_model_l_gpu`` -  ``standard_p100`` -  ``complex_model_m_p100`` -  ``standard_v100`` -  ``large_model_v100`` -  ``complex_model_m_v100`` -  ``complex_model_l_v100``  Finally, if you want to use a TPU for training, specify ``cloud_tpu`` in this field. Learn more about the `special configuration options for training with TPU <https://cloud.google.com/ai-platform/training/docs/using-tpus#configuring_a_custom_tpu_machine>`__."
        },
        "accelerator_config": {
          "type": "google.cloud.notebooks_v1.types.ExecutionTemplate.SchedulerAcceleratorConfig",
          "description": "Configuration (count and accelerator type) for hardware running notebook execution."
        },
        "labels": {
          "type": "MutableMapping[str, str]",
          "description": "Labels for execution. If execution is scheduled, a field included will be 'nbs-scheduled'. Otherwise, it is an immediate execution, and an included field will be 'nbs-immediate'. Use fields to efficiently index between various types of executions."
        },
        "input_notebook_file": {
          "type": "str",
          "description": "Path to the notebook file to execute. Must be in a Google Cloud Storage bucket. Format: ``gs://{bucket_name}/{folder}/{notebook_file_name}`` Ex: ``gs://notebook_user/scheduled_notebooks/sentiment_notebook.ipynb``"
        },
        "container_image_uri": {
          "type": "str",
          "description": "Container Image URI to a DLVM Example: 'gcr.io/deeplearning-platform-release/base-cu100' More examples can be found at:  https://cloud.google.com/ai-platform/deep-learning-containers/docs/choosing-container"
        },
        "output_notebook_folder": {
          "type": "str",
          "description": "Path to the notebook folder to write to. Must be in a Google Cloud Storage bucket path. Format: ``gs://{bucket_name}/{folder}`` Ex: ``gs://notebook_user/scheduled_notebooks``"
        },
        "params_yaml_file": {
          "type": "str",
          "description": "Parameters to be overridden in the notebook during execution. Ref https://papermill.readthedocs.io/en/latest/usage-parameterize.html on how to specifying parameters in the input notebook and pass them here in an YAML file. Ex: ``gs://notebook_user/scheduled_notebooks/sentiment_notebook_params.yaml``"
        },
        "parameters": {
          "type": "str",
          "description": "Parameters used within the 'input_notebook_file' notebook."
        },
        "service_account": {
          "type": "str",
          "description": "The email address of a service account to use when running the execution. You must have the ``iam.serviceAccounts.actAs`` permission for the specified service account."
        },
        "job_type": {
          "type": "google.cloud.notebooks_v1.types.ExecutionTemplate.JobType",
          "description": "The type of Job to be used on this execution."
        },
        "dataproc_parameters": {
          "type": "google.cloud.notebooks_v1.types.ExecutionTemplate.DataprocParameters",
          "description": "Parameters used in Dataproc JobType executions.  This field is a member of `oneof`_ ``job_parameters``."
        },
        "vertex_ai_parameters": {
          "type": "google.cloud.notebooks_v1.types.ExecutionTemplate.VertexAIParameters",
          "description": "Parameters used in Vertex AI JobType executions.  This field is a member of `oneof`_ ``job_parameters``."
        },
        "kernel_spec": {
          "type": "str",
          "description": "Name of the kernel spec to use. This must be specified if the kernel spec name on the execution target does not match the name in the input notebook file."
        },
        "tensorboard": {
          "type": "str",
          "description": "The name of a Vertex AI [Tensorboard] resource to which this execution will upload Tensorboard logs. Format: ``projects/{project}/locations/{location}/tensorboards/{tensorboard}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "Execution",
      "docstring": "The definition of a single executed notebook.\n\nAttributes:\n    execution_template (google.cloud.notebooks_v1.types.ExecutionTemplate):\n        execute metadata including name, hardware\n        spec, region, labels, etc.\n    name (str):\n        Output only. The resource name of the execute. Format:\n        ``projects/{project_id}/locations/{location}/executions/{execution_id}``\n    display_name (str):\n        Output only. Name used for UI purposes. Name can only\n        contain alphanumeric characters and underscores '_'.\n    description (str):\n        A brief description of this execution.\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Time the Execution was\n        instantiated.\n    update_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Time the Execution was last\n        updated.\n    state (google.cloud.notebooks_v1.types.Execution.State):\n        Output only. State of the underlying AI\n        Platform job.\n    output_notebook_file (str):\n        Output",
      "attributes": {
        "execution_template": {
          "type": "google.cloud.notebooks_v1.types.ExecutionTemplate",
          "description": "execute metadata including name, hardware spec, region, labels, etc."
        },
        "name": {
          "type": "str",
          "description": "Output only. The resource name of the execute. Format: ``projects/{project_id}/locations/{location}/executions/{execution_id}``"
        },
        "display_name": {
          "type": "str",
          "description": "Output only. Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'."
        },
        "description": {
          "type": "str",
          "description": "A brief description of this execution."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Time the Execution was instantiated."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Time the Execution was last updated."
        },
        "state": {
          "type": "google.cloud.notebooks_v1.types.Execution.State",
          "description": "Output only. State of the underlying AI Platform job."
        },
        "output_notebook_file": {
          "type": "str",
          "description": "Output notebook file generated by this execution"
        },
        "job_uri": {
          "type": "str",
          "description": "Output only. The URI of the external job used to execute the notebook."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SchedulerAcceleratorConfig",
      "docstring": "Definition of a hardware accelerator. Note that not all combinations\nof ``type`` and ``core_count`` are valid. Check `GPUs on Compute\nEngine <https://cloud.google.com/compute/docs/gpus>`__ to find a\nvalid combination. TPUs are not supported.\n\nAttributes:\n    type_ (google.cloud.notebooks_v1.types.ExecutionTemplate.SchedulerAcceleratorType):\n        Type of this accelerator.\n    core_count (int):\n        Count of cores of this accelerator.",
      "attributes": {
        "type_": {
          "type": "google.cloud.notebooks_v1.types.ExecutionTemplate.SchedulerAcceleratorType",
          "description": "Type of this accelerator."
        },
        "core_count": {
          "type": "int",
          "description": "Count of cores of this accelerator."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DataprocParameters",
      "docstring": "Parameters used in Dataproc JobType executions.\n\nAttributes:\n    cluster (str):\n        URI for cluster used to run Dataproc execution. Format:\n        ``projects/{PROJECT_ID}/regions/{REGION}/clusters/{CLUSTER_NAME}``",
      "attributes": {
        "cluster": {
          "type": "str",
          "description": "URI for cluster used to run Dataproc execution. Format: ``projects/{PROJECT_ID}/regions/{REGION}/clusters/{CLUSTER_NAME}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "VertexAIParameters",
      "docstring": "Parameters used in Vertex AI JobType executions.\n\nAttributes:\n    network (str):\n        The full name of the Compute Engine\n        `network <https://cloud.google.com/compute/docs/networks-and-firewalls#networks>`__\n        to which the Job should be peered. For example,\n        ``projects/12345/global/networks/myVPC``.\n        `Format <https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert>`__\n        is of the form\n        ``projects/{project}/global/networks/{network}``. Where\n        ``{project}`` is a project number, as in ``12345``, and\n        ``{network}`` is a network name.\n\n        Private services access must already be configured for the\n        network. If left unspecified, the job is not peered with any\n        network.\n    env (MutableMapping[str, str]):\n        Environment variables. At most 100 environment variables can\n        be specified and unique. Example:\n        ``GCP_BUCKET=gs://my-bucket/samples/``",
      "attributes": {
        "network": {
          "type": "str",
          "description": "The full name of the Compute Engine `network <https://cloud.google.com/compute/docs/networks-and-firewalls#networks>`__ to which the Job should be peered. For example, ``projects/12345/global/networks/myVPC``. `Format <https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert>`__ is of the form ``projects/{project}/global/networks/{network}``. Where ``{project}`` is a project number, as in ``12345``, and ``{network}`` is a network name.  Private services access must already be configured for the network. If left unspecified, the job is not peered with any network."
        },
        "env": {
          "type": "MutableMapping[str, str]",
          "description": "Environment variables. At most 100 environment variables can be specified and unique. Example: ``GCP_BUCKET=gs://my-bucket/samples/``"
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\instance.py": [
    {
      "type": "request_class",
      "name": "ReservationAffinity",
      "docstring": "Reservation Affinity for consuming Zonal reservation.\n\nAttributes:\n    consume_reservation_type (google.cloud.notebooks_v1.types.ReservationAffinity.Type):\n        Optional. Type of reservation to consume\n    key (str):\n        Optional. Corresponds to the label key of\n        reservation resource.\n    values (MutableSequence[str]):\n        Optional. Corresponds to the label values of\n        reservation resource.",
      "attributes": {
        "consume_reservation_type": {
          "type": "google.cloud.notebooks_v1.types.ReservationAffinity.Type",
          "description": "Optional. Type of reservation to consume"
        },
        "key": {
          "type": "str",
          "description": "Optional. Corresponds to the label key of reservation resource."
        },
        "values": {
          "type": "MutableSequence[str]",
          "description": "Optional. Corresponds to the label values of reservation resource."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Instance",
      "docstring": "The definition of a notebook instance.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Output only. The name of this notebook instance. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    vm_image (google.cloud.notebooks_v1.types.VmImage):\n        Use a Compute Engine VM image to start the\n        notebook instance.\n\n        This field is a member of `oneof`_ ``environment``.\n    container_image (google.cloud.notebooks_v1.types.ContainerImage):\n        Use a container image to start the notebook\n        instance.\n\n        This field is a member of `oneof`_ ``environment``.\n    post_startup_script (str):\n        Path to a Bash script that automatically runs after a\n        no",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. The name of this notebook instance. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "vm_image": {
          "type": "google.cloud.notebooks_v1.types.VmImage",
          "description": "Use a Compute Engine VM image to start the notebook instance.  This field is a member of `oneof`_ ``environment``."
        },
        "container_image": {
          "type": "google.cloud.notebooks_v1.types.ContainerImage",
          "description": "Use a container image to start the notebook instance.  This field is a member of `oneof`_ ``environment``."
        },
        "post_startup_script": {
          "type": "str",
          "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (``gs://path-to-file/file-name``)."
        },
        "proxy_uri": {
          "type": "str",
          "description": "Output only. The proxy endpoint that is used to access the Jupyter notebook."
        },
        "instance_owners": {
          "type": "MutableSequence[str]",
          "description": "Input only. The owner of this instance after creation. Format: ``alias@example.com``  Currently supports one owner only. If not specified, all of the service account users of your VM instance's service account can use the instance."
        },
        "service_account": {
          "type": "str",
          "description": "The service account on this instance, giving access to other Google Cloud services. You can use any service account within the same project, but you must have the service account user permission to use the instance.  If not specified, the `Compute Engine default service account <https://cloud.google.com/compute/docs/access/service-accounts#default_service_account>`__ is used."
        },
        "service_account_scopes": {
          "type": "MutableSequence[str]",
          "description": "Optional. The URIs of service account scopes to be included in Compute Engine instances.  If not specified, the following `scopes <https://cloud.google.com/compute/docs/access/service-accounts#accesscopesiam>`__ are defined:  -  https://www.googleapis.com/auth/cloud-platform -  https://www.googleapis.com/auth/userinfo.email If not using default scopes, you need at least: https://www.googleapis.com/auth/compute"
        },
        "machine_type": {
          "type": "str",
          "description": "Required. The `Compute Engine machine type <https://cloud.google.com/compute/docs/machine-types>`__ of this instance."
        },
        "accelerator_config": {
          "type": "google.cloud.notebooks_v1.types.Instance.AcceleratorConfig",
          "description": "The hardware accelerator used on this instance. If you use accelerators, make sure that your configuration has `enough vCPUs and memory to support the ``machine_type`` you have selected <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__."
        },
        "state": {
          "type": "google.cloud.notebooks_v1.types.Instance.State",
          "description": "Output only. The state of this instance."
        },
        "install_gpu_driver": {
          "type": "bool",
          "description": "Whether the end user authorizes Google Cloud to install GPU driver on this instance. If this field is empty or set to false, the GPU driver won't be installed. Only applicable to instances with GPUs."
        },
        "custom_gpu_driver_path": {
          "type": "str",
          "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers."
        },
        "boot_disk_type": {
          "type": "google.cloud.notebooks_v1.types.Instance.DiskType",
          "description": "Input only. The type of the boot disk attached to this instance, defaults to standard persistent disk (``PD_STANDARD``)."
        },
        "boot_disk_size_gb": {
          "type": "int",
          "description": "Input only. The size of the boot disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). The minimum recommended value is 100 GB. If not specified, this defaults to 100."
        },
        "data_disk_type": {
          "type": "google.cloud.notebooks_v1.types.Instance.DiskType",
          "description": "Input only. The type of the data disk attached to this instance, defaults to standard persistent disk (``PD_STANDARD``)."
        },
        "data_disk_size_gb": {
          "type": "int",
          "description": "Input only. The size of the data disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). You can choose the size of the data disk based on how big your notebooks and data are. If not specified, this defaults to 100."
        },
        "no_remove_data_disk": {
          "type": "bool",
          "description": "Input only. If true, the data disk will not be auto deleted when deleting the instance."
        },
        "disk_encryption": {
          "type": "google.cloud.notebooks_v1.types.Instance.DiskEncryption",
          "description": "Input only. Disk encryption method used on the boot and data disks, defaults to GMEK."
        },
        "kms_key": {
          "type": "str",
          "description": "Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption is CMEK. Format: ``projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}``  Learn more about `using your own encryption keys </kms/docs/quickstart>`__."
        },
        "disks": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.Instance.Disk]",
          "description": "Output only. Attached disks to notebook instance."
        },
        "shielded_instance_config": {
          "type": "google.cloud.notebooks_v1.types.Instance.ShieldedInstanceConfig",
          "description": "Optional. Shielded VM configuration. `Images using supported Shielded VM features <https://cloud.google.com/compute/docs/instances/modifying-shielded-vm>`__."
        },
        "no_public_ip": {
          "type": "bool",
          "description": "If true, no public IP will be assigned to this instance."
        },
        "no_proxy_access": {
          "type": "bool",
          "description": "If true, the notebook instance will not register with the proxy."
        },
        "network": {
          "type": "str",
          "description": "The name of the VPC that this instance is in. Format: ``projects/{project_id}/global/networks/{network_id}``"
        },
        "subnet": {
          "type": "str",
          "description": "The name of the subnet that this instance is in. Format: ``projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}``"
        },
        "labels": {
          "type": "MutableMapping[str, str]",
          "description": "Labels to apply to this instance. These can be later modified by the setLabels method."
        },
        "metadata": {
          "type": "MutableMapping[str, str]",
          "description": "Custom metadata to apply to this instance."
        },
        "tags": {
          "type": "MutableSequence[str]",
          "description": "Optional. The Compute Engine tags to add to runtime (see `Tagging instances <https://cloud.google.com/compute/docs/label-or-tag-resources#tags>`__)."
        },
        "upgrade_history": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.Instance.UpgradeHistoryEntry]",
          "description": "The upgrade history of this instance."
        },
        "nic_type": {
          "type": "google.cloud.notebooks_v1.types.Instance.NicType",
          "description": "Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet."
        },
        "reservation_affinity": {
          "type": "google.cloud.notebooks_v1.types.ReservationAffinity",
          "description": "Optional. The optional reservation affinity. Setting this field will apply the specified `Zonal Compute Reservation <https://cloud.google.com/compute/docs/instances/reserving-zonal-resources>`__ to this notebook instance."
        },
        "creator": {
          "type": "str",
          "description": "Output only. Email address of entity that sent original CreateInstance request."
        },
        "can_ip_forward": {
          "type": "bool",
          "description": "Optional. Flag to enable ip forwarding or not, default false/off. https://cloud.google.com/vpc/docs/using-routes#canipforward"
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Instance creation time."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Instance update time."
        }
      }
    },
    {
      "type": "request_class",
      "name": "AcceleratorConfig",
      "docstring": "Definition of a hardware accelerator. Note that not all combinations\nof ``type`` and ``core_count`` are valid. Check `GPUs on Compute\nEngine <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__ to\nfind a valid combination. TPUs are not supported.\n\nAttributes:\n    type_ (google.cloud.notebooks_v1.types.Instance.AcceleratorType):\n        Type of this accelerator.\n    core_count (int):\n        Count of cores of this accelerator.",
      "attributes": {
        "type_": {
          "type": "google.cloud.notebooks_v1.types.Instance.AcceleratorType",
          "description": "Type of this accelerator."
        },
        "core_count": {
          "type": "int",
          "description": "Count of cores of this accelerator."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Disk",
      "docstring": "An instance-attached disk resource.\n\nAttributes:\n    auto_delete (bool):\n        Indicates whether the disk will be\n        auto-deleted when the instance is deleted (but\n        not when the disk is detached from the\n        instance).\n    boot (bool):\n        Indicates that this is a boot disk. The\n        virtual machine will use the first partition of\n        the disk for its root filesystem.\n    device_name (str):\n        Indicates a unique device name of your choice that is\n        reflected into the ``/dev/disk/by-id/google-*`` tree of a\n        Linux operating system running within the instance. This\n        name can be used to reference the device for mounting,\n        resizing, and so on, from within the instance.\n\n        If not specified, the server chooses a default device name\n        to apply to this disk, in the form persistent-disk-x, where\n        x is a number assigned by Google Compute Engine.This field\n        is only applicable for persistent disks.\n    disk_size_gb (int):\n        Indica",
      "attributes": {
        "auto_delete": {
          "type": "bool",
          "description": "Indicates whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance)."
        },
        "boot": {
          "type": "bool",
          "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem."
        },
        "device_name": {
          "type": "str",
          "description": "Indicates a unique device name of your choice that is reflected into the ``/dev/disk/by-id/google-*`` tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.  If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine.This field is only applicable for persistent disks."
        },
        "disk_size_gb": {
          "type": "int",
          "description": "Indicates the size of the disk in base-2 GB."
        },
        "guest_os_features": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.Instance.Disk.GuestOsFeature]",
          "description": "Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. Read  Enabling guest operating system features to see a list of available options."
        },
        "index": {
          "type": "int",
          "description": "A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number."
        },
        "interface": {
          "type": "str",
          "description": "Indicates the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values:  -  ``NVME`` -  ``SCSI``"
        },
        "kind": {
          "type": "str",
          "description": "Type of the resource. Always compute#attachedDisk for attached disks."
        },
        "licenses": {
          "type": "MutableSequence[str]",
          "description": "A list of publicly visible licenses. Reserved for Google's use. A License represents billing and aggregate usage data for public and marketplace images."
        },
        "mode": {
          "type": "str",
          "description": "The mode in which to attach this disk, either ``READ_WRITE`` or ``READ_ONLY``. If not specified, the default is to attach the disk in ``READ_WRITE`` mode. Valid values:  -  ``READ_ONLY`` -  ``READ_WRITE``"
        },
        "source": {
          "type": "str",
          "description": "Indicates a valid partial or full URL to an existing Persistent Disk resource."
        },
        "type_": {
          "type": "str",
          "description": "Indicates the type of the disk, either ``SCRATCH`` or ``PERSISTENT``. Valid values:  -  ``PERSISTENT`` -  ``SCRATCH``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ShieldedInstanceConfig",
      "docstring": "A set of Shielded Instance options. Check `Images using supported\nShielded VM\nfeatures <https://cloud.google.com/compute/docs/instances/modifying-shielded-vm>`__.\nNot all combinations are valid.\n\nAttributes:\n    enable_secure_boot (bool):\n        Defines whether the instance has Secure Boot\n        enabled.\n        Secure Boot helps ensure that the system only\n        runs authentic software by verifying the digital\n        signature of all boot components, and halting\n        the boot process if signature verification\n        fails. Disabled by default.\n    enable_vtpm (bool):\n        Defines whether the instance has the vTPM\n        enabled. Enabled by default.\n    enable_integrity_monitoring (bool):\n        Defines whether the instance has integrity\n        monitoring enabled.\n        Enables monitoring and attestation of the boot\n        integrity of the instance. The attestation is\n        performed against the integrity policy baseline.\n        This baseline is initially derived from the\n        implici",
      "attributes": {
        "enable_secure_boot": {
          "type": "bool",
          "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default."
        },
        "enable_vtpm": {
          "type": "bool",
          "description": "Defines whether the instance has the vTPM enabled. Enabled by default."
        },
        "enable_integrity_monitoring": {
          "type": "bool",
          "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpgradeHistoryEntry",
      "docstring": "The entry of VM image upgrade history.\n\nAttributes:\n    snapshot (str):\n        The snapshot of the boot disk of this\n        notebook instance before upgrade.\n    vm_image (str):\n        The VM image before this instance upgrade.\n    container_image (str):\n        The container image before this instance\n        upgrade.\n    framework (str):\n        The framework of this notebook instance.\n    version (str):\n        The version of the notebook instance before\n        this upgrade.\n    state (google.cloud.notebooks_v1.types.Instance.UpgradeHistoryEntry.State):\n        The state of this instance upgrade history\n        entry.\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time that this instance upgrade history\n        entry is created.\n    target_image (str):\n        Target VM Image. Format:\n        ``ainotebooks-vm/project/image-name/name``.\n    action (google.cloud.notebooks_v1.types.Instance.UpgradeHistoryEntry.Action):\n        Action. Rolloback or Upgrade.\n    target_version (str):",
      "attributes": {
        "snapshot": {
          "type": "str",
          "description": "The snapshot of the boot disk of this notebook instance before upgrade."
        },
        "vm_image": {
          "type": "str",
          "description": "The VM image before this instance upgrade."
        },
        "container_image": {
          "type": "str",
          "description": "The container image before this instance upgrade."
        },
        "framework": {
          "type": "str",
          "description": "The framework of this notebook instance."
        },
        "version": {
          "type": "str",
          "description": "The version of the notebook instance before this upgrade."
        },
        "state": {
          "type": "google.cloud.notebooks_v1.types.Instance.UpgradeHistoryEntry.State",
          "description": "The state of this instance upgrade history entry."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The time that this instance upgrade history entry is created."
        },
        "target_image": {
          "type": "str",
          "description": "Target VM Image. Format: ``ainotebooks-vm/project/image-name/name``."
        },
        "action": {
          "type": "google.cloud.notebooks_v1.types.Instance.UpgradeHistoryEntry.Action",
          "description": "Action. Rolloback or Upgrade."
        },
        "target_version": {
          "type": "str",
          "description": "Target VM Version, like m63."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GuestOsFeature",
      "docstring": "Guest OS features for boot disk.\n\nAttributes:\n    type_ (str):\n        The ID of a supported feature. Read Enabling guest operating\n        system features to see a list of available options. Valid\n        values:\n\n        -  ``FEATURE_TYPE_UNSPECIFIED``\n        -  ``MULTI_IP_SUBNET``\n        -  ``SECURE_BOOT``\n        -  ``UEFI_COMPATIBLE``\n        -  ``VIRTIO_SCSI_MULTIQUEUE``\n        -  ``WINDOWS``",
      "attributes": {
        "type_": {
          "type": "str",
          "description": "The ID of a supported feature. Read Enabling guest operating system features to see a list of available options. Valid values:  -  ``FEATURE_TYPE_UNSPECIFIED`` -  ``MULTI_IP_SUBNET`` -  ``SECURE_BOOT`` -  ``UEFI_COMPATIBLE`` -  ``VIRTIO_SCSI_MULTIQUEUE`` -  ``WINDOWS``"
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\instance_config.py": [
    {
      "type": "request_class",
      "name": "InstanceConfig",
      "docstring": "Notebook instance configurations that can be updated.\n\nAttributes:\n    notebook_upgrade_schedule (str):\n        Cron expression in UTC timezone, used to schedule instance\n        auto upgrade. Please follow the `cron\n        format <https://en.wikipedia.org/wiki/Cron>`__.\n    enable_health_monitoring (bool):\n        Verifies core internal services are running.",
      "attributes": {
        "notebook_upgrade_schedule": {
          "type": "str",
          "description": "Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the `cron format <https://en.wikipedia.org/wiki/Cron>`__."
        },
        "enable_health_monitoring": {
          "type": "bool",
          "description": "Verifies core internal services are running."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\managed_service.py": [
    {
      "type": "request_class",
      "name": "ListRuntimesRequest",
      "docstring": "Request for listing Managed Notebook Runtimes.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``"
        },
        "page_size": {
          "type": "int",
          "description": "Maximum return size of the list call."
        },
        "page_token": {
          "type": "str",
          "description": "A previous returned page token that can be used to continue listing from the last result."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListRuntimesResponse",
      "docstring": "Response for listing Managed Notebook Runtimes.\n\nAttributes:\n    runtimes (MutableSequence[google.cloud.notebooks_v1.types.Runtime]):\n        A list of returned Runtimes.\n    next_page_token (str):\n        Page token that can be used to continue\n        listing from the last result in the next list\n        call.\n    unreachable (MutableSequence[str]):\n        Locations that could not be reached. For example,\n        ``['us-west1', 'us-central1']``. A ListRuntimesResponse will\n        only contain either runtimes or unreachables,",
      "attributes": {
        "runtimes": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.Runtime]",
          "description": "A list of returned Runtimes."
        },
        "next_page_token": {
          "type": "str",
          "description": "Page token that can be used to continue listing from the last result in the next list call."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Locations that could not be reached. For example, ``['us-west1', 'us-central1']``. A ListRuntimesResponse will only contain either runtimes or unreachables,"
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetRuntimeRequest",
      "docstring": "Request for getting a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateRuntimeRequest",
      "docstring": "Request for creating a Managed Notebook Runtime.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    runtime_id (str):\n        Required. User-defined unique ID of this\n        Runtime.\n    runtime (google.cloud.notebooks_v1.types.Runtime):\n        Required. The Runtime to be created.\n    request_id (str):\n        Idempotent request UUID.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``"
        },
        "runtime_id": {
          "type": "str",
          "description": "Required. User-defined unique ID of this Runtime."
        },
        "runtime": {
          "type": "google.cloud.notebooks_v1.types.Runtime",
          "description": "Required. The Runtime to be created."
        },
        "request_id": {
          "type": "str",
          "description": "Idempotent request UUID."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteRuntimeRequest",
      "docstring": "Request for deleting a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    request_id (str):\n        Idempotent request UUID.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``"
        },
        "request_id": {
          "type": "str",
          "description": "Idempotent request UUID."
        }
      }
    },
    {
      "type": "request_class",
      "name": "StartRuntimeRequest",
      "docstring": "Request for starting a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    request_id (str):\n        Idempotent request UUID.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``"
        },
        "request_id": {
          "type": "str",
          "description": "Idempotent request UUID."
        }
      }
    },
    {
      "type": "request_class",
      "name": "StopRuntimeRequest",
      "docstring": "Request for stopping a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    request_id (str):\n        Idempotent request UUID.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``"
        },
        "request_id": {
          "type": "str",
          "description": "Idempotent request UUID."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SwitchRuntimeRequest",
      "docstring": "Request for switching a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    machine_type (str):\n        machine type.\n    accelerator_config (google.cloud.notebooks_v1.types.RuntimeAcceleratorConfig):\n        accelerator config.\n    request_id (str):\n        Idempotent request UUID.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``"
        },
        "machine_type": {
          "type": "str",
          "description": "machine type."
        },
        "accelerator_config": {
          "type": "google.cloud.notebooks_v1.types.RuntimeAcceleratorConfig",
          "description": "accelerator config."
        },
        "request_id": {
          "type": "str",
          "description": "Idempotent request UUID."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ResetRuntimeRequest",
      "docstring": "Request for resetting a Managed Notebook Runtime.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    request_id (str):\n        Idempotent request UUID.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``"
        },
        "request_id": {
          "type": "str",
          "description": "Idempotent request UUID."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpgradeRuntimeRequest",
      "docstring": "Request for upgrading a Managed Notebook Runtime to the latest\nversion. option (google.api.message_visibility).restriction =\n\"TRUSTED_TESTER,SPECIAL_TESTER\";\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    request_id (str):\n        Idempotent request UUID.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``"
        },
        "request_id": {
          "type": "str",
          "description": "Idempotent request UUID."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ReportRuntimeEventRequest",
      "docstring": "Request for reporting a Managed Notebook Event.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity\n    event (google.cloud.notebooks_v1.types.Event):\n        Required. The Event to be reported.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``"
        },
        "vm_id": {
          "type": "str",
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity"
        },
        "event": {
          "type": "google.cloud.notebooks_v1.types.Event",
          "description": "Required. The Event to be reported."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateRuntimeRequest",
      "docstring": "Request for updating a Managed Notebook configuration.\n\nAttributes:\n    runtime (google.cloud.notebooks_v1.types.Runtime):\n        Required. The Runtime to be updated.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Specifies the path, relative to ``Runtime``, of\n        the field to update. For example, to change the software\n        configuration kernels, the ``update_mask`` parameter would\n        be specified as ``software_config.kernels``, and the\n        ``PATCH`` request body would specify the new value, as\n        follows:\n\n        ::\n\n            {\n              \"software_config\":{\n                \"kernels\": [{\n                   'repository':\n                   'gcr.io/deeplearning-platform-release/pytorch-gpu', 'tag':\n                   'latest' }],\n                }\n            }\n\n        Currently, only the following fields can be updated:\n\n        -  ``software_config.kernels``\n        -  ``software_config.post_startup_script``\n        -  ``software_config.custom_gp",
      "attributes": {
        "runtime": {
          "type": "google.cloud.notebooks_v1.types.Runtime",
          "description": "Required. The Runtime to be updated."
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "Required. Specifies the path, relative to ``Runtime``, of the field to update. For example, to change the software configuration kernels, the ``update_mask`` parameter would be specified as ``software_config.kernels``, and the ``PATCH`` request body would specify the new value, as follows:  ::  { \"software_config\":{ \"kernels\": [{ 'repository': 'gcr.io/deeplearning-platform-release/pytorch-gpu', 'tag': 'latest' }], } }  Currently, only the following fields can be updated:  -  ``software_config.kernels`` -  ``software_config.post_startup_script`` -  ``software_config.custom_gpu_driver_path`` -  ``software_config.idle_shutdown`` -  ``software_config.idle_shutdown_timeout`` -  ``software_config.disable_terminal``"
        },
        "request_id": {
          "type": "str",
          "description": "Idempotent request UUID."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RefreshRuntimeTokenInternalRequest",
      "docstring": "Request for getting a new access token.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtime_id}``"
        },
        "vm_id": {
          "type": "str",
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity"
        }
      }
    },
    {
      "type": "request_class",
      "name": "RefreshRuntimeTokenInternalResponse",
      "docstring": "Response with a new access token.\n\nAttributes:\n    access_token (str):\n        The OAuth 2.0 access token.\n    expire_time (google.protobuf.timestamp_pb2.Timestamp):\n        Output only. Token expiration time.",
      "attributes": {
        "access_token": {
          "type": "str",
          "description": "The OAuth 2.0 access token."
        },
        "expire_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Token expiration time."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DiagnoseRuntimeRequest",
      "docstring": "Request for creating a notebook instance diagnostic file.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/runtimes/{runtimes_id}``\n    diagnostic_config (google.cloud.notebooks_v1.types.DiagnosticConfig):\n        Required. Defines flags that are used to run\n        the diagnostic tool",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/runtimes/{runtimes_id}``"
        },
        "diagnostic_config": {
          "type": "google.cloud.notebooks_v1.types.DiagnosticConfig",
          "description": "Required. Defines flags that are used to run the diagnostic tool"
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\runtime.py": [
    {
      "type": "request_class",
      "name": "Runtime",
      "docstring": "The definition of a Runtime for a managed notebook instance.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Output only. The resource name of the runtime. Format:\n        ``projects/{project}/locations/{location}/runtimes/{runtimeId}``\n    virtual_machine (google.cloud.notebooks_v1.types.VirtualMachine):\n        Use a Compute Engine VM image to start the\n        managed notebook instance.\n\n        This field is a member of `oneof`_ ``runtime_type``.\n    state (google.cloud.notebooks_v1.types.Runtime.State):\n        Output only. Runtime state.\n    health_state (google.cloud.notebooks_v1.types.Runtime.HealthState):\n        Output only. Runtime health_state.\n    access_config (google.cloud.notebooks_v1.types.RuntimeAccessConfig):\n        The config settings for accessing runtime.\n    software_config (google.cloud.notebooks_v1.types.RuntimeSoftwareConfig):\n        The config settings for software inside the\n        r",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. The resource name of the runtime. Format: ``projects/{project}/locations/{location}/runtimes/{runtimeId}``"
        },
        "virtual_machine": {
          "type": "google.cloud.notebooks_v1.types.VirtualMachine",
          "description": "Use a Compute Engine VM image to start the managed notebook instance.  This field is a member of `oneof`_ ``runtime_type``."
        },
        "state": {
          "type": "google.cloud.notebooks_v1.types.Runtime.State",
          "description": "Output only. Runtime state."
        },
        "health_state": {
          "type": "google.cloud.notebooks_v1.types.Runtime.HealthState",
          "description": "Output only. Runtime health_state."
        },
        "access_config": {
          "type": "google.cloud.notebooks_v1.types.RuntimeAccessConfig",
          "description": "The config settings for accessing runtime."
        },
        "software_config": {
          "type": "google.cloud.notebooks_v1.types.RuntimeSoftwareConfig",
          "description": "The config settings for software inside the runtime."
        },
        "metrics": {
          "type": "google.cloud.notebooks_v1.types.RuntimeMetrics",
          "description": "Output only. Contains Runtime daemon metrics such as Service status and JupyterLab stats."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Runtime creation time."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Runtime update time."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RuntimeAcceleratorConfig",
      "docstring": "Definition of the types of hardware accelerators that can be used.\nDefinition of the types of hardware accelerators that can be used.\nSee `Compute Engine\nAcceleratorTypes <https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes>`__.\nExamples:\n\n-  ``nvidia-tesla-k80``\n-  ``nvidia-tesla-p100``\n-  ``nvidia-tesla-v100``\n-  ``nvidia-tesla-p4``\n-  ``nvidia-tesla-t4``\n-  ``nvidia-tesla-a100``\n\nAttributes:\n    type_ (google.cloud.notebooks_v1.types.RuntimeAcceleratorConfig.AcceleratorType):\n        Accelerator model.\n    core_count (int):\n        Count of cores of this accelerator.",
      "attributes": {
        "type_": {
          "type": "google.cloud.notebooks_v1.types.RuntimeAcceleratorConfig.AcceleratorType",
          "description": "Accelerator model."
        },
        "core_count": {
          "type": "int",
          "description": "Count of cores of this accelerator."
        }
      }
    },
    {
      "type": "request_class",
      "name": "EncryptionConfig",
      "docstring": "Represents a custom encryption key configuration that can be\napplied to a resource. This will encrypt all disks in Virtual\nMachine.\n\nAttributes:\n    kms_key (str):\n        The Cloud KMS resource identifier of the customer-managed\n        encryption key used to protect a resource, such as a disks.\n        It has the following format:\n        ``projects/{PROJECT_ID}/locations/{REGION}/keyRings/{KEY_RING_NAME}/cryptoKeys/{KEY_NAME}``",
      "attributes": {
        "kms_key": {
          "type": "str",
          "description": "The Cloud KMS resource identifier of the customer-managed encryption key used to protect a resource, such as a disks. It has the following format: ``projects/{PROJECT_ID}/locations/{REGION}/keyRings/{KEY_RING_NAME}/cryptoKeys/{KEY_NAME}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "LocalDisk",
      "docstring": "A Local attached disk resource.\n\nAttributes:\n    auto_delete (bool):\n        Optional. Output only. Specifies whether the\n        disk will be auto-deleted when the instance is\n        deleted (but not when the disk is detached from\n        the instance).\n    boot (bool):\n        Optional. Output only. Indicates that this is\n        a boot disk. The virtual machine will use the\n        first partition of the disk for its root\n        filesystem.\n    device_name (str):\n        Optional. Output only. Specifies a unique device name of\n        your choice that is reflected into the\n        ``/dev/disk/by-id/google-*`` tree of a Linux operating\n        system running within the instance. This name can be used to\n        reference the device for mounting, resizing, and so on, from\n        within the instance.\n\n        If not specified, the server chooses a default device name\n        to apply to this disk, in the form persistent-disk-x, where\n        x is a number assigned by Google Compute Engine. This field\n     ",
      "attributes": {
        "auto_delete": {
          "type": "bool",
          "description": "Optional. Output only. Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance)."
        },
        "boot": {
          "type": "bool",
          "description": "Optional. Output only. Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem."
        },
        "device_name": {
          "type": "str",
          "description": "Optional. Output only. Specifies a unique device name of your choice that is reflected into the ``/dev/disk/by-id/google-*`` tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.  If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks."
        },
        "guest_os_features": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.LocalDisk.RuntimeGuestOsFeature]",
          "description": "Output only. Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. Read  Enabling guest operating system features to see a list of available options."
        },
        "index": {
          "type": "int",
          "description": "Output only. A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number."
        },
        "initialize_params": {
          "type": "google.cloud.notebooks_v1.types.LocalDiskInitializeParams",
          "description": "Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.  This property is mutually exclusive with the source property; you can only define one or the other, but not both."
        },
        "interface": {
          "type": "str",
          "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values:  -  ``NVME`` -  ``SCSI``"
        },
        "kind": {
          "type": "str",
          "description": "Output only. Type of the resource. Always compute#attachedDisk for attached disks."
        },
        "licenses": {
          "type": "MutableSequence[str]",
          "description": "Output only. Any valid publicly visible licenses."
        },
        "mode": {
          "type": "str",
          "description": "The mode in which to attach this disk, either ``READ_WRITE`` or ``READ_ONLY``. If not specified, the default is to attach the disk in ``READ_WRITE`` mode. Valid values:  -  ``READ_ONLY`` -  ``READ_WRITE``"
        },
        "source": {
          "type": "str",
          "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource."
        },
        "type_": {
          "type": "str",
          "description": "Specifies the type of the disk, either ``SCRATCH`` or ``PERSISTENT``. If not specified, the default is ``PERSISTENT``. Valid values:  -  ``PERSISTENT`` -  ``SCRATCH``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "LocalDiskInitializeParams",
      "docstring": "Input only. Specifies the parameters for a new disk that will\nbe created alongside the new instance. Use initialization\nparameters to create boot disks or local SSDs attached to the\nnew runtime.\nThis property is mutually exclusive with the source property;\nyou can only define one or the other, but not both.\n\nAttributes:\n    description (str):\n        Optional. Provide this property when creating\n        the disk.\n    disk_name (str):\n        Optional. Specifies the disk name. If not\n        specified, the default is to use the name of the\n        instance. If the disk with the instance name\n        exists already in the given zone/region, a new\n        name will be automatically generated.\n    disk_size_gb (int):\n        Optional. Specifies the size of the disk in\n        base-2 GB. If not specified, the disk will be\n        the same size as the image (usually 10GB). If\n        specified, the size must be equal to or larger\n        than 10GB. Default 100 GB.\n    disk_type (google.cloud.notebooks_v1.types.Loca",
      "attributes": {
        "description": {
          "type": "str",
          "description": "Optional. Provide this property when creating the disk."
        },
        "disk_name": {
          "type": "str",
          "description": "Optional. Specifies the disk name. If not specified, the default is to use the name of the instance. If the disk with the instance name exists already in the given zone/region, a new name will be automatically generated."
        },
        "disk_size_gb": {
          "type": "int",
          "description": "Optional. Specifies the size of the disk in base-2 GB. If not specified, the disk will be the same size as the image (usually 10GB). If specified, the size must be equal to or larger than 10GB. Default 100 GB."
        },
        "disk_type": {
          "type": "google.cloud.notebooks_v1.types.LocalDiskInitializeParams.DiskType",
          "description": "Input only. The type of the boot disk attached to this instance, defaults to standard persistent disk (``PD_STANDARD``)."
        },
        "labels": {
          "type": "MutableMapping[str, str]",
          "description": "Optional. Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RuntimeAccessConfig",
      "docstring": "Specifies the login configuration for Runtime\n\nAttributes:\n    access_type (google.cloud.notebooks_v1.types.RuntimeAccessConfig.RuntimeAccessType):\n        The type of access mode this instance.\n    runtime_owner (str):\n        The owner of this runtime after creation. Format:\n        ``alias@example.com`` Currently supports one owner only.\n    proxy_uri (str):\n        Output only. The proxy endpoint that is used\n        to access the runtime.",
      "attributes": {
        "access_type": {
          "type": "google.cloud.notebooks_v1.types.RuntimeAccessConfig.RuntimeAccessType",
          "description": "The type of access mode this instance."
        },
        "runtime_owner": {
          "type": "str",
          "description": "The owner of this runtime after creation. Format: ``alias@example.com`` Currently supports one owner only."
        },
        "proxy_uri": {
          "type": "str",
          "description": "Output only. The proxy endpoint that is used to access the runtime."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RuntimeSoftwareConfig",
      "docstring": "Specifies the selection and configuration of software inside the\nruntime. The properties to set on runtime. Properties keys are\nspecified in ``key:value`` format, for example:\n\n-  ``idle_shutdown: true``\n-  ``idle_shutdown_timeout: 180``\n-  ``enable_health_monitoring: true``\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    notebook_upgrade_schedule (str):\n        Cron expression in UTC timezone, used to schedule instance\n        auto upgrade. Please follow the `cron\n        format <https://en.wikipedia.org/wiki/Cron>`__.\n    enable_health_monitoring (bool):\n        Verifies core internal services are running.\n        Default: True\n\n        This field is a member of `oneof`_ ``_enable_health_monitoring``.\n    idle_shutdown (bool):\n        Runtime will automatically shutdown after\n        idle_shutdown_time. Default: True\n\n        This field is a member of `oneof`_ ``_idle_shutdown``.\n    idle_shutdown_timeout (int):\n        Time in mi",
      "attributes": {
        "notebook_upgrade_schedule": {
          "type": "str",
          "description": "Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the `cron format <https://en.wikipedia.org/wiki/Cron>`__."
        },
        "enable_health_monitoring": {
          "type": "bool",
          "description": "Verifies core internal services are running. Default: True  This field is a member of `oneof`_ ``_enable_health_monitoring``."
        },
        "idle_shutdown": {
          "type": "bool",
          "description": "Runtime will automatically shutdown after idle_shutdown_time. Default: True  This field is a member of `oneof`_ ``_idle_shutdown``."
        },
        "idle_shutdown_timeout": {
          "type": "int",
          "description": "Time in minutes to wait before shutting down runtime. Default: 180 minutes"
        },
        "install_gpu_driver": {
          "type": "bool",
          "description": "Install Nvidia Driver automatically. Default: True"
        },
        "custom_gpu_driver_path": {
          "type": "str",
          "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers."
        },
        "post_startup_script": {
          "type": "str",
          "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (``gs://path-to-file/file-name``)."
        },
        "kernels": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.ContainerImage]",
          "description": "Optional. Use a list of container images to use as Kernels in the notebook instance."
        },
        "upgradeable": {
          "type": "bool",
          "description": "Output only. Bool indicating whether an newer image is available in an image family.  This field is a member of `oneof`_ ``_upgradeable``."
        },
        "post_startup_script_behavior": {
          "type": "google.cloud.notebooks_v1.types.RuntimeSoftwareConfig.PostStartupScriptBehavior",
          "description": "Behavior for the post startup script."
        },
        "disable_terminal": {
          "type": "bool",
          "description": "Bool indicating whether JupyterLab terminal will be available or not. Default: False  This field is a member of `oneof`_ ``_disable_terminal``."
        },
        "version": {
          "type": "str",
          "description": "Output only. version of boot image such as M100, from release label of the image.  This field is a member of `oneof`_ ``_version``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RuntimeMetrics",
      "docstring": "Contains runtime daemon metrics, such as OS and kernels and\nsessions stats.\n\nAttributes:\n    system_metrics (MutableMapping[str, str]):\n        Output only. The system metrics.",
      "attributes": {
        "system_metrics": {
          "type": "MutableMapping[str, str]",
          "description": "Output only. The system metrics."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RuntimeShieldedInstanceConfig",
      "docstring": "A set of Shielded Instance options. Check `Images using supported\nShielded VM\nfeatures <https://cloud.google.com/compute/docs/instances/modifying-shielded-vm>`__.\nNot all combinations are valid.\n\nAttributes:\n    enable_secure_boot (bool):\n        Defines whether the instance has Secure Boot\n        enabled.\n        Secure Boot helps ensure that the system only\n        runs authentic software by verifying the digital\n        signature of all boot components, and halting\n        the boot process if signature verification\n        fails. Disabled by default.\n    enable_vtpm (bool):\n        Defines whether the instance has the vTPM\n        enabled. Enabled by default.\n    enable_integrity_monitoring (bool):\n        Defines whether the instance has integrity\n        monitoring enabled.\n        Enables monitoring and attestation of the boot\n        integrity of the instance. The attestation is\n        performed against the integrity policy baseline.\n        This baseline is initially derived from the\n        implici",
      "attributes": {
        "enable_secure_boot": {
          "type": "bool",
          "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default."
        },
        "enable_vtpm": {
          "type": "bool",
          "description": "Defines whether the instance has the vTPM enabled. Enabled by default."
        },
        "enable_integrity_monitoring": {
          "type": "bool",
          "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VirtualMachine",
      "docstring": "Runtime using Virtual Machine for computing.\n\nAttributes:\n    instance_name (str):\n        Output only. The user-friendly name of the\n        Managed Compute Engine instance.\n    instance_id (str):\n        Output only. The unique identifier of the\n        Managed Compute Engine instance.\n    virtual_machine_config (google.cloud.notebooks_v1.types.VirtualMachineConfig):\n        Virtual Machine configuration settings.",
      "attributes": {
        "instance_name": {
          "type": "str",
          "description": "Output only. The user-friendly name of the Managed Compute Engine instance."
        },
        "instance_id": {
          "type": "str",
          "description": "Output only. The unique identifier of the Managed Compute Engine instance."
        },
        "virtual_machine_config": {
          "type": "google.cloud.notebooks_v1.types.VirtualMachineConfig",
          "description": "Virtual Machine configuration settings."
        }
      }
    },
    {
      "type": "request_class",
      "name": "VirtualMachineConfig",
      "docstring": "The config settings for virtual machine.\n\nAttributes:\n    zone (str):\n        Output only. The zone where the virtual machine is located.\n        If using regional request, the notebooks service will pick a\n        location in the corresponding runtime region. On a get\n        request, zone will always be present. Example:\n\n        -  ``us-central1-b``\n    machine_type (str):\n        Required. The Compute Engine machine type used for runtimes.\n        Short name is valid. Examples:\n\n        -  ``n1-standard-2``\n        -  ``e2-standard-8``\n    container_images (MutableSequence[google.cloud.notebooks_v1.types.ContainerImage]):\n        Optional. Use a list of container images to\n        use as Kernels in the notebook instance.\n    data_disk (google.cloud.notebooks_v1.types.LocalDisk):\n        Required. Data disk option configuration\n        settings.\n    encryption_config (google.cloud.notebooks_v1.types.EncryptionConfig):\n        Optional. Encryption settings for virtual\n        machine data disk.\n    shielded",
      "attributes": {
        "zone": {
          "type": "str",
          "description": "Output only. The zone where the virtual machine is located. If using regional request, the notebooks service will pick a location in the corresponding runtime region. On a get request, zone will always be present. Example:  -  ``us-central1-b``"
        },
        "machine_type": {
          "type": "str",
          "description": "Required. The Compute Engine machine type used for runtimes. Short name is valid. Examples:  -  ``n1-standard-2`` -  ``e2-standard-8``"
        },
        "container_images": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.ContainerImage]",
          "description": "Optional. Use a list of container images to use as Kernels in the notebook instance."
        },
        "data_disk": {
          "type": "google.cloud.notebooks_v1.types.LocalDisk",
          "description": "Required. Data disk option configuration settings."
        },
        "encryption_config": {
          "type": "google.cloud.notebooks_v1.types.EncryptionConfig",
          "description": "Optional. Encryption settings for virtual machine data disk."
        },
        "shielded_instance_config": {
          "type": "google.cloud.notebooks_v1.types.RuntimeShieldedInstanceConfig",
          "description": "Optional. Shielded VM Instance configuration settings."
        },
        "accelerator_config": {
          "type": "google.cloud.notebooks_v1.types.RuntimeAcceleratorConfig",
          "description": "Optional. The Compute Engine accelerator configuration for this runtime."
        },
        "network": {
          "type": "str",
          "description": "Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither ``network`` nor ``subnet`` is specified, the \"default\" network of the project is used, if it exists.  A full URL or partial URI. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default`` -  ``projects/[project_id]/global/networks/default``  Runtimes are managed resources inside Google Infrastructure. Runtimes support the following network configurations:  -  Google Managed Network (Network & subnet are empty) -  Consumer Project VPC (network & subnet are required). Requires configuring Private Service Access. -  Shared VPC (network & subnet are required). Requires configuring Private Service Access."
        },
        "subnet": {
          "type": "str",
          "description": "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network.  A full URL or partial URI are valid. Examples:  -  ``https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0`` -  ``projects/[project_id]/regions/us-east1/subnetworks/sub0``"
        },
        "internal_ip_only": {
          "type": "bool",
          "description": "Optional. If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This ``internal_ip_only`` restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses."
        },
        "tags": {
          "type": "MutableSequence[str]",
          "description": "Optional. The Compute Engine tags to add to runtime (see `Tagging instances <https://cloud.google.com/compute/docs/label-or-tag-resources#tags>`__)."
        },
        "guest_attributes": {
          "type": "MutableMapping[str, str]",
          "description": "Output only. The Compute Engine guest attributes. (see `Project and instance guest attributes <https://cloud.google.com/compute/docs/storing-retrieving-metadata#guest_attributes>`__)."
        },
        "metadata": {
          "type": "MutableMapping[str, str]",
          "description": "Optional. The Compute Engine metadata entries to add to virtual machine. (see `Project and instance metadata <https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata>`__)."
        },
        "labels": {
          "type": "MutableMapping[str, str]",
          "description": "Optional. The labels to associate with this runtime. Label **keys** must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to `RFC 1035 <https://www.ietf.org/rfc/rfc1035.txt>`__. No more than 32 labels can be associated with a cluster."
        },
        "nic_type": {
          "type": "google.cloud.notebooks_v1.types.VirtualMachineConfig.NicType",
          "description": "Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet."
        },
        "reserved_ip_range": {
          "type": "str",
          "description": "Optional. Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range *name* if it's assigned.  Example: managed-notebooks-range-c  ::  PEERING_RANGE_NAME_3=managed-notebooks-range-c gcloud compute addresses create $PEERING_RANGE_NAME_3 \\ --global \\ --prefix-length=24 \\ --description=\"Google Cloud Managed Notebooks Range 24 c\" \\ --network=$NETWORK \\ --addresses=192.168.0.0 \\ --purpose=VPC_PEERING  Field value will be: ``managed-notebooks-range-c``"
        },
        "boot_image": {
          "type": "google.cloud.notebooks_v1.types.VirtualMachineConfig.BootImage",
          "description": "Optional. Boot image metadata used for runtime upgradeability."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RuntimeGuestOsFeature",
      "docstring": "Optional. A list of features to enable on the guest operating\nsystem. Applicable only for bootable images. Read `Enabling guest\noperating system\nfeatures <https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features>`__\nto see a list of available options. Guest OS features for boot disk.\n\nAttributes:\n    type_ (str):\n        The ID of a supported feature. Read `Enabling guest\n        operating system\n        features <https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features>`__\n        to see a list of available options.\n\n        Valid values:\n\n        -  ``FEATURE_TYPE_UNSPECIFIED``\n        -  ``MULTI_IP_SUBNET``\n        -  ``SECURE_BOOT``\n        -  ``UEFI_COMPATIBLE``\n        -  ``VIRTIO_SCSI_MULTIQUEUE``\n        -  ``WINDOWS``",
      "attributes": {
        "type_": {
          "type": "str",
          "description": "The ID of a supported feature. Read `Enabling guest operating system features <https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features>`__ to see a list of available options.  Valid values:  -  ``FEATURE_TYPE_UNSPECIFIED`` -  ``MULTI_IP_SUBNET`` -  ``SECURE_BOOT`` -  ``UEFI_COMPATIBLE`` -  ``VIRTIO_SCSI_MULTIQUEUE`` -  ``WINDOWS``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "BootImage",
      "docstring": "Definition of the boot image used by the Runtime.\nUsed to facilitate runtime upgradeability.",
      "attributes": {}
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\schedule.py": [
    {
      "type": "request_class",
      "name": "Schedule",
      "docstring": "The definition of a schedule.\n\nAttributes:\n    name (str):\n        Output only. The name of this schedule. Format:\n        ``projects/{project_id}/locations/{location}/schedules/{schedule_id}``\n    display_name (str):\n        Output only. Display name used for UI purposes. Name can\n        only contain alphanumeric characters, hyphens ``-``, and\n        underscores ``_``.\n    description (str):\n        A brief description of this environment.\n    state (google.cloud.notebooks_v1.types.Schedule.State):\n\n    cron_schedule (str):\n        Cron-tab formatted schedule by which the job will execute.\n        Format: minute, hour, day of month, month, day of week, e.g.\n        ``0 0 * * WED`` = every Wednesday More examples:\n        https://crontab.guru/examples.html\n    time_zone (str):\n        Timezone on which the cron_schedule. The value of this field\n        must be a time zone name from the tz database. TZ Database:\n        https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n\n        Note that some time",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. The name of this schedule. Format: ``projects/{project_id}/locations/{location}/schedules/{schedule_id}``"
        },
        "display_name": {
          "type": "str",
          "description": "Output only. Display name used for UI purposes. Name can only contain alphanumeric characters, hyphens ``-``, and underscores ``_``."
        },
        "description": {
          "type": "str",
          "description": "A brief description of this environment."
        },
        "state": {
          "type": "google.cloud.notebooks_v1.types.Schedule.State",
          "description": ""
        },
        "cron_schedule": {
          "type": "str",
          "description": "Cron-tab formatted schedule by which the job will execute. Format: minute, hour, day of month, month, day of week, e.g. ``0 0 * * WED`` = every Wednesday More examples: https://crontab.guru/examples.html"
        },
        "time_zone": {
          "type": "str",
          "description": "Timezone on which the cron_schedule. The value of this field must be a time zone name from the tz database. TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones  Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string \"utc\". If a time zone is not specified, the default will be in UTC (also known as GMT)."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Time the schedule was created."
        },
        "update_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Output only. Time the schedule was last updated."
        },
        "execution_template": {
          "type": "google.cloud.notebooks_v1.types.ExecutionTemplate",
          "description": "Notebook Execution Template corresponding to this schedule."
        },
        "recent_executions": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.Execution]",
          "description": "Output only. The most recent execution names triggered from this schedule and their corresponding states."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-notebooks\\google\\cloud\\notebooks_v1\\types\\service.py": [
    {
      "type": "request_class",
      "name": "OperationMetadata",
      "docstring": "Represents the metadata of the long-running operation.\n\nAttributes:\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time the operation was created.\n    end_time (google.protobuf.timestamp_pb2.Timestamp):\n        The time the operation finished running.\n    target (str):\n        Server-defined resource path for the target\n        of the operation.\n    verb (str):\n        Name of the verb executed by the operation.\n    status_message (str):\n        Human-readable status of the operation, if\n        any.\n    requested_cancellation (bool):\n        Identifies whether the user has requested cancellation of\n        the operation. Operations that have successfully been\n        cancelled have [Operation.error][] value with a\n        [google.rpc.Status.code][google.rpc.Status.code] of 1,\n        corresponding to ``Code.CANCELLED``.\n    api_version (str):\n        API version used to start the operation.\n    endpoint (str):\n        API endpoint name of this operation.",
      "attributes": {
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The time the operation was created."
        },
        "end_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "The time the operation finished running."
        },
        "target": {
          "type": "str",
          "description": "Server-defined resource path for the target of the operation."
        },
        "verb": {
          "type": "str",
          "description": "Name of the verb executed by the operation."
        },
        "status_message": {
          "type": "str",
          "description": "Human-readable status of the operation, if any."
        },
        "requested_cancellation": {
          "type": "bool",
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to ``Code.CANCELLED``."
        },
        "api_version": {
          "type": "str",
          "description": "API version used to start the operation."
        },
        "endpoint": {
          "type": "str",
          "description": "API endpoint name of this operation."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListInstancesRequest",
      "docstring": "Request for listing notebook instances.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``"
        },
        "page_size": {
          "type": "int",
          "description": "Maximum return size of the list call."
        },
        "page_token": {
          "type": "str",
          "description": "A previous returned page token that can be used to continue listing from the last result."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListInstancesResponse",
      "docstring": "Response for listing notebook instances.\n\nAttributes:\n    instances (MutableSequence[google.cloud.notebooks_v1.types.Instance]):\n        A list of returned instances.\n    next_page_token (str):\n        Page token that can be used to continue\n        listing from the last result in the next list\n        call.\n    unreachable (MutableSequence[str]):\n        Locations that could not be reached. For example,\n        ``['us-west1-a', 'us-central1-b']``. A ListInstancesResponse\n        will only contain either instances or unreachables,",
      "attributes": {
        "instances": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.Instance]",
          "description": "A list of returned instances."
        },
        "next_page_token": {
          "type": "str",
          "description": "Page token that can be used to continue listing from the last result in the next list call."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Locations that could not be reached. For example, ``['us-west1-a', 'us-central1-b']``. A ListInstancesResponse will only contain either instances or unreachables,"
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetInstanceRequest",
      "docstring": "Request for getting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateInstanceRequest",
      "docstring": "Request for creating a notebook instance.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    instance_id (str):\n        Required. User-defined unique ID of this\n        instance.\n    instance (google.cloud.notebooks_v1.types.Instance):\n        Required. The instance to be created.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``"
        },
        "instance_id": {
          "type": "str",
          "description": "Required. User-defined unique ID of this instance."
        },
        "instance": {
          "type": "google.cloud.notebooks_v1.types.Instance",
          "description": "Required. The instance to be created."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RegisterInstanceRequest",
      "docstring": "Request for registering a notebook instance.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    instance_id (str):\n        Required. User defined unique ID of this instance. The\n        ``instance_id`` must be 1 to 63 characters long and contain\n        only lowercase letters, numeric characters, and dashes. The\n        first character must be a lowercase letter and the last\n        character cannot be a dash.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``"
        },
        "instance_id": {
          "type": "str",
          "description": "Required. User defined unique ID of this instance. The ``instance_id`` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SetInstanceAcceleratorRequest",
      "docstring": "Request for setting instance accelerator.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    type_ (google.cloud.notebooks_v1.types.Instance.AcceleratorType):\n        Required. Type of this accelerator.\n    core_count (int):\n        Required. Count of cores of this accelerator. Note that not\n        all combinations of ``type`` and ``core_count`` are valid.\n        Check `GPUs on Compute\n        Engine <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__\n        to find a valid combination. TPUs are not supported.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "type_": {
          "type": "google.cloud.notebooks_v1.types.Instance.AcceleratorType",
          "description": "Required. Type of this accelerator."
        },
        "core_count": {
          "type": "int",
          "description": "Required. Count of cores of this accelerator. Note that not all combinations of ``type`` and ``core_count`` are valid. Check `GPUs on Compute Engine <https://cloud.google.com/compute/docs/gpus/#gpus-list>`__ to find a valid combination. TPUs are not supported."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SetInstanceMachineTypeRequest",
      "docstring": "Request for setting instance machine type.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    machine_type (str):\n        Required. The `Compute Engine machine\n        type <https://cloud.google.com/compute/docs/machine-types>`__.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "machine_type": {
          "type": "str",
          "description": "Required. The `Compute Engine machine type <https://cloud.google.com/compute/docs/machine-types>`__."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateInstanceConfigRequest",
      "docstring": "Request for updating instance configurations.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    config (google.cloud.notebooks_v1.types.InstanceConfig):\n        The instance configurations to be updated.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "config": {
          "type": "google.cloud.notebooks_v1.types.InstanceConfig",
          "description": "The instance configurations to be updated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SetInstanceLabelsRequest",
      "docstring": "Request for setting instance labels.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    labels (MutableMapping[str, str]):\n        Labels to apply to this instance.\n        These can be later modified by the setLabels\n        method",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "labels": {
          "type": "MutableMapping[str, str]",
          "description": "Labels to apply to this instance. These can be later modified by the setLabels method"
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateInstanceMetadataItemsRequest",
      "docstring": "Request for adding/changing metadata items  for an instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    items (MutableMapping[str, str]):\n        Metadata items to add/update for the\n        instance.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "items": {
          "type": "MutableMapping[str, str]",
          "description": "Metadata items to add/update for the instance."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateInstanceMetadataItemsResponse",
      "docstring": "Response for adding/changing metadata items for an instance.\n\nAttributes:\n    items (MutableMapping[str, str]):\n        Map of items that were added/updated to/in\n        the metadata.",
      "attributes": {
        "items": {
          "type": "MutableMapping[str, str]",
          "description": "Map of items that were added/updated to/in the metadata."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateShieldedInstanceConfigRequest",
      "docstring": "Request for updating the Shielded Instance config for a\nnotebook instance. You can only use this method on a stopped\ninstance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    shielded_instance_config (google.cloud.notebooks_v1.types.Instance.ShieldedInstanceConfig):\n        ShieldedInstance configuration to be updated.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "shielded_instance_config": {
          "type": "google.cloud.notebooks_v1.types.Instance.ShieldedInstanceConfig",
          "description": "ShieldedInstance configuration to be updated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteInstanceRequest",
      "docstring": "Request for deleting a notebook instance.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "StartInstanceRequest",
      "docstring": "Request for starting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "StopInstanceRequest",
      "docstring": "Request for stopping a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ResetInstanceRequest",
      "docstring": "Request for resetting a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ReportInstanceInfoRequest",
      "docstring": "Request for notebook instances to report information to\nNotebooks API.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity\n    metadata (MutableMapping[str, str]):\n        The metadata reported to Notebooks API. This\n        will be merged to the instance metadata store",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "vm_id": {
          "type": "str",
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity"
        },
        "metadata": {
          "type": "MutableMapping[str, str]",
          "description": "The metadata reported to Notebooks API. This will be merged to the instance metadata store"
        }
      }
    },
    {
      "type": "request_class",
      "name": "IsInstanceUpgradeableRequest",
      "docstring": "Request for checking if a notebook instance is upgradeable.\n\nAttributes:\n    notebook_instance (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    type_ (google.cloud.notebooks_v1.types.UpgradeType):\n        Optional. The optional UpgradeType. Setting\n        this field will search for additional compute\n        images to upgrade this instance.",
      "attributes": {
        "notebook_instance": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "type_": {
          "type": "google.cloud.notebooks_v1.types.UpgradeType",
          "description": "Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance."
        }
      }
    },
    {
      "type": "request_class",
      "name": "IsInstanceUpgradeableResponse",
      "docstring": "Response for checking if a notebook instance is upgradeable.\n\nAttributes:\n    upgradeable (bool):\n        If an instance is upgradeable.\n    upgrade_version (str):\n        The version this instance will be upgraded to\n        if calling the upgrade endpoint. This field will\n        only be populated if field upgradeable is true.\n    upgrade_info (str):\n        Additional information about upgrade.\n    upgrade_image (str):\n        The new image self link this instance will be\n        upgraded to if calling the upgrade endpoint.\n        This field will only be populated if field\n        upgradeable is true.",
      "attributes": {
        "upgradeable": {
          "type": "bool",
          "description": "If an instance is upgradeable."
        },
        "upgrade_version": {
          "type": "str",
          "description": "The version this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true."
        },
        "upgrade_info": {
          "type": "str",
          "description": "Additional information about upgrade."
        },
        "upgrade_image": {
          "type": "str",
          "description": "The new image self link this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetInstanceHealthRequest",
      "docstring": "Request for checking if a notebook instance is healthy.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetInstanceHealthResponse",
      "docstring": "Response for checking if a notebook instance is healthy.\n\nAttributes:\n    health_state (google.cloud.notebooks_v1.types.GetInstanceHealthResponse.HealthState):\n        Output only. Runtime health_state.\n    health_info (MutableMapping[str, str]):\n        Output only. Additional information about instance health.\n        Example: healthInfo\": { \"docker_proxy_agent_status\": \"1\",\n        \"docker_status\": \"1\", \"jupyterlab_api_status\": \"-1\",\n        \"jupyterlab_status\": \"-1\", \"updated\": \"2020-10-18\n        09:40:03.573409\" }",
      "attributes": {
        "health_state": {
          "type": "google.cloud.notebooks_v1.types.GetInstanceHealthResponse.HealthState",
          "description": "Output only. Runtime health_state."
        },
        "health_info": {
          "type": "MutableMapping[str, str]",
          "description": "Output only. Additional information about instance health. Example: healthInfo\": { \"docker_proxy_agent_status\": \"1\", \"docker_status\": \"1\", \"jupyterlab_api_status\": \"-1\", \"jupyterlab_status\": \"-1\", \"updated\": \"2020-10-18 09:40:03.573409\" }"
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpgradeInstanceRequest",
      "docstring": "Request for upgrading a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    type_ (google.cloud.notebooks_v1.types.UpgradeType):\n        Optional. The optional UpgradeType. Setting\n        this field will search for additional compute\n        images to upgrade this instance.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "type_": {
          "type": "google.cloud.notebooks_v1.types.UpgradeType",
          "description": "Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance."
        }
      }
    },
    {
      "type": "request_class",
      "name": "RollbackInstanceRequest",
      "docstring": "Request for rollbacking a notebook instance\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    target_snapshot (str):\n        Required. The snapshot for rollback. Example:\n        ``projects/test-project/global/snapshots/krwlzipynril``.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "target_snapshot": {
          "type": "str",
          "description": "Required. The snapshot for rollback. Example: ``projects/test-project/global/snapshots/krwlzipynril``."
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpgradeInstanceInternalRequest",
      "docstring": "Request for upgrading a notebook instance from within the VM\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    vm_id (str):\n        Required. The VM hardware token for\n        authenticating the VM.\n        https://cloud.google.com/compute/docs/instances/verifying-instance-identity\n    type_ (google.cloud.notebooks_v1.types.UpgradeType):\n        Optional. The optional UpgradeType. Setting\n        this field will search for additional compute\n        images to upgrade this instance.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "vm_id": {
          "type": "str",
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity"
        },
        "type_": {
          "type": "google.cloud.notebooks_v1.types.UpgradeType",
          "description": "Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListEnvironmentsRequest",
      "docstring": "Request for listing environments.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}``"
        },
        "page_size": {
          "type": "int",
          "description": "Maximum return size of the list call."
        },
        "page_token": {
          "type": "str",
          "description": "A previous returned page token that can be used to continue listing from the last result."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DiagnoseInstanceRequest",
      "docstring": "Request for creating a notebook instance diagnostic file.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/instances/{instance_id}``\n    diagnostic_config (google.cloud.notebooks_v1.types.DiagnosticConfig):\n        Required. Defines flags that are used to run\n        the diagnostic tool",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/instances/{instance_id}``"
        },
        "diagnostic_config": {
          "type": "google.cloud.notebooks_v1.types.DiagnosticConfig",
          "description": "Required. Defines flags that are used to run the diagnostic tool"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListEnvironmentsResponse",
      "docstring": "Response for listing environments.\n\nAttributes:\n    environments (MutableSequence[google.cloud.notebooks_v1.types.Environment]):\n        A list of returned environments.\n    next_page_token (str):\n        A page token that can be used to continue\n        listing from the last result in the next list\n        call.\n    unreachable (MutableSequence[str]):\n        Locations that could not be reached.",
      "attributes": {
        "environments": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.Environment]",
          "description": "A list of returned environments."
        },
        "next_page_token": {
          "type": "str",
          "description": "A page token that can be used to continue listing from the last result in the next list call."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Locations that could not be reached."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetEnvironmentRequest",
      "docstring": "Request for getting a notebook environment.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/environments/{environment_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateEnvironmentRequest",
      "docstring": "Request for creating a notebook environment.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}``\n    environment_id (str):\n        Required. User-defined unique ID of this environment. The\n        ``environment_id`` must be 1 to 63 characters long and\n        contain only lowercase letters, numeric characters, and\n        dashes. The first character must be a lowercase letter and\n        the last character cannot be a dash.\n    environment (google.cloud.notebooks_v1.types.Environment):\n        Required. The environment to be created.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}``"
        },
        "environment_id": {
          "type": "str",
          "description": "Required. User-defined unique ID of this environment. The ``environment_id`` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash."
        },
        "environment": {
          "type": "google.cloud.notebooks_v1.types.Environment",
          "description": "Required. The environment to be created."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteEnvironmentRequest",
      "docstring": "Request for deleting a notebook environment.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/environments/{environment_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/environments/{environment_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListSchedulesRequest",
      "docstring": "Request for listing scheduled notebook job.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.\n    filter (str):\n        Filter applied to resulting schedules.\n    order_by (str):\n        Field to order results by.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``"
        },
        "page_size": {
          "type": "int",
          "description": "Maximum return size of the list call."
        },
        "page_token": {
          "type": "str",
          "description": "A previous returned page token that can be used to continue listing from the last result."
        },
        "filter": {
          "type": "str",
          "description": "Filter applied to resulting schedules."
        },
        "order_by": {
          "type": "str",
          "description": "Field to order results by."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListSchedulesResponse",
      "docstring": "Response for listing scheduled notebook job.\n\nAttributes:\n    schedules (MutableSequence[google.cloud.notebooks_v1.types.Schedule]):\n        A list of returned instances.\n    next_page_token (str):\n        Page token that can be used to continue\n        listing from the last result in the next list\n        call.\n    unreachable (MutableSequence[str]):\n        Schedules that could not be reached. For example:\n\n        ::\n\n            ['projects/{project_id}/location/{location}/schedules/monthly_digest',\n             'projects/{project_id}/location/{location}/schedules/weekly_sentiment']",
      "attributes": {
        "schedules": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.Schedule]",
          "description": "A list of returned instances."
        },
        "next_page_token": {
          "type": "str",
          "description": "Page token that can be used to continue listing from the last result in the next list call."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Schedules that could not be reached. For example:  ::  ['projects/{project_id}/location/{location}/schedules/monthly_digest', 'projects/{project_id}/location/{location}/schedules/weekly_sentiment']"
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetScheduleRequest",
      "docstring": "Request for getting scheduled notebook.\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/schedules/{schedule_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/schedules/{schedule_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteScheduleRequest",
      "docstring": "Request for deleting an Schedule\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/schedules/{schedule_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/schedules/{schedule_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateScheduleRequest",
      "docstring": "Request for created scheduled notebooks\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    schedule_id (str):\n        Required. User-defined unique ID of this\n        schedule.\n    schedule (google.cloud.notebooks_v1.types.Schedule):\n        Required. The schedule to be created.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``"
        },
        "schedule_id": {
          "type": "str",
          "description": "Required. User-defined unique ID of this schedule."
        },
        "schedule": {
          "type": "google.cloud.notebooks_v1.types.Schedule",
          "description": "Required. The schedule to be created."
        }
      }
    },
    {
      "type": "request_class",
      "name": "TriggerScheduleRequest",
      "docstring": "Request for created scheduled notebooks\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}/schedules/{schedule_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}/schedules/{schedule_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListExecutionsRequest",
      "docstring": "Request for listing scheduled notebook executions.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    page_size (int):\n        Maximum return size of the list call.\n    page_token (str):\n        A previous returned page token that can be\n        used to continue listing from the last result.\n    filter (str):\n        Filter applied to resulting executions. Currently only\n        supports filtering executions by a specified\n        ``schedule_id``. Format: ``schedule_id=<Schedule_ID>``\n    order_by (str):\n        Sort by field.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``"
        },
        "page_size": {
          "type": "int",
          "description": "Maximum return size of the list call."
        },
        "page_token": {
          "type": "str",
          "description": "A previous returned page token that can be used to continue listing from the last result."
        },
        "filter": {
          "type": "str",
          "description": "Filter applied to resulting executions. Currently only supports filtering executions by a specified ``schedule_id``. Format: ``schedule_id=<Schedule_ID>``"
        },
        "order_by": {
          "type": "str",
          "description": "Sort by field."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ListExecutionsResponse",
      "docstring": "Response for listing scheduled notebook executions\n\nAttributes:\n    executions (MutableSequence[google.cloud.notebooks_v1.types.Execution]):\n        A list of returned instances.\n    next_page_token (str):\n        Page token that can be used to continue\n        listing from the last result in the next list\n        call.\n    unreachable (MutableSequence[str]):\n        Executions IDs that could not be reached. For example:\n\n        ::\n\n            ['projects/{project_id}/location/{location}/executions/imagenet_test1',\n             'projects/{project_id}/location/{location}/executions/classifier_train1']",
      "attributes": {
        "executions": {
          "type": "MutableSequence[google.cloud.notebooks_v1.types.Execution]",
          "description": "A list of returned instances."
        },
        "next_page_token": {
          "type": "str",
          "description": "Page token that can be used to continue listing from the last result in the next list call."
        },
        "unreachable": {
          "type": "MutableSequence[str]",
          "description": "Executions IDs that could not be reached. For example:  ::  ['projects/{project_id}/location/{location}/executions/imagenet_test1', 'projects/{project_id}/location/{location}/executions/classifier_train1']"
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetExecutionRequest",
      "docstring": "Request for getting scheduled notebook execution\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/executions/{execution_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/executions/{execution_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "DeleteExecutionRequest",
      "docstring": "Request for deleting a scheduled notebook execution\n\nAttributes:\n    name (str):\n        Required. Format:\n        ``projects/{project_id}/locations/{location}/executions/{execution_id}``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. Format: ``projects/{project_id}/locations/{location}/executions/{execution_id}``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateExecutionRequest",
      "docstring": "Request to create notebook execution\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``parent=projects/{project_id}/locations/{location}``\n    execution_id (str):\n        Required. User-defined unique ID of this\n        execution.\n    execution (google.cloud.notebooks_v1.types.Execution):\n        Required. The execution to be created.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. Format: ``parent=projects/{project_id}/locations/{location}``"
        },
        "execution_id": {
          "type": "str",
          "description": "Required. User-defined unique ID of this execution."
        },
        "execution": {
          "type": "google.cloud.notebooks_v1.types.Execution",
          "description": "Required. The execution to be created."
        }
      }
    }
  ]
}