{
  "Parallelstore": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_instances",
          "description": "Lists all instances in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import parallelstore_v1\n\n    async def sample_list_instances():\n        # Create a client\n        client = parallelstore_v1.ParallelstoreAsyncClient()\n\n        # Initialize request argument(s)\n        request = parallelstore_v1.ListInstancesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_instances(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Opti",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location for which to retrieve instance information, in the format ``projects/{project_id}/locations/{location}``.  To retrieve instance information for all locations, use \"-\" as the value of ``{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.parallelstore_v1.services.parallelstore.pagers.ListInstancesAsyncPager: Response from [ListInstances][google.cloud.parallelstore.v1.Parallelstore.ListInstances].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "parallelstore.ListInstancesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_instance",
          "description": "Gets details of a single instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import parallelstore_v1\n\n    async def sample_get_instance():\n        # Create a client\n        client = parallelstore_v1.ParallelstoreAsyncClient()\n\n        # Initialize request argument(s)\n        request = parallelstore_v1.GetInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_instance(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.parallelstore_v1.types.GetInstanceRequest, dict]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The instance resource name, in the format ``projects/{project_id}/locations/{location}/instances/{instance_id}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.parallelstore_v1.types.Instance: A Parallelstore instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "parallelstore.GetInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_instance",
          "description": "Creates a Parallelstore instance in a given project\nand location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import parallelstore_v1\n\n    async def sample_create_instance():\n        # Create a client\n        client = parallelstore_v1.ParallelstoreAsyncClient()\n\n        # Initialize request argument(s)\n        instance = parallelstore_v1.Instance()\n        instance.capacity_gib = 1247\n\n        request = parallelstore_v1.CreateInstanceRequest(\n            parent=\"parent_value\",\n            instance_id=\"instance_id_value\",\n            instance=instance,\n        )\n\n        # Make the request\n        ope",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The instance's project and location, in the format ``projects/{project}/locations/{location}``. Locations map to Google Cloud zones; for example, ``us-west1-b``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "instance": {
                "type": "google.cloud.parallelstore_v1.types.Instance",
                "description": "Required. The instance to create. This corresponds to the ``instance`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "instance_id": {
                "type": "str",
                "description": "Required. The name of the Parallelstore instance.  -  Must contain only lowercase letters, numbers, and hyphens. -  Must start with a letter. -  Must be between 1-63 characters. -  Must end with a number or a letter. -  Must be unique within the customer project / location  This corresponds to the ``instance_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.parallelstore_v1.types.Instance` A Parallelstore instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "instance",
              "instance_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "parallelstore.CreateInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_instance",
          "description": "Updates the parameters of a single instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import parallelstore_v1\n\n    async def sample_update_instance():\n        # Create a client\n        client = parallelstore_v1.ParallelstoreAsyncClient()\n\n        # Initialize request argument(s)\n        instance = parallelstore_v1.Instance()\n        instance.capacity_gib = 1247\n\n        request = parallelstore_v1.UpdateInstanceRequest(\n            instance=instance,\n        )\n\n        # Make the request\n        operation = client.update_instance(request=request)\n\n        print(\"Waiting for operation to complete...",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "instance": {
                "type": "google.cloud.parallelstore_v1.types.Instance",
                "description": "Required. The instance to update. This corresponds to the ``instance`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Mask of fields to update. Field mask is used to specify the fields to be overwritten in the Instance resource by the update. At least one path must be supplied in this field. The fields specified in the update_mask are relative to the resource, not the full request.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.parallelstore_v1.types.Instance` A Parallelstore instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "instance",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "parallelstore.UpdateInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_instance",
          "description": "Deletes a single instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import parallelstore_v1\n\n    async def sample_delete_instance():\n        # Create a client\n        client = parallelstore_v1.ParallelstoreAsyncClient()\n\n        # Initialize request argument(s)\n        request = parallelstore_v1.DeleteInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "parallelstore.DeleteInstanceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_data",
          "description": "Copies data from Cloud Storage to Parallelstore.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import parallelstore_v1\n\n    async def sample_import_data():\n        # Create a client\n        client = parallelstore_v1.ParallelstoreAsyncClient()\n\n        # Initialize request argument(s)\n        source_gcs_bucket = parallelstore_v1.SourceGcsBucket()\n        source_gcs_bucket.uri = \"uri_value\"\n\n        request = parallelstore_v1.ImportDataRequest(\n            source_gcs_bucket=source_gcs_bucket,\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.import_data(reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "parallelstore.ImportDataRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_data",
          "description": "Copies data from Parallelstore to Cloud Storage.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import parallelstore_v1\n\n    async def sample_export_data():\n        # Create a client\n        client = parallelstore_v1.ParallelstoreAsyncClient()\n\n        # Initialize request argument(s)\n        destination_gcs_bucket = parallelstore_v1.DestinationGcsBucket()\n        destination_gcs_bucket.uri = \"uri_value\"\n\n        request = parallelstore_v1.ExportDataRequest(\n            destination_gcs_bucket=destination_gcs_bucket,\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation =",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "parallelstore.ExportDataRequest"
          ]
        }
      }
    ]
  }
}