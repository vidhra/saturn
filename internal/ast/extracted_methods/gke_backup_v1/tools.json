{
  "BackupForGKE": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_backup_plan",
          "description": "Creates a new BackupPlan in a given location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_create_backup_plan():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        backup_plan = gke_backup_v1.BackupPlan()\n        backup_plan.cluster = \"cluster_value\"\n\n        request = gke_backup_v1.CreateBackupPlanRequest(\n            parent=\"parent_value\",\n            backup_plan=backup_plan,\n            backup_plan_id=\"backup_plan_id_value\",\n        )\n\n        # Make the request\n        opera",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location within which to create the BackupPlan. Format: ``projects/*/locations/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "backup_plan": {
                "type": "google.cloud.gke_backup_v1.types.BackupPlan",
                "description": "Required. The BackupPlan resource object to create.  This corresponds to the ``backup_plan`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "backup_plan_id": {
                "type": "str",
                "description": "Required. The client-provided short name for the BackupPlan resource. This name must:  - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of BackupPlans in this location  This corresponds to the ``backup_plan_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gke_backup_v1.types.BackupPlan` Defines the configuration and scheduling for a \"line\" of Backups."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "backup_plan",
              "backup_plan_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_backup_plans",
          "description": "Lists BackupPlans in a given location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_list_backup_plans():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.ListBackupPlansRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_backup_plans(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[googl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location that contains the BackupPlans to list. Format: ``projects/*/locations/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListBackupPlansAsyncPager: Response message for ListBackupPlans.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListBackupPlansAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_backup_plan",
          "description": "Retrieve the details of a single BackupPlan.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_get_backup_plan():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.GetBackupPlanRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_backup_plan(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gke_backup_v1.types.GetBackupPlanRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Fully qualified BackupPlan name. Format: ``projects/*/locations/*/backupPlans/*``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.types.BackupPlan: Defines the configuration and scheduling for a \"line\" of Backups."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.types.BackupPlan"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_backup_plan",
          "description": "Update a BackupPlan.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_update_backup_plan():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        backup_plan = gke_backup_v1.BackupPlan()\n        backup_plan.cluster = \"cluster_value\"\n\n        request = gke_backup_v1.UpdateBackupPlanRequest(\n            backup_plan=backup_plan,\n        )\n\n        # Make the request\n        operation = client.update_backup_plan(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "backup_plan": {
                "type": "google.cloud.gke_backup_v1.types.BackupPlan",
                "description": "Required. A new version of the BackupPlan resource that contains updated fields. This may be sparsely populated if an ``update_mask`` is provided.  This corresponds to the ``backup_plan`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. This is used to specify the fields to be overwritten in the BackupPlan targeted for update. The values for each of these updated fields will be taken from the ``backup_plan`` provided with this request. Field names are relative to the root of the resource (e.g., ``description``, ``backup_config.include_volume_data``, etc.) If no ``update_mask`` is provided, all fields in ``backup_plan`` will be written to the target BackupPlan resource. Note that OUTPUT_ONLY and IMMUTABLE fields in ``backup_plan`` are ignored and are not used to update the target BackupPlan.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gke_backup_v1.types.BackupPlan` Defines the configuration and scheduling for a \"line\" of Backups."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "backup_plan",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_backup_plan",
          "description": "Deletes an existing BackupPlan.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_delete_backup_plan():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.DeleteBackupPlanRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_backup_plan(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Fully qualified BackupPlan name. Format: ``projects/*/locations/*/backupPlans/*``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_backup",
          "description": "Creates a Backup for the given BackupPlan.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_create_backup():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.CreateBackupRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_backup(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The BackupPlan within which to create the Backup. Format: ``projects/*/locations/*/backupPlans/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "backup": {
                "type": "google.cloud.gke_backup_v1.types.Backup",
                "description": "Optional. The Backup resource to create.  This corresponds to the ``backup`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "backup_id": {
                "type": "str",
                "description": "Optional. The client-provided short name for the Backup resource. This name must:  - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of Backups in this BackupPlan  This corresponds to the ``backup_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gke_backup_v1.types.Backup` Represents a request to perform a single point-in-time capture of some portion of the state of a GKE cluster, the record of the backup operation itself, and an anchor for the underlying artifacts that comprise the Backup (the config backup and VolumeBackups)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "backup",
              "backup_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_backups",
          "description": "Lists the Backups for a given BackupPlan.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_list_backups():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.ListBackupsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_backups(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gke",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The BackupPlan that contains the Backups to list. Format: ``projects/*/locations/*/backupPlans/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListBackupsAsyncPager: Response message for ListBackups.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListBackupsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_backup",
          "description": "Retrieve the details of a single Backup.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_get_backup():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.GetBackupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_backup(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gke_backup_v1.types.GetBackupRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Full name of the Backup resource. Format: ``projects/*/locations/*/backupPlans/*/backups/*``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.types.Backup: Represents a request to perform a single point-in-time capture of some portion of the state of a GKE cluster, the record of the backup operation itself, and an anchor for the underlying artifacts that comprise the Backup (the config backup and VolumeBackups)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.types.Backup"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_backup",
          "description": "Update a Backup.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_update_backup():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        backup = gke_backup_v1.Backup()\n        backup.all_namespaces = True\n\n        request = gke_backup_v1.UpdateBackupRequest(\n            backup=backup,\n        )\n\n        # Make the request\n        operation = client.update_backup(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "backup": {
                "type": "google.cloud.gke_backup_v1.types.Backup",
                "description": "Required. A new version of the Backup resource that contains updated fields. This may be sparsely populated if an ``update_mask`` is provided.  This corresponds to the ``backup`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. This is used to specify the fields to be overwritten in the Backup targeted for update. The values for each of these updated fields will be taken from the ``backup_plan`` provided with this request. Field names are relative to the root of the resource. If no ``update_mask`` is provided, all fields in ``backup`` will be written to the target Backup resource. Note that OUTPUT_ONLY and IMMUTABLE fields in ``backup`` are ignored and are not used to update the target Backup.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gke_backup_v1.types.Backup` Represents a request to perform a single point-in-time capture of some portion of the state of a GKE cluster, the record of the backup operation itself, and an anchor for the underlying artifacts that comprise the Backup (the config backup and VolumeBackups)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "backup",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_backup",
          "description": "Deletes an existing Backup.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_delete_backup():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.DeleteBackupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_backup(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the Backup resource. Format: ``projects/*/locations/*/backupPlans/*/backups/*``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_volume_backups",
          "description": "Lists the VolumeBackups for a given Backup.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_list_volume_backups():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.ListVolumeBackupsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_volume_backups(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The Backup that contains the VolumeBackups to list. Format: ``projects/*/locations/*/backupPlans/*/backups/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListVolumeBackupsAsyncPager: Response message for ListVolumeBackups. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListVolumeBackupsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_volume_backup",
          "description": "Retrieve the details of a single VolumeBackup.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_get_volume_backup():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.GetVolumeBackupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_volume_backup(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gke_backup_v1.types.GetVolumeBac",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Full name of the VolumeBackup resource. Format: ``projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.types.VolumeBackup: Represents the backup of a specific persistent volume as a component of a Backup - both the record of the operation and a pointer to the underlying storage-specific artifacts."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.types.VolumeBackup"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_restore_plan",
          "description": "Creates a new RestorePlan in a given location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_create_restore_plan():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        restore_plan = gke_backup_v1.RestorePlan()\n        restore_plan.backup_plan = \"backup_plan_value\"\n        restore_plan.cluster = \"cluster_value\"\n        restore_plan.restore_config.all_namespaces = True\n\n        request = gke_backup_v1.CreateRestorePlanRequest(\n            parent=\"parent_value\",\n            restore_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location within which to create the RestorePlan. Format: ``projects/*/locations/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "restore_plan": {
                "type": "google.cloud.gke_backup_v1.types.RestorePlan",
                "description": "Required. The RestorePlan resource object to create.  This corresponds to the ``restore_plan`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "restore_plan_id": {
                "type": "str",
                "description": "Required. The client-provided short name for the RestorePlan resource. This name must:  - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of RestorePlans in this location  This corresponds to the ``restore_plan_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gke_backup_v1.types.RestorePlan` The configuration of a potential series of Restore operations to be performed against Backups belong to a particular BackupPlan."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "restore_plan",
              "restore_plan_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_restore_plans",
          "description": "Lists RestorePlans in a given location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_list_restore_plans():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.ListRestorePlansRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_restore_plans(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[g",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location that contains the RestorePlans to list. Format: ``projects/*/locations/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListRestorePlansAsyncPager: Response message for ListRestorePlans. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListRestorePlansAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_restore_plan",
          "description": "Retrieve the details of a single RestorePlan.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_get_restore_plan():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.GetRestorePlanRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_restore_plan(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gke_backup_v1.types.GetRestorePlanRe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Fully qualified RestorePlan name. Format: ``projects/*/locations/*/restorePlans/*``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.types.RestorePlan: The configuration of a potential series of Restore operations to be performed against Backups belong to a particular BackupPlan."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.types.RestorePlan"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_restore_plan",
          "description": "Update a RestorePlan.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_update_restore_plan():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        restore_plan = gke_backup_v1.RestorePlan()\n        restore_plan.backup_plan = \"backup_plan_value\"\n        restore_plan.cluster = \"cluster_value\"\n        restore_plan.restore_config.all_namespaces = True\n\n        request = gke_backup_v1.UpdateRestorePlanRequest(\n            restore_plan=restore_plan,\n        )\n\n        # Make the request\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "restore_plan": {
                "type": "google.cloud.gke_backup_v1.types.RestorePlan",
                "description": "Required. A new version of the RestorePlan resource that contains updated fields. This may be sparsely populated if an ``update_mask`` is provided.  This corresponds to the ``restore_plan`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. This is used to specify the fields to be overwritten in the RestorePlan targeted for update. The values for each of these updated fields will be taken from the ``restore_plan`` provided with this request. Field names are relative to the root of the resource. If no ``update_mask`` is provided, all fields in ``restore_plan`` will be written to the target RestorePlan resource. Note that OUTPUT_ONLY and IMMUTABLE fields in ``restore_plan`` are ignored and are not used to update the target RestorePlan.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gke_backup_v1.types.RestorePlan` The configuration of a potential series of Restore operations to be performed against Backups belong to a particular BackupPlan."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "restore_plan",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_restore_plan",
          "description": "Deletes an existing RestorePlan.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_delete_restore_plan():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.DeleteRestorePlanRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_restore_plan(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Fully qualified RestorePlan name. Format: ``projects/*/locations/*/restorePlans/*``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_restore",
          "description": "Creates a new Restore for the given RestorePlan.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_create_restore():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        restore = gke_backup_v1.Restore()\n        restore.backup = \"backup_value\"\n\n        request = gke_backup_v1.CreateRestoreRequest(\n            parent=\"parent_value\",\n            restore=restore,\n            restore_id=\"restore_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_restore(requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The RestorePlan within which to create the Restore. Format: ``projects/*/locations/*/restorePlans/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "restore": {
                "type": "google.cloud.gke_backup_v1.types.Restore",
                "description": "Required. The restore resource to create.  This corresponds to the ``restore`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "restore_id": {
                "type": "str",
                "description": "Required. The client-provided short name for the Restore resource. This name must:  - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of Restores in this RestorePlan.  This corresponds to the ``restore_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gke_backup_v1.types.Restore` Represents both a request to Restore some portion of a Backup into a target GKE cluster and a record of the restore operation itself."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "restore",
              "restore_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_restores",
          "description": "Lists the Restores for a given RestorePlan.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_list_restores():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.ListRestoresRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_restores(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.clou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The RestorePlan that contains the Restores to list. Format: ``projects/*/locations/*/restorePlans/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListRestoresAsyncPager: Response message for ListRestores.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListRestoresAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_restore",
          "description": "Retrieves the details of a single Restore.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_get_restore():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.GetRestoreRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_restore(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gke_backup_v1.types.GetRestoreRequest, dict]]):\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the restore resource. Format: ``projects/*/locations/*/restorePlans/*/restores/*``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.types.Restore: Represents both a request to Restore some portion of a Backup into a target GKE cluster and a record of the restore operation itself."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.types.Restore"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_restore",
          "description": "Update a Restore.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_update_restore():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        restore = gke_backup_v1.Restore()\n        restore.backup = \"backup_value\"\n\n        request = gke_backup_v1.UpdateRestoreRequest(\n            restore=restore,\n        )\n\n        # Make the request\n        operation = client.update_restore(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "restore": {
                "type": "google.cloud.gke_backup_v1.types.Restore",
                "description": "Required. A new version of the Restore resource that contains updated fields. This may be sparsely populated if an ``update_mask`` is provided.  This corresponds to the ``restore`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. This is used to specify the fields to be overwritten in the Restore targeted for update. The values for each of these updated fields will be taken from the ``restore`` provided with this request. Field names are relative to the root of the resource. If no ``update_mask`` is provided, all fields in ``restore`` will be written to the target Restore resource. Note that OUTPUT_ONLY and IMMUTABLE fields in ``restore`` are ignored and are not used to update the target Restore.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gke_backup_v1.types.Restore` Represents both a request to Restore some portion of a Backup into a target GKE cluster and a record of the restore operation itself."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "restore",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_restore",
          "description": "Deletes an existing Restore.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_delete_restore():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.DeleteRestoreRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_restore(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Full name of the Restore Format: ``projects/*/locations/*/restorePlans/*/restores/*``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_volume_restores",
          "description": "Lists the VolumeRestores for a given Restore.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_list_volume_restores():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.ListVolumeRestoresRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_volume_restores(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Opti",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The Restore that contains the VolumeRestores to list. Format: ``projects/*/locations/*/restorePlans/*/restores/*``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListVolumeRestoresAsyncPager: Response message for ListVolumeRestores. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.services.backup_for_gke.pagers.ListVolumeRestoresAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_volume_restore",
          "description": "Retrieve the details of a single VolumeRestore.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_get_volume_restore():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.GetVolumeRestoreRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_volume_restore(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gke_backup_v1.types.GetVolum",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Full name of the VolumeRestore resource. Format: ``projects/*/locations/*/restorePlans/*/restores/*/volumeRestores/*``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.types.VolumeRestore: Represents the operation of restoring a volume from a VolumeBackup."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.types.VolumeRestore"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_backup_index_download_url",
          "description": "Retrieve the link to the backupIndex.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gke_backup_v1\n\n    async def sample_get_backup_index_download_url():\n        # Create a client\n        client = gke_backup_v1.BackupForGKEAsyncClient()\n\n        # Initialize request argument(s)\n        request = gke_backup_v1.GetBackupIndexDownloadUrlRequest(\n            backup=\"backup_value\",\n        )\n\n        # Make the request\n        response = await client.get_backup_index_download_url(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gke",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "backup": {
                "type": "str",
                "description": "Required. Full name of Backup resource. Format: projects/{project}/locations/{location}/backupPlans/{backup_plan}/backups/{backup}  This corresponds to the ``backup`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gke_backup_v1.types.GetBackupIndexDownloadUrlResponse: Response message for GetBackupIndexDownloadUrl."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "backup",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.gke_backup_v1.types.GetBackupIndexDownloadUrlResponse"
          ]
        }
      }
    ]
  }
}