{
  "TranslationService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "translate_text",
          "description": "Translates input text and returns translated text.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_translate_text():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.TranslateTextRequest(\n            contents=['contents_value1', 'contents_value2'],\n            target_language_code=\"target_language_code_value\",\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.translate_text(request=request)\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Project or location to make a call. Must refer to a caller's project.  Format: ``projects/{project-number-or-id}`` or ``projects/{project-number-or-id}/locations/{location-id}``.  For global calls, use ``projects/{project-number-or-id}/locations/global`` or ``projects/{project-number-or-id}``.  Non-global location is required for requests using AutoML models or custom glossaries.  Models and glossaries must be within the same region (have same location-id), otherwise an INVALID_ARGUMENT (400) error is returned.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "target_language_code": {
                "type": "str",
                "description": "Required. The ISO-639 language code to use for translation of the input text, set to one of the language codes listed in Language Support.  This corresponds to the ``target_language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "contents": {
                "type": "MutableSequence[str]",
                "description": "Required. The content of the input in string format. We recommend the total content be less than 30,000 codepoints. The max length of this field is 1024. Use BatchTranslateText for larger text.  This corresponds to the ``contents`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "model": {
                "type": "str",
                "description": "Optional. The ``model`` type requested for this translation.  The format depends on model type:  -  AutoML Translation models: ``projects/{project-number-or-id}/locations/{location-id}/models/{model-id}``  -  General (built-in) models: ``projects/{project-number-or-id}/locations/{location-id}/models/general/nmt``,  -  Translation LLM models: ``projects/{project-number-or-id}/locations/{location-id}/models/general/translation-llm``,  For global (non-regionalized) requests, use ``location-id`` ``global``. For example, ``projects/{project-number-or-id}/locations/global/models/general/nmt``.  If not provided, the default Google model (NMT) will be used  This corresponds to the ``model`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mime_type": {
                "type": "str",
                "description": "Optional. The format of the source text, for example, \"text/html\", \"text/plain\". If left blank, the MIME type defaults to \"text/html\".  This corresponds to the ``mime_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "source_language_code": {
                "type": "str",
                "description": "Optional. The ISO-639 language code of the input text if known, for example, \"en-US\" or \"sr-Latn\". Supported language codes are listed in Language Support. If the source language isn't specified, the API attempts to identify the source language automatically and returns the source language within the response.  This corresponds to the ``source_language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.TranslateTextResponse:"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "target_language_code",
              "contents",
              "model",
              "mime_type",
              "source_language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.TranslateTextResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "romanize_text",
          "description": "Romanize input text written in non-Latin scripts to\nLatin text.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_romanize_text():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.RomanizeTextRequest(\n            parent=\"parent_value\",\n            contents=['contents_value1', 'contents_value2'],\n        )\n\n        # Make the request\n        response = await client.romanize_text(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Project or location to make a call. Must refer to a caller's project.  Format: ``projects/{project-number-or-id}/locations/{location-id}`` or ``projects/{project-number-or-id}``.  For global calls, use ``projects/{project-number-or-id}/locations/global`` or ``projects/{project-number-or-id}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "contents": {
                "type": "MutableSequence[str]",
                "description": "Required. The content of the input in string format.  This corresponds to the ``contents`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.RomanizeTextResponse: The response message for synchronous romanization."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "contents",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.RomanizeTextResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "detect_language",
          "description": "Detects the language of text within a request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_detect_language():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.DetectLanguageRequest(\n            content=\"content_value\",\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.detect_language(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Project or location to make a call. Must refer to a caller's project.  Format: ``projects/{project-number-or-id}/locations/{location-id}`` or ``projects/{project-number-or-id}``.  For global calls, use ``projects/{project-number-or-id}/locations/global`` or ``projects/{project-number-or-id}``.  Only models within the same region (has same location-id) can be used. Otherwise an INVALID_ARGUMENT (400) error is returned.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "model": {
                "type": "str",
                "description": "Optional. The language detection model to be used.  Format: ``projects/{project-number-or-id}/locations/{location-id}/models/language-detection/{model-id}``  Only one language detection model is currently supported: ``projects/{project-number-or-id}/locations/{location-id}/models/language-detection/default``.  If not specified, the default model is used.  This corresponds to the ``model`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mime_type": {
                "type": "str",
                "description": "Optional. The format of the source text, for example, \"text/html\", \"text/plain\". If left blank, the MIME type defaults to \"text/html\".  This corresponds to the ``mime_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "content": {
                "type": "str",
                "description": "The content of the input stored as a string.  This corresponds to the ``content`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.DetectLanguageResponse: The response message for language detection."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "model",
              "mime_type",
              "content",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.DetectLanguageResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_supported_languages",
          "description": "Returns a list of supported languages for\ntranslation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_get_supported_languages():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.GetSupportedLanguagesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.get_supported_languages(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Project or location to make a call. Must refer to a caller's project.  Format: ``projects/{project-number-or-id}`` or ``projects/{project-number-or-id}/locations/{location-id}``.  For global calls, use ``projects/{project-number-or-id}/locations/global`` or ``projects/{project-number-or-id}``.  Non-global location is required for AutoML models.  Only models within the same region (have same location-id) can be used, otherwise an INVALID_ARGUMENT (400) error is returned.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "model": {
                "type": "str",
                "description": "Optional. Get supported languages of this model.  The format depends on model type:  -  AutoML Translation models: ``projects/{project-number-or-id}/locations/{location-id}/models/{model-id}``  -  General (built-in) models: ``projects/{project-number-or-id}/locations/{location-id}/models/general/nmt``,  Returns languages supported by the specified model. If missing, we get supported languages of Google general NMT model.  This corresponds to the ``model`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "display_language_code": {
                "type": "str",
                "description": "Optional. The language to use to return localized, human readable names of supported languages. If missing, then display names are not returned in a response.  This corresponds to the ``display_language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.SupportedLanguages: The response message for discovering supported languages."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "model",
              "display_language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.SupportedLanguages"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "translate_document",
          "description": "Translates documents in synchronous mode.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_translate_document():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        document_input_config = translate_v3.DocumentInputConfig()\n        document_input_config.content = b'content_blob'\n\n        request = translate_v3.TranslateDocumentRequest(\n            parent=\"parent_value\",\n            target_language_code=\"target_language_code_value\",\n            document_input_config=document_input",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.TranslateDocumentResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_translate_text",
          "description": "Translates a large volume of text in asynchronous\nbatch mode. This function provides real-time output as\nthe inputs are being processed. If caller cancels a\nrequest, the partial results (for an input file, it's\nall or nothing) may still be available on the specified\noutput location.\n\nThis call returns immediately and you can\nuse google.longrunning.Operation.name to poll the status\nof the call.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_batch_translate_text():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # I",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_translate_document",
          "description": "Translates a large volume of document in asynchronous\nbatch mode. This function provides real-time output as\nthe inputs are being processed. If caller cancels a\nrequest, the partial results (for an input file, it's\nall or nothing) may still be available on the specified\noutput location.\n\nThis call returns immediately and you can use\ngoogle.longrunning.Operation.name to poll the status of\nthe call.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_batch_translate_document():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Location to make a regional call.  Format: ``projects/{project-number-or-id}/locations/{location-id}``.  The ``global`` location is not supported for batch translation.  Only AutoML Translation models or glossaries within the same region (have the same location-id) can be used, otherwise an INVALID_ARGUMENT (400) error is returned.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "source_language_code": {
                "type": "str",
                "description": "Required. The ISO-639 language code of the input document if known, for example, \"en-US\" or \"sr-Latn\". Supported language codes are listed in `Language Support <https://cloud.google.com/translate/docs/languages>`__.  This corresponds to the ``source_language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "target_language_codes": {
                "type": "MutableSequence[str]",
                "description": "Required. The ISO-639 language code to use for translation of the input document. Specify up to 10 language codes here.  This corresponds to the ``target_language_codes`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input_configs": {
                "type": "MutableSequence[google.cloud.translate_v3.types.BatchDocumentInputConfig]",
                "description": "Required. Input configurations. The total number of files matched should be <= 100. The total content size to translate should be <= 100M Unicode codepoints. The files must use UTF-8 encoding.  This corresponds to the ``input_configs`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.translate_v3.types.BatchDocumentOutputConfig",
                "description": "Required. Output configuration. If 2 input configs match to the same file (that is, same input path), we don't generate output for duplicate inputs.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.translate_v3.types.BatchTranslateDocumentResponse` Stored in the [google.longrunning.Operation.response][google.longrunning.Operation.response] field returned by BatchTranslateDocument if at least one document is translated successfully."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "source_language_code",
              "target_language_codes",
              "input_configs",
              "output_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_glossary",
          "description": "Creates a glossary and returns the long-running operation.\nReturns NOT_FOUND, if the project doesn't exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_create_glossary():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        glossary = translate_v3.Glossary()\n        glossary.name = \"name_value\"\n\n        request = translate_v3.CreateGlossaryRequest(\n            parent=\"parent_value\",\n            glossary=glossary,\n        )\n\n        # Make the request\n        operation = clien",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "glossary": {
                "type": "google.cloud.translate_v3.types.Glossary",
                "description": "Required. The glossary to create. This corresponds to the ``glossary`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.translate_v3.types.Glossary` Represents a glossary built from user-provided data."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "glossary",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_glossary",
          "description": "Updates a glossary. A LRO is used since the update\ncan be async if the glossary's entry file is updated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_update_glossary():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        glossary = translate_v3.Glossary()\n        glossary.name = \"name_value\"\n\n        request = translate_v3.UpdateGlossaryRequest(\n            glossary=glossary,\n        )\n\n        # Make the request\n        operation = client.update_glossary(request=request)\n\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "glossary": {
                "type": "google.cloud.translate_v3.types.Glossary",
                "description": "Required. The glossary entry to update.  This corresponds to the ``glossary`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. Currently only ``display_name`` and 'input_config'  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.translate_v3.types.Glossary` Represents a glossary built from user-provided data."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "glossary",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_glossaries",
          "description": "Lists glossaries in a project. Returns NOT_FOUND, if the project\ndoesn't exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_list_glossaries():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.ListGlossariesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_glossaries(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the project from which to list all of the glossaries.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.services.translation_service.pagers.ListGlossariesAsyncPager: Response message for ListGlossaries.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.services.translation_service.pagers.ListGlossariesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_glossary",
          "description": "Gets a glossary. Returns NOT_FOUND, if the glossary doesn't\nexist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_get_glossary():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.GetGlossaryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_glossary(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.GetG",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the glossary to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.Glossary: Represents a glossary built from user-provided data."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.Glossary"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_glossary",
          "description": "Deletes a glossary, or cancels glossary construction if the\nglossary isn't created yet. Returns NOT_FOUND, if the glossary\ndoesn't exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_delete_glossary():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.DeleteGlossaryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_glossary(request=request)\n\n        print(\"Waiting for operation to complete..",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the glossary to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.translate_v3.types.DeleteGlossaryResponse` Stored in the [google.longrunning.Operation.response][google.longrunning.Operation.response] field returned by DeleteGlossary."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_glossary_entry",
          "description": "Gets a single glossary entry by the given id.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_get_glossary_entry():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.GetGlossaryEntryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_glossary_entry(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.GetGloss",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the glossary entry to get  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.GlossaryEntry: Represents a single entry in a glossary."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.GlossaryEntry"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_glossary_entries",
          "description": "List the entries for the glossary.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_list_glossary_entries():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.ListGlossaryEntriesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_glossary_entries(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent glossary resource name for listing the glossary's entries.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.services.translation_service.pagers.ListGlossaryEntriesAsyncPager: Response message for ListGlossaryEntries Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.services.translation_service.pagers.ListGlossaryEntriesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_glossary_entry",
          "description": "Creates a glossary entry.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_create_glossary_entry():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.CreateGlossaryEntryRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_glossary_entry(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.CreateGlossaryE",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the glossary to create the entry under.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "glossary_entry": {
                "type": "google.cloud.translate_v3.types.GlossaryEntry",
                "description": "Required. The glossary entry to create  This corresponds to the ``glossary_entry`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.GlossaryEntry: Represents a single entry in a glossary."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "glossary_entry",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.GlossaryEntry"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_glossary_entry",
          "description": "Updates a glossary entry.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_update_glossary_entry():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.UpdateGlossaryEntryRequest(\n        )\n\n        # Make the request\n        response = await client.update_glossary_entry(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.UpdateGlossaryEntryRequest, dict]]):\n        The r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "glossary_entry": {
                "type": "google.cloud.translate_v3.types.GlossaryEntry",
                "description": "Required. The glossary entry to update.  This corresponds to the ``glossary_entry`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.GlossaryEntry: Represents a single entry in a glossary."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "glossary_entry",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.GlossaryEntry"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_glossary_entry",
          "description": "Deletes a single entry from the glossary\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_delete_glossary_entry():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.DeleteGlossaryEntryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_glossary_entry(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.DeleteGlossaryEntryRequest, dict]]):\n        The request object. Reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the glossary entry to delete  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_dataset",
          "description": "Creates a Dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_create_dataset():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.CreateDatasetRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_dataset(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "dataset": {
                "type": "google.cloud.translate_v3.types.Dataset",
                "description": "Required. The Dataset to create. This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.translate_v3.types.Dataset` A dataset that hosts the examples (sentence pairs) used for translation models."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "dataset",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_dataset",
          "description": "Gets a Dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_get_dataset():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.GetDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_dataset(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.GetDatasetRequest, dict]]):\n        The request object. Re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the dataset to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.Dataset: A dataset that hosts the examples (sentence pairs) used for translation models."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.Dataset"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_datasets",
          "description": "Lists datasets.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_list_datasets():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.ListDatasetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_datasets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.List",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the parent project. In form of ``projects/{project-number-or-id}/locations/{location-id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.services.translation_service.pagers.ListDatasetsAsyncPager: Response message for ListDatasets.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.services.translation_service.pagers.ListDatasetsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_dataset",
          "description": "Deletes a dataset and all of its contents.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_delete_dataset():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.DeleteDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_dataset(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the dataset to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_adaptive_mt_dataset",
          "description": "Creates an Adaptive MT dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_create_adaptive_mt_dataset():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        adaptive_mt_dataset = translate_v3.AdaptiveMtDataset()\n        adaptive_mt_dataset.name = \"name_value\"\n\n        request = translate_v3.CreateAdaptiveMtDatasetRequest(\n            parent=\"parent_value\",\n            adaptive_mt_dataset=adaptive_mt_dataset,\n        )\n\n        # Make the request\n        response = await cli",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the parent project. In form of ``projects/{project-number-or-id}/locations/{location-id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "adaptive_mt_dataset": {
                "type": "google.cloud.translate_v3.types.AdaptiveMtDataset",
                "description": "Required. The AdaptiveMtDataset to be created.  This corresponds to the ``adaptive_mt_dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.AdaptiveMtDataset: An Adaptive MT Dataset."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "adaptive_mt_dataset",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.AdaptiveMtDataset"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_adaptive_mt_dataset",
          "description": "Deletes an Adaptive MT dataset, including all its\nentries and associated metadata.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_delete_adaptive_mt_dataset():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.DeleteAdaptiveMtDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_adaptive_mt_dataset(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.DeleteAdaptive",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the dataset. In the form of ``projects/{project-number-or-id}/locations/{location-id}/adaptiveMtDatasets/{adaptive-mt-dataset-id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_adaptive_mt_dataset",
          "description": "Gets the Adaptive MT dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_get_adaptive_mt_dataset():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.GetAdaptiveMtDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_adaptive_mt_dataset(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.GetAdaptiv",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the dataset. In the form of ``projects/{project-number-or-id}/locations/{location-id}/adaptiveMtDatasets/{adaptive-mt-dataset-id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.AdaptiveMtDataset: An Adaptive MT Dataset."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.AdaptiveMtDataset"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_adaptive_mt_datasets",
          "description": "Lists all Adaptive MT datasets for which the caller\nhas read permission.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_list_adaptive_mt_datasets():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.ListAdaptiveMtDatasetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_adaptive_mt_datasets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the project from which to list the Adaptive MT datasets. ``projects/{project-number-or-id}/locations/{location-id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.services.translation_service.pagers.ListAdaptiveMtDatasetsAsyncPager: A list of AdaptiveMtDatasets.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.services.translation_service.pagers.ListAdaptiveMtDatasetsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "adaptive_mt_translate",
          "description": "Translate text using Adaptive MT.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_adaptive_mt_translate():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.AdaptiveMtTranslateRequest(\n            parent=\"parent_value\",\n            dataset=\"dataset_value\",\n            content=['content_value1', 'content_value2'],\n        )\n\n        # Make the request\n        response = await client.adaptive_mt_translate(request=request)\n\n        # Handle the response\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Location to make a regional call.  Format: ``projects/{project-number-or-id}/locations/{location-id}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "content": {
                "type": "MutableSequence[str]",
                "description": "Required. The content of the input in string format.  This corresponds to the ``content`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.AdaptiveMtTranslateResponse: An AdaptiveMtTranslate response."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "content",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.AdaptiveMtTranslateResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_adaptive_mt_file",
          "description": "Gets and AdaptiveMtFile\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_get_adaptive_mt_file():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.GetAdaptiveMtFileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_adaptive_mt_file(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.GetAdaptiveMtFileRequest,",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the file, in form of ``projects/{project-number-or-id}/locations/{location_id}/adaptiveMtDatasets/{dataset}/adaptiveMtFiles/{file}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.AdaptiveMtFile: An AdaptiveMtFile."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.AdaptiveMtFile"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_adaptive_mt_file",
          "description": "Deletes an AdaptiveMtFile along with its sentences.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_delete_adaptive_mt_file():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.DeleteAdaptiveMtFileRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_adaptive_mt_file(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.DeleteAdaptiveMtFileRequest, dict]]):\n        The requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the file to delete, in form of ``projects/{project-number-or-id}/locations/{location_id}/adaptiveMtDatasets/{dataset}/adaptiveMtFiles/{file}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_adaptive_mt_file",
          "description": "Imports an AdaptiveMtFile and adds all of its\nsentences into the AdaptiveMtDataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_import_adaptive_mt_file():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        file_input_source = translate_v3.FileInputSource()\n        file_input_source.mime_type = \"mime_type_value\"\n        file_input_source.content = b'content_blob'\n        file_input_source.display_name = \"display_name_value\"\n\n        request = translate_v3.ImportAdaptiveMtFil",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the file, in form of ``projects/{project-number-or-id}/locations/{location_id}/adaptiveMtDatasets/{dataset}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.ImportAdaptiveMtFileResponse: The response for importing an AdaptiveMtFile"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.ImportAdaptiveMtFileResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_adaptive_mt_files",
          "description": "Lists all AdaptiveMtFiles associated to an\nAdaptiveMtDataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_list_adaptive_mt_files():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.ListAdaptiveMtFilesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_adaptive_mt_files(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the project from which to list the Adaptive MT files. ``projects/{project}/locations/{location}/adaptiveMtDatasets/{dataset}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.services.translation_service.pagers.ListAdaptiveMtFilesAsyncPager: The response for listing all AdaptiveMt files under a given dataset. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.services.translation_service.pagers.ListAdaptiveMtFilesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_adaptive_mt_sentences",
          "description": "Lists all AdaptiveMtSentences under a given\nfile/dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_list_adaptive_mt_sentences():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.ListAdaptiveMtSentencesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_adaptive_mt_sentences(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the project from which to list the Adaptive MT files. The following format lists all sentences under a file. ``projects/{project}/locations/{location}/adaptiveMtDatasets/{dataset}/adaptiveMtFiles/{file}`` The following format lists all sentences within a dataset. ``projects/{project}/locations/{location}/adaptiveMtDatasets/{dataset}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.services.translation_service.pagers.ListAdaptiveMtSentencesAsyncPager: List AdaptiveMt sentences response.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.services.translation_service.pagers.ListAdaptiveMtSentencesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_data",
          "description": "Import sentence pairs into translation Dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_import_data():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.ImportDataRequest(\n            dataset=\"dataset_value\",\n        )\n\n        # Make the request\n        operation = client.import_data(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "dataset": {
                "type": "str",
                "description": "Required. Name of the dataset. In form of ``projects/{project-number-or-id}/locations/{location-id}/datasets/{dataset-id}``  This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input_config": {
                "type": "google.cloud.translate_v3.types.DatasetInputConfig",
                "description": "Required. The config for the input content.  This corresponds to the ``input_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "dataset",
              "input_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_data",
          "description": "Exports dataset's data to the provided output\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_export_data():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        output_config = translate_v3.DatasetOutputConfig()\n        output_config.gcs_destination.output_uri_prefix = \"output_uri_prefix_value\"\n\n        request = translate_v3.ExportDataRequest(\n            dataset=\"dataset_value\",\n            output_config=output_config,\n        )\n\n        # Make the request\n        op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "dataset": {
                "type": "str",
                "description": "Required. Name of the dataset. In form of ``projects/{project-number-or-id}/locations/{location-id}/datasets/{dataset-id}``  This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.translate_v3.types.DatasetOutputConfig",
                "description": "Required. The config for the output content.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "dataset",
              "output_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_examples",
          "description": "Lists sentence pairs in the dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_list_examples():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.ListExamplesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_examples(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.tr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the parent dataset. In form of ``projects/{project-number-or-id}/locations/{location-id}/datasets/{dataset-id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.services.translation_service.pagers.ListExamplesAsyncPager: Response message for ListExamples.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.services.translation_service.pagers.ListExamplesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_model",
          "description": "Creates a Model.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_create_model():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.CreateModelRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_model(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project name, in form of ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "model": {
                "type": "google.cloud.translate_v3.types.Model",
                "description": "Required. The Model to create. This corresponds to the ``model`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.translate_v3.types.Model` A trained translation model."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "model",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_models",
          "description": "Lists models.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_list_models():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.ListModelsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_models(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.ListModelsRe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the parent project. In form of ``projects/{project-number-or-id}/locations/{location-id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.services.translation_service.pagers.ListModelsAsyncPager: Response message for ListModels.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.services.translation_service.pagers.ListModelsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_model",
          "description": "Gets a model.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_get_model():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.GetModelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_model(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.translate_v3.types.GetModelRequest, dict]]):\n        The request object. Request mess",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the model to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3.types.Model: A trained translation model."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3.types.Model"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_model",
          "description": "Deletes a model.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3\n\n    async def sample_delete_model():\n        # Create a client\n        client = translate_v3.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3.DeleteModelRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_model(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Opti",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the model to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      }
    ]
  }
}