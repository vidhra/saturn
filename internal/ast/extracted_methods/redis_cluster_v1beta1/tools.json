{
  "CloudRedisCluster": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_clusters",
          "description": "Lists all Redis clusters owned by a project in either the\nspecified location (region) or all locations.\n\nThe location should have the following format:\n\n-  ``projects/{project_id}/locations/{location_id}``\n\nIf ``location_id`` is specified as ``-`` (wildcard), then all\nregions available to the project are queried, and the results\nare aggregated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_cluster_v1beta1\n\n    async def sample_list_clusters():\n        # Create a client\n        client = redis_cluster_v1beta1.CloudRedisClusterAsyncClient()\n\n        # Initialize request argument(s)\n        re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the cluster location using the form: ``projects/{project_id}/locations/{location_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.redis_cluster_v1beta1.services.cloud_redis_cluster.pagers.ListClustersAsyncPager: Response for [ListClusters][CloudRedis.ListClusters].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_redis_cluster.ListClustersRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_cluster",
          "description": "Gets the details of a specific Redis cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_cluster_v1beta1\n\n    async def sample_get_cluster():\n        # Create a client\n        client = redis_cluster_v1beta1.CloudRedisClusterAsyncClient()\n\n        # Initialize request argument(s)\n        request = redis_cluster_v1beta1.GetClusterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_cluster(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.redis_cluster_v1beta1",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Redis cluster resource name using the form: ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.redis_cluster_v1beta1.types.Cluster: A cluster instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_redis_cluster.GetClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_cluster",
          "description": "Updates the metadata and configuration of a specific\nRedis cluster.\nCompleted longrunning.Operation will contain the new\ncluster object in the response field. The returned\noperation is automatically deleted after a few hours, so\nthere is no need to call DeleteOperation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_cluster_v1beta1\n\n    async def sample_update_cluster():\n        # Create a client\n        client = redis_cluster_v1beta1.CloudRedisClusterAsyncClient()\n\n        # Initialize request argument(s)\n        cluster = redis_cluster_v1beta1.Cluster()\n        cluster.name = \"name_value\"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "cluster": {
                "type": "google.cloud.redis_cluster_v1beta1.types.Cluster",
                "description": "Required. Update description. Only fields specified in update_mask are updated.  This corresponds to the ``cluster`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [Cluster][google.cloud.redis.cluster.v1beta1.Cluster]:  -  ``size_gb`` -  ``replica_count``  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.redis_cluster_v1beta1.types.Cluster` A cluster instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "cluster",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_redis_cluster.UpdateClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_cluster",
          "description": "Deletes a specific Redis cluster. Cluster stops\nserving and data is deleted.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_cluster_v1beta1\n\n    async def sample_delete_cluster():\n        # Create a client\n        client = redis_cluster_v1beta1.CloudRedisClusterAsyncClient()\n\n        # Initialize request argument(s)\n        request = redis_cluster_v1beta1.DeleteClusterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_cluster(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operati",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Redis cluster resource name using the form: ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_redis_cluster.DeleteClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_cluster",
          "description": "Creates a Redis cluster based on the specified\nproperties. The creation is executed asynchronously and\ncallers may check the returned operation to track its\nprogress. Once the operation is completed the Redis\ncluster will be fully functional. The completed\nlongrunning.Operation will contain the new cluster\nobject in the response field.\n\nThe returned operation is automatically deleted after a\nfew hours, so there is no need to call DeleteOperation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_cluster_v1beta1\n\n    async def sample_create_cluster():\n        # Create a client\n        client = ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the cluster location using the form: ``projects/{project_id}/locations/{location_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "cluster": {
                "type": "google.cloud.redis_cluster_v1beta1.types.Cluster",
                "description": "Required. The cluster that is to be created.  This corresponds to the ``cluster`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "cluster_id": {
                "type": "str",
                "description": "Required. The logical name of the Redis cluster in the customer project with the following restrictions:  -  Must contain only lowercase letters, numbers, and hyphens. -  Must start with a letter. -  Must be between 1-63 characters. -  Must end with a number or a letter. -  Must be unique within the customer project / location  This corresponds to the ``cluster_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.redis_cluster_v1beta1.types.Cluster` A cluster instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "cluster",
              "cluster_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_redis_cluster.CreateClusterRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_cluster_certificate_authority",
          "description": "Gets the details of certificate authority information\nfor Redis cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_cluster_v1beta1\n\n    async def sample_get_cluster_certificate_authority():\n        # Create a client\n        client = redis_cluster_v1beta1.CloudRedisClusterAsyncClient()\n\n        # Initialize request argument(s)\n        request = redis_cluster_v1beta1.GetClusterCertificateAuthorityRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_cluster_certificate_authority(request=request)\n\n        # Handle the response\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Redis cluster certificate authority resource name using the form: ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}/certificateAuthority`` where ``location_id`` refers to a GCP region.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.redis_cluster_v1beta1.types.CertificateAuthority: Redis cluster certificate authority"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "cloud_redis_cluster.GetClusterCertificateAuthorityRequest"
          ]
        }
      }
    ]
  }
}