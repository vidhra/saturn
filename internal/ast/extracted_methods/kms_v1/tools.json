{
  "Autokey": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_key_handle",
          "description": "Creates a new [KeyHandle][google.cloud.kms.v1.KeyHandle],\ntriggering the provisioning of a new\n[CryptoKey][google.cloud.kms.v1.CryptoKey] for CMEK use with the\ngiven resource type in the configured key project and the same\nlocation. [GetOperation][Operations.GetOperation] should be used\nto resolve the resulting long-running operation and get the\nresulting [KeyHandle][google.cloud.kms.v1.KeyHandle] and\n[CryptoKey][google.cloud.kms.v1.CryptoKey].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_create_key_handle():\n        # Create a client\n        client = kms_v1.Autokey",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the resource project and location to create the [KeyHandle][google.cloud.kms.v1.KeyHandle] in, e.g. ``projects/{PROJECT_ID}/locations/{LOCATION}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "key_handle": {
                "type": "google.cloud.kms_v1.types.KeyHandle",
                "description": "Required. [KeyHandle][google.cloud.kms.v1.KeyHandle] to create.  This corresponds to the ``key_handle`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "key_handle_id": {
                "type": "str",
                "description": "Optional. Id of the [KeyHandle][google.cloud.kms.v1.KeyHandle]. Must be unique to the resource project and location. If not provided by the caller, a new UUID is used.  This corresponds to the ``key_handle_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.kms_v1.types.KeyHandle` Resource-oriented representation of a request to Cloud KMS Autokey and the resulting provisioning of a [CryptoKey][google.cloud.kms.v1.CryptoKey]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "key_handle",
              "key_handle_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_key_handle",
          "description": "Returns the [KeyHandle][google.cloud.kms.v1.KeyHandle].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_get_key_handle():\n        # Create a client\n        client = kms_v1.AutokeyAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.GetKeyHandleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_key_handle(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms_v1.types.GetKeyHandleRequest, dict]]):\n        The req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the [KeyHandle][google.cloud.kms.v1.KeyHandle] resource, e.g. ``projects/{PROJECT_ID}/locations/{LOCATION}/keyHandles/{KEY_HANDLE_ID}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.KeyHandle: Resource-oriented representation of a request to Cloud KMS Autokey and the resulting provisioning of a [CryptoKey][google.cloud.kms.v1.CryptoKey]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.KeyHandle"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_key_handles",
          "description": "Lists [KeyHandles][google.cloud.kms.v1.KeyHandle].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_list_key_handles():\n        # Create a client\n        client = kms_v1.AutokeyAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.ListKeyHandlesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_key_handles(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms_v1.ty",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the resource project and location from which to list [KeyHandles][google.cloud.kms.v1.KeyHandle], e.g. ``projects/{PROJECT_ID}/locations/{LOCATION}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.services.autokey.pagers.ListKeyHandlesAsyncPager: Response message for [Autokey.ListKeyHandles][google.cloud.kms.v1.Autokey.ListKeyHandles].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.services.autokey.pagers.ListKeyHandlesAsyncPager"
          ]
        }
      }
    ]
  },
  "AutokeyAdmin": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "update_autokey_config",
          "description": "Updates the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig]\nfor a folder. The caller must have both\n``cloudkms.autokeyConfigs.update`` permission on the parent\nfolder and ``cloudkms.cryptoKeys.setIamPolicy`` permission on\nthe provided key project. A\n[KeyHandle][google.cloud.kms.v1.KeyHandle] creation in the\nfolder's descendant projects will use this configuration to\ndetermine where to create the resulting\n[CryptoKey][google.cloud.kms.v1.CryptoKey].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_update_autokey_config():\n        # Create a client\n        client = kms",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "autokey_config": {
                "type": "google.cloud.kms_v1.types.AutokeyConfig",
                "description": "Required. [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] with values to update.  This corresponds to the ``autokey_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Masks which fields of the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] to update, e.g. ``keyProject``.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.AutokeyConfig: Cloud KMS Autokey configuration for a folder."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "autokey_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.AutokeyConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_autokey_config",
          "description": "Returns the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig]\nfor a folder.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_get_autokey_config():\n        # Create a client\n        client = kms_v1.AutokeyAdminAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.GetAutokeyConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_autokey_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms_v1.types.GetAuto",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] resource, e.g. ``folders/{FOLDER_NUMBER}/autokeyConfig``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.AutokeyConfig: Cloud KMS Autokey configuration for a folder."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.AutokeyConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "show_effective_autokey_config",
          "description": "Returns the effective Cloud KMS Autokey configuration\nfor a given project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_show_effective_autokey_config():\n        # Create a client\n        client = kms_v1.AutokeyAdminAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.ShowEffectiveAutokeyConfigRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.show_effective_autokey_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the resource project to the show effective Cloud KMS Autokey configuration for. This may be helpful for interrogating the effect of nested folder configurations on a given resource project.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.ShowEffectiveAutokeyConfigResponse: Response message for [ShowEffectiveAutokeyConfig][google.cloud.kms.v1.AutokeyAdmin.ShowEffectiveAutokeyConfig]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.ShowEffectiveAutokeyConfigResponse"
          ]
        }
      }
    ]
  },
  "EkmService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_ekm_connections",
          "description": "Lists [EkmConnections][google.cloud.kms.v1.EkmConnection].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_list_ekm_connections():\n        # Create a client\n        client = kms_v1.EkmServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.ListEkmConnectionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_ekm_connections(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location associated with the [EkmConnections][google.cloud.kms.v1.EkmConnection] to list, in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.services.ekm_service.pagers.ListEkmConnectionsAsyncPager: Response message for [EkmService.ListEkmConnections][google.cloud.kms.v1.EkmService.ListEkmConnections].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.services.ekm_service.pagers.ListEkmConnectionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_ekm_connection",
          "description": "Returns metadata for a given\n[EkmConnection][google.cloud.kms.v1.EkmConnection].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_get_ekm_connection():\n        # Create a client\n        client = kms_v1.EkmServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.GetEkmConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_ekm_connection(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms_v1.types.GetEk",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The [name][google.cloud.kms.v1.EkmConnection.name] of the [EkmConnection][google.cloud.kms.v1.EkmConnection] to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.EkmConnection: An [EkmConnection][google.cloud.kms.v1.EkmConnection] represents an individual EKM connection. It can be used for creating [CryptoKeys][google.cloud.kms.v1.CryptoKey] and [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] with a [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] of [EXTERNAL_VPC][CryptoKeyVersion.ProtectionLevel.EXTERNAL_VPC], as well as performing cryptographic operations using keys created within the [EkmConnection][google.cloud.kms.v1.EkmConnection]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.EkmConnection"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_ekm_connection",
          "description": "Creates a new [EkmConnection][google.cloud.kms.v1.EkmConnection]\nin a given Project and Location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_create_ekm_connection():\n        # Create a client\n        client = kms_v1.EkmServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.CreateEkmConnectionRequest(\n            parent=\"parent_value\",\n            ekm_connection_id=\"ekm_connection_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_ekm_connection(request=request)\n\n        # Handle the response\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location associated with the [EkmConnection][google.cloud.kms.v1.EkmConnection], in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ekm_connection_id": {
                "type": "str",
                "description": "Required. It must be unique within a location and match the regular expression ``[a-zA-Z0-9_-]{1,63}``.  This corresponds to the ``ekm_connection_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ekm_connection": {
                "type": "google.cloud.kms_v1.types.EkmConnection",
                "description": "Required. An [EkmConnection][google.cloud.kms.v1.EkmConnection] with initial field values.  This corresponds to the ``ekm_connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.EkmConnection: An [EkmConnection][google.cloud.kms.v1.EkmConnection] represents an individual EKM connection. It can be used for creating [CryptoKeys][google.cloud.kms.v1.CryptoKey] and [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] with a [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] of [EXTERNAL_VPC][CryptoKeyVersion.ProtectionLevel.EXTERNAL_VPC], as well as performing cryptographic operations using keys created within the [EkmConnection][google.cloud.kms.v1.EkmConnection]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "ekm_connection_id",
              "ekm_connection",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.EkmConnection"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_ekm_connection",
          "description": "Updates an [EkmConnection][google.cloud.kms.v1.EkmConnection]'s\nmetadata.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_update_ekm_connection():\n        # Create a client\n        client = kms_v1.EkmServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.UpdateEkmConnectionRequest(\n        )\n\n        # Make the request\n        response = await client.update_ekm_connection(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms_v1.types.UpdateEkmConnectionRequest, dict]]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "ekm_connection": {
                "type": "google.cloud.kms_v1.types.EkmConnection",
                "description": "Required. [EkmConnection][google.cloud.kms.v1.EkmConnection] with updated values.  This corresponds to the ``ekm_connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. List of fields to be updated in this request.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.EkmConnection: An [EkmConnection][google.cloud.kms.v1.EkmConnection] represents an individual EKM connection. It can be used for creating [CryptoKeys][google.cloud.kms.v1.CryptoKey] and [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] with a [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] of [EXTERNAL_VPC][CryptoKeyVersion.ProtectionLevel.EXTERNAL_VPC], as well as performing cryptographic operations using keys created within the [EkmConnection][google.cloud.kms.v1.EkmConnection]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "ekm_connection",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.EkmConnection"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_ekm_config",
          "description": "Returns the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton\nresource for a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_get_ekm_config():\n        # Create a client\n        client = kms_v1.EkmServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.GetEkmConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_ekm_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The [name][google.cloud.kms.v1.EkmConfig.name] of the [EkmConfig][google.cloud.kms.v1.EkmConfig] to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.EkmConfig: An [EkmConfig][google.cloud.kms.v1.EkmConfig] is a singleton resource that represents configuration parameters that apply to all [CryptoKeys][google.cloud.kms.v1.CryptoKey] and [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] with a [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] of [EXTERNAL_VPC][CryptoKeyVersion.ProtectionLevel.EXTERNAL_VPC] in a given project and location."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.EkmConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_ekm_config",
          "description": "Updates the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton\nresource for a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_update_ekm_config():\n        # Create a client\n        client = kms_v1.EkmServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.UpdateEkmConfigRequest(\n        )\n\n        # Make the request\n        response = await client.update_ekm_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms_v1.types.UpdateEkmCon",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "ekm_config": {
                "type": "google.cloud.kms_v1.types.EkmConfig",
                "description": "Required. [EkmConfig][google.cloud.kms.v1.EkmConfig] with updated values.  This corresponds to the ``ekm_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. List of fields to be updated in this request.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.EkmConfig: An [EkmConfig][google.cloud.kms.v1.EkmConfig] is a singleton resource that represents configuration parameters that apply to all [CryptoKeys][google.cloud.kms.v1.CryptoKey] and [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] with a [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] of [EXTERNAL_VPC][CryptoKeyVersion.ProtectionLevel.EXTERNAL_VPC] in a given project and location."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "ekm_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.EkmConfig"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "verify_connectivity",
          "description": "Verifies that Cloud KMS can successfully connect to the external\nkey manager specified by an\n[EkmConnection][google.cloud.kms.v1.EkmConnection]. If there is\nan error connecting to the EKM, this method returns a\nFAILED_PRECONDITION status containing structured information as\ndescribed at\nhttps://cloud.google.com/kms/docs/reference/ekm_errors.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_verify_connectivity():\n        # Create a client\n        client = kms_v1.EkmServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.VerifyConnectivityR",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The [name][google.cloud.kms.v1.EkmConnection.name] of the [EkmConnection][google.cloud.kms.v1.EkmConnection] to verify.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.VerifyConnectivityResponse: Response message for [EkmService.VerifyConnectivity][google.cloud.kms.v1.EkmService.VerifyConnectivity]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.VerifyConnectivityResponse"
          ]
        }
      }
    ]
  },
  "KeyManagementService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_key_rings",
          "description": "Lists [KeyRings][google.cloud.kms.v1.KeyRing].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_list_key_rings():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.ListKeyRingsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_key_rings(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms_v1",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location associated with the [KeyRings][google.cloud.kms.v1.KeyRing], in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.services.key_management_service.pagers.ListKeyRingsAsyncPager: Response message for [KeyManagementService.ListKeyRings][google.cloud.kms.v1.KeyManagementService.ListKeyRings].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.services.key_management_service.pagers.ListKeyRingsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_crypto_keys",
          "description": "Lists [CryptoKeys][google.cloud.kms.v1.CryptoKey].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_list_crypto_keys():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.ListCryptoKeysRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_crypto_keys(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the [KeyRing][google.cloud.kms.v1.KeyRing] to list, in the format ``projects/*/locations/*/keyRings/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.services.key_management_service.pagers.ListCryptoKeysAsyncPager: Response message for [KeyManagementService.ListCryptoKeys][google.cloud.kms.v1.KeyManagementService.ListCryptoKeys].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.services.key_management_service.pagers.ListCryptoKeysAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_crypto_key_versions",
          "description": "Lists [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_list_crypto_key_versions():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.ListCryptoKeyVersionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_crypto_key_versions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the [CryptoKey][google.cloud.kms.v1.CryptoKey] to list, in the format ``projects/*/locations/*/keyRings/*/cryptoKeys/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.services.key_management_service.pagers.ListCryptoKeyVersionsAsyncPager: Response message for [KeyManagementService.ListCryptoKeyVersions][google.cloud.kms.v1.KeyManagementService.ListCryptoKeyVersions].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.services.key_management_service.pagers.ListCryptoKeyVersionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_import_jobs",
          "description": "Lists [ImportJobs][google.cloud.kms.v1.ImportJob].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_list_import_jobs():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.ListImportJobsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_import_jobs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the [KeyRing][google.cloud.kms.v1.KeyRing] to list, in the format ``projects/*/locations/*/keyRings/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.services.key_management_service.pagers.ListImportJobsAsyncPager: Response message for [KeyManagementService.ListImportJobs][google.cloud.kms.v1.KeyManagementService.ListImportJobs].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.services.key_management_service.pagers.ListImportJobsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_key_ring",
          "description": "Returns metadata for a given\n[KeyRing][google.cloud.kms.v1.KeyRing].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_get_key_ring():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.GetKeyRingRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_key_ring(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms_v1.types.GetKeyRingRequest, dict]]",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The [name][google.cloud.kms.v1.KeyRing.name] of the [KeyRing][google.cloud.kms.v1.KeyRing] to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.KeyRing: A [KeyRing][google.cloud.kms.v1.KeyRing] is a toplevel logical grouping of [CryptoKeys][google.cloud.kms.v1.CryptoKey]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.KeyRing"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_crypto_key",
          "description": "Returns metadata for a given\n[CryptoKey][google.cloud.kms.v1.CryptoKey], as well as its\n[primary][google.cloud.kms.v1.CryptoKey.primary]\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_get_crypto_key():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.GetCryptoKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_crypto_key(request=request)\n\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The [name][google.cloud.kms.v1.CryptoKey.name] of the [CryptoKey][google.cloud.kms.v1.CryptoKey] to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.CryptoKey: A [CryptoKey][google.cloud.kms.v1.CryptoKey] represents a logical key that can be used for cryptographic operations.  A [CryptoKey][google.cloud.kms.v1.CryptoKey] is made up of zero or more [versions][google.cloud.kms.v1.CryptoKeyVersion], which represent the actual key material used in cryptographic operations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.CryptoKey"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_crypto_key_version",
          "description": "Returns metadata for a given\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_get_crypto_key_version():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.GetCryptoKeyVersionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_crypto_key_version(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[goog",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The [name][google.cloud.kms.v1.CryptoKeyVersion.name] of the [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.CryptoKeyVersion: A [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] represents an individual cryptographic key, and the associated key material.  An [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED] version can be used for cryptographic operations.  For security reasons, the raw cryptographic key material represented by a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.CryptoKeyVersion"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_public_key",
          "description": "Returns the public key for the given\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]. The\n[CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose] must\nbe\n[ASYMMETRIC_SIGN][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_SIGN]\nor\n[ASYMMETRIC_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_DECRYPT].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_get_public_key():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.GetPublicKeyReques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The [name][google.cloud.kms.v1.CryptoKeyVersion.name] of the [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] public key to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.PublicKey: The public keys for a given [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]. Obtained via [GetPublicKey][google.cloud.kms.v1.KeyManagementService.GetPublicKey]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.PublicKey"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_import_job",
          "description": "Returns metadata for a given\n[ImportJob][google.cloud.kms.v1.ImportJob].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_get_import_job():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.GetImportJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_import_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms_v1.types.GetImportJobReq",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The [name][google.cloud.kms.v1.ImportJob.name] of the [ImportJob][google.cloud.kms.v1.ImportJob] to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.ImportJob: An [ImportJob][google.cloud.kms.v1.ImportJob] can be used to create [CryptoKeys][google.cloud.kms.v1.CryptoKey] and [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] using pre-existing key material, generated outside of Cloud KMS.  When an [ImportJob][google.cloud.kms.v1.ImportJob] is created, Cloud KMS will generate a \"wrapping key\", which is a public/private key pair. You use the wrapping key to encrypt (also known as wrap) the pre-existing key material to protect it during the import process. The nature of the wrapping key depends on the choice of [import_method][google.cloud.kms.v1.ImportJob.import_method]. When the wrapping key generation is complete, the [state][google.cloud.kms.v1.ImportJob.state] will be set to [ACTIVE][google.cloud.kms.v1.ImportJob.ImportJobState.ACTIVE] and the [public_key][google.cloud.kms.v1.ImportJob.public_key] can be fetched. The fetched public key can then be used to wrap your pre-existing key material.  Once the key material is wrapped, it can be imported into a new [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] in an existing [CryptoKey][google.cloud.kms.v1.CryptoKey] by calling [ImportCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.ImportCryptoKeyVersion]. Multiple [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] can be imported with a single [ImportJob][google.cloud.kms.v1.ImportJob]. Cloud KMS uses the private key portion of the wrapping key to unwrap the key material. Only Cloud KMS has access to the private key.  An [ImportJob][google.cloud.kms.v1.ImportJob] expires 3 days after it is created. Once expired, Cloud KMS will no longer be able to import or unwrap any key material that was wrapped with the [ImportJob][google.cloud.kms.v1.ImportJob]'s public key.  For more information, see [Importing a key](\\ https://cloud.google.com/kms/docs/importing-a-key)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.ImportJob"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_key_ring",
          "description": "Create a new [KeyRing][google.cloud.kms.v1.KeyRing] in a given\nProject and Location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_create_key_ring():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.CreateKeyRingRequest(\n            parent=\"parent_value\",\n            key_ring_id=\"key_ring_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_key_ring(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location associated with the [KeyRings][google.cloud.kms.v1.KeyRing], in the format ``projects/*/locations/*``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "key_ring_id": {
                "type": "str",
                "description": "Required. It must be unique within a location and match the regular expression ``[a-zA-Z0-9_-]{1,63}``  This corresponds to the ``key_ring_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "key_ring": {
                "type": "google.cloud.kms_v1.types.KeyRing",
                "description": "Required. A [KeyRing][google.cloud.kms.v1.KeyRing] with initial field values.  This corresponds to the ``key_ring`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.KeyRing: A [KeyRing][google.cloud.kms.v1.KeyRing] is a toplevel logical grouping of [CryptoKeys][google.cloud.kms.v1.CryptoKey]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "key_ring_id",
              "key_ring",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.KeyRing"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_crypto_key",
          "description": "Create a new [CryptoKey][google.cloud.kms.v1.CryptoKey] within a\n[KeyRing][google.cloud.kms.v1.KeyRing].\n\n[CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose] and\n[CryptoKey.version_template.algorithm][google.cloud.kms.v1.CryptoKeyVersionTemplate.algorithm]\nare required.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_create_crypto_key():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.CreateCryptoKeyRequest(\n            parent=\"parent_value\",\n            crypto",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The [name][google.cloud.kms.v1.KeyRing.name] of the KeyRing associated with the [CryptoKeys][google.cloud.kms.v1.CryptoKey].  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "crypto_key_id": {
                "type": "str",
                "description": "Required. It must be unique within a KeyRing and match the regular expression ``[a-zA-Z0-9_-]{1,63}``  This corresponds to the ``crypto_key_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "crypto_key": {
                "type": "google.cloud.kms_v1.types.CryptoKey",
                "description": "Required. A [CryptoKey][google.cloud.kms.v1.CryptoKey] with initial field values.  This corresponds to the ``crypto_key`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.CryptoKey: A [CryptoKey][google.cloud.kms.v1.CryptoKey] represents a logical key that can be used for cryptographic operations.  A [CryptoKey][google.cloud.kms.v1.CryptoKey] is made up of zero or more [versions][google.cloud.kms.v1.CryptoKeyVersion], which represent the actual key material used in cryptographic operations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "crypto_key_id",
              "crypto_key",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.CryptoKey"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_crypto_key_version",
          "description": "Create a new\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] in a\n[CryptoKey][google.cloud.kms.v1.CryptoKey].\n\nThe server will assign the next sequential id. If unset,\n[state][google.cloud.kms.v1.CryptoKeyVersion.state] will be set\nto\n[ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_create_crypto_key_version():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.CreateCryptoKeyVersionRe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The [name][google.cloud.kms.v1.CryptoKey.name] of the [CryptoKey][google.cloud.kms.v1.CryptoKey] associated with the [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion].  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "crypto_key_version": {
                "type": "google.cloud.kms_v1.types.CryptoKeyVersion",
                "description": "Required. A [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] with initial field values.  This corresponds to the ``crypto_key_version`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.CryptoKeyVersion: A [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] represents an individual cryptographic key, and the associated key material.  An [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED] version can be used for cryptographic operations.  For security reasons, the raw cryptographic key material represented by a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "crypto_key_version",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.CryptoKeyVersion"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_crypto_key_version",
          "description": "Import wrapped key material into a\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion].\n\nAll requests must specify a\n[CryptoKey][google.cloud.kms.v1.CryptoKey]. If a\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] is\nadditionally specified in the request, key material will be\nreimported into that version. Otherwise, a new version will be\ncreated, and will be assigned the next sequential id within the\n[CryptoKey][google.cloud.kms.v1.CryptoKey].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_import_crypto_key_version():\n        # Create a client\n        cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.CryptoKeyVersion"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_import_job",
          "description": "Create a new [ImportJob][google.cloud.kms.v1.ImportJob] within a\n[KeyRing][google.cloud.kms.v1.KeyRing].\n\n[ImportJob.import_method][google.cloud.kms.v1.ImportJob.import_method]\nis required.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_create_import_job():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        import_job = kms_v1.ImportJob()\n        import_job.import_method = \"RSA_OAEP_4096_SHA256\"\n        import_job.protection_level = \"EXTERNAL_VPC\"\n\n        request = kms_v1.CreateImportJ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The [name][google.cloud.kms.v1.KeyRing.name] of the [KeyRing][google.cloud.kms.v1.KeyRing] associated with the [ImportJobs][google.cloud.kms.v1.ImportJob].  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "import_job_id": {
                "type": "str",
                "description": "Required. It must be unique within a KeyRing and match the regular expression ``[a-zA-Z0-9_-]{1,63}``  This corresponds to the ``import_job_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "import_job": {
                "type": "google.cloud.kms_v1.types.ImportJob",
                "description": "Required. An [ImportJob][google.cloud.kms.v1.ImportJob] with initial field values.  This corresponds to the ``import_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.ImportJob: An [ImportJob][google.cloud.kms.v1.ImportJob] can be used to create [CryptoKeys][google.cloud.kms.v1.CryptoKey] and [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] using pre-existing key material, generated outside of Cloud KMS.  When an [ImportJob][google.cloud.kms.v1.ImportJob] is created, Cloud KMS will generate a \"wrapping key\", which is a public/private key pair. You use the wrapping key to encrypt (also known as wrap) the pre-existing key material to protect it during the import process. The nature of the wrapping key depends on the choice of [import_method][google.cloud.kms.v1.ImportJob.import_method]. When the wrapping key generation is complete, the [state][google.cloud.kms.v1.ImportJob.state] will be set to [ACTIVE][google.cloud.kms.v1.ImportJob.ImportJobState.ACTIVE] and the [public_key][google.cloud.kms.v1.ImportJob.public_key] can be fetched. The fetched public key can then be used to wrap your pre-existing key material.  Once the key material is wrapped, it can be imported into a new [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] in an existing [CryptoKey][google.cloud.kms.v1.CryptoKey] by calling [ImportCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.ImportCryptoKeyVersion]. Multiple [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] can be imported with a single [ImportJob][google.cloud.kms.v1.ImportJob]. Cloud KMS uses the private key portion of the wrapping key to unwrap the key material. Only Cloud KMS has access to the private key.  An [ImportJob][google.cloud.kms.v1.ImportJob] expires 3 days after it is created. Once expired, Cloud KMS will no longer be able to import or unwrap any key material that was wrapped with the [ImportJob][google.cloud.kms.v1.ImportJob]'s public key.  For more information, see [Importing a key](\\ https://cloud.google.com/kms/docs/importing-a-key)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "import_job_id",
              "import_job",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.ImportJob"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_crypto_key",
          "description": "Update a [CryptoKey][google.cloud.kms.v1.CryptoKey].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_update_crypto_key():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.UpdateCryptoKeyRequest(\n        )\n\n        # Make the request\n        response = await client.update_crypto_key(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms_v1.types.UpdateCryptoKeyRequest, dict]]):\n        The request obje",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "crypto_key": {
                "type": "google.cloud.kms_v1.types.CryptoKey",
                "description": "Required. [CryptoKey][google.cloud.kms.v1.CryptoKey] with updated values.  This corresponds to the ``crypto_key`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. List of fields to be updated in this request.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.CryptoKey: A [CryptoKey][google.cloud.kms.v1.CryptoKey] represents a logical key that can be used for cryptographic operations.  A [CryptoKey][google.cloud.kms.v1.CryptoKey] is made up of zero or more [versions][google.cloud.kms.v1.CryptoKeyVersion], which represent the actual key material used in cryptographic operations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "crypto_key",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.CryptoKey"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_crypto_key_version",
          "description": "Update a\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]'s\nmetadata.\n\n[state][google.cloud.kms.v1.CryptoKeyVersion.state] may be\nchanged between\n[ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED]\nand\n[DISABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DISABLED]\nusing this method. See\n[DestroyCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.DestroyCryptoKeyVersion]\nand\n[RestoreCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.RestoreCryptoKeyVersion]\nto move between other states.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "crypto_key_version": {
                "type": "google.cloud.kms_v1.types.CryptoKeyVersion",
                "description": "Required. [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] with updated values.  This corresponds to the ``crypto_key_version`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. List of fields to be updated in this request.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.CryptoKeyVersion: A [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] represents an individual cryptographic key, and the associated key material.  An [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED] version can be used for cryptographic operations.  For security reasons, the raw cryptographic key material represented by a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "crypto_key_version",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.CryptoKeyVersion"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_crypto_key_primary_version",
          "description": "Update the version of a\n[CryptoKey][google.cloud.kms.v1.CryptoKey] that will be used in\n[Encrypt][google.cloud.kms.v1.KeyManagementService.Encrypt].\n\nReturns an error if called on a key whose purpose is not\n[ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_update_crypto_key_primary_version():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.UpdateCryptoKeyPrimaryVersionRequest(\n           ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [CryptoKey][google.cloud.kms.v1.CryptoKey] to update.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "crypto_key_version_id": {
                "type": "str",
                "description": "Required. The id of the child [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to use as primary.  This corresponds to the ``crypto_key_version_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.CryptoKey: A [CryptoKey][google.cloud.kms.v1.CryptoKey] represents a logical key that can be used for cryptographic operations.  A [CryptoKey][google.cloud.kms.v1.CryptoKey] is made up of zero or more [versions][google.cloud.kms.v1.CryptoKeyVersion], which represent the actual key material used in cryptographic operations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "crypto_key_version_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.CryptoKey"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "destroy_crypto_key_version",
          "description": "Schedule a\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] for\ndestruction.\n\nUpon calling this method,\n[CryptoKeyVersion.state][google.cloud.kms.v1.CryptoKeyVersion.state]\nwill be set to\n[DESTROY_SCHEDULED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROY_SCHEDULED],\nand\n[destroy_time][google.cloud.kms.v1.CryptoKeyVersion.destroy_time]\nwill be set to the time\n[destroy_scheduled_duration][google.cloud.kms.v1.CryptoKey.destroy_scheduled_duration]\nin the future. At that time, the\n[state][google.cloud.kms.v1.CryptoKeyVersion.state] will\nautomatically change to\n[DESTROYED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROYED],\nand the key material will be irrevocably destroyed.\n\nBefore the\n[destroy_time][google.cloud.kms.v1.CryptoKeyVersion.destroy_time]\nis reached,\n[RestoreCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.RestoreCryptoKeyVersion]\nmay be called to reverse the process.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated an",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to destroy.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.CryptoKeyVersion: A [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] represents an individual cryptographic key, and the associated key material.  An [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED] version can be used for cryptographic operations.  For security reasons, the raw cryptographic key material represented by a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.CryptoKeyVersion"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "restore_crypto_key_version",
          "description": "Restore a\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] in the\n[DESTROY_SCHEDULED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROY_SCHEDULED]\nstate.\n\nUpon restoration of the CryptoKeyVersion,\n[state][google.cloud.kms.v1.CryptoKeyVersion.state] will be set\nto\n[DISABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DISABLED],\nand\n[destroy_time][google.cloud.kms.v1.CryptoKeyVersion.destroy_time]\nwill be cleared.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_restore_crypto_key_version():\n        # Create a client\n        client",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to restore.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.CryptoKeyVersion: A [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] represents an individual cryptographic key, and the associated key material.  An [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED] version can be used for cryptographic operations.  For security reasons, the raw cryptographic key material represented by a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.CryptoKeyVersion"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "encrypt",
          "description": "Encrypts data, so that it can only be recovered by a call to\n[Decrypt][google.cloud.kms.v1.KeyManagementService.Decrypt]. The\n[CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose] must\nbe\n[ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_encrypt():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.EncryptRequest(\n            name=\"name_value\",\n            plaintext=b'plaintext_blob',\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [CryptoKey][google.cloud.kms.v1.CryptoKey] or [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to use for encryption.  If a [CryptoKey][google.cloud.kms.v1.CryptoKey] is specified, the server will use its [primary version][google.cloud.kms.v1.CryptoKey.primary].  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "plaintext": {
                "type": "bytes",
                "description": "Required. The data to encrypt. Must be no larger than 64KiB.  The maximum size depends on the key version's [protection_level][google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level]. For [SOFTWARE][google.cloud.kms.v1.ProtectionLevel.SOFTWARE], [EXTERNAL][google.cloud.kms.v1.ProtectionLevel.EXTERNAL], and [EXTERNAL_VPC][google.cloud.kms.v1.ProtectionLevel.EXTERNAL_VPC] keys, the plaintext must be no larger than 64KiB. For [HSM][google.cloud.kms.v1.ProtectionLevel.HSM] keys, the combined length of the plaintext and additional_authenticated_data fields must be no larger than 8KiB.  This corresponds to the ``plaintext`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.EncryptResponse: Response message for [KeyManagementService.Encrypt][google.cloud.kms.v1.KeyManagementService.Encrypt]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "plaintext",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.EncryptResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "decrypt",
          "description": "Decrypts data that was protected by\n[Encrypt][google.cloud.kms.v1.KeyManagementService.Encrypt]. The\n[CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose] must\nbe\n[ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_decrypt():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.DecryptRequest(\n            name=\"name_value\",\n            ciphertext=b'ciphertext_blob',\n        )\n\n        # Mak",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [CryptoKey][google.cloud.kms.v1.CryptoKey] to use for decryption. The server will choose the appropriate version.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ciphertext": {
                "type": "bytes",
                "description": "Required. The encrypted data originally returned in [EncryptResponse.ciphertext][google.cloud.kms.v1.EncryptResponse.ciphertext].  This corresponds to the ``ciphertext`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.DecryptResponse: Response message for [KeyManagementService.Decrypt][google.cloud.kms.v1.KeyManagementService.Decrypt]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "ciphertext",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.DecryptResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "raw_encrypt",
          "description": "Encrypts data using portable cryptographic primitives. Most\nusers should choose\n[Encrypt][google.cloud.kms.v1.KeyManagementService.Encrypt] and\n[Decrypt][google.cloud.kms.v1.KeyManagementService.Decrypt]\nrather than their raw counterparts. The\n[CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose] must\nbe\n[RAW_ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.RAW_ENCRYPT_DECRYPT].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_raw_encrypt():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.RawEncryptResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "raw_decrypt",
          "description": "Decrypts data that was originally encrypted using a raw\ncryptographic mechanism. The\n[CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose] must\nbe\n[RAW_ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.RAW_ENCRYPT_DECRYPT].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_raw_decrypt():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.RawDecryptRequest(\n            name=\"name_value\",\n            ciphertext=b'ciphertext_blob',\n            initializatio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.RawDecryptResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "asymmetric_sign",
          "description": "Signs data using a\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] with\n[CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose]\nASYMMETRIC_SIGN, producing a signature that can be verified with\nthe public key retrieved from\n[GetPublicKey][google.cloud.kms.v1.KeyManagementService.GetPublicKey].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_asymmetric_sign():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.AsymmetricSignRequest(\n            name=\"name_value",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to use for signing.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "digest": {
                "type": "google.cloud.kms_v1.types.Digest",
                "description": "Optional. The digest of the data to sign. The digest must be produced with the same digest algorithm as specified by the key version's [algorithm][google.cloud.kms.v1.CryptoKeyVersion.algorithm].  This field may not be supplied if [AsymmetricSignRequest.data][google.cloud.kms.v1.AsymmetricSignRequest.data] is supplied.  This corresponds to the ``digest`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.AsymmetricSignResponse: Response message for [KeyManagementService.AsymmetricSign][google.cloud.kms.v1.KeyManagementService.AsymmetricSign]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "digest",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.AsymmetricSignResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "asymmetric_decrypt",
          "description": "Decrypts data that was encrypted with a public key retrieved\nfrom\n[GetPublicKey][google.cloud.kms.v1.KeyManagementService.GetPublicKey]\ncorresponding to a\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] with\n[CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose]\nASYMMETRIC_DECRYPT.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_asymmetric_decrypt():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.AsymmetricDecryptRequest(\n            name=\"name_value\",\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to use for decryption.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ciphertext": {
                "type": "bytes",
                "description": "Required. The data encrypted with the named [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]'s public key using OAEP.  This corresponds to the ``ciphertext`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.AsymmetricDecryptResponse: Response message for [KeyManagementService.AsymmetricDecrypt][google.cloud.kms.v1.KeyManagementService.AsymmetricDecrypt]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "ciphertext",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.AsymmetricDecryptResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "mac_sign",
          "description": "Signs data using a\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] with\n[CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose] MAC,\nproducing a tag that can be verified by another source with the\nsame key.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_mac_sign():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.MacSignRequest(\n            name=\"name_value\",\n            data=b'data_blob',\n        )\n\n        # Make the request\n        response = await clie",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to use for signing.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "data": {
                "type": "bytes",
                "description": "Required. The data to sign. The MAC tag is computed over this data field based on the specific algorithm.  This corresponds to the ``data`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.MacSignResponse: Response message for [KeyManagementService.MacSign][google.cloud.kms.v1.KeyManagementService.MacSign]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "data",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.MacSignResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "mac_verify",
          "description": "Verifies MAC tag using a\n[CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] with\n[CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose] MAC,\nand returns a response that indicates whether or not the\nverification was successful.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_mac_verify():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.MacVerifyRequest(\n            name=\"name_value\",\n            data=b'data_blob',\n            mac=b'mac_blob',\n        )\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to use for verification.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "data": {
                "type": "bytes",
                "description": "Required. The data used previously as a [MacSignRequest.data][google.cloud.kms.v1.MacSignRequest.data] to generate the MAC tag.  This corresponds to the ``data`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mac": {
                "type": "bytes",
                "description": "Required. The signature to verify. This corresponds to the ``mac`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.MacVerifyResponse: Response message for [KeyManagementService.MacVerify][google.cloud.kms.v1.KeyManagementService.MacVerify]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "data",
              "mac",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.MacVerifyResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "generate_random_bytes",
          "description": "Generate random bytes using the Cloud KMS randomness\nsource in the provided location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import kms_v1\n\n    async def sample_generate_random_bytes():\n        # Create a client\n        client = kms_v1.KeyManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = kms_v1.GenerateRandomBytesRequest(\n        )\n\n        # Make the request\n        response = await client.generate_random_bytes(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.kms_v1.types.GenerateRand",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "location": {
                "type": "str",
                "description": "The project-specific location in which to generate random bytes. For example, \"projects/my-project/locations/us-central1\".  This corresponds to the ``location`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "length_bytes": {
                "type": "int",
                "description": "The length in bytes of the amount of randomness to retrieve.  Minimum 8 bytes, maximum 1024 bytes.  This corresponds to the ``length_bytes`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "protection_level": {
                "type": "google.cloud.kms_v1.types.ProtectionLevel",
                "description": "The [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] to use when generating the random data. Currently, only [HSM][google.cloud.kms.v1.ProtectionLevel.HSM] protection level is supported.  This corresponds to the ``protection_level`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.kms_v1.types.GenerateRandomBytesResponse: Response message for [KeyManagementService.GenerateRandomBytes][google.cloud.kms.v1.KeyManagementService.GenerateRandomBytes]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "location",
              "length_bytes",
              "protection_level",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.kms_v1.types.GenerateRandomBytesResponse"
          ]
        }
      }
    ]
  }
}