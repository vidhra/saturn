{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-data-qna\\google\\cloud\\dataqna_v1alpha\\types\\annotated_string.py": [
    {
      "type": "request_class",
      "name": "AnnotatedString",
      "docstring": "Describes string annotation from both semantic and formatting\nperspectives. Example:\n\nUser Query:\n\ntop countries by population in Africa\n\n0 4 14 17 28 31 37\n\nTable Data:\n\n-  \"country\" - dimension\n-  \"population\" - metric\n-  \"Africa\" - value in the \"continent\" column\n\ntext_formatted = ``\"top countries by population in Africa\"``\n\nhtml_formatted =\n``\"top <b>countries</b> by <b>population</b> in <i>Africa</i>\"``\n\n::\n\n   markups = [\n     {DIMENSION, 4, 12}, // 'countries'\n     {METRIC, 17, 26}, // 'population'\n     {FILTER, 31, 36}  // 'Africa'\n   ]\n\nNote that html formattings for 'DIMENSION' and 'METRIC' are the\nsame, while semantic markups are different.\n\nAttributes:\n    text_formatted (str):\n        Text version of the string.\n    html_formatted (str):\n        HTML version of the string annotation.\n    markups (MutableSequence[google.cloud.dataqna_v1alpha.types.AnnotatedString.SemanticMarkup]):\n        Semantic version of the string annotation.",
      "attributes": {
        "text_formatted": {
          "type": "str",
          "description": "Text version of the string."
        },
        "html_formatted": {
          "type": "str",
          "description": "HTML version of the string annotation."
        },
        "markups": {
          "type": "MutableSequence[google.cloud.dataqna_v1alpha.types.AnnotatedString.SemanticMarkup]",
          "description": "Semantic version of the string annotation."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SemanticMarkup",
      "docstring": "Semantic markup denotes a substring (by index and length)\nwith markup information.\n\nAttributes:\n    type_ (google.cloud.dataqna_v1alpha.types.AnnotatedString.SemanticMarkupType):\n        The semantic type of the markup substring.\n    start_char_index (int):\n        Unicode character index of the query.\n    length (int):\n        The length (number of unicode characters) of\n        the markup substring.",
      "attributes": {
        "type_": {
          "type": "google.cloud.dataqna_v1alpha.types.AnnotatedString.SemanticMarkupType",
          "description": "The semantic type of the markup substring."
        },
        "start_char_index": {
          "type": "int",
          "description": "Unicode character index of the query."
        },
        "length": {
          "type": "int",
          "description": "The length (number of unicode characters) of the markup substring."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-data-qna\\google\\cloud\\dataqna_v1alpha\\types\\auto_suggestion_service.py": [
    {
      "type": "request_class",
      "name": "SuggestQueriesRequest",
      "docstring": "Request for query suggestions.\n\nAttributes:\n    parent (str):\n        Required. The parent of the suggestion query\n        is the resource denoting the project and\n        location.\n    scopes (MutableSequence[str]):\n        The scopes to which this search is restricted. The only\n        supported scope pattern is\n        ``//bigquery.googleapis.com/projects/{GCP-PROJECT-ID}/datasets/{DATASET-ID}/tables/{TABLE-ID}``.\n    query (str):\n        User query for which to generate suggestions.\n        If the query is empty, zero state suggestions\n        are returned. This allows UIs to display\n        suggestions right away, helping the user to get\n        a sense of what a query might look like.\n    suggestion_types (MutableSequence[google.cloud.dataqna_v1alpha.types.SuggestionType]):\n        The requested suggestion type. Multiple\n        suggestion types can be requested, but there is\n        no guarantee that the service will return\n        suggestions for each type. Suggestions for a\n        requested type mig",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The parent of the suggestion query is the resource denoting the project and location."
        },
        "scopes": {
          "type": "MutableSequence[str]",
          "description": "The scopes to which this search is restricted. The only supported scope pattern is ``//bigquery.googleapis.com/projects/{GCP-PROJECT-ID}/datasets/{DATASET-ID}/tables/{TABLE-ID}``."
        },
        "query": {
          "type": "str",
          "description": "User query for which to generate suggestions. If the query is empty, zero state suggestions are returned. This allows UIs to display suggestions right away, helping the user to get a sense of what a query might look like."
        },
        "suggestion_types": {
          "type": "MutableSequence[google.cloud.dataqna_v1alpha.types.SuggestionType]",
          "description": "The requested suggestion type. Multiple suggestion types can be requested, but there is no guarantee that the service will return suggestions for each type. Suggestions for a requested type might rank lower than suggestions for other types and the service may decide to cut these suggestions off."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Suggestion",
      "docstring": "A suggestion for a query with a ranking score.\n\nAttributes:\n    suggestion_info (google.cloud.dataqna_v1alpha.types.SuggestionInfo):\n        Detailed information about the suggestion.\n    ranking_score (float):\n        The score of the suggestion. This can be used to define\n        ordering in UI. The score represents confidence in the\n        suggestion where higher is better. All score values must be\n        in the range [0, 1).\n    suggestion_type (google.cloud.dataqna_v1alpha.types.SuggestionType):\n        The type of the suggestion.",
      "attributes": {
        "suggestion_info": {
          "type": "google.cloud.dataqna_v1alpha.types.SuggestionInfo",
          "description": "Detailed information about the suggestion."
        },
        "ranking_score": {
          "type": "float",
          "description": "The score of the suggestion. This can be used to define ordering in UI. The score represents confidence in the suggestion where higher is better. All score values must be in the range [0, 1)."
        },
        "suggestion_type": {
          "type": "google.cloud.dataqna_v1alpha.types.SuggestionType",
          "description": "The type of the suggestion."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SuggestionInfo",
      "docstring": "Detailed information about the suggestion.\n\nAttributes:\n    annotated_suggestion (google.cloud.dataqna_v1alpha.types.AnnotatedString):\n        Annotations for the suggestion. This provides\n        information about which part of the suggestion\n        corresponds to what semantic meaning (e.g. a\n        metric).\n    query_matches (MutableSequence[google.cloud.dataqna_v1alpha.types.SuggestionInfo.MatchInfo]):\n        Matches between user query and the annotated\n        string.",
      "attributes": {
        "annotated_suggestion": {
          "type": "google.cloud.dataqna_v1alpha.types.AnnotatedString",
          "description": "Annotations for the suggestion. This provides information about which part of the suggestion corresponds to what semantic meaning (e.g. a metric)."
        },
        "query_matches": {
          "type": "MutableSequence[google.cloud.dataqna_v1alpha.types.SuggestionInfo.MatchInfo]",
          "description": "Matches between user query and the annotated string."
        }
      }
    },
    {
      "type": "request_class",
      "name": "SuggestQueriesResponse",
      "docstring": "Response to SuggestQueries.\n\nAttributes:\n    suggestions (MutableSequence[google.cloud.dataqna_v1alpha.types.Suggestion]):\n        A list of suggestions.",
      "attributes": {
        "suggestions": {
          "type": "MutableSequence[google.cloud.dataqna_v1alpha.types.Suggestion]",
          "description": "A list of suggestions."
        }
      }
    },
    {
      "type": "request_class",
      "name": "MatchInfo",
      "docstring": "MatchInfo describes which part of suggestion matched with data in\nuser typed query. This can be used to highlight matching parts in\nthe UI. This is different from the annotations provided in\nannotated_suggestion. The annotated_suggestion provides information\nabout the semantic meaning, while this provides information about\nhow it relates to the input.\n\nExample: user query: ``top products``\n\n::\n\n   annotated_suggestion {\n    text_formatted = \"top product_group\"\n    html_formatted = \"top <b>product_group</b>\"\n    markups {\n     {type: TEXT, start_char_index: 0, length: 3}\n     {type: DIMENSION, start_char_index: 4, length: 13}\n    }\n   }\n\n   query_matches {\n    { start_char_index: 0, length: 3 }\n    { start_char_index: 4, length: 7}\n   }\n\nAttributes:\n    start_char_index (int):\n        Unicode character index of the string\n        annotation.\n    length (int):\n        Count of unicode characters of this\n        substring.",
      "attributes": {
        "start_char_index": {
          "type": "int",
          "description": "Unicode character index of the string annotation."
        },
        "length": {
          "type": "int",
          "description": "Count of unicode characters of this substring."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-data-qna\\google\\cloud\\dataqna_v1alpha\\types\\question.py": [
    {
      "type": "request_class",
      "name": "Question",
      "docstring": "The question resource represents a natural language query,\nits settings, understanding generated by the system, and answer\nretrieval status. A question cannot be modified.\n\nAttributes:\n    name (str):\n        Output only. Immutable. The unique identifier for the\n        Question. The ID is server-generated. Example:\n        ``projects/foo/locations/bar/questions/123``\n    scopes (MutableSequence[str]):\n        Required. Immutable. Scopes to be used for the question. A\n        scope defines the relevant data set scope. It can be a\n        reference to a specific data source or a collection of data\n        sources. Currently, support is limited to a single BigQuery\n        table. There must be exactly one ``scopes`` element.\n\n        Example:\n        ``//bigquery.googleapis.com/projects/test-project/datasets/foo/tables/bar``\n    query (str):\n        Required. Immutable. The query in natural\n        language.\n    data_source_annotations (MutableSequence[str]):\n        A list of annotations to use instead of the\n",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Output only. Immutable. The unique identifier for the Question. The ID is server-generated. Example: ``projects/foo/locations/bar/questions/123``"
        },
        "scopes": {
          "type": "MutableSequence[str]",
          "description": "Required. Immutable. Scopes to be used for the question. A scope defines the relevant data set scope. It can be a reference to a specific data source or a collection of data sources. Currently, support is limited to a single BigQuery table. There must be exactly one ``scopes`` element.  Example: ``//bigquery.googleapis.com/projects/test-project/datasets/foo/tables/bar``"
        },
        "query": {
          "type": "str",
          "description": "Required. Immutable. The query in natural language."
        },
        "data_source_annotations": {
          "type": "MutableSequence[str]",
          "description": "A list of annotations to use instead of the default annotation of a data source (set in the data source reference resource). There must not be more than one annotation with the same data source reference."
        },
        "interpret_error": {
          "type": "google.cloud.dataqna_v1alpha.types.InterpretError",
          "description": "An error field explaining why interpretation failed. This is only populated if the interpretation failed.  Note: This is different from getting a status error on the request itself. This is not a client or server error and the Question resource is still persisted, but the service could not interpret the question. Clients should present the error to the user so the user can rephrase the question."
        },
        "interpretations": {
          "type": "MutableSequence[google.cloud.dataqna_v1alpha.types.Interpretation]",
          "description": "A list of interpretations for this question."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Time when the question was created."
        },
        "user_email": {
          "type": "str",
          "description": "Output only. The e-mail address of the user that created this question."
        },
        "debug_flags": {
          "type": "google.cloud.dataqna_v1alpha.types.DebugFlags",
          "description": "Input only. Immutable. Flags to request additional information for debugging purposes."
        },
        "debug_info": {
          "type": "google.protobuf.any_pb2.Any",
          "description": "Top level debug information. This will be stored as the type DebugInformation. Using Any so clients don't need to pull in anything inside the debug message."
        }
      }
    },
    {
      "type": "request_class",
      "name": "InterpretError",
      "docstring": "Details on the failure to interpret the question.\n\nAttributes:\n    message (str):\n        Error message explaining why this question\n        could not be interpreted.\n    code (google.cloud.dataqna_v1alpha.types.InterpretError.InterpretErrorCode):\n        The code for the error category why the\n        interpretation failed.\n    details (google.cloud.dataqna_v1alpha.types.InterpretError.InterpretErrorDetails):\n        Details on interpretation failure.",
      "attributes": {
        "message": {
          "type": "str",
          "description": "Error message explaining why this question could not be interpreted."
        },
        "code": {
          "type": "google.cloud.dataqna_v1alpha.types.InterpretError.InterpretErrorCode",
          "description": "The code for the error category why the interpretation failed."
        },
        "details": {
          "type": "google.cloud.dataqna_v1alpha.types.InterpretError.InterpretErrorDetails",
          "description": "Details on interpretation failure."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ExecutionInfo",
      "docstring": "Information about the backend status (such as BigQuery) of\nthe execution.\n\nAttributes:\n    job_creation_status (google.rpc.status_pb2.Status):\n        Status returned by the backend when the job\n        was created.\n    job_execution_state (google.cloud.dataqna_v1alpha.types.ExecutionInfo.JobExecutionState):\n        Status of the job execution.\n    create_time (google.protobuf.timestamp_pb2.Timestamp):\n        Time when the execution was triggered.\n    bigquery_job (google.cloud.dataqna_v1alpha.types.BigQueryJob):\n        BigQuery job information.\n        Future versions will have different backends.\n        Hence, clients must make sure they can handle it\n        when this field is not populated.",
      "attributes": {
        "job_creation_status": {
          "type": "google.rpc.status_pb2.Status",
          "description": "Status returned by the backend when the job was created."
        },
        "job_execution_state": {
          "type": "google.cloud.dataqna_v1alpha.types.ExecutionInfo.JobExecutionState",
          "description": "Status of the job execution."
        },
        "create_time": {
          "type": "google.protobuf.timestamp_pb2.Timestamp",
          "description": "Time when the execution was triggered."
        },
        "bigquery_job": {
          "type": "google.cloud.dataqna_v1alpha.types.BigQueryJob",
          "description": "BigQuery job information. Future versions will have different backends. Hence, clients must make sure they can handle it when this field is not populated."
        }
      }
    },
    {
      "type": "request_class",
      "name": "BigQueryJob",
      "docstring": "BigQuery job information. This can be used to query the BigQuery API\nand retrieve the current job's status (using\n`jobs.get <https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/get>`__).\n\nAttributes:\n    job_id (str):\n        The job ID.\n    project_id (str):\n        The project ID of the job.\n    location (str):\n        The location where the job is running.",
      "attributes": {
        "job_id": {
          "type": "str",
          "description": "The job ID."
        },
        "project_id": {
          "type": "str",
          "description": "The project ID of the job."
        },
        "location": {
          "type": "str",
          "description": "The location where the job is running."
        }
      }
    },
    {
      "type": "request_class",
      "name": "Interpretation",
      "docstring": "An interpretation of a natural language query.\n\nAttributes:\n    data_sources (MutableSequence[str]):\n        List of data sources used in the current\n        understanding.\n    confidence (float):\n        The level of confidence that one of the interpretations is\n        correct. This is a value in the range [0, 1] where a value\n        of 0.5 or below is to be considered a low confidence.\n    unused_phrases (MutableSequence[str]):\n        A list of unused phrases. Clients should\n        display a Did You Mean (DYM)  dialog if this is\n        non-empty, even if this is the only\n        interpretation.\n    human_readable (google.cloud.dataqna_v1alpha.types.HumanReadable):\n        Human readable representation of the query.\n    interpretation_structure (google.cloud.dataqna_v1alpha.types.InterpretationStructure):\n        Information about the interpretation\n        structure that helps to understand and visualize\n        the response.\n    data_query (google.cloud.dataqna_v1alpha.types.DataQuery):\n        Repres",
      "attributes": {
        "data_sources": {
          "type": "MutableSequence[str]",
          "description": "List of data sources used in the current understanding."
        },
        "confidence": {
          "type": "float",
          "description": "The level of confidence that one of the interpretations is correct. This is a value in the range [0, 1] where a value of 0.5 or below is to be considered a low confidence."
        },
        "unused_phrases": {
          "type": "MutableSequence[str]",
          "description": "A list of unused phrases. Clients should display a Did You Mean (DYM)  dialog if this is non-empty, even if this is the only interpretation."
        },
        "human_readable": {
          "type": "google.cloud.dataqna_v1alpha.types.HumanReadable",
          "description": "Human readable representation of the query."
        },
        "interpretation_structure": {
          "type": "google.cloud.dataqna_v1alpha.types.InterpretationStructure",
          "description": "Information about the interpretation structure that helps to understand and visualize the response."
        },
        "data_query": {
          "type": "google.cloud.dataqna_v1alpha.types.DataQuery",
          "description": "Representation of the data query to be sent to the backend."
        },
        "execution_info": {
          "type": "google.cloud.dataqna_v1alpha.types.ExecutionInfo",
          "description": "Information about the backend response. This is populated only if execution of an interpretation was requested."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DataQuery",
      "docstring": "Representation of the data query for the backend. This is provided\nfor informational purposes only. Clients should not use it to send\nit to the backend directly, but rather use the ``execute`` RPC to\ntrigger the execution. Using the ``execute`` RPC is needed in order\nto track the state of a question and report on it correctly to the\ndata administrators.\n\nAttributes:\n    sql (str):\n        The generated SQL query to be sent to the\n        backend.",
      "attributes": {
        "sql": {
          "type": "str",
          "description": "The generated SQL query to be sent to the backend."
        }
      }
    },
    {
      "type": "request_class",
      "name": "HumanReadable",
      "docstring": "Human readable interpretation.\n\nAttributes:\n    generated_interpretation (google.cloud.dataqna_v1alpha.types.AnnotatedString):\n        Generated query explaining the\n        interpretation.\n    original_question (google.cloud.dataqna_v1alpha.types.AnnotatedString):\n        Annotations on the original query.",
      "attributes": {
        "generated_interpretation": {
          "type": "google.cloud.dataqna_v1alpha.types.AnnotatedString",
          "description": "Generated query explaining the interpretation."
        },
        "original_question": {
          "type": "google.cloud.dataqna_v1alpha.types.AnnotatedString",
          "description": "Annotations on the original query."
        }
      }
    },
    {
      "type": "request_class",
      "name": "InterpretationStructure",
      "docstring": "Information about the interpretation structure that helps to\nunderstand and visualize the response.\n\nAttributes:\n    visualization_types (MutableSequence[google.cloud.dataqna_v1alpha.types.InterpretationStructure.VisualizationType]):\n        List of possible visualization types to apply\n        for this interpretation. The order has no\n        relevance.\n    column_info (MutableSequence[google.cloud.dataqna_v1alpha.types.InterpretationStructure.ColumnInfo]):\n        Information about the output columns, that\n        is, the columns that will be returned by the\n        backend.",
      "attributes": {
        "visualization_types": {
          "type": "MutableSequence[google.cloud.dataqna_v1alpha.types.InterpretationStructure.VisualizationType]",
          "description": "List of possible visualization types to apply for this interpretation. The order has no relevance."
        },
        "column_info": {
          "type": "MutableSequence[google.cloud.dataqna_v1alpha.types.InterpretationStructure.ColumnInfo]",
          "description": "Information about the output columns, that is, the columns that will be returned by the backend."
        }
      }
    },
    {
      "type": "request_class",
      "name": "DebugFlags",
      "docstring": "Configuriation of debug flags.\n\nAttributes:\n    include_va_query (bool):\n        Whether to include the original VAQuery.\n    include_nested_va_query (bool):\n        Whether to include the original nested\n        VAQuery.\n    include_human_interpretation (bool):\n        Whether to include the original human\n        interpretation strings generated by Analyza.\n    include_aqua_debug_response (bool):\n        Whether to include the Aqua debug response.\n    time_override (int):\n        The time in milliseconds from Unix epoch to be used to\n        process the query. This is useful for testing the queries at\n        different time period. If not set or time_override <= 0,\n        then the current time is used.\n    is_internal_google_user (bool):\n        Set to true if request is initiated by an\n        internal Google user.\n    ignore_cache (bool):\n        Determines whether cache needs to be ignored.\n        If set to true, cache won't be queried and\n        updated.\n    include_search_entities_rpc (bool):\n      ",
      "attributes": {
        "include_va_query": {
          "type": "bool",
          "description": "Whether to include the original VAQuery."
        },
        "include_nested_va_query": {
          "type": "bool",
          "description": "Whether to include the original nested VAQuery."
        },
        "include_human_interpretation": {
          "type": "bool",
          "description": "Whether to include the original human interpretation strings generated by Analyza."
        },
        "include_aqua_debug_response": {
          "type": "bool",
          "description": "Whether to include the Aqua debug response."
        },
        "time_override": {
          "type": "int",
          "description": "The time in milliseconds from Unix epoch to be used to process the query. This is useful for testing the queries at different time period. If not set or time_override <= 0, then the current time is used."
        },
        "is_internal_google_user": {
          "type": "bool",
          "description": "Set to true if request is initiated by an internal Google user."
        },
        "ignore_cache": {
          "type": "bool",
          "description": "Determines whether cache needs to be ignored. If set to true, cache won't be queried and updated."
        },
        "include_search_entities_rpc": {
          "type": "bool",
          "description": "Whether to include the request/response pair from the call to the EntityIndex for SearchEntities."
        },
        "include_list_column_annotations_rpc": {
          "type": "bool",
          "description": "Whether to include the request/response pair from the call to the Annotations service for ListColumnAnnotations."
        },
        "include_virtual_analyst_entities": {
          "type": "bool",
          "description": "Whether to include the entity list passed to Analyza."
        },
        "include_table_list": {
          "type": "bool",
          "description": "Whether to include the table list."
        },
        "include_domain_list": {
          "type": "bool",
          "description": "Whether to include the domain list."
        }
      }
    },
    {
      "type": "request_class",
      "name": "InterpretErrorDetails",
      "docstring": "Details on interpretation failure.\n\nAttributes:\n    unsupported_details (google.cloud.dataqna_v1alpha.types.InterpretError.InterpretUnsupportedDetails):\n        Populated if parts of the query are\n        unsupported.\n    incomplete_query_details (google.cloud.dataqna_v1alpha.types.InterpretError.InterpretIncompleteQueryDetails):\n        Populated if the query is incomplete.\n    ambiguity_details (google.cloud.dataqna_v1alpha.types.InterpretError.InterpretAmbiguityDetails):\n        Populated if the query was too ambiguous.",
      "attributes": {
        "unsupported_details": {
          "type": "google.cloud.dataqna_v1alpha.types.InterpretError.InterpretUnsupportedDetails",
          "description": "Populated if parts of the query are unsupported."
        },
        "incomplete_query_details": {
          "type": "google.cloud.dataqna_v1alpha.types.InterpretError.InterpretIncompleteQueryDetails",
          "description": "Populated if the query is incomplete."
        },
        "ambiguity_details": {
          "type": "google.cloud.dataqna_v1alpha.types.InterpretError.InterpretAmbiguityDetails",
          "description": "Populated if the query was too ambiguous."
        }
      }
    },
    {
      "type": "request_class",
      "name": "InterpretUnsupportedDetails",
      "docstring": "Details about unsupported parts in a query.\n\nAttributes:\n    operators (MutableSequence[str]):\n        Unsupported operators. For example: median.\n    intent (MutableSequence[str]):\n        Unsupported intents.",
      "attributes": {
        "operators": {
          "type": "MutableSequence[str]",
          "description": "Unsupported operators. For example: median."
        },
        "intent": {
          "type": "MutableSequence[str]",
          "description": "Unsupported intents."
        }
      }
    },
    {
      "type": "request_class",
      "name": "InterpretIncompleteQueryDetails",
      "docstring": "Details about an incomplete query.\n\nAttributes:\n    entities (MutableSequence[google.cloud.dataqna_v1alpha.types.InterpretEntity]):\n        List of missing interpret entities.",
      "attributes": {
        "entities": {
          "type": "MutableSequence[google.cloud.dataqna_v1alpha.types.InterpretEntity]",
          "description": "List of missing interpret entities."
        }
      }
    },
    {
      "type": "request_class",
      "name": "InterpretAmbiguityDetails",
      "docstring": "Details about a query that was too ambiguous. Currently, the\nmessage has no fields and its presence signals that there was\nambiguity.",
      "attributes": {}
    },
    {
      "type": "request_class",
      "name": "ColumnInfo",
      "docstring": "Information about a column.\n\nAttributes:\n    output_alias (str):\n        The alias of the output column as used by the\n        backend. For example, the field name in the\n        schema provided in the query response in\n        BigQuery.\n    display_name (str):\n        Human readable name of the output column.",
      "attributes": {
        "output_alias": {
          "type": "str",
          "description": "The alias of the output column as used by the backend. For example, the field name in the schema provided in the query response in BigQuery."
        },
        "display_name": {
          "type": "str",
          "description": "Human readable name of the output column."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-data-qna\\google\\cloud\\dataqna_v1alpha\\types\\question_service.py": [
    {
      "type": "request_class",
      "name": "GetQuestionRequest",
      "docstring": "A request to get a previously created question.\n\nAttributes:\n    name (str):\n        Required. The unique identifier for the question. Example:\n        ``projects/foo/locations/bar/questions/1234``\n    read_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to be retrieved.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The unique identifier for the question. Example: ``projects/foo/locations/bar/questions/1234``"
        },
        "read_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "The list of fields to be retrieved."
        }
      }
    },
    {
      "type": "request_class",
      "name": "CreateQuestionRequest",
      "docstring": "Request to create a question resource.\n\nAttributes:\n    parent (str):\n        Required. The name of the project this data source reference\n        belongs to. Example: ``projects/foo/locations/bar``\n    question (google.cloud.dataqna_v1alpha.types.Question):\n        Required. The question to create.",
      "attributes": {
        "parent": {
          "type": "str",
          "description": "Required. The name of the project this data source reference belongs to. Example: ``projects/foo/locations/bar``"
        },
        "question": {
          "type": "google.cloud.dataqna_v1alpha.types.Question",
          "description": "Required. The question to create."
        }
      }
    },
    {
      "type": "request_class",
      "name": "ExecuteQuestionRequest",
      "docstring": "Request to execute an interpretation.\n\nAttributes:\n    name (str):\n        Required. The unique identifier for the question. Example:\n        ``projects/foo/locations/bar/questions/1234``\n    interpretation_index (int):\n        Required. Index of the interpretation to\n        execute.",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The unique identifier for the question. Example: ``projects/foo/locations/bar/questions/1234``"
        },
        "interpretation_index": {
          "type": "int",
          "description": "Required. Index of the interpretation to execute."
        }
      }
    },
    {
      "type": "request_class",
      "name": "GetUserFeedbackRequest",
      "docstring": "Request to get user feedback.\n\nAttributes:\n    name (str):\n        Required. The unique identifier for the user feedback. User\n        feedback is a singleton resource on a Question. Example:\n        ``projects/foo/locations/bar/questions/1234/userFeedback``",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The unique identifier for the user feedback. User feedback is a singleton resource on a Question. Example: ``projects/foo/locations/bar/questions/1234/userFeedback``"
        }
      }
    },
    {
      "type": "request_class",
      "name": "UpdateUserFeedbackRequest",
      "docstring": "Request to updates user feedback.\n\nAttributes:\n    user_feedback (google.cloud.dataqna_v1alpha.types.UserFeedback):\n        Required. The user feedback to update. This\n        can be called even if there is no user feedback\n        so far. The feedback's name field is used to\n        identify the user feedback (and the\n        corresponding question) to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to be updated.",
      "attributes": {
        "user_feedback": {
          "type": "google.cloud.dataqna_v1alpha.types.UserFeedback",
          "description": "Required. The user feedback to update. This can be called even if there is no user feedback so far. The feedback's name field is used to identify the user feedback (and the corresponding question) to update."
        },
        "update_mask": {
          "type": "google.protobuf.field_mask_pb2.FieldMask",
          "description": "The list of fields to be updated."
        }
      }
    }
  ],
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-data-qna\\google\\cloud\\dataqna_v1alpha\\types\\user_feedback.py": [
    {
      "type": "request_class",
      "name": "UserFeedback",
      "docstring": "Feedback provided by a user.\n\nAttributes:\n    name (str):\n        Required. The unique identifier for the user feedback. User\n        feedback is a singleton resource on a Question. Example:\n        ``projects/foo/locations/bar/questions/1234/userFeedback``\n    free_form_feedback (str):\n        Free form user feedback, such as a text box.\n    rating (google.cloud.dataqna_v1alpha.types.UserFeedback.UserFeedbackRating):\n        The user feedback rating",
      "attributes": {
        "name": {
          "type": "str",
          "description": "Required. The unique identifier for the user feedback. User feedback is a singleton resource on a Question. Example: ``projects/foo/locations/bar/questions/1234/userFeedback``"
        },
        "free_form_feedback": {
          "type": "str",
          "description": "Free form user feedback, such as a text box."
        },
        "rating": {
          "type": "google.cloud.dataqna_v1alpha.types.UserFeedback.UserFeedbackRating",
          "description": "The user feedback rating"
        }
      }
    }
  ]
}