{
  "ConsumerProcurementService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "place_order",
          "description": "Creates a new\n[Order][google.cloud.commerce.consumer.procurement.v1.Order].\n\nThis API only supports GCP spend-based committed use discounts\nspecified by GCP documentation.\n\nThe returned long-running operation is in-progress until the\nbackend completes the creation of the resource. Once completed,\nthe order is in\n[OrderState.ORDER_STATE_ACTIVE][google.cloud.commerce.consumer.procurement.v1.OrderState.ORDER_STATE_ACTIVE].\nIn case of failure, the order resource will be removed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import commerce_consumer_procurement_v1\n\n    async def sample_place_order():\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_order",
          "description": "Returns the requested\n[Order][google.cloud.commerce.consumer.procurement.v1.Order]\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import commerce_consumer_procurement_v1\n\n    async def sample_get_order():\n        # Create a client\n        client = commerce_consumer_procurement_v1.ConsumerProcurementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = commerce_consumer_procurement_v1.GetOrderRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_order(request=request)\n\n        # Handle the response\n        pr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the order to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.commerce_consumer_procurement_v1.types.Order: Represents a purchase made by a customer on Cloud Marketplace. Creating an order makes sure that both the Google backend systems as well as external service provider's systems (if needed) allow use of purchased products and ensures the appropriate billing events occur.  An Order can be made against one Product with multiple add-ons (optional) or one Quote which might reference multiple products.  Customers typically choose a price plan for each Product purchased when they create an order and can change their plan later, if the product allows."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_orders",
          "description": "Lists\n[Order][google.cloud.commerce.consumer.procurement.v1.Order]\nresources that the user has access to, within the scope of the\nparent resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import commerce_consumer_procurement_v1\n\n    async def sample_list_orders():\n        # Create a client\n        client = commerce_consumer_procurement_v1.ConsumerProcurementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = commerce_consumer_procurement_v1.ListOrdersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_orde",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource to query for orders. This field has the form ``billingAccounts/{billing-account-id}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.commerce_consumer_procurement_v1.services.consumer_procurement_service.pagers.ListOrdersAsyncPager: Response message for [ConsumerProcurementService.ListOrders][google.cloud.commerce.consumer.procurement.v1.ConsumerProcurementService.ListOrders].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "modify_order",
          "description": "Modifies an existing\n[Order][google.cloud.commerce.consumer.procurement.v1.Order]\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import commerce_consumer_procurement_v1\n\n    async def sample_modify_order():\n        # Create a client\n        client = commerce_consumer_procurement_v1.ConsumerProcurementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = commerce_consumer_procurement_v1.ModifyOrderRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.modify_order(request=request)\n\n        print(\"Waiting for operation ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_order",
          "description": "Cancels an existing\n[Order][google.cloud.commerce.consumer.procurement.v1.Order].\nEvery product procured in the Order will be cancelled.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import commerce_consumer_procurement_v1\n\n    async def sample_cancel_order():\n        # Create a client\n        client = commerce_consumer_procurement_v1.ConsumerProcurementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = commerce_consumer_procurement_v1.CancelOrderRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.cancel_order(request=re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "LicenseManagementService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_license_pool",
          "description": "Gets the license pool.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import commerce_consumer_procurement_v1\n\n    async def sample_get_license_pool():\n        # Create a client\n        client = commerce_consumer_procurement_v1.LicenseManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = commerce_consumer_procurement_v1.GetLicensePoolRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_license_pool(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the license pool to get. Format: ``billingAccounts/{billing_account}/orders/{order}/licensePool``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.commerce_consumer_procurement_v1.types.LicensePool: A license pool represents a pool of licenses that can be assigned to users."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_license_pool",
          "description": "Updates the license pool if one exists for this\nOrder.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import commerce_consumer_procurement_v1\n\n    async def sample_update_license_pool():\n        # Create a client\n        client = commerce_consumer_procurement_v1.LicenseManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = commerce_consumer_procurement_v1.UpdateLicensePoolRequest(\n        )\n\n        # Make the request\n        response = await client.update_license_pool(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "license_pool": {
                "type": "google.cloud.commerce_consumer_procurement_v1.types.LicensePool",
                "description": "Required. The license pool to update.  The license pool's name field is used to identify the license pool to update. Format: ``billingAccounts/{billing_account}/orders/{order}/licensePool``.  This corresponds to the ``license_pool`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to update.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.commerce_consumer_procurement_v1.types.LicensePool: A license pool represents a pool of licenses that can be assigned to users."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "license_pool",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "assign",
          "description": "Assigns a license to a user.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import commerce_consumer_procurement_v1\n\n    async def sample_assign():\n        # Create a client\n        client = commerce_consumer_procurement_v1.LicenseManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = commerce_consumer_procurement_v1.AssignRequest(\n            parent=\"parent_value\",\n            usernames=['usernames_value1', 'usernames_value2'],\n        )\n\n        # Make the request\n        response = await client.assign(request=request)\n\n        # Handle the response\n        print(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. License pool name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "usernames": {
                "type": "MutableSequence[str]",
                "description": "Required. Username. Format: ``name@domain.com``. This corresponds to the ``usernames`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.commerce_consumer_procurement_v1.types.AssignResponse: Response message for [LicenseManagementService.Assign][google.cloud.commerce.consumer.procurement.v1.LicenseManagementService.Assign]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "usernames",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "unassign",
          "description": "Unassigns a license from a user.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import commerce_consumer_procurement_v1\n\n    async def sample_unassign():\n        # Create a client\n        client = commerce_consumer_procurement_v1.LicenseManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = commerce_consumer_procurement_v1.UnassignRequest(\n            parent=\"parent_value\",\n            usernames=['usernames_value1', 'usernames_value2'],\n        )\n\n        # Make the request\n        response = await client.unassign(request=request)\n\n        # Handle the response\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. License pool name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "usernames": {
                "type": "MutableSequence[str]",
                "description": "Required. Username. Format: ``name@domain.com``. This corresponds to the ``usernames`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.commerce_consumer_procurement_v1.types.UnassignResponse: Response message for [LicenseManagementService.Unassign][google.cloud.commerce.consumer.procurement.v1.LicenseManagementService.Unassign]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "usernames",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "enumerate_licensed_users",
          "description": "Enumerates all users assigned a license.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import commerce_consumer_procurement_v1\n\n    async def sample_enumerate_licensed_users():\n        # Create a client\n        client = commerce_consumer_procurement_v1.LicenseManagementServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = commerce_consumer_procurement_v1.EnumerateLicensedUsersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.enumerate_licensed_users(request=request)\n\n        # Handle the response\n        async for r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. License pool name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.commerce_consumer_procurement_v1.services.license_management_service.pagers.EnumerateLicensedUsersAsyncPager: Response message for [LicenseManagementService.EnumerateLicensedUsers][google.cloud.commerce.consumer.procurement.v1.LicenseManagementService.EnumerateLicensedUsers].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}