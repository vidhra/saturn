{
  "AnalyticsAdminService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_account",
          "description": "Lookup for a single Account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_get_account():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.GetAccountRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_account(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.GetAccountRequest, dict]]):\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the account to lookup. Format: accounts/{account} Example: \"accounts/100\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.Account: A resource message representing a Google Analytics account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetAccountRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_accounts",
          "description": "Returns all accounts accessible by the caller.\n\nNote that these accounts might not currently have GA4\nproperties. Soft-deleted (ie: \"trashed\") accounts are\nexcluded by default. Returns an empty list if no\nrelevant accounts are found.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_list_accounts():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ListAccountsRequest(\n        )\n\n        # Make the request\n        page_result = client.list_accounts(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListAccountsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_account",
          "description": "Marks target Account as soft-deleted (ie: \"trashed\")\nand returns it.\nThis API does not have a method to restore soft-deleted\naccounts. However, they can be restored using the Trash\nCan UI.\n\nIf the accounts are not restored before the expiration\ntime, the account and all child resources (eg:\nProperties, GoogleAdsLinks, Streams, AccessBindings)\nwill be permanently purged.\nhttps://support.google.com/analytics/answer/6154772\n\nReturns an error if the target is not found.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_delete_account():\n        # Create a client\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Account to soft-delete. Format: accounts/{account} Example: \"accounts/100\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteAccountRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_account",
          "description": "Updates an account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_update_account():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        account = admin_v1beta.Account()\n        account.display_name = \"display_name_value\"\n\n        request = admin_v1beta.UpdateAccountRequest(\n            account=account,\n        )\n\n        # Make the request\n        response = await client.update_account(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "account": {
                "type": "google.analytics.admin_v1beta.types.Account",
                "description": "Required. The account to update. The account's ``name`` field is used to identify the account.  This corresponds to the ``account`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (for example, \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.Account: A resource message representing a Google Analytics account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "account",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateAccountRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "provision_account_ticket",
          "description": "Requests a ticket for creating an account.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_provision_account_ticket():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ProvisionAccountTicketRequest(\n        )\n\n        # Make the request\n        response = await client.provision_account_ticket(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.ProvisionAcco",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ProvisionAccountTicketRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_account_summaries",
          "description": "Returns summaries of all accounts accessible by the\ncaller.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_list_account_summaries():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ListAccountSummariesRequest(\n        )\n\n        # Make the request\n        page_result = client.list_account_summaries(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListAccountSummariesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_property",
          "description": "Lookup for a single \"GA4\" Property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_get_property():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.GetPropertyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_property(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.GetPropertyRequest, dict",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the property to lookup. Format: properties/{property_id} Example: \"properties/1000\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.Property: A resource message representing a Google Analytics GA4 property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetPropertyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_properties",
          "description": "Returns child Properties under the specified parent\nAccount.\nOnly \"GA4\" properties will be returned.\nProperties will be excluded if the caller does not have\naccess. Soft-deleted (ie: \"trashed\") properties are\nexcluded by default. Returns an empty list if no\nrelevant properties are found.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_list_properties():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ListPropertiesRequest(\n            filter=\"fi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListPropertiesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_property",
          "description": "Creates an \"GA4\" property with the specified location\nand attributes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_create_property():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        property = admin_v1beta.Property()\n        property.display_name = \"display_name_value\"\n        property.time_zone = \"time_zone_value\"\n\n        request = admin_v1beta.CreatePropertyRequest(\n            property=property,\n        )\n\n        # Make the request\n        response = await cli",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "property": {
                "type": "google.analytics.admin_v1beta.types.Property",
                "description": "Required. The property to create. Note: the supplied property must specify its parent.  This corresponds to the ``property`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.Property: A resource message representing a Google Analytics GA4 property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "property",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreatePropertyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_property",
          "description": "Marks target Property as soft-deleted (ie: \"trashed\")\nand returns it.\nThis API does not have a method to restore soft-deleted\nproperties. However, they can be restored using the\nTrash Can UI.\n\nIf the properties are not restored before the expiration\ntime, the Property and all child resources (eg:\nGoogleAdsLinks, Streams, AccessBindings) will be\npermanently purged.\nhttps://support.google.com/analytics/answer/6154772\n\nReturns an error if the target is not found, or is not a\nGA4 Property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_delete_property():\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Property to soft-delete. Format: properties/{property_id} Example: \"properties/1000\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.Property: A resource message representing a Google Analytics GA4 property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeletePropertyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_property",
          "description": "Updates a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_update_property():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        property = admin_v1beta.Property()\n        property.display_name = \"display_name_value\"\n        property.time_zone = \"time_zone_value\"\n\n        request = admin_v1beta.UpdatePropertyRequest(\n            property=property,\n        )\n\n        # Make the request\n        response = await client.update_property(request=request)\n\n        # Ha",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "property": {
                "type": "google.analytics.admin_v1beta.types.Property",
                "description": "Required. The property to update. The property's ``name`` field is used to identify the property to be updated.  This corresponds to the ``property`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.Property: A resource message representing a Google Analytics GA4 property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "property",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdatePropertyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_firebase_link",
          "description": "Creates a FirebaseLink.\n\nProperties can have at most one FirebaseLink.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_create_firebase_link():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.CreateFirebaseLinkRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_firebase_link(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Unio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: properties/{property_id}  Example: ``properties/1234``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "firebase_link": {
                "type": "google.analytics.admin_v1beta.types.FirebaseLink",
                "description": "Required. The Firebase link to create.  This corresponds to the ``firebase_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.FirebaseLink: A link between a GA4 property and a Firebase project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "firebase_link",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateFirebaseLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_firebase_link",
          "description": "Deletes a FirebaseLink on a property\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_delete_firebase_link():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.DeleteFirebaseLinkRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_firebase_link(request=request)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.DeleteFirebaseLinkRequest, dict]]):\n        The request object. Re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id}  Example: ``properties/1234/firebaseLinks/5678``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteFirebaseLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_firebase_links",
          "description": "Lists FirebaseLinks on a property.\nProperties can have at most one FirebaseLink.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_list_firebase_links():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ListFirebaseLinksRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_firebase_links(request=request)\n\n        # Handle the response\n        async for response in page_result:\n          ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: properties/{property_id}  Example: ``properties/1234``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.services.analytics_admin_service.pagers.ListFirebaseLinksAsyncPager: Response message for ListFirebaseLinks RPC Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListFirebaseLinksRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_google_ads_link",
          "description": "Creates a GoogleAdsLink.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_create_google_ads_link():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.CreateGoogleAdsLinkRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_google_ads_link(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.Cre",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "google_ads_link": {
                "type": "google.analytics.admin_v1beta.types.GoogleAdsLink",
                "description": "Required. The GoogleAdsLink to create.  This corresponds to the ``google_ads_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.GoogleAdsLink: A link between a GA4 property and a Google Ads account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "google_ads_link",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateGoogleAdsLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_google_ads_link",
          "description": "Updates a GoogleAdsLink on a property\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_update_google_ads_link():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.UpdateGoogleAdsLinkRequest(\n        )\n\n        # Make the request\n        response = await client.update_google_ads_link(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.UpdateGoogleAdsLinkReques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "google_ads_link": {
                "type": "google.analytics.admin_v1beta.types.GoogleAdsLink",
                "description": "The GoogleAdsLink to update This corresponds to the ``google_ads_link`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.GoogleAdsLink: A link between a GA4 property and a Google Ads account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "google_ads_link",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateGoogleAdsLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_google_ads_link",
          "description": "Deletes a GoogleAdsLink on a property\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_delete_google_ads_link():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.DeleteGoogleAdsLinkRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_google_ads_link(request=request)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.DeleteGoogleAdsLinkRequest, dict]]):\n        The request obj",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Example format: properties/1234/googleAdsLinks/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteGoogleAdsLinkRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_google_ads_links",
          "description": "Lists GoogleAdsLinks on a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_list_google_ads_links():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ListGoogleAdsLinksRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_google_ads_links(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.services.analytics_admin_service.pagers.ListGoogleAdsLinksAsyncPager: Response message for ListGoogleAdsLinks RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListGoogleAdsLinksRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_data_sharing_settings",
          "description": "Get data sharing settings on an account.\nData sharing settings are singletons.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_get_data_sharing_settings():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.GetDataSharingSettingsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_data_sharing_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the settings to lookup. Format: accounts/{account}/dataSharingSettings  Example: ``accounts/1000/dataSharingSettings``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.DataSharingSettings: A resource message representing data sharing settings of a Google Analytics account."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetDataSharingSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_measurement_protocol_secret",
          "description": "Lookup for a single \"GA4\" MeasurementProtocolSecret.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_get_measurement_protocol_secret():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.GetMeasurementProtocolSecretRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_measurement_protocol_secret(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Opt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the measurement protocol secret to lookup. Format:  properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.MeasurementProtocolSecret: A secret value used for sending hits to Measurement Protocol."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetMeasurementProtocolSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_measurement_protocol_secrets",
          "description": "Returns child MeasurementProtocolSecrets under the\nspecified parent Property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_list_measurement_protocol_secrets():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ListMeasurementProtocolSecretsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_measurement_protocol_secrets(request=request)\n\n        # Handle the response\n        async f",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the parent stream. Format:  properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.services.analytics_admin_service.pagers.ListMeasurementProtocolSecretsAsyncPager: Response message for ListMeasurementProtocolSecret RPC Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListMeasurementProtocolSecretsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_measurement_protocol_secret",
          "description": "Creates a measurement protocol secret.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_create_measurement_protocol_secret():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        measurement_protocol_secret = admin_v1beta.MeasurementProtocolSecret()\n        measurement_protocol_secret.display_name = \"display_name_value\"\n\n        request = admin_v1beta.CreateMeasurementProtocolSecretRequest(\n            parent=\"parent_value\",\n            measurement_protocol_secret=measureme",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent resource where this secret will be created. Format: properties/{property}/dataStreams/{dataStream}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "measurement_protocol_secret": {
                "type": "google.analytics.admin_v1beta.types.MeasurementProtocolSecret",
                "description": "Required. The measurement protocol secret to create.  This corresponds to the ``measurement_protocol_secret`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.MeasurementProtocolSecret: A secret value used for sending hits to Measurement Protocol."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "measurement_protocol_secret",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateMeasurementProtocolSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_measurement_protocol_secret",
          "description": "Deletes target MeasurementProtocolSecret.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_delete_measurement_protocol_secret():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.DeleteMeasurementProtocolSecretRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_measurement_protocol_secret(request=request)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.DeleteMeasurementPro",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the MeasurementProtocolSecret to delete. Format:  properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteMeasurementProtocolSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_measurement_protocol_secret",
          "description": "Updates a measurement protocol secret.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_update_measurement_protocol_secret():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        measurement_protocol_secret = admin_v1beta.MeasurementProtocolSecret()\n        measurement_protocol_secret.display_name = \"display_name_value\"\n\n        request = admin_v1beta.UpdateMeasurementProtocolSecretRequest(\n            measurement_protocol_secret=measurement_protocol_secret,\n        )\n\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "measurement_protocol_secret": {
                "type": "google.analytics.admin_v1beta.types.MeasurementProtocolSecret",
                "description": "Required. The measurement protocol secret to update.  This corresponds to the ``measurement_protocol_secret`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.MeasurementProtocolSecret: A secret value used for sending hits to Measurement Protocol."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "measurement_protocol_secret",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateMeasurementProtocolSecretRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "acknowledge_user_data_collection",
          "description": "Acknowledges the terms of user data collection for\nthe specified property.\nThis acknowledgement must be completed (either in the\nGoogle Analytics UI or through this API) before\nMeasurementProtocolSecret resources may be created.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_acknowledge_user_data_collection():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.AcknowledgeUserDataCollectionRequest(\n            property=\"property_value\",\n           ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.AcknowledgeUserDataCollectionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_change_history_events",
          "description": "Searches through all changes to an account or its\nchildren given the specified set of filters.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_search_change_history_events():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.SearchChangeHistoryEventsRequest(\n            account=\"account_value\",\n        )\n\n        # Make the request\n        page_result = client.search_change_history_events(request=request)\n\n        # Handle the response\n        asy",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.SearchChangeHistoryEventsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_conversion_event",
          "description": "Deprecated: Use ``CreateKeyEvent`` instead. Creates a conversion\nevent with the specified attributes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_create_conversion_event():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.CreateConversionEventRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_conversion_event(request=request)\n\n        # Handle the response\n        print(res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the parent property where this conversion event will be created. Format: properties/123  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "conversion_event": {
                "type": "google.analytics.admin_v1beta.types.ConversionEvent",
                "description": "Required. The conversion event to create.  This corresponds to the ``conversion_event`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.ConversionEvent: A conversion event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "conversion_event",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateConversionEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_conversion_event",
          "description": "Deprecated: Use ``UpdateKeyEvent`` instead. Updates a conversion\nevent with the specified attributes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_update_conversion_event():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.UpdateConversionEventRequest(\n        )\n\n        # Make the request\n        response = await client.update_conversion_event(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "conversion_event": {
                "type": "google.analytics.admin_v1beta.types.ConversionEvent",
                "description": "Required. The conversion event to update. The ``name`` field is used to identify the settings to be updated.  This corresponds to the ``conversion_event`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.ConversionEvent: A conversion event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "conversion_event",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateConversionEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_conversion_event",
          "description": "Deprecated: Use ``GetKeyEvent`` instead. Retrieve a single\nconversion event.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_get_conversion_event():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.GetConversionEventRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_conversion_event(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Un",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the conversion event to retrieve. Format: properties/{property}/conversionEvents/{conversion_event} Example: \"properties/123/conversionEvents/456\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.ConversionEvent: A conversion event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetConversionEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_conversion_event",
          "description": "Deprecated: Use ``DeleteKeyEvent`` instead. Deletes a conversion\nevent in a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_delete_conversion_event():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.DeleteConversionEventRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_conversion_event(request=request)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.DeleteCo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the conversion event to delete. Format: properties/{property}/conversionEvents/{conversion_event} Example: \"properties/123/conversionEvents/456\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteConversionEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_conversion_events",
          "description": "Deprecated: Use ``ListKeyEvents`` instead. Returns a list of\nconversion events in the specified parent property.\n\nReturns an empty list if no conversion events are found.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_list_conversion_events():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ListConversionEventsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_conversion_events(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the parent property. Example: 'properties/123'  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.services.analytics_admin_service.pagers.ListConversionEventsAsyncPager: Response message for ListConversionEvents RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListConversionEventsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_key_event",
          "description": "Creates a Key Event.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_create_key_event():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        key_event = admin_v1beta.KeyEvent()\n        key_event.counting_method = \"ONCE_PER_SESSION\"\n\n        request = admin_v1beta.CreateKeyEventRequest(\n            key_event=key_event,\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_key_event(request=request)\n\n        # Handle",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the parent property where this Key Event will be created. Format: properties/123  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "key_event": {
                "type": "google.analytics.admin_v1beta.types.KeyEvent",
                "description": "Required. The Key Event to create. This corresponds to the ``key_event`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.KeyEvent: A key event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "key_event",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateKeyEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_key_event",
          "description": "Updates a Key Event.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_update_key_event():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        key_event = admin_v1beta.KeyEvent()\n        key_event.counting_method = \"ONCE_PER_SESSION\"\n\n        request = admin_v1beta.UpdateKeyEventRequest(\n            key_event=key_event,\n        )\n\n        # Make the request\n        response = await client.update_key_event(request=request)\n\n        # Handle the response\n        print(respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "key_event": {
                "type": "google.analytics.admin_v1beta.types.KeyEvent",
                "description": "Required. The Key Event to update. The ``name`` field is used to identify the settings to be updated.  This corresponds to the ``key_event`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.KeyEvent: A key event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "key_event",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateKeyEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_key_event",
          "description": "Retrieve a single Key Event.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_get_key_event():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.GetKeyEventRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_key_event(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.GetKeyEventRequest, dict]]):\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the Key Event to retrieve. Format: properties/{property}/keyEvents/{key_event} Example: \"properties/123/keyEvents/456\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.KeyEvent: A key event in a Google Analytics property."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetKeyEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_key_event",
          "description": "Deletes a Key Event.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_delete_key_event():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.DeleteKeyEventRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_key_event(request=request)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.DeleteKeyEventRequest, dict]]):\n        The request object. Request message for DeleteKeyEvent",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the Key Event to delete. Format: properties/{property}/keyEvents/{key_event} Example: \"properties/123/keyEvents/456\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteKeyEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_key_events",
          "description": "Returns a list of Key Events in the specified parent\nproperty. Returns an empty list if no Key Events are\nfound.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_list_key_events():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ListKeyEventsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_key_events(request=request)\n\n        # Handle the response\n        async for response in pag",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the parent property. Example: 'properties/123'  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.services.analytics_admin_service.pagers.ListKeyEventsAsyncPager: Response message for ListKeyEvents RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListKeyEventsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_custom_dimension",
          "description": "Creates a CustomDimension.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_create_custom_dimension():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        custom_dimension = admin_v1beta.CustomDimension()\n        custom_dimension.parameter_name = \"parameter_name_value\"\n        custom_dimension.display_name = \"display_name_value\"\n        custom_dimension.scope = \"ITEM\"\n\n        request = admin_v1beta.CreateCustomDimensionRequest(\n            parent=\"parent_value\",\n         ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "custom_dimension": {
                "type": "google.analytics.admin_v1beta.types.CustomDimension",
                "description": "Required. The CustomDimension to create.  This corresponds to the ``custom_dimension`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.CustomDimension: A definition for a CustomDimension."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "custom_dimension",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateCustomDimensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_custom_dimension",
          "description": "Updates a CustomDimension on a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_update_custom_dimension():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.UpdateCustomDimensionRequest(\n        )\n\n        # Make the request\n        response = await client.update_custom_dimension(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.UpdateCustomDimens",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "custom_dimension": {
                "type": "google.analytics.admin_v1beta.types.CustomDimension",
                "description": "The CustomDimension to update This corresponds to the ``custom_dimension`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.CustomDimension: A definition for a CustomDimension."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "custom_dimension",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateCustomDimensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_custom_dimensions",
          "description": "Lists CustomDimensions on a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_list_custom_dimensions():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ListCustomDimensionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_custom_dimensions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.services.analytics_admin_service.pagers.ListCustomDimensionsAsyncPager: Response message for ListCustomDimensions RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListCustomDimensionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "archive_custom_dimension",
          "description": "Archives a CustomDimension on a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_archive_custom_dimension():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ArchiveCustomDimensionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.archive_custom_dimension(request=request)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.ArchiveCustomDimensionRequest, dict]]):\n        T",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CustomDimension to archive. Example format: properties/1234/customDimensions/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ArchiveCustomDimensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_custom_dimension",
          "description": "Lookup for a single CustomDimension.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_get_custom_dimension():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.GetCustomDimensionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_custom_dimension(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CustomDimension to get. Example format: properties/1234/customDimensions/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.CustomDimension: A definition for a CustomDimension."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetCustomDimensionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_custom_metric",
          "description": "Creates a CustomMetric.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_create_custom_metric():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        custom_metric = admin_v1beta.CustomMetric()\n        custom_metric.parameter_name = \"parameter_name_value\"\n        custom_metric.display_name = \"display_name_value\"\n        custom_metric.measurement_unit = \"HOURS\"\n        custom_metric.scope = \"EVENT\"\n\n        request = admin_v1beta.CreateCustomMetricRequest(\n            parent",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "custom_metric": {
                "type": "google.analytics.admin_v1beta.types.CustomMetric",
                "description": "Required. The CustomMetric to create. This corresponds to the ``custom_metric`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.CustomMetric: A definition for a custom metric."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "custom_metric",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateCustomMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_custom_metric",
          "description": "Updates a CustomMetric on a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_update_custom_metric():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.UpdateCustomMetricRequest(\n        )\n\n        # Make the request\n        response = await client.update_custom_metric(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.UpdateCustomMetricRequest, dic",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "custom_metric": {
                "type": "google.analytics.admin_v1beta.types.CustomMetric",
                "description": "The CustomMetric to update This corresponds to the ``custom_metric`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.CustomMetric: A definition for a custom metric."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "custom_metric",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateCustomMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_custom_metrics",
          "description": "Lists CustomMetrics on a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_list_custom_metrics():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ListCustomMetricsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_custom_metrics(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.services.analytics_admin_service.pagers.ListCustomMetricsAsyncPager: Response message for ListCustomMetrics RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListCustomMetricsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "archive_custom_metric",
          "description": "Archives a CustomMetric on a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_archive_custom_metric():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ArchiveCustomMetricRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.archive_custom_metric(request=request)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.ArchiveCustomMetricRequest, dict]]):\n        The request obje",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CustomMetric to archive. Example format: properties/1234/customMetrics/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ArchiveCustomMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_custom_metric",
          "description": "Lookup for a single CustomMetric.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_get_custom_metric():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.GetCustomMetricRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_custom_metric(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.GetCustomMet",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CustomMetric to get. Example format: properties/1234/customMetrics/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.CustomMetric: A definition for a custom metric."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetCustomMetricRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_data_retention_settings",
          "description": "Returns the singleton data retention settings for\nthis property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_get_data_retention_settings():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.GetDataRetentionSettingsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_data_retention_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Opt",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the settings to lookup. Format:  properties/{property}/dataRetentionSettings Example: \"properties/1000/dataRetentionSettings\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.DataRetentionSettings: Settings values for data retention. This is a singleton resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetDataRetentionSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_data_retention_settings",
          "description": "Updates the singleton data retention settings for\nthis property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_update_data_retention_settings():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.UpdateDataRetentionSettingsRequest(\n        )\n\n        # Make the request\n        response = await client.update_data_retention_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.ana",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "data_retention_settings": {
                "type": "google.analytics.admin_v1beta.types.DataRetentionSettings",
                "description": "Required. The settings to update. The ``name`` field is used to identify the settings to be updated.  This corresponds to the ``data_retention_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Field names must be in snake case (e.g., \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.DataRetentionSettings: Settings values for data retention. This is a singleton resource."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "data_retention_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateDataRetentionSettingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_data_stream",
          "description": "Creates a DataStream.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_create_data_stream():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        data_stream = admin_v1beta.DataStream()\n        data_stream.type_ = \"IOS_APP_DATA_STREAM\"\n\n        request = admin_v1beta.CreateDataStreamRequest(\n            parent=\"parent_value\",\n            data_stream=data_stream,\n        )\n\n        # Make the request\n        response = await client.create_data_stream(request=request)\n\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "data_stream": {
                "type": "google.analytics.admin_v1beta.types.DataStream",
                "description": "Required. The DataStream to create. This corresponds to the ``data_stream`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.DataStream: A resource message representing a data stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "data_stream",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.CreateDataStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_data_stream",
          "description": "Deletes a DataStream on a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_delete_data_stream():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.DeleteDataStreamRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_data_stream(request=request)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.DeleteDataStreamRequest, dict]]):\n        The request object. Request mes",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the DataStream to delete. Example format: properties/1234/dataStreams/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.DeleteDataStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_data_stream",
          "description": "Updates a DataStream on a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_update_data_stream():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.UpdateDataStreamRequest(\n        )\n\n        # Make the request\n        response = await client.update_data_stream(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.UpdateDataStreamRequest, dict]]):\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "data_stream": {
                "type": "google.analytics.admin_v1beta.types.DataStream",
                "description": "The DataStream to update This corresponds to the ``data_stream`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The list of fields to be updated. Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.DataStream: A resource message representing a data stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "data_stream",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.UpdateDataStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_data_streams",
          "description": "Lists DataStreams on a property.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_list_data_streams():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.ListDataStreamsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_data_streams(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[g",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example format: properties/1234  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.services.analytics_admin_service.pagers.ListDataStreamsAsyncPager: Response message for ListDataStreams RPC. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.ListDataStreamsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_data_stream",
          "description": "Lookup for a single DataStream.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.analytics import admin_v1beta\n\n    async def sample_get_data_stream():\n        # Create a client\n        client = admin_v1beta.AnalyticsAdminServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = admin_v1beta.GetDataStreamRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_data_stream(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.analytics.admin_v1beta.types.GetDataStreamRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the DataStream to get. Example format: properties/1234/dataStreams/5678  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.analytics.admin_v1beta.types.DataStream: A resource message representing a data stream."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.GetDataStreamRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "run_access_report",
          "description": "Returns a customized report of data access records. The report\nprovides records of each time a user reads Google Analytics\nreporting data. Access records are retained for up to 2 years.\n\nData Access Reports can be requested for a property. Reports may\nbe requested for any property, but dimensions that aren't\nrelated to quota can only be requested on Google Analytics 360\nproperties. This method is only available to Administrators.\n\nThese data access records include GA4 UI Reporting, GA4 UI\nExplorations, GA4 Data API, and other products like Firebase &\nAdmob that can retrieve data from Google Analytics through a\nlinkage. These records don't include property configuration\nchanges like adding a stream or changing a property's time zone.\nFor configuration change history, see\n`searchChangeHistoryEvents <https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regar",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "analytics_admin.RunAccessReportRequest"
          ]
        }
      }
    ]
  }
}