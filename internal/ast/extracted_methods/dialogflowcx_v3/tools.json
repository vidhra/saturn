{
  "Agents": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_agents",
          "description": "Returns the list of all agents in the specified\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_agents():\n        # Create a client\n        client = dialogflowcx_v3.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListAgentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_agents(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[goo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location to list all agents for. Format: ``projects/<ProjectID>/locations/<LocationID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.agents.pagers.ListAgentsAsyncPager: The response message for [Agents.ListAgents][google.cloud.dialogflow.cx.v3.Agents.ListAgents].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_agent",
          "description": "Retrieves the specified agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_agent():\n        # Create a client\n        client = dialogflowcx_v3.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetAgentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_agent(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.GetAgentRequest, dict]]):\n        The request obj",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the agent. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Agent: Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way.  After you create an agent, you can add [Intents][google.cloud.dialogflow.cx.v3.Intent], [Entity Types][google.cloud.dialogflow.cx.v3.EntityType], [Flows][google.cloud.dialogflow.cx.v3.Flow], [Fulfillments][google.cloud.dialogflow.cx.v3.Fulfillment], [Webhooks][google.cloud.dialogflow.cx.v3.Webhook], [TransitionRouteGroups][google.cloud.dialogflow.cx.v3.TransitionRouteGroup] and so on to manage the conversation flows."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_agent",
          "description": "Creates an agent in the specified location.\n\nNote: You should always train flows prior to sending them\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_agent():\n        # Create a client\n        client = dialogflowcx_v3.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        agent = dialogflowcx_v3.Agent()\n        agent.display_name = \"display_name_value\"\n        agent.default_language_code = \"default_language_code_value\"\n        agen",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location to create a agent for. Format: ``projects/<ProjectID>/locations/<LocationID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "agent": {
                "type": "google.cloud.dialogflowcx_v3.types.Agent",
                "description": "Required. The agent to create. This corresponds to the ``agent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Agent: Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way.  After you create an agent, you can add [Intents][google.cloud.dialogflow.cx.v3.Intent], [Entity Types][google.cloud.dialogflow.cx.v3.EntityType], [Flows][google.cloud.dialogflow.cx.v3.Flow], [Fulfillments][google.cloud.dialogflow.cx.v3.Fulfillment], [Webhooks][google.cloud.dialogflow.cx.v3.Webhook], [TransitionRouteGroups][google.cloud.dialogflow.cx.v3.TransitionRouteGroup] and so on to manage the conversation flows."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "agent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_agent",
          "description": "Updates the specified agent.\n\nNote: You should always train flows prior to sending them\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_agent():\n        # Create a client\n        client = dialogflowcx_v3.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        agent = dialogflowcx_v3.Agent()\n        agent.display_name = \"display_name_value\"\n        agent.default_language_code = \"default_language_code_value\"\n        agent.time_zone = \"",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "agent": {
                "type": "google.cloud.dialogflowcx_v3.types.Agent",
                "description": "Required. The agent to update. This corresponds to the ``agent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Agent: Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way.  After you create an agent, you can add [Intents][google.cloud.dialogflow.cx.v3.Intent], [Entity Types][google.cloud.dialogflow.cx.v3.EntityType], [Flows][google.cloud.dialogflow.cx.v3.Flow], [Fulfillments][google.cloud.dialogflow.cx.v3.Fulfillment], [Webhooks][google.cloud.dialogflow.cx.v3.Webhook], [TransitionRouteGroups][google.cloud.dialogflow.cx.v3.TransitionRouteGroup] and so on to manage the conversation flows."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "agent",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_agent",
          "description": "Deletes the specified agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_agent():\n        # Create a client\n        client = dialogflowcx_v3.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteAgentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_agent(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.DeleteAgentRequest, dict]]):\n        The request object. The request message for\n        [Agents.DeleteAgent",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the agent to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_agent",
          "description": "Exports the specified agent to a binary file.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``:\n   [ExportAgentResponse][google.cloud.dialogflow.cx.v3.ExportAgentResponse]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_export_agent():\n        # Create a client\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "restore_agent",
          "description": "Restores the specified agent from a binary file.\n\nReplaces the current agent with a new one. Note that all\nexisting resources in agent (e.g. intents, entity types, flows)\nwill be removed.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty>`__\n\nNote: You should always train flows prior to sending them\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-ran",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "validate_agent",
          "description": "Validates the specified agent and creates or updates\nvalidation results. The agent in draft version is\nvalidated. Please call this API after the training is\ncompleted to get the complete validation results.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_validate_agent():\n        # Create a client\n        client = dialogflowcx_v3.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ValidateAgentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.validate_agent(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_agent_validation_result",
          "description": "Gets the latest agent validation result. Agent\nvalidation is performed when ValidateAgent is called.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_agent_validation_result():\n        # Create a client\n        client = dialogflowcx_v3.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetAgentValidationResultRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_agent_validation_result(request=request)\n\n        # Handle the response\n        print(respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The agent name. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/validationResult``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.AgentValidationResult: The response message for [Agents.GetAgentValidationResult][google.cloud.dialogflow.cx.v3.Agents.GetAgentValidationResult]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_generative_settings",
          "description": "Gets the generative settings for the agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_generative_settings():\n        # Create a client\n        client = dialogflowcx_v3.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetGenerativeSettingsRequest(\n            name=\"name_value\",\n            language_code=\"language_code_value\",\n        )\n\n        # Make the request\n        response = await client.get_generative_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/generativeSettings``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "language_code": {
                "type": "str",
                "description": "Required. Language code of the generative settings.  This corresponds to the ``language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.GenerativeSettings: Settings for Generative AI."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "language_code",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_generative_settings",
          "description": "Updates the generative settings for the agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_generative_settings():\n        # Create a client\n        client = dialogflowcx_v3.AgentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.UpdateGenerativeSettingsRequest(\n        )\n\n        # Make the request\n        response = await client.update_generative_settings(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.UpdateGenerati",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "generative_settings": {
                "type": "google.cloud.dialogflowcx_v3.types.GenerativeSettings",
                "description": "Required. Generative settings to update.  This corresponds to the ``generative_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. The mask to control which fields get updated. If the mask is not present, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.GenerativeSettings: Settings for Generative AI."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "generative_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Changelogs": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_changelogs",
          "description": "Returns the list of Changelogs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_changelogs():\n        # Create a client\n        client = dialogflowcx_v3.ChangelogsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListChangelogsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_changelogs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent containing the changelogs. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.changelogs.pagers.ListChangelogsAsyncPager: The response message for [Changelogs.ListChangelogs][google.cloud.dialogflow.cx.v3.Changelogs.ListChangelogs].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_changelog",
          "description": "Retrieves the specified Changelog.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_changelog():\n        # Create a client\n        client = dialogflowcx_v3.ChangelogsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetChangelogRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_changelog(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.GetChangelogRequest, dict]]):",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the changelog to get. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/changelogs/<ChangelogID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Changelog: Changelogs represents a change made to a given agent."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Deployments": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_deployments",
          "description": "Returns the list of all deployments in the specified\n[Environment][google.cloud.dialogflow.cx.v3.Environment].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_deployments():\n        # Create a client\n        client = dialogflowcx_v3.DeploymentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListDeploymentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_deployments(request=request)\n\n        # Handle the response\n        async for response in page_r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The [Environment][google.cloud.dialogflow.cx.v3.Environment] to list all environments for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.deployments.pagers.ListDeploymentsAsyncPager: The response message for [Deployments.ListDeployments][google.cloud.dialogflow.cx.v3.Deployments.ListDeployments].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_deployment",
          "description": "Retrieves the specified\n[Deployment][google.cloud.dialogflow.cx.v3.Deployment].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_deployment():\n        # Create a client\n        client = dialogflowcx_v3.DeploymentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetDeploymentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_deployment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.di",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [Deployment][google.cloud.dialogflow.cx.v3.Deployment]. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>/deployments/<DeploymentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Deployment: Represents a deployment in an environment. A deployment happens when a flow version configured to be active in the environment. You can configure running pre-deployment steps, e.g. running validation test cases, experiment auto-rollout, etc."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "EntityTypes": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_entity_type",
          "description": "Retrieves the specified entity type.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_entity_type():\n        # Create a client\n        client = dialogflowcx_v3.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetEntityTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_entity_type(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.GetEntityTypeRequest,",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the entity type. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/entityTypes/<EntityTypeID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.EntityType: Entities are extracted from user input and represent parameters that are meaningful to your application. For example, a date range, a proper name such as a geographic location or landmark, and so on. Entities represent actionable data for your application.  When you define an entity, you can also include synonyms that all map to that entity. For example, \"soft drink\", \"soda\", \"pop\", and so on.  There are three types of entities:  -  **System** - entities that are defined by the Dialogflow API for common data types such as date, time, currency, and so on. A system entity is represented by the EntityType type. -  **Custom** - entities that are defined by you that represent actionable data that is meaningful to your application. For example, you could define a pizza.sauce entity for red or white pizza sauce, a pizza.cheese entity for the different types of cheese on a pizza, a pizza.topping entity for different toppings, and so on. A custom entity is represented by the EntityType type. -  **User** - entities that are built for an individual user such as favorites, preferences, playlists, and so on. A user entity is represented by the [SessionEntityType][google.cloud.dialogflow.cx.v3.SessionEntityType] type.  For more information about entity types, see the [Dialogflow documentation](\\ https://cloud.google.com/dialogflow/docs/entities-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_entity_type",
          "description": "Creates an entity type in the specified agent.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_entity_type():\n        # Create a client\n        client = dialogflowcx_v3.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        entity_type = dialogflowcx_v3.EntityType()\n        entity_type.display_name = \"display_name_value\"\n        entity_type.kind = \"KIND_REGEXP\"\n\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to create a entity type for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "entity_type": {
                "type": "google.cloud.dialogflowcx_v3.types.EntityType",
                "description": "Required. The entity type to create. This corresponds to the ``entity_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.EntityType: Entities are extracted from user input and represent parameters that are meaningful to your application. For example, a date range, a proper name such as a geographic location or landmark, and so on. Entities represent actionable data for your application.  When you define an entity, you can also include synonyms that all map to that entity. For example, \"soft drink\", \"soda\", \"pop\", and so on.  There are three types of entities:  -  **System** - entities that are defined by the Dialogflow API for common data types such as date, time, currency, and so on. A system entity is represented by the EntityType type. -  **Custom** - entities that are defined by you that represent actionable data that is meaningful to your application. For example, you could define a pizza.sauce entity for red or white pizza sauce, a pizza.cheese entity for the different types of cheese on a pizza, a pizza.topping entity for different toppings, and so on. A custom entity is represented by the EntityType type. -  **User** - entities that are built for an individual user such as favorites, preferences, playlists, and so on. A user entity is represented by the [SessionEntityType][google.cloud.dialogflow.cx.v3.SessionEntityType] type.  For more information about entity types, see the [Dialogflow documentation](\\ https://cloud.google.com/dialogflow/docs/entities-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "entity_type",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_entity_type",
          "description": "Updates the specified entity type.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_entity_type():\n        # Create a client\n        client = dialogflowcx_v3.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        entity_type = dialogflowcx_v3.EntityType()\n        entity_type.display_name = \"display_name_value\"\n        entity_type.kind = \"KIND_REGEXP\"\n\n        request = di",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "entity_type": {
                "type": "google.cloud.dialogflowcx_v3.types.EntityType",
                "description": "Required. The entity type to update. This corresponds to the ``entity_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.EntityType: Entities are extracted from user input and represent parameters that are meaningful to your application. For example, a date range, a proper name such as a geographic location or landmark, and so on. Entities represent actionable data for your application.  When you define an entity, you can also include synonyms that all map to that entity. For example, \"soft drink\", \"soda\", \"pop\", and so on.  There are three types of entities:  -  **System** - entities that are defined by the Dialogflow API for common data types such as date, time, currency, and so on. A system entity is represented by the EntityType type. -  **Custom** - entities that are defined by you that represent actionable data that is meaningful to your application. For example, you could define a pizza.sauce entity for red or white pizza sauce, a pizza.cheese entity for the different types of cheese on a pizza, a pizza.topping entity for different toppings, and so on. A custom entity is represented by the EntityType type. -  **User** - entities that are built for an individual user such as favorites, preferences, playlists, and so on. A user entity is represented by the [SessionEntityType][google.cloud.dialogflow.cx.v3.SessionEntityType] type.  For more information about entity types, see the [Dialogflow documentation](\\ https://cloud.google.com/dialogflow/docs/entities-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "entity_type",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_entity_type",
          "description": "Deletes the specified entity type.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_entity_type():\n        # Create a client\n        client = dialogflowcx_v3.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteEntityTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_entity_type(r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the entity type to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/entityTypes/<EntityTypeID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_entity_types",
          "description": "Returns the list of all entity types in the specified\nagent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_entity_types():\n        # Create a client\n        client = dialogflowcx_v3.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListEntityTypesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_entity_types(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to list all entity types for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.entity_types.pagers.ListEntityTypesAsyncPager: The response message for [EntityTypes.ListEntityTypes][google.cloud.dialogflow.cx.v3.EntityTypes.ListEntityTypes].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_entity_types",
          "description": "Exports the selected entity types.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_export_entity_types():\n        # Create a client\n        client = dialogflowcx_v3.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ExportEntityTypesRequest(\n            entity_types_uri=\"entity_types_uri_value\",\n            parent=\"parent_value\",\n            entity_types=['entity_types_value1', 'entity_types_value2'],\n        )\n\n        # Make the request\n        operation = client.export_entity_types(request=request)\n\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_entity_types",
          "description": "Imports the specified entitytypes into the agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_import_entity_types():\n        # Create a client\n        client = dialogflowcx_v3.EntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ImportEntityTypesRequest(\n            entity_types_uri=\"entity_types_uri_value\",\n            parent=\"parent_value\",\n            merge_option=\"KEEP\",\n        )\n\n        # Make the request\n        operation = client.import_entity_types(request=request)\n\n        print(\"Waiting for operat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Environments": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_environments",
          "description": "Returns the list of all environments in the specified\n[Agent][google.cloud.dialogflow.cx.v3.Agent].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_environments():\n        # Create a client\n        client = dialogflowcx_v3.EnvironmentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListEnvironmentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_environments(request=request)\n\n        # Handle the response\n        async for response in page_result:\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The [Agent][google.cloud.dialogflow.cx.v3.Agent] to list all environments for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.environments.pagers.ListEnvironmentsAsyncPager: The response message for [Environments.ListEnvironments][google.cloud.dialogflow.cx.v3.Environments.ListEnvironments].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_environment",
          "description": "Retrieves the specified\n[Environment][google.cloud.dialogflow.cx.v3.Environment].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_environment():\n        # Create a client\n        client = dialogflowcx_v3.EnvironmentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetEnvironmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_environment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [Environment][google.cloud.dialogflow.cx.v3.Environment]. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Environment: Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_environment",
          "description": "Creates an\n[Environment][google.cloud.dialogflow.cx.v3.Environment] in the\nspecified [Agent][google.cloud.dialogflow.cx.v3.Agent].\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``:\n   [Environment][google.cloud.dialogflow.cx.v3.Environment]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The [Agent][google.cloud.dialogflow.cx.v3.Agent] to create an [Environment][google.cloud.dialogflow.cx.v3.Environment] for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "environment": {
                "type": "google.cloud.dialogflowcx_v3.types.Environment",
                "description": "Required. The environment to create. This corresponds to the ``environment`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.dialogflowcx_v3.types.Environment` Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "environment",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_environment",
          "description": "Updates the specified\n[Environment][google.cloud.dialogflow.cx.v3.Environment].\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``:\n   [Environment][google.cloud.dialogflow.cx.v3.Environment]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_environment():\n        # ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "environment": {
                "type": "google.cloud.dialogflowcx_v3.types.Environment",
                "description": "Required. The environment to update. This corresponds to the ``environment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.dialogflowcx_v3.types.Environment` Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "environment",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_environment",
          "description": "Deletes the specified\n[Environment][google.cloud.dialogflow.cx.v3.Environment].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_environment():\n        # Create a client\n        client = dialogflowcx_v3.EnvironmentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteEnvironmentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_environment(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.DeleteEnvironmentRequest, dict]])",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [Environment][google.cloud.dialogflow.cx.v3.Environment] to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "lookup_environment_history",
          "description": "Looks up the history of the specified\n[Environment][google.cloud.dialogflow.cx.v3.Environment].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_lookup_environment_history():\n        # Create a client\n        client = dialogflowcx_v3.EnvironmentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.LookupEnvironmentHistoryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        page_result = client.lookup_environment_history(request=request)\n\n        # Handle the response\n        async for respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the environment to look up the history for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.environments.pagers.LookupEnvironmentHistoryAsyncPager: The response message for [Environments.LookupEnvironmentHistory][google.cloud.dialogflow.cx.v3.Environments.LookupEnvironmentHistory].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "run_continuous_test",
          "description": "Kicks off a continuous test under the specified\n[Environment][google.cloud.dialogflow.cx.v3.Environment].\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [RunContinuousTestMetadata][google.cloud.dialogflow.cx.v3.RunContinuousTestMetadata]\n-  ``response``:\n   [RunContinuousTestResponse][google.cloud.dialogflow.cx.v3.RunContinuousTestResponse]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_run_cont",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_continuous_test_results",
          "description": "Fetches a list of continuous test results for a given\nenvironment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_continuous_test_results():\n        # Create a client\n        client = dialogflowcx_v3.EnvironmentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListContinuousTestResultsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_continuous_test_results(request=request)\n\n        # Handle the response\n        async for response in page_result:\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The environment to list results for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.environments.pagers.ListContinuousTestResultsAsyncPager: The response message for [Environments.ListTestCaseResults][].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "deploy_flow",
          "description": "Deploys a flow to the specified\n[Environment][google.cloud.dialogflow.cx.v3.Environment].\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [DeployFlowMetadata][google.cloud.dialogflow.cx.v3.DeployFlowMetadata]\n-  ``response``:\n   [DeployFlowResponse][google.cloud.dialogflow.cx.v3.DeployFlowResponse]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_deploy_flow():\n        # Create a client\n        cli",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Experiments": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_experiments",
          "description": "Returns the list of all experiments in the specified\n[Environment][google.cloud.dialogflow.cx.v3.Environment].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_experiments():\n        # Create a client\n        client = dialogflowcx_v3.ExperimentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListExperimentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_experiments(request=request)\n\n        # Handle the response\n        async for response in page_r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The [Environment][google.cloud.dialogflow.cx.v3.Environment] to list all environments for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.experiments.pagers.ListExperimentsAsyncPager: The response message for [Experiments.ListExperiments][google.cloud.dialogflow.cx.v3.Experiments.ListExperiments].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_experiment",
          "description": "Retrieves the specified\n[Experiment][google.cloud.dialogflow.cx.v3.Experiment].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_experiment():\n        # Create a client\n        client = dialogflowcx_v3.ExperimentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetExperimentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_experiment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.di",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [Environment][google.cloud.dialogflow.cx.v3.Environment]. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>/experiments/<ExperimentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Experiment: Represents an experiment in an environment."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_experiment",
          "description": "Creates an\n[Experiment][google.cloud.dialogflow.cx.v3.Experiment] in the\nspecified\n[Environment][google.cloud.dialogflow.cx.v3.Environment].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_experiment():\n        # Create a client\n        client = dialogflowcx_v3.ExperimentsAsyncClient()\n\n        # Initialize request argument(s)\n        experiment = dialogflowcx_v3.Experiment()\n        experiment.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.CreateExperimentRequest(\n            parent=\"parent_value\",\n            experiment=experim",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The [Agent][google.cloud.dialogflow.cx.v3.Agent] to create an [Environment][google.cloud.dialogflow.cx.v3.Environment] for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "experiment": {
                "type": "google.cloud.dialogflowcx_v3.types.Experiment",
                "description": "Required. The experiment to create. This corresponds to the ``experiment`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Experiment: Represents an experiment in an environment."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "experiment",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_experiment",
          "description": "Updates the specified\n[Experiment][google.cloud.dialogflow.cx.v3.Experiment].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_experiment():\n        # Create a client\n        client = dialogflowcx_v3.ExperimentsAsyncClient()\n\n        # Initialize request argument(s)\n        experiment = dialogflowcx_v3.Experiment()\n        experiment.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.UpdateExperimentRequest(\n            experiment=experiment,\n        )\n\n        # Make the request\n        response = await client.update_experiment(reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "experiment": {
                "type": "google.cloud.dialogflowcx_v3.types.Experiment",
                "description": "Required. The experiment to update. This corresponds to the ``experiment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Experiment: Represents an experiment in an environment."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "experiment",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_experiment",
          "description": "Deletes the specified\n[Experiment][google.cloud.dialogflow.cx.v3.Experiment].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_experiment():\n        # Create a client\n        client = dialogflowcx_v3.ExperimentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteExperimentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_experiment(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.DeleteExperimentRequest, dict]]):\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [Environment][google.cloud.dialogflow.cx.v3.Environment] to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>/experiments/<ExperimentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_experiment",
          "description": "Starts the specified\n[Experiment][google.cloud.dialogflow.cx.v3.Experiment]. This rpc\nonly changes the state of experiment from PENDING to RUNNING.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_start_experiment():\n        # Create a client\n        client = dialogflowcx_v3.ExperimentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.StartExperimentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.start_experiment(request=request)\n\n        # Handle the response\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the experiment to start. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>/experiments/<ExperimentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Experiment: Represents an experiment in an environment."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "stop_experiment",
          "description": "Stops the specified\n[Experiment][google.cloud.dialogflow.cx.v3.Experiment]. This rpc\nonly changes the state of experiment from RUNNING to DONE.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_stop_experiment():\n        # Create a client\n        client = dialogflowcx_v3.ExperimentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.StopExperimentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.stop_experiment(request=request)\n\n        # Handle the response\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the experiment to stop. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>/experiments/<ExperimentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Experiment: Represents an experiment in an environment."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Flows": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_flow",
          "description": "Creates a flow in the specified agent.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_flow():\n        # Create a client\n        client = dialogflowcx_v3.FlowsAsyncClient()\n\n        # Initialize request argument(s)\n        flow = dialogflowcx_v3.Flow()\n        flow.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.CreateFlowRequest(\n            parent=\"parent_value\",\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to create a flow for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "flow": {
                "type": "google.cloud.dialogflowcx_v3.types.Flow",
                "description": "Required. The flow to create. This corresponds to the ``flow`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Flow: Flows represents the conversation flows when you build your chatbot agent. A flow consists of many pages connected by the transition routes. Conversations always start with the built-in Start Flow (with an all-0 ID). Transition routes can direct the conversation session from the current flow (parent flow) to another flow (sub flow). When the sub flow is finished, Dialogflow will bring the session back to the parent flow, where the sub flow is started.  Usually, when a transition route is followed by a matched intent, the intent will be \"consumed\". This means the intent won't activate more transition routes. However, when the followed transition route moves the conversation session into a different flow, the matched intent can be carried over and to be consumed in the target flow."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "flow",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_flow",
          "description": "Deletes a specified flow.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_flow():\n        # Create a client\n        client = dialogflowcx_v3.FlowsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteFlowRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_flow(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.DeleteFlowRequest, dict]]):\n        The request object. The request message for\n        [Flows.DeleteFlow][google.c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the flow to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_flows",
          "description": "Returns the list of all flows in the specified agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_flows():\n        # Create a client\n        client = dialogflowcx_v3.FlowsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListFlowsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_flows(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.clou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent containing the flows. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.flows.pagers.ListFlowsAsyncPager: The response message for [Flows.ListFlows][google.cloud.dialogflow.cx.v3.Flows.ListFlows].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_flow",
          "description": "Retrieves the specified flow.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_flow():\n        # Create a client\n        client = dialogflowcx_v3.FlowsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetFlowRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_flow(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.GetFlowRequest, dict]]):\n        The request object. T",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the flow to get. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Flow: Flows represents the conversation flows when you build your chatbot agent. A flow consists of many pages connected by the transition routes. Conversations always start with the built-in Start Flow (with an all-0 ID). Transition routes can direct the conversation session from the current flow (parent flow) to another flow (sub flow). When the sub flow is finished, Dialogflow will bring the session back to the parent flow, where the sub flow is started.  Usually, when a transition route is followed by a matched intent, the intent will be \"consumed\". This means the intent won't activate more transition routes. However, when the followed transition route moves the conversation session into a different flow, the matched intent can be carried over and to be consumed in the target flow."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_flow",
          "description": "Updates the specified flow.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_flow():\n        # Create a client\n        client = dialogflowcx_v3.FlowsAsyncClient()\n\n        # Initialize request argument(s)\n        flow = dialogflowcx_v3.Flow()\n        flow.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.UpdateFlowRequest(\n            flow=flow,\n        )\n\n        # Make",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "flow": {
                "type": "google.cloud.dialogflowcx_v3.types.Flow",
                "description": "Required. The flow to update. This corresponds to the ``flow`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Flow: Flows represents the conversation flows when you build your chatbot agent. A flow consists of many pages connected by the transition routes. Conversations always start with the built-in Start Flow (with an all-0 ID). Transition routes can direct the conversation session from the current flow (parent flow) to another flow (sub flow). When the sub flow is finished, Dialogflow will bring the session back to the parent flow, where the sub flow is started.  Usually, when a transition route is followed by a matched intent, the intent will be \"consumed\". This means the intent won't activate more transition routes. However, when the followed transition route moves the conversation session into a different flow, the matched intent can be carried over and to be consumed in the target flow."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "flow",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "train_flow",
          "description": "Trains the specified flow. Note that only the flow in 'draft'\nenvironment is trained.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty>`__\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creatin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The flow to train. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "validate_flow",
          "description": "Validates the specified flow and creates or updates\nvalidation results. Please call this API after the\ntraining is completed to get the complete validation\nresults.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_validate_flow():\n        # Create a client\n        client = dialogflowcx_v3.FlowsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ValidateFlowRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.validate_flow(request=request)\n\n        # Handle the respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_flow_validation_result",
          "description": "Gets the latest flow validation result. Flow\nvalidation is performed when ValidateFlow is called.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_flow_validation_result():\n        # Create a client\n        client = dialogflowcx_v3.FlowsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetFlowValidationResultRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_flow_validation_result(request=request)\n\n        # Handle the response\n        print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The flow name. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>/validationResult``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.FlowValidationResult: The response message for [Flows.GetFlowValidationResult][google.cloud.dialogflow.cx.v3.Flows.GetFlowValidationResult]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_flow",
          "description": "Imports the specified flow to the specified agent from a binary\nfile.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``:\n   [ImportFlowResponse][google.cloud.dialogflow.cx.v3.ImportFlowResponse]\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   ht",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_flow",
          "description": "Exports the specified flow to a binary file.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``:\n   [ExportFlowResponse][google.cloud.dialogflow.cx.v3.ExportFlowResponse]\n\nNote that resources (e.g. intents, entities, webhooks) that the\nflow references will also be exported.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Generators": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_generators",
          "description": "Returns the list of all generators in the specified\nagent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_generators():\n        # Create a client\n        client = dialogflowcx_v3.GeneratorsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListGeneratorsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_generators(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (O",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to list all generators for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.generators.pagers.ListGeneratorsAsyncPager: The response message for [Generators.ListGenerators][google.cloud.dialogflow.cx.v3.Generators.ListGenerators].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_generator",
          "description": "Retrieves the specified generator.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_generator():\n        # Create a client\n        client = dialogflowcx_v3.GeneratorsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetGeneratorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_generator(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.GetGeneratorRequest, dict]]):",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the generator. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/generators/<GeneratorID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Generator: Generators contain prompt to be sent to the LLM model to generate text. The prompt can contain parameters which will be resolved before calling the model. It can optionally contain banned phrases to ensure the model responses are safe."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_generator",
          "description": "Creates a generator in the specified agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_generator():\n        # Create a client\n        client = dialogflowcx_v3.GeneratorsAsyncClient()\n\n        # Initialize request argument(s)\n        generator = dialogflowcx_v3.Generator()\n        generator.display_name = \"display_name_value\"\n        generator.prompt_text.text = \"text_value\"\n\n        request = dialogflowcx_v3.CreateGeneratorRequest(\n            parent=\"parent_value\",\n            generator=generator,\n        )\n\n        # Make the request\n        resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to create a generator for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "generator": {
                "type": "google.cloud.dialogflowcx_v3.types.Generator",
                "description": "Required. The generator to create. This corresponds to the ``generator`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Generator: Generators contain prompt to be sent to the LLM model to generate text. The prompt can contain parameters which will be resolved before calling the model. It can optionally contain banned phrases to ensure the model responses are safe."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "generator",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_generator",
          "description": "Update the specified generator.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_generator():\n        # Create a client\n        client = dialogflowcx_v3.GeneratorsAsyncClient()\n\n        # Initialize request argument(s)\n        generator = dialogflowcx_v3.Generator()\n        generator.display_name = \"display_name_value\"\n        generator.prompt_text.text = \"text_value\"\n\n        request = dialogflowcx_v3.UpdateGeneratorRequest(\n            generator=generator,\n        )\n\n        # Make the request\n        response = await client.update_generator(request=re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "generator": {
                "type": "google.cloud.dialogflowcx_v3.types.Generator",
                "description": "Required. The generator to update. This corresponds to the ``generator`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Generator: Generators contain prompt to be sent to the LLM model to generate text. The prompt can contain parameters which will be resolved before calling the model. It can optionally contain banned phrases to ensure the model responses are safe."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "generator",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_generator",
          "description": "Deletes the specified generators.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_generator():\n        # Create a client\n        client = dialogflowcx_v3.GeneratorsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteGeneratorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_generator(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.DeleteGeneratorRequest, dict]]):\n        The request object. The request message for\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the generator to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/generators/<GeneratorID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Intents": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_intents",
          "description": "Returns the list of all intents in the specified\nagent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_intents():\n        # Create a client\n        client = dialogflowcx_v3.IntentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListIntentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_intents(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[g",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to list all intents for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.intents.pagers.ListIntentsAsyncPager: The response message for [Intents.ListIntents][google.cloud.dialogflow.cx.v3.Intents.ListIntents].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_intent",
          "description": "Retrieves the specified intent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_intent():\n        # Create a client\n        client = dialogflowcx_v3.IntentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetIntentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_intent(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.GetIntentRequest, dict]]):\n        The reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the intent. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/intents/<IntentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Intent: An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_intent",
          "description": "Creates an intent in the specified agent.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_intent():\n        # Create a client\n        client = dialogflowcx_v3.IntentsAsyncClient()\n\n        # Initialize request argument(s)\n        intent = dialogflowcx_v3.Intent()\n        intent.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.CreateIntentRequest(\n            parent=\"pa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to create an intent for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "intent": {
                "type": "google.cloud.dialogflowcx_v3.types.Intent",
                "description": "Required. The intent to create. This corresponds to the ``intent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Intent: An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "intent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_intent",
          "description": "Updates the specified intent.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_intent():\n        # Create a client\n        client = dialogflowcx_v3.IntentsAsyncClient()\n\n        # Initialize request argument(s)\n        intent = dialogflowcx_v3.Intent()\n        intent.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.UpdateIntentRequest(\n            intent=intent,\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "intent": {
                "type": "google.cloud.dialogflowcx_v3.types.Intent",
                "description": "Required. The intent to update. This corresponds to the ``intent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Intent: An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "intent",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_intent",
          "description": "Deletes the specified intent.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_intent():\n        # Create a client\n        client = dialogflowcx_v3.IntentsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteIntentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_intent(request=request)\n\nArgs:\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the intent to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/intents/<IntentID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_intents",
          "description": "Imports the specified intents into the agent.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [ImportIntentsMetadata][google.cloud.dialogflow.cx.v3.ImportIntentsMetadata]\n-  ``response``:\n   [ImportIntentsResponse][google.cloud.dialogflow.cx.v3.ImportIntentsResponse]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_import_intents():\n        # Create a client\n        client = dialogflowcx_v3.Intents",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_intents",
          "description": "Exports the selected intents.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [ExportIntentsMetadata][google.cloud.dialogflow.cx.v3.ExportIntentsMetadata]\n-  ``response``:\n   [ExportIntentsResponse][google.cloud.dialogflow.cx.v3.ExportIntentsResponse]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_export_intents():\n        # Create a client\n        client = dialogflowcx_v3.IntentsAsyncClient()\n\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Pages": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_pages",
          "description": "Returns the list of all pages in the specified flow.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_pages():\n        # Create a client\n        client = dialogflowcx_v3.PagesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListPagesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_pages(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The flow to list all pages for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.pages.pagers.ListPagesAsyncPager: The response message for [Pages.ListPages][google.cloud.dialogflow.cx.v3.Pages.ListPages].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_page",
          "description": "Retrieves the specified page.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_page():\n        # Create a client\n        client = dialogflowcx_v3.PagesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetPageRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_page(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.GetPageRequest, dict]]):\n        The request object. T",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the page. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>/pages/<PageID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Page: A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages.  For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page.  You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page.  For more information, see the [Page guide](\\ https://cloud.google.com/dialogflow/cx/docs/concept/page)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_page",
          "description": "Creates a page in the specified flow.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_page():\n        # Create a client\n        client = dialogflowcx_v3.PagesAsyncClient()\n\n        # Initialize request argument(s)\n        page = dialogflowcx_v3.Page()\n        page.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.CreatePageRequest(\n            parent=\"parent_value\",\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The flow to create a page for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "page": {
                "type": "google.cloud.dialogflowcx_v3.types.Page",
                "description": "Required. The page to create. This corresponds to the ``page`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Page: A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages.  For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page.  You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page.  For more information, see the [Page guide](\\ https://cloud.google.com/dialogflow/cx/docs/concept/page)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "page",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_page",
          "description": "Updates the specified page.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_page():\n        # Create a client\n        client = dialogflowcx_v3.PagesAsyncClient()\n\n        # Initialize request argument(s)\n        page = dialogflowcx_v3.Page()\n        page.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.UpdatePageRequest(\n            page=page,\n        )\n\n        # Make",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "page": {
                "type": "google.cloud.dialogflowcx_v3.types.Page",
                "description": "Required. The page to update. This corresponds to the ``page`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Page: A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages.  For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page.  You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page.  For more information, see the [Page guide](\\ https://cloud.google.com/dialogflow/cx/docs/concept/page)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "page",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_page",
          "description": "Deletes the specified page.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_page():\n        # Create a client\n        client = dialogflowcx_v3.PagesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeletePageRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_page(request=request)\n\nArgs:\n    reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the page to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/Flows/<flowID>/pages/<PageID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "SecuritySettingsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_security_settings",
          "description": "Create security settings in the specified location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_security_settings():\n        # Create a client\n        client = dialogflowcx_v3.SecuritySettingsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        security_settings = dialogflowcx_v3.SecuritySettings()\n        security_settings.retention_window_days = 2271\n        security_settings.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.CreateSecuritySettingsRequest(\n            parent=\"parent_value\",\n            securit",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location to create an [SecuritySettings][google.cloud.dialogflow.cx.v3.SecuritySettings] for. Format: ``projects/<ProjectID>/locations/<LocationID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "security_settings": {
                "type": "google.cloud.dialogflowcx_v3.types.SecuritySettings",
                "description": "Required. The security settings to create.  This corresponds to the ``security_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.SecuritySettings: Represents the settings related to security issues, such as data redaction and data retention. It may take hours for updates on the settings to propagate to all the related components and take effect."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "security_settings",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_security_settings",
          "description": "Retrieves the specified\n[SecuritySettings][google.cloud.dialogflow.cx.v3.SecuritySettings].\nThe returned settings may be stale by up to 1 minute.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_security_settings():\n        # Create a client\n        client = dialogflowcx_v3.SecuritySettingsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetSecuritySettingsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_security_settings(request=request)\n\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the settings. Format: ``projects/<ProjectID>/locations/<LocationID>/securitySettings/<securitysettingsID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.SecuritySettings: Represents the settings related to security issues, such as data redaction and data retention. It may take hours for updates on the settings to propagate to all the related components and take effect."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_security_settings",
          "description": "Updates the specified\n[SecuritySettings][google.cloud.dialogflow.cx.v3.SecuritySettings].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_security_settings():\n        # Create a client\n        client = dialogflowcx_v3.SecuritySettingsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        security_settings = dialogflowcx_v3.SecuritySettings()\n        security_settings.retention_window_days = 2271\n        security_settings.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.UpdateSecuritySettingsRequest(\n            secu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "security_settings": {
                "type": "google.cloud.dialogflowcx_v3.types.SecuritySettings",
                "description": "Required. [SecuritySettings] object that contains values for each of the fields to update.  This corresponds to the ``security_settings`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.SecuritySettings: Represents the settings related to security issues, such as data redaction and data retention. It may take hours for updates on the settings to propagate to all the related components and take effect."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "security_settings",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_security_settings",
          "description": "Returns the list of all security settings in the\nspecified location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_security_settings():\n        # Create a client\n        client = dialogflowcx_v3.SecuritySettingsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListSecuritySettingsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_security_settings(request=request)\n\n        # Handle the response\n        async for response in page_result:\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location to list all security settings for. Format: ``projects/<ProjectID>/locations/<LocationID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.security_settings_service.pagers.ListSecuritySettingsAsyncPager: The response message for [SecuritySettings.ListSecuritySettings][].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_security_settings",
          "description": "Deletes the specified\n[SecuritySettings][google.cloud.dialogflow.cx.v3.SecuritySettings].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_security_settings():\n        # Create a client\n        client = dialogflowcx_v3.SecuritySettingsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteSecuritySettingsRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_security_settings(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [SecuritySettings][google.cloud.dialogflow.cx.v3.SecuritySettings] to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/securitySettings/<SecuritySettingsID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "SessionEntityTypes": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_session_entity_types",
          "description": "Returns the list of all session entity types in the\nspecified session.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_session_entity_types():\n        # Create a client\n        client = dialogflowcx_v3.SessionEntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListSessionEntityTypesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_session_entity_types(request=request)\n\n        # Handle the response\n        async for response in page_result:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The session to list all session entity types from. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/sessions/<SessionID>`` or ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>/sessions/<SessionID>``. If ``Environment ID`` is not specified, we assume default 'draft' environment.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.session_entity_types.pagers.ListSessionEntityTypesAsyncPager: The response message for [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.cx.v3.SessionEntityTypes.ListSessionEntityTypes].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_session_entity_type",
          "description": "Retrieves the specified session entity type.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_session_entity_type():\n        # Create a client\n        client = dialogflowcx_v3.SessionEntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetSessionEntityTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_session_entity_type(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the session entity type. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/sessions/<SessionID>/entityTypes/<EntityTypeID>`` or ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>/sessions/<SessionID>/entityTypes/<EntityTypeID>``. If ``Environment ID`` is not specified, we assume default 'draft' environment.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.SessionEntityType: Session entity types are referred to as **User** entity types and are entities that are built for an individual user such as favorites, preferences, playlists, and so on.  You can redefine a session entity type at the session level to extend or replace a [custom entity type][google.cloud.dialogflow.cx.v3.EntityType] at the user session level (we refer to the entity types defined at the agent level as \"custom entity types\").  Note: session entity types apply to all queries, regardless of the language.  For more information about entity types, see the [Dialogflow documentation](\\ https://cloud.google.com/dialogflow/docs/entities-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_session_entity_type",
          "description": "Creates a session entity type.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_session_entity_type():\n        # Create a client\n        client = dialogflowcx_v3.SessionEntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        session_entity_type = dialogflowcx_v3.SessionEntityType()\n        session_entity_type.name = \"name_value\"\n        session_entity_type.entity_override_mode = \"ENTITY_OVERRIDE_MODE_SUPPLEMENT\"\n        session_entity_type.entities.value = \"value_value\"\n        session_entity_type.entities.synonyms = ['synonyms_value1'",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The session to create a session entity type for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/sessions/<SessionID>`` or ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>/sessions/<SessionID>``. If ``Environment ID`` is not specified, we assume default 'draft' environment.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "session_entity_type": {
                "type": "google.cloud.dialogflowcx_v3.types.SessionEntityType",
                "description": "Required. The session entity type to create.  This corresponds to the ``session_entity_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.SessionEntityType: Session entity types are referred to as **User** entity types and are entities that are built for an individual user such as favorites, preferences, playlists, and so on.  You can redefine a session entity type at the session level to extend or replace a [custom entity type][google.cloud.dialogflow.cx.v3.EntityType] at the user session level (we refer to the entity types defined at the agent level as \"custom entity types\").  Note: session entity types apply to all queries, regardless of the language.  For more information about entity types, see the [Dialogflow documentation](\\ https://cloud.google.com/dialogflow/docs/entities-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "session_entity_type",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_session_entity_type",
          "description": "Updates the specified session entity type.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_session_entity_type():\n        # Create a client\n        client = dialogflowcx_v3.SessionEntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        session_entity_type = dialogflowcx_v3.SessionEntityType()\n        session_entity_type.name = \"name_value\"\n        session_entity_type.entity_override_mode = \"ENTITY_OVERRIDE_MODE_SUPPLEMENT\"\n        session_entity_type.entities.value = \"value_value\"\n        session_entity_type.entities.synonyms = ['syno",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "session_entity_type": {
                "type": "google.cloud.dialogflowcx_v3.types.SessionEntityType",
                "description": "Required. The session entity type to update. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/sessions/<SessionID>/entityTypes/<EntityTypeID>`` or ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>/sessions/<SessionID>/entityTypes/<EntityTypeID>``. If ``Environment ID`` is not specified, we assume default 'draft' environment.  This corresponds to the ``session_entity_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.SessionEntityType: Session entity types are referred to as **User** entity types and are entities that are built for an individual user such as favorites, preferences, playlists, and so on.  You can redefine a session entity type at the session level to extend or replace a [custom entity type][google.cloud.dialogflow.cx.v3.EntityType] at the user session level (we refer to the entity types defined at the agent level as \"custom entity types\").  Note: session entity types apply to all queries, regardless of the language.  For more information about entity types, see the [Dialogflow documentation](\\ https://cloud.google.com/dialogflow/docs/entities-overview)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "session_entity_type",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_session_entity_type",
          "description": "Deletes the specified session entity type.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_session_entity_type():\n        # Create a client\n        client = dialogflowcx_v3.SessionEntityTypesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteSessionEntityTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_session_entity_type(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.DeleteSessionEntityTypeRequest, dict]]):\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the session entity type to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/sessions/<SessionID>/entityTypes/<EntityTypeID>`` or ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/environments/<EnvironmentID>/sessions/<SessionID>/entityTypes/<EntityTypeID>``. If ``Environment ID`` is not specified, we assume default 'draft' environment.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Sessions": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "detect_intent",
          "description": "Processes a natural language query and returns structured,\nactionable data as a result. This method is not idempotent,\nbecause it may cause session entity types to be updated, which\nin turn might affect results of future queries.\n\nNote: Always use agent versions for production traffic. See\n`Versions and\nenvironments <https://cloud.google.com/dialogflow/cx/docs/concept/version>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_detect_intent():\n        # Create a client\n        client = dialogflowcx_v3.SessionsAsyncClient()\n\n        # Initialize request argume",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "server_streaming_detect_intent",
          "description": "Processes a natural language query and returns structured,\nactionable data as a result through server-side streaming.\nServer-side streaming allows Dialogflow to send `partial\nresponses <https://cloud.google.com/dialogflow/cx/docs/concept/fulfillment#partial-response>`__\nearlier in a single request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_server_streaming_detect_intent():\n        # Create a client\n        client = dialogflowcx_v3.SessionsAsyncClient()\n\n        # Initialize request argument(s)\n        query_input = dialogflowcx_v3.QueryInput()\n        qu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "streaming_detect_intent",
          "description": "Processes a natural language query in audio format in a\nstreaming fashion and returns structured, actionable data as a\nresult. This method is only available via the gRPC API (not\nREST).\n\nNote: Always use agent versions for production traffic. See\n`Versions and\nenvironments <https://cloud.google.com/dialogflow/cx/docs/concept/version>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_streaming_detect_intent():\n        # Create a client\n        client = dialogflowcx_v3.SessionsAsyncClient()\n\n        # Initialize request argument(s)\n        query_input = dialog",
          "parameters": {
            "type": "object",
            "properties": {
              "requests": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "match_intent",
          "description": "Returns preliminary intent match results, doesn't\nchange the session status.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_match_intent():\n        # Create a client\n        client = dialogflowcx_v3.SessionsAsyncClient()\n\n        # Initialize request argument(s)\n        query_input = dialogflowcx_v3.QueryInput()\n        query_input.text.text = \"text_value\"\n        query_input.language_code = \"language_code_value\"\n\n        request = dialogflowcx_v3.MatchIntentRequest(\n            session=\"session_value\",\n            query_input=query_input,\n        )\n\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fulfill_intent",
          "description": "Fulfills a matched intent returned by\n[MatchIntent][google.cloud.dialogflow.cx.v3.Sessions.MatchIntent].\nMust be called after\n[MatchIntent][google.cloud.dialogflow.cx.v3.Sessions.MatchIntent],\nwith input from\n[MatchIntentResponse][google.cloud.dialogflow.cx.v3.MatchIntentResponse].\nOtherwise, the behavior is undefined.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_fulfill_intent():\n        # Create a client\n        client = dialogflowcx_v3.SessionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.FulfillIntentRequest(\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "submit_answer_feedback",
          "description": "Updates the feedback received from the user for a\nsingle turn of the bot response.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_submit_answer_feedback():\n        # Create a client\n        client = dialogflowcx_v3.SessionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.SubmitAnswerFeedbackRequest(\n            session=\"session_value\",\n            response_id=\"response_id_value\",\n        )\n\n        # Make the request\n        response = await client.submit_answer_feedback(request=request)\n\n        # Handle the response\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "TestCases": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_test_cases",
          "description": "Fetches a list of test cases for a given agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_test_cases():\n        # Create a client\n        client = dialogflowcx_v3.TestCasesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListTestCasesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_test_cases(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to list all pages for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.test_cases.pagers.ListTestCasesAsyncPager: The response message for [TestCases.ListTestCases][google.cloud.dialogflow.cx.v3.TestCases.ListTestCases].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_delete_test_cases",
          "description": "Batch deletes test cases.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_batch_delete_test_cases():\n        # Create a client\n        client = dialogflowcx_v3.TestCasesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.BatchDeleteTestCasesRequest(\n            parent=\"parent_value\",\n            names=['names_value1', 'names_value2'],\n        )\n\n        # Make the request\n        await client.batch_delete_test_cases(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.BatchDeleteTestCasesR",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to delete test cases from. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_test_case",
          "description": "Gets a test case.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_test_case():\n        # Create a client\n        client = dialogflowcx_v3.TestCasesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetTestCaseRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_test_case(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.GetTestCaseRequest, dict]]):\n        The request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the testcase. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/testCases/<TestCaseID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.TestCase: Represents a test case."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_test_case",
          "description": "Creates a test case for the given agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_test_case():\n        # Create a client\n        client = dialogflowcx_v3.TestCasesAsyncClient()\n\n        # Initialize request argument(s)\n        test_case = dialogflowcx_v3.TestCase()\n        test_case.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.CreateTestCaseRequest(\n            parent=\"parent_value\",\n            test_case=test_case,\n        )\n\n        # Make the request\n        response = await client.create_test_case(request=request)\n\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to create the test case for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "test_case": {
                "type": "google.cloud.dialogflowcx_v3.types.TestCase",
                "description": "Required. The test case to create. This corresponds to the ``test_case`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.TestCase: Represents a test case."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "test_case",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_test_case",
          "description": "Updates the specified test case.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_test_case():\n        # Create a client\n        client = dialogflowcx_v3.TestCasesAsyncClient()\n\n        # Initialize request argument(s)\n        test_case = dialogflowcx_v3.TestCase()\n        test_case.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.UpdateTestCaseRequest(\n            test_case=test_case,\n        )\n\n        # Make the request\n        response = await client.update_test_case(request=request)\n\n        # Handle the response\n        print(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "test_case": {
                "type": "google.cloud.dialogflowcx_v3.types.TestCase",
                "description": "Required. The test case to update. This corresponds to the ``test_case`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The mask to specify which fields should be updated. The [``creationTime``][google.cloud.dialogflow.cx.v3.TestCase.creation_time] and [``lastTestResult``][google.cloud.dialogflow.cx.v3.TestCase.last_test_result] cannot be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.TestCase: Represents a test case."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "test_case",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "run_test_case",
          "description": "Kicks off a test case run.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [RunTestCaseMetadata][google.cloud.dialogflow.cx.v3.RunTestCaseMetadata]\n-  ``response``:\n   [RunTestCaseResponse][google.cloud.dialogflow.cx.v3.RunTestCaseResponse]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_run_test_case():\n        # Create a client\n        client = dialogflowcx_v3.TestCasesAsyncClient()\n\n        # I",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_run_test_cases",
          "description": "Kicks off a batch run of test cases.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [BatchRunTestCasesMetadata][google.cloud.dialogflow.cx.v3.BatchRunTestCasesMetadata]\n-  ``response``:\n   [BatchRunTestCasesResponse][google.cloud.dialogflow.cx.v3.BatchRunTestCasesResponse]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_batch_run_test_cases():\n        # Create a client\n        client = dialogflow",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "calculate_coverage",
          "description": "Calculates the test coverage for an agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_calculate_coverage():\n        # Create a client\n        client = dialogflowcx_v3.TestCasesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.CalculateCoverageRequest(\n            agent=\"agent_value\",\n            type_=\"TRANSITION_ROUTE_GROUP\",\n        )\n\n        # Make the request\n        response = await client.calculate_coverage(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Un",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_test_cases",
          "description": "Imports the test cases from a Cloud Storage bucket or a local\nfile. It always creates new test cases and won't overwrite any\nexisting ones. The provided ID in the imported test case is\nneglected.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [ImportTestCasesMetadata][google.cloud.dialogflow.cx.v3.ImportTestCasesMetadata]\n-  ``response``:\n   [ImportTestCasesResponse][google.cloud.dialogflow.cx.v3.ImportTestCasesResponse]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_option",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_test_cases",
          "description": "Exports the test cases under the agent to a Cloud Storage bucket\nor a local file. Filter can be applied to export a subset of\ntest cases.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [ExportTestCasesMetadata][google.cloud.dialogflow.cx.v3.ExportTestCasesMetadata]\n-  ``response``:\n   [ExportTestCasesResponse][google.cloud.dialogflow.cx.v3.ExportTestCasesResponse]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_test_case_results",
          "description": "Fetches the list of run results for the given test\ncase. A maximum of 100 results are kept for each test\ncase.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_test_case_results():\n        # Create a client\n        client = dialogflowcx_v3.TestCasesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListTestCaseResultsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_test_case_results(request=request)\n\n        # Handle the response\n        async for resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The test case to list results for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/testCases/<TestCaseID>``. Specify a ``-`` as a wildcard for TestCase ID to list results across multiple test cases.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.test_cases.pagers.ListTestCaseResultsAsyncPager: The response message for [TestCases.ListTestCaseResults][google.cloud.dialogflow.cx.v3.TestCases.ListTestCaseResults].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_test_case_result",
          "description": "Gets a test case result.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_test_case_result():\n        # Create a client\n        client = dialogflowcx_v3.TestCasesAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetTestCaseResultRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_test_case_result(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.GetTestCaseResultRequ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the testcase. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/testCases/<TestCaseID>/results/<TestCaseResultID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.TestCaseResult: Represents a result from running a test case in an agent environment."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "TransitionRouteGroups": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_transition_route_groups",
          "description": "Returns the list of all transition route groups in\nthe specified flow.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_transition_route_groups():\n        # Create a client\n        client = dialogflowcx_v3.TransitionRouteGroupsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListTransitionRouteGroupsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_transition_route_groups(request=request)\n\n        # Handle the response\n        async for response in pa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The flow to list all transition route groups for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>`` or \\`projects//locations//agents/.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.transition_route_groups.pagers.ListTransitionRouteGroupsAsyncPager: The response message for [TransitionRouteGroups.ListTransitionRouteGroups][google.cloud.dialogflow.cx.v3.TransitionRouteGroups.ListTransitionRouteGroups].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_transition_route_group",
          "description": "Retrieves the specified\n[TransitionRouteGroup][google.cloud.dialogflow.cx.v3.TransitionRouteGroup].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_transition_route_group():\n        # Create a client\n        client = dialogflowcx_v3.TransitionRouteGroupsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetTransitionRouteGroupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_transition_route_group(request=request)\n\n        # Handle the response\n        pr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [TransitionRouteGroup][google.cloud.dialogflow.cx.v3.TransitionRouteGroup]. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>/transitionRouteGroups/<TransitionRouteGroupID>`` or ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/transitionRouteGroups/<TransitionRouteGroupID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.TransitionRouteGroup: A TransitionRouteGroup represents a group of [TransitionRoutes][google.cloud.dialogflow.cx.v3.TransitionRoute] to be used by a [Page][google.cloud.dialogflow.cx.v3.Page]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_transition_route_group",
          "description": "Creates an\n[TransitionRouteGroup][google.cloud.dialogflow.cx.v3.TransitionRouteGroup]\nin the specified flow.\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_transition_route_group():\n        # Create a client\n        client = dialogflowcx_v3.TransitionRouteGroupsAsyncClient()\n\n        # Initialize request argument(s)\n        transition_route_group = dialogflowcx_v3.TransitionRouteGroup()\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The flow to create an [TransitionRouteGroup][google.cloud.dialogflow.cx.v3.TransitionRouteGroup] for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>`` or ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>`` for agent-level groups.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "transition_route_group": {
                "type": "google.cloud.dialogflowcx_v3.types.TransitionRouteGroup",
                "description": "Required. The transition route group to create.  This corresponds to the ``transition_route_group`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.TransitionRouteGroup: A TransitionRouteGroup represents a group of [TransitionRoutes][google.cloud.dialogflow.cx.v3.TransitionRoute] to be used by a [Page][google.cloud.dialogflow.cx.v3.Page]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "transition_route_group",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_transition_route_group",
          "description": "Updates the specified\n[TransitionRouteGroup][google.cloud.dialogflow.cx.v3.TransitionRouteGroup].\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_transition_route_group():\n        # Create a client\n        client = dialogflowcx_v3.TransitionRouteGroupsAsyncClient()\n\n        # Initialize request argument(s)\n        transition_route_group = dialogflowcx_v3.TransitionRouteGroup()\n        trans",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "transition_route_group": {
                "type": "google.cloud.dialogflowcx_v3.types.TransitionRouteGroup",
                "description": "Required. The transition route group to update.  This corresponds to the ``transition_route_group`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The mask to control which fields get updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.TransitionRouteGroup: A TransitionRouteGroup represents a group of [TransitionRoutes][google.cloud.dialogflow.cx.v3.TransitionRoute] to be used by a [Page][google.cloud.dialogflow.cx.v3.Page]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "transition_route_group",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_transition_route_group",
          "description": "Deletes the specified\n[TransitionRouteGroup][google.cloud.dialogflow.cx.v3.TransitionRouteGroup].\n\nNote: You should always train a flow prior to sending it\nqueries. See the `training\ndocumentation <https://cloud.google.com/dialogflow/cx/docs/concept/training>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_transition_route_group():\n        # Create a client\n        client = dialogflowcx_v3.TransitionRouteGroupsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteTransitionRouteGroupRequest(\n            name",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [TransitionRouteGroup][google.cloud.dialogflow.cx.v3.TransitionRouteGroup] to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>/transitionRouteGroups/<TransitionRouteGroupID>`` or ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/transitionRouteGroups/<TransitionRouteGroupID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Versions": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_versions",
          "description": "Returns the list of all versions in the specified\n[Flow][google.cloud.dialogflow.cx.v3.Flow].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_versions():\n        # Create a client\n        client = dialogflowcx_v3.VersionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListVersionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_versions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The [Flow][google.cloud.dialogflow.cx.v3.Flow] to list all versions for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.versions.pagers.ListVersionsAsyncPager: The response message for [Versions.ListVersions][google.cloud.dialogflow.cx.v3.Versions.ListVersions].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_version",
          "description": "Retrieves the specified\n[Version][google.cloud.dialogflow.cx.v3.Version].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_version():\n        # Create a client\n        client = dialogflowcx_v3.VersionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetVersionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_version(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.type",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [Version][google.cloud.dialogflow.cx.v3.Version]. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>/versions/<VersionID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Version: Represents a version of a flow."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_version",
          "description": "Creates a [Version][google.cloud.dialogflow.cx.v3.Version] in\nthe specified [Flow][google.cloud.dialogflow.cx.v3.Flow].\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``:\n   [CreateVersionOperationMetadata][google.cloud.dialogflow.cx.v3.CreateVersionOperationMetadata]\n-  ``response``:\n   [Version][google.cloud.dialogflow.cx.v3.Version]\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_version():\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The [Flow][google.cloud.dialogflow.cx.v3.Flow] to create an [Version][google.cloud.dialogflow.cx.v3.Version] for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "version": {
                "type": "google.cloud.dialogflowcx_v3.types.Version",
                "description": "Required. The version to create. This corresponds to the ``version`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.dialogflowcx_v3.types.Version` Represents a version of a flow."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "version",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_version",
          "description": "Updates the specified\n[Version][google.cloud.dialogflow.cx.v3.Version].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_version():\n        # Create a client\n        client = dialogflowcx_v3.VersionsAsyncClient()\n\n        # Initialize request argument(s)\n        version = dialogflowcx_v3.Version()\n        version.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.UpdateVersionRequest(\n            version=version,\n        )\n\n        # Make the request\n        response = await client.update_version(request=request)\n\n        # Handle the",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "version": {
                "type": "google.cloud.dialogflowcx_v3.types.Version",
                "description": "Required. The version to update. This corresponds to the ``version`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. The mask to control which fields get updated. Currently only ``description`` and ``display_name`` can be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Version: Represents a version of a flow."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "version",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_version",
          "description": "Deletes the specified\n[Version][google.cloud.dialogflow.cx.v3.Version].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_version():\n        # Create a client\n        client = dialogflowcx_v3.VersionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteVersionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_version(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.DeleteVersionRequest, dict]]):\n        The request object",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the [Version][google.cloud.dialogflow.cx.v3.Version] to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>/versions/<VersionID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "load_version",
          "description": "Loads resources in the specified version to the draft flow.\n\nThis method is a `long-running\noperation <https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation>`__.\nThe returned ``Operation`` type has the following\nmethod-specific fields:\n\n-  ``metadata``: An empty `Struct\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`__\n-  ``response``: An `Empty\n   message <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty>`__\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_lo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The [Version][google.cloud.dialogflow.cx.v3.Version] to be loaded to draft flow. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>/versions/<VersionID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "compare_versions",
          "description": "Compares the specified base version with target\nversion.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_compare_versions():\n        # Create a client\n        client = dialogflowcx_v3.VersionsAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.CompareVersionsRequest(\n            base_version=\"base_version_value\",\n            target_version=\"target_version_value\",\n        )\n\n        # Make the request\n        response = await client.compare_versions(request=request)\n\n        # Handle the response\n        print(response)\n\nAr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "base_version": {
                "type": "str",
                "description": "Required. Name of the base flow version to compare with the target version. Use version ID ``0`` to indicate the draft version of the specified flow.  Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/flows/<FlowID>/versions/<VersionID>``.  This corresponds to the ``base_version`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.CompareVersionsResponse: The response message for [Versions.CompareVersions][google.cloud.dialogflow.cx.v3.Versions.CompareVersions]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "base_version",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "Webhooks": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_webhooks",
          "description": "Returns the list of all webhooks in the specified\nagent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_list_webhooks():\n        # Create a client\n        client = dialogflowcx_v3.WebhooksAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.ListWebhooksRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_webhooks(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Un",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to list all webhooks for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.services.webhooks.pagers.ListWebhooksAsyncPager: The response message for [Webhooks.ListWebhooks][google.cloud.dialogflow.cx.v3.Webhooks.ListWebhooks].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_webhook",
          "description": "Retrieves the specified webhook.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_get_webhook():\n        # Create a client\n        client = dialogflowcx_v3.WebhooksAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.GetWebhookRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_webhook(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.GetWebhookRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the webhook. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/webhooks/<WebhookID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Webhook: Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_webhook",
          "description": "Creates a webhook in the specified agent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_create_webhook():\n        # Create a client\n        client = dialogflowcx_v3.WebhooksAsyncClient()\n\n        # Initialize request argument(s)\n        webhook = dialogflowcx_v3.Webhook()\n        webhook.generic_web_service.uri = \"uri_value\"\n        webhook.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.CreateWebhookRequest(\n            parent=\"parent_value\",\n            webhook=webhook,\n        )\n\n        # Make the request\n        response = await c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The agent to create a webhook for. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "webhook": {
                "type": "google.cloud.dialogflowcx_v3.types.Webhook",
                "description": "Required. The webhook to create. This corresponds to the ``webhook`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Webhook: Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "webhook",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_webhook",
          "description": "Updates the specified webhook.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_update_webhook():\n        # Create a client\n        client = dialogflowcx_v3.WebhooksAsyncClient()\n\n        # Initialize request argument(s)\n        webhook = dialogflowcx_v3.Webhook()\n        webhook.generic_web_service.uri = \"uri_value\"\n        webhook.display_name = \"display_name_value\"\n\n        request = dialogflowcx_v3.UpdateWebhookRequest(\n            webhook=webhook,\n        )\n\n        # Make the request\n        response = await client.update_webhook(request=request)\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "webhook": {
                "type": "google.cloud.dialogflowcx_v3.types.Webhook",
                "description": "Required. The webhook to update. This corresponds to the ``webhook`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.dialogflowcx_v3.types.Webhook: Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "webhook",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_webhook",
          "description": "Deletes the specified webhook.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import dialogflowcx_v3\n\n    async def sample_delete_webhook():\n        # Create a client\n        client = dialogflowcx_v3.WebhooksAsyncClient()\n\n        # Initialize request argument(s)\n        request = dialogflowcx_v3.DeleteWebhookRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_webhook(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.dialogflowcx_v3.types.DeleteWebhookRequest, dict]]):\n        The request object. The request message for\n        [Webhoo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the webhook to delete. Format: ``projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/webhooks/<WebhookID>``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}