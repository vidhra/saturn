{
  "VmwareEngine": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_private_clouds",
          "description": "Lists ``PrivateCloud`` resources in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_private_clouds():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListPrivateCloudsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_private_clouds(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to be queried for clusters. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListPrivateCloudsAsyncPager: Response message for [VmwareEngine.ListPrivateClouds][google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateClouds]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListPrivateCloudsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_private_cloud",
          "description": "Retrieves a ``PrivateCloud`` resource by its resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_private_cloud():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetPrivateCloudRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_private_cloud(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmwareengine_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.PrivateCloud: Represents a private cloud resource. Private clouds of type STANDARD and TIME_LIMITED are zonal resources, STRETCHED private clouds are regional."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.PrivateCloud"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_private_cloud",
          "description": "Creates a new ``PrivateCloud`` resource in a given project and\nlocation. Private clouds of type ``STANDARD`` and\n``TIME_LIMITED`` are zonal resources, ``STRETCHED`` private\nclouds are regional. Creating a private cloud also creates a\n`management\ncluster <https://cloud.google.com/vmware-engine/docs/concepts-vmware-components>`__\nfor that private cloud.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_create_private_cloud():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        priva",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location to create the new private cloud in. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "private_cloud": {
                "type": "google.cloud.vmwareengine_v1.types.PrivateCloud",
                "description": "Required. The initial description of the new private cloud.  This corresponds to the ``private_cloud`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "private_cloud_id": {
                "type": "str",
                "description": "Required. The user-provided identifier of the private cloud to be created. This identifier must be unique among each ``PrivateCloud`` within the parent and becomes the final token in the name URI. The identifier must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  This corresponds to the ``private_cloud_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.PrivateCloud` Represents a private cloud resource. Private clouds of type STANDARD and TIME_LIMITED are zonal resources, STRETCHED private clouds are regional."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "private_cloud",
              "private_cloud_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_private_cloud",
          "description": "Modifies a ``PrivateCloud`` resource. Only the following fields\ncan be updated: ``description``. Only fields specified in\n``updateMask`` are applied.\n\nDuring operation processing, the resource is temporarily in the\n``ACTIVE`` state before the operation fully completes. For that\nperiod of time, you can't update the resource. Use the operation\nstatus to determine when the processing fully completes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_update_private_cloud():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "private_cloud": {
                "type": "google.cloud.vmwareengine_v1.types.PrivateCloud",
                "description": "Required. Private cloud description. This corresponds to the ``private_cloud`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``PrivateCloud`` resource by the update. The fields specified in ``updateMask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.PrivateCloud` Represents a private cloud resource. Private clouds of type STANDARD and TIME_LIMITED are zonal resources, STRETCHED private clouds are regional."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "private_cloud",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_private_cloud",
          "description": "Schedules a ``PrivateCloud`` resource for deletion.\n\nA ``PrivateCloud`` resource scheduled for deletion has\n``PrivateCloud.state`` set to ``DELETED`` and ``expireTime`` set\nto the time when deletion is final and can no longer be\nreversed. The delete operation is marked as done as soon as the\n``PrivateCloud`` is successfully scheduled for deletion (this\nalso applies when ``delayHours`` is set to zero), and the\noperation is not kept in pending state until ``PrivateCloud`` is\npurged. ``PrivateCloud`` can be restored using\n``UndeletePrivateCloud`` method before the ``expireTime``\nelapses. When ``expireTime`` is reached, deletion is final and\nall private cloud resources are irreversibly removed and billing\nstops. During the final removal process, ``PrivateCloud.state``\nis set to ``PURGING``. ``PrivateCloud`` can be polled using\nstandard ``GET`` method for the whole period of deletion and\npurging. It will not be returned only when it is completely\npurged.\n\n.. code-block:: python\n\n    # This snippet has been automat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to delete. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.PrivateCloud` Represents a private cloud resource. Private clouds of type STANDARD and TIME_LIMITED are zonal resources, STRETCHED private clouds are regional."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undelete_private_cloud",
          "description": "Restores a private cloud that was previously scheduled for\ndeletion by ``DeletePrivateCloud``. A ``PrivateCloud`` resource\nscheduled for deletion has ``PrivateCloud.state`` set to\n``DELETED`` and ``PrivateCloud.expireTime`` set to the time when\ndeletion can no longer be reversed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_undelete_private_cloud():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.UndeletePrivateCloudRequest(\n            name=\"nam",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the private cloud scheduled for deletion. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.PrivateCloud` Represents a private cloud resource. Private clouds of type STANDARD and TIME_LIMITED are zonal resources, STRETCHED private clouds are regional."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_clusters",
          "description": "Lists ``Cluster`` resources in a given private cloud.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_clusters():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListClustersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_clusters(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[U",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to query for clusters. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListClustersAsyncPager: Response message for [VmwareEngine.ListClusters][google.cloud.vmwareengine.v1.VmwareEngine.ListClusters]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListClustersAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_cluster",
          "description": "Retrieves a ``Cluster`` resource by its resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_cluster():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetClusterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_cluster(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmwareengine_v1.types.GetClusterReq",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The cluster resource name to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.Cluster: A cluster in a private cloud."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.Cluster"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_cluster",
          "description": "Creates a new cluster in a given private cloud. Creating a new\ncluster provides additional nodes for use in the parent private\ncloud and requires sufficient `node\nquota <https://cloud.google.com/vmware-engine/quotas>`__.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_create_cluster():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.CreateClusterRequest(\n            parent=\"parent_value\",\n            cluster_id=\"cluster_id_value\",\n        )\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to create a new cluster in. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "cluster": {
                "type": "google.cloud.vmwareengine_v1.types.Cluster",
                "description": "Required. The initial description of the new cluster.  This corresponds to the ``cluster`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "cluster_id": {
                "type": "str",
                "description": "Required. The user-provided identifier of the new ``Cluster``. This identifier must be unique among clusters within the parent and becomes the final token in the name URI. The identifier must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  This corresponds to the ``cluster_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.Cluster` A cluster in a private cloud."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "cluster",
              "cluster_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_cluster",
          "description": "Modifies a ``Cluster`` resource. Only fields specified in\n``updateMask`` are applied.\n\nDuring operation processing, the resource is temporarily in the\n``ACTIVE`` state before the operation fully completes. For that\nperiod of time, you can't update the resource. Use the operation\nstatus to determine when the processing fully completes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_update_cluster():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.Up",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "cluster": {
                "type": "google.cloud.vmwareengine_v1.types.Cluster",
                "description": "Required. The description of the cluster.  This corresponds to the ``cluster`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``Cluster`` resource by the update. The fields specified in the ``updateMask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.Cluster` A cluster in a private cloud."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "cluster",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_cluster",
          "description": "Deletes a ``Cluster`` resource. To avoid unintended data loss,\nmigrate or gracefully shut down any workloads running on the\ncluster before deletion. You cannot delete the management\ncluster of a private cloud using this method.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_delete_cluster():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.DeleteClusterRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the cluster to delete. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_nodes",
          "description": "Lists nodes in a given cluster.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_nodes():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListNodesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_nodes(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmwareengine_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the cluster to be queried for nodes. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListNodesAsyncPager: Response message for [VmwareEngine.ListNodes][google.cloud.vmwareengine.v1.VmwareEngine.ListNodes]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListNodesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_node",
          "description": "Gets details of a single node.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_node():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetNodeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_node(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmwareengine_v1.types.GetNodeRequest, dict]]):\n        The request o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the node to retrieve. For example: ``projects/{project}/locations/{location}/privateClouds/{private_cloud}/clusters/{cluster}/nodes/{node}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.Node: Node in a cluster."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.Node"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_external_addresses",
          "description": "Lists external IP addresses assigned to VMware\nworkload VMs in a given private cloud.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_external_addresses():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListExternalAddressesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_external_addresses(request=request)\n\n        # Handle the response\n        async for response in page_resul",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to be queried for external IP addresses. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListExternalAddressesAsyncPager: Response message for [VmwareEngine.ListExternalAddresses][google.cloud.vmwareengine.v1.VmwareEngine.ListExternalAddresses]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListExternalAddressesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_network_policy_external_addresses",
          "description": "Lists external IP addresses assigned to VMware\nworkload VMs within the scope of the given network\npolicy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_fetch_network_policy_external_addresses():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.FetchNetworkPolicyExternalAddressesRequest(\n            network_policy=\"network_policy_value\",\n        )\n\n        # Make the request\n        page_result = client.fetch_network_policy_external_addresses(reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "network_policy": {
                "type": "str",
                "description": "Required. The resource name of the network policy to query for assigned external IP addresses. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/networkPolicies/my-policy``  This corresponds to the ``network_policy`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.FetchNetworkPolicyExternalAddressesAsyncPager: Response message for [VmwareEngine.FetchNetworkPolicyExternalAddresses][google.cloud.vmwareengine.v1.VmwareEngine.FetchNetworkPolicyExternalAddresses]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "network_policy",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.FetchNetworkPolicyExternalAddressesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_external_address",
          "description": "Gets details of a single external IP address.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_external_address():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetExternalAddressRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_external_address(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmwareengine_v1.ty",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the external IP address to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/externalAddresses/my-ip``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.ExternalAddress: Represents an allocated external IP address and its corresponding internal IP address in a private cloud."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.ExternalAddress"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_external_address",
          "description": "Creates a new ``ExternalAddress`` resource in a given private\ncloud. The network policy that corresponds to the private cloud\nmust have the external IP address network service enabled\n(``NetworkPolicy.external_ip``).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_create_external_address():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.CreateExternalAddressRequest(\n            parent=\"parent_value\",\n            external_address_id=\"external_addres",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to create a new external IP address in. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "external_address": {
                "type": "google.cloud.vmwareengine_v1.types.ExternalAddress",
                "description": "Required. The initial description of a new external IP address.  This corresponds to the ``external_address`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "external_address_id": {
                "type": "str",
                "description": "Required. The user-provided identifier of the ``ExternalAddress`` to be created. This identifier must be unique among ``ExternalAddress`` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  This corresponds to the ``external_address_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.ExternalAddress` Represents an allocated external IP address and its corresponding internal IP address in a private cloud."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "external_address",
              "external_address_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_external_address",
          "description": "Updates the parameters of a single external IP address. Only\nfields specified in ``update_mask`` are applied.\n\nDuring operation processing, the resource is temporarily in the\n``ACTIVE`` state before the operation fully completes. For that\nperiod of time, you can't update the resource. Use the operation\nstatus to determine when the processing fully completes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_update_external_address():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "external_address": {
                "type": "google.cloud.vmwareengine_v1.types.ExternalAddress",
                "description": "Required. External IP address description.  This corresponds to the ``external_address`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``ExternalAddress`` resource by the update. The fields specified in the ``update_mask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.ExternalAddress` Represents an allocated external IP address and its corresponding internal IP address in a private cloud."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "external_address",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_external_address",
          "description": "Deletes a single external IP address. When you delete\nan external IP address, connectivity between the\nexternal IP address and the corresponding internal IP\naddress is lost.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_delete_external_address():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.DeleteExternalAddressRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_external_address(reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the external IP address to delete. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/externalAddresses/my-ip``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_subnets",
          "description": "Lists subnets in a given private cloud.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_subnets():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListSubnetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_subnets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to be queried for subnets. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListSubnetsAsyncPager: Response message for [VmwareEngine.ListSubnets][google.cloud.vmwareengine.v1.VmwareEngine.ListSubnets]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListSubnetsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_subnet",
          "description": "Gets details of a single subnet.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_subnet():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetSubnetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_subnet(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmwareengine_v1.types.GetSubnetRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the subnet to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/subnets/my-subnet``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.Subnet: Subnet in a private cloud. Either management subnets (such as vMotion) that are read-only, or userDefined, which can also be updated."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.Subnet"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_subnet",
          "description": "Updates the parameters of a single subnet. Only fields specified\nin ``update_mask`` are applied.\n\n*Note*: This API is synchronous and always returns a successful\n``google.longrunning.Operation`` (LRO). The returned LRO will\nonly have ``done`` and ``response`` fields.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_update_subnet():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.UpdateSubnetRequest(\n        )\n\n        # Make the request\n        opera",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "subnet": {
                "type": "google.cloud.vmwareengine_v1.types.Subnet",
                "description": "Required. Subnet description. This corresponds to the ``subnet`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``Subnet`` resource by the update. The fields specified in the ``update_mask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.Subnet` Subnet in a private cloud. Either management subnets (such as vMotion) that are read-only, or userDefined, which can also be updated."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "subnet",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_external_access_rules",
          "description": "Lists ``ExternalAccessRule`` resources in the specified network\npolicy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_external_access_rules():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListExternalAccessRulesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_external_access_rules(request=request)\n\n        # Handle the response\n        async for response in page_result:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the network policy to query for external access firewall rules. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/networkPolicies/my-policy``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListExternalAccessRulesAsyncPager: Response message for [VmwareEngine.ListExternalAccessRules][google.cloud.vmwareengine.v1.VmwareEngine.ListExternalAccessRules]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListExternalAccessRulesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_external_access_rule",
          "description": "Gets details of a single external access rule.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_external_access_rule():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetExternalAccessRuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_external_access_rule(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmware",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the external access firewall rule to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/networkPolicies/my-policy/externalAccessRules/my-rule``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.ExternalAccessRule: External access firewall rules for filtering incoming traffic destined to ExternalAddress resources."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.ExternalAccessRule"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_external_access_rule",
          "description": "Creates a new external access rule in a given network\npolicy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_create_external_access_rule():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.CreateExternalAccessRuleRequest(\n            parent=\"parent_value\",\n            external_access_rule_id=\"external_access_rule_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_external_access_rule(request=request)\n\n        print(\"W",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the network policy to create a new external access firewall rule in. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/networkPolicies/my-policy``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "external_access_rule": {
                "type": "google.cloud.vmwareengine_v1.types.ExternalAccessRule",
                "description": "Required. The initial description of a new external access rule.  This corresponds to the ``external_access_rule`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "external_access_rule_id": {
                "type": "str",
                "description": "Required. The user-provided identifier of the ``ExternalAccessRule`` to be created. This identifier must be unique among ``ExternalAccessRule`` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  This corresponds to the ``external_access_rule_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.ExternalAccessRule` External access firewall rules for filtering incoming traffic destined to ExternalAddress resources."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "external_access_rule",
              "external_access_rule_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_external_access_rule",
          "description": "Updates the parameters of a single external access rule. Only\nfields specified in ``update_mask`` are applied.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_update_external_access_rule():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.UpdateExternalAccessRuleRequest(\n        )\n\n        # Make the request\n        operation = client.update_external_access_rule(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "external_access_rule": {
                "type": "google.cloud.vmwareengine_v1.types.ExternalAccessRule",
                "description": "Required. Description of the external access rule.  This corresponds to the ``external_access_rule`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``ExternalAccessRule`` resource by the update. The fields specified in the ``update_mask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.ExternalAccessRule` External access firewall rules for filtering incoming traffic destined to ExternalAddress resources."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "external_access_rule",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_external_access_rule",
          "description": "Deletes a single external access rule.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_delete_external_access_rule():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.DeleteExternalAccessRuleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_external_access_rule(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the external access firewall rule to delete. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/networkPolicies/my-policy/externalAccessRules/my-rule``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_logging_servers",
          "description": "Lists logging servers configured for a given private\ncloud.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_logging_servers():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListLoggingServersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_logging_servers(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to be queried for logging servers. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListLoggingServersAsyncPager: Response message for [VmwareEngine.ListLoggingServers][google.cloud.vmwareengine.v1.VmwareEngine.ListLoggingServers]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListLoggingServersAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_logging_server",
          "description": "Gets details of a logging server.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_logging_server():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetLoggingServerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_logging_server(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmwareengine_v1.types.GetLoggingServ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the Logging Server to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/loggingServers/my-logging-server``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.LoggingServer: Logging server to receive vCenter or ESXi logs."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.LoggingServer"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_logging_server",
          "description": "Create a new logging server for a given private\ncloud.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_create_logging_server():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        logging_server = vmwareengine_v1.LoggingServer()\n        logging_server.hostname = \"hostname_value\"\n        logging_server.port = 453\n        logging_server.protocol = \"RELP\"\n        logging_server.source_type = \"VCSA\"\n\n        request = vmwareengine_v1.CreateLoggingServerRequest(\n            parent=\"p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to create a new Logging Server in. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "logging_server": {
                "type": "google.cloud.vmwareengine_v1.types.LoggingServer",
                "description": "Required. The initial description of a new logging server.  This corresponds to the ``logging_server`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "logging_server_id": {
                "type": "str",
                "description": "Required. The user-provided identifier of the ``LoggingServer`` to be created. This identifier must be unique among ``LoggingServer`` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  This corresponds to the ``logging_server_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.LoggingServer` Logging server to receive vCenter or ESXi logs."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "logging_server",
              "logging_server_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_logging_server",
          "description": "Updates the parameters of a single logging server. Only fields\nspecified in ``update_mask`` are applied.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_update_logging_server():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        logging_server = vmwareengine_v1.LoggingServer()\n        logging_server.hostname = \"hostname_value\"\n        logging_server.port = 453\n        logging_server.protocol = \"RELP\"\n        logging_server.source_type = \"VCSA\"\n\n        request = vmwareengine_v1",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "logging_server": {
                "type": "google.cloud.vmwareengine_v1.types.LoggingServer",
                "description": "Required. Logging server description. This corresponds to the ``logging_server`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``LoggingServer`` resource by the update. The fields specified in the ``update_mask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.LoggingServer` Logging server to receive vCenter or ESXi logs."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "logging_server",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_logging_server",
          "description": "Deletes a single logging server.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_delete_logging_server():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.DeleteLoggingServerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_logging_server(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the logging server to delete. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/loggingServers/my-logging-server``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_node_types",
          "description": "Lists node types\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_node_types():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListNodeTypesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_node_types(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmwareengine_v",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location to be queried for node types. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListNodeTypesAsyncPager: Response message for [VmwareEngine.ListNodeTypes][google.cloud.vmwareengine.v1.VmwareEngine.ListNodeTypes]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListNodeTypesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_node_type",
          "description": "Gets details of a single ``NodeType``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_node_type():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetNodeTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_node_type(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmwareengine_v1.types.GetNodeTypeRequest, dict",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the node type to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-proj/locations/us-central1-a/nodeTypes/standard-72``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.NodeType: Describes node type."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.NodeType"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "show_nsx_credentials",
          "description": "Gets details of credentials for NSX appliance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_show_nsx_credentials():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ShowNsxCredentialsRequest(\n            private_cloud=\"private_cloud_value\",\n        )\n\n        # Make the request\n        response = await client.show_nsx_credentials(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "private_cloud": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to be queried for credentials. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``private_cloud`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.Credentials: Credentials for a private cloud."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "private_cloud",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.Credentials"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "show_vcenter_credentials",
          "description": "Gets details of credentials for Vcenter appliance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_show_vcenter_credentials():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ShowVcenterCredentialsRequest(\n            private_cloud=\"private_cloud_value\",\n        )\n\n        # Make the request\n        response = await client.show_vcenter_credentials(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Un",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "private_cloud": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to be queried for credentials. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``private_cloud`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.Credentials: Credentials for a private cloud."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "private_cloud",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.Credentials"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reset_nsx_credentials",
          "description": "Resets credentials of the NSX appliance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_reset_nsx_credentials():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ResetNsxCredentialsRequest(\n            private_cloud=\"private_cloud_value\",\n        )\n\n        # Make the request\n        operation = client.reset_nsx_credentials(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "private_cloud": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to reset credentials for. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``private_cloud`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.PrivateCloud` Represents a private cloud resource. Private clouds of type STANDARD and TIME_LIMITED are zonal resources, STRETCHED private clouds are regional."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "private_cloud",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reset_vcenter_credentials",
          "description": "Resets credentials of the Vcenter appliance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_reset_vcenter_credentials():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ResetVcenterCredentialsRequest(\n            private_cloud=\"private_cloud_value\",\n        )\n\n        # Make the request\n        operation = client.reset_vcenter_credentials(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "private_cloud": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to reset credentials for. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``private_cloud`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.PrivateCloud` Represents a private cloud resource. Private clouds of type STANDARD and TIME_LIMITED are zonal resources, STRETCHED private clouds are regional."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "private_cloud",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_dns_forwarding",
          "description": "Gets details of the ``DnsForwarding`` config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_dns_forwarding():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetDnsForwardingRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_dns_forwarding(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmwareengine_v1.types.Ge",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of a ``DnsForwarding`` to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/dnsForwarding``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.DnsForwarding: DNS forwarding config. This config defines a list of domain to name server mappings, and is attached to the private cloud for custom domain resolution."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.DnsForwarding"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_dns_forwarding",
          "description": "Updates the parameters of the ``DnsForwarding`` config, like\nassociated domains. Only fields specified in ``update_mask`` are\napplied.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_update_dns_forwarding():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        dns_forwarding = vmwareengine_v1.DnsForwarding()\n        dns_forwarding.forwarding_rules.domain = \"domain_value\"\n        dns_forwarding.forwarding_rules.name_servers = ['name_servers_value1', 'name_servers_value2']\n\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "dns_forwarding": {
                "type": "google.cloud.vmwareengine_v1.types.DnsForwarding",
                "description": "Required. DnsForwarding config details.  This corresponds to the ``dns_forwarding`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``DnsForwarding`` resource by the update. The fields specified in the ``update_mask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.DnsForwarding` DNS forwarding config. This config defines a list of domain to name server mappings, and is attached to the private cloud for custom domain resolution."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "dns_forwarding",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_network_peering",
          "description": "Retrieves a ``NetworkPeering`` resource by its resource name.\nThe resource contains details of the network peering, such as\npeered networks, import and export custom route configurations,\nand peering state. NetworkPeering is a global resource and\nlocation can only be global.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_network_peering():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetNetworkPeeringRequest(\n            name=\"name_value\",\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the network peering to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global/networkPeerings/my-peering``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.NetworkPeering: Details of a network peering."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.NetworkPeering"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_network_peerings",
          "description": "Lists ``NetworkPeering`` resources in a given project.\nNetworkPeering is a global resource and location can only be\nglobal.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_network_peerings():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListNetworkPeeringsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_network_peerings(request=request)\n\n        # Handle the response\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location (global) to query for network peerings. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListNetworkPeeringsAsyncPager: Response message for [VmwareEngine.ListNetworkPeerings][google.cloud.vmwareengine.v1.VmwareEngine.ListNetworkPeerings]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListNetworkPeeringsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_network_peering",
          "description": "Creates a new network peering between the peer network and\nVMware Engine network provided in a ``NetworkPeering`` resource.\nNetworkPeering is a global resource and location can only be\nglobal.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_create_network_peering():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        network_peering = vmwareengine_v1.NetworkPeering()\n        network_peering.peer_network = \"peer_network_value\"\n        network_peering.peer_network_type = \"GOOGLE_C",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location to create the new network peering in. This value is always ``global``, because ``NetworkPeering`` is a global resource. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "network_peering": {
                "type": "google.cloud.vmwareengine_v1.types.NetworkPeering",
                "description": "Required. The initial description of the new network peering.  This corresponds to the ``network_peering`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "network_peering_id": {
                "type": "str",
                "description": "Required. The user-provided identifier of the new ``NetworkPeering``. This identifier must be unique among ``NetworkPeering`` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  This corresponds to the ``network_peering_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.NetworkPeering` Details of a network peering."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "network_peering",
              "network_peering_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_network_peering",
          "description": "Deletes a ``NetworkPeering`` resource. When a network peering is\ndeleted for a VMware Engine network, the peer network becomes\ninaccessible to that VMware Engine network. NetworkPeering is a\nglobal resource and location can only be global.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_delete_network_peering():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.DeleteNetworkPeeringRequest(\n            name=\"name_value\",\n        )\n\n        # Make the r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the network peering to be deleted. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global/networkPeerings/my-peering``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_network_peering",
          "description": "Modifies a ``NetworkPeering`` resource. Only the ``description``\nfield can be updated. Only fields specified in ``updateMask``\nare applied. NetworkPeering is a global resource and location\ncan only be global.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_update_network_peering():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        network_peering = vmwareengine_v1.NetworkPeering()\n        network_peering.peer_network = \"peer_network_value\"\n        network_peering.peer_network_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "network_peering": {
                "type": "google.cloud.vmwareengine_v1.types.NetworkPeering",
                "description": "Required. Network peering description.  This corresponds to the ``network_peering`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``NetworkPeering`` resource by the update. The fields specified in the ``update_mask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.NetworkPeering` Details of a network peering."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "network_peering",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_peering_routes",
          "description": "Lists the network peering routes exchanged over a\npeering connection. NetworkPeering is a global resource\nand location can only be global.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_peering_routes():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListPeeringRoutesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_peering_routes(request=request)\n\n        # Handle the response",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the network peering to retrieve peering routes from. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global/networkPeerings/my-peering``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListPeeringRoutesAsyncPager: Response message for [VmwareEngine.ListPeeringRoutes][google.cloud.vmwareengine.v1.VmwareEngine.ListPeeringRoutes]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListPeeringRoutesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_hcx_activation_key",
          "description": "Creates a new HCX activation key in a given private\ncloud.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_create_hcx_activation_key():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.CreateHcxActivationKeyRequest(\n            parent=\"parent_value\",\n            hcx_activation_key_id=\"hcx_activation_key_id_value\",\n        )\n\n        # Make the request\n        operation = client.create_hcx_activation_key(request=request)\n\n        print(\"Waiting for op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to create the key for. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/privateClouds/my-cloud``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "hcx_activation_key": {
                "type": "google.cloud.vmwareengine_v1.types.HcxActivationKey",
                "description": "Required. The initial description of a new HCX activation key. When creating a new key, this field must be an empty object.  This corresponds to the ``hcx_activation_key`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "hcx_activation_key_id": {
                "type": "str",
                "description": "Required. The user-provided identifier of the ``HcxActivationKey`` to be created. This identifier must be unique among ``HcxActivationKey`` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  This corresponds to the ``hcx_activation_key_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.HcxActivationKey` HCX activation key. A default key is created during private cloud provisioning, but this behavior is subject to change and you should always verify active keys. Use [VmwareEngine.ListHcxActivationKeys][google.cloud.vmwareengine.v1.VmwareEngine.ListHcxActivationKeys] to retrieve existing keys and [VmwareEngine.CreateHcxActivationKey][google.cloud.vmwareengine.v1.VmwareEngine.CreateHcxActivationKey] to create new ones."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "hcx_activation_key",
              "hcx_activation_key_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_hcx_activation_keys",
          "description": "Lists ``HcxActivationKey`` resources in a given private cloud.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_hcx_activation_keys():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListHcxActivationKeysRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_hcx_activation_keys(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to be queried for HCX activation keys. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/privateClouds/my-cloud``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListHcxActivationKeysAsyncPager: Response message for [VmwareEngine.ListHcxActivationKeys][google.cloud.vmwareengine.v1.VmwareEngine.ListHcxActivationKeys]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListHcxActivationKeysAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_hcx_activation_key",
          "description": "Retrieves a ``HcxActivationKey`` resource by its resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_hcx_activation_key():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetHcxActivationKeyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_hcx_activation_key(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the HCX activation key to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/privateClouds/my-cloud/hcxActivationKeys/my-key``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.HcxActivationKey: HCX activation key. A default key is created during private cloud provisioning, but this behavior is subject to change and you should always verify active keys. Use [VmwareEngine.ListHcxActivationKeys][google.cloud.vmwareengine.v1.VmwareEngine.ListHcxActivationKeys] to retrieve existing keys and [VmwareEngine.CreateHcxActivationKey][google.cloud.vmwareengine.v1.VmwareEngine.CreateHcxActivationKey] to create new ones."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.HcxActivationKey"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_network_policy",
          "description": "Retrieves a ``NetworkPolicy`` resource by its resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_network_policy():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetNetworkPolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_network_policy(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.vmwareeng",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the network policy to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/networkPolicies/my-network-policy``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.NetworkPolicy: Represents a network policy resource. Network policies are regional resources. You can use a network policy to enable or disable internet access and external IP access. Network policies are associated with a VMware Engine network, which might span across regions. For a given region, a network policy applies to all private clouds in the VMware Engine network associated with the policy."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.NetworkPolicy"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_network_policies",
          "description": "Lists ``NetworkPolicy`` resources in a specified project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_network_policies():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListNetworkPoliciesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_network_policies(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location (region) to query for network policies. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListNetworkPoliciesAsyncPager: Response message for [VmwareEngine.ListNetworkPolicies][google.cloud.vmwareengine.v1.VmwareEngine.ListNetworkPolicies]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListNetworkPoliciesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_network_policy",
          "description": "Creates a new network policy in a given VMware Engine\nnetwork of a project and location (region). A new\nnetwork policy cannot be created if another network\npolicy already exists in the same scope.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_create_network_policy():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        network_policy = vmwareengine_v1.NetworkPolicy()\n        network_policy.edge_services_cidr = \"edge_services_cidr_value\"\n\n        request = vmwareengine_v1.Create",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location (region) to create the new network policy in. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "network_policy": {
                "type": "google.cloud.vmwareengine_v1.types.NetworkPolicy",
                "description": "Required. The network policy configuration to use in the request.  This corresponds to the ``network_policy`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "network_policy_id": {
                "type": "str",
                "description": "Required. The user-provided identifier of the network policy to be created. This identifier must be unique within parent ``projects/{my-project}/locations/{us-central1}/networkPolicies`` and becomes the final token in the name URI. The identifier must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  This corresponds to the ``network_policy_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.NetworkPolicy` Represents a network policy resource. Network policies are regional resources. You can use a network policy to enable or disable internet access and external IP access. Network policies are associated with a VMware Engine network, which might span across regions. For a given region, a network policy applies to all private clouds in the VMware Engine network associated with the policy."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "network_policy",
              "network_policy_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_network_policy",
          "description": "Modifies a ``NetworkPolicy`` resource. Only the following fields\ncan be updated: ``internet_access``, ``external_ip``,\n``edge_services_cidr``. Only fields specified in ``updateMask``\nare applied. When updating a network policy, the external IP\nnetwork service can only be disabled if there are no external IP\naddresses present in the scope of the policy. Also, a\n``NetworkService`` cannot be updated when\n``NetworkService.state`` is set to ``RECONCILING``.\n\nDuring operation processing, the resource is temporarily in the\n``ACTIVE`` state before the operation fully completes. For that\nperiod of time, you can't update the resource. Use the operation\nstatus to determine when the processing fully completes.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creatin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "network_policy": {
                "type": "google.cloud.vmwareengine_v1.types.NetworkPolicy",
                "description": "Required. Network policy description. This corresponds to the ``network_policy`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``NetworkPolicy`` resource by the update. The fields specified in the ``update_mask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.NetworkPolicy` Represents a network policy resource. Network policies are regional resources. You can use a network policy to enable or disable internet access and external IP access. Network policies are associated with a VMware Engine network, which might span across regions. For a given region, a network policy applies to all private clouds in the VMware Engine network associated with the policy."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "network_policy",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_network_policy",
          "description": "Deletes a ``NetworkPolicy`` resource. A network policy cannot be\ndeleted when ``NetworkService.state`` is set to ``RECONCILING``\nfor either its external IP or internet access service.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_delete_network_policy():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.DeleteNetworkPolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_network_policy(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the network policy to delete. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/networkPolicies/my-network-policy``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_management_dns_zone_bindings",
          "description": "Lists Consumer VPCs bound to Management DNS Zone of a\ngiven private cloud.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_management_dns_zone_bindings():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListManagementDnsZoneBindingsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_management_dns_zone_bindings(request=request)\n\n        # Handle the response\n        async for respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to be queried for management DNS zone bindings. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListManagementDnsZoneBindingsAsyncPager: Response message for [VmwareEngine.ListManagementDnsZoneBindings][google.cloud.vmwareengine.v1.VmwareEngine.ListManagementDnsZoneBindings]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListManagementDnsZoneBindingsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_management_dns_zone_binding",
          "description": "Retrieves a 'ManagementDnsZoneBinding' resource by\nits resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_management_dns_zone_binding():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetManagementDnsZoneBindingRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_management_dns_zone_binding(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the management DNS zone binding to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/managementDnsZoneBindings/my-management-dns-zone-binding``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.ManagementDnsZoneBinding: Represents a binding between a network and the management DNS zone. A management DNS zone is the Cloud DNS cross-project binding zone that VMware Engine creates for each private cloud. It contains FQDNs and corresponding IP addresses for the private cloud's ESXi hosts and management VM appliances like vCenter and NSX Manager."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.ManagementDnsZoneBinding"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_management_dns_zone_binding",
          "description": "Creates a new ``ManagementDnsZoneBinding`` resource in a private\ncloud. This RPC creates the DNS binding and the resource that\nrepresents the DNS binding of the consumer VPC network to the\nmanagement DNS zone. A management DNS zone is the Cloud DNS\ncross-project binding zone that VMware Engine creates for each\nprivate cloud. It contains FQDNs and corresponding IP addresses\nfor the private cloud's ESXi hosts and management VM appliances\nlike vCenter and NSX Manager.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_create_management_dns_zone_binding():\n        # ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private cloud to create a new management DNS zone binding for. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "management_dns_zone_binding": {
                "type": "google.cloud.vmwareengine_v1.types.ManagementDnsZoneBinding",
                "description": "Required. The initial values for a new management DNS zone binding.  This corresponds to the ``management_dns_zone_binding`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "management_dns_zone_binding_id": {
                "type": "str",
                "description": "Required. The user-provided identifier of the ``ManagementDnsZoneBinding`` resource to be created. This identifier must be unique among ``ManagementDnsZoneBinding`` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  This corresponds to the ``management_dns_zone_binding_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.ManagementDnsZoneBinding` Represents a binding between a network and the management DNS zone. A management DNS zone is the Cloud DNS cross-project binding zone that VMware Engine creates for each private cloud. It contains FQDNs and corresponding IP addresses for the private cloud's ESXi hosts and management VM appliances like vCenter and NSX Manager."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "management_dns_zone_binding",
              "management_dns_zone_binding_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_management_dns_zone_binding",
          "description": "Updates a ``ManagementDnsZoneBinding`` resource. Only fields\nspecified in ``update_mask`` are applied.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_update_management_dns_zone_binding():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        management_dns_zone_binding = vmwareengine_v1.ManagementDnsZoneBinding()\n        management_dns_zone_binding.vpc_network = \"vpc_network_value\"\n\n        request = vmwareengine_v1.UpdateManagementDnsZoneBindingRequest(\n            management_dn",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "management_dns_zone_binding": {
                "type": "google.cloud.vmwareengine_v1.types.ManagementDnsZoneBinding",
                "description": "Required. New values to update the management DNS zone binding with.  This corresponds to the ``management_dns_zone_binding`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``ManagementDnsZoneBinding`` resource by the update. The fields specified in the ``update_mask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.ManagementDnsZoneBinding` Represents a binding between a network and the management DNS zone. A management DNS zone is the Cloud DNS cross-project binding zone that VMware Engine creates for each private cloud. It contains FQDNs and corresponding IP addresses for the private cloud's ESXi hosts and management VM appliances like vCenter and NSX Manager."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "management_dns_zone_binding",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_management_dns_zone_binding",
          "description": "Deletes a ``ManagementDnsZoneBinding`` resource. When a\nmanagement DNS zone binding is deleted, the corresponding\nconsumer VPC network is no longer bound to the management DNS\nzone.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_delete_management_dns_zone_binding():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.DeleteManagementDnsZoneBindingRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.de",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the management DNS zone binding to delete. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/managementDnsZoneBindings/my-management-dns-zone-binding``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "repair_management_dns_zone_binding",
          "description": "Retries to create a ``ManagementDnsZoneBinding`` resource that\nis in failed state.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_repair_management_dns_zone_binding():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.RepairManagementDnsZoneBindingRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.repair_management_dns_zone_binding(request=request)\n\n        print(\"Waiting for operation to complete",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the management DNS zone binding to repair. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/managementDnsZoneBindings/my-management-dns-zone-binding``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.ManagementDnsZoneBinding` Represents a binding between a network and the management DNS zone. A management DNS zone is the Cloud DNS cross-project binding zone that VMware Engine creates for each private cloud. It contains FQDNs and corresponding IP addresses for the private cloud's ESXi hosts and management VM appliances like vCenter and NSX Manager."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_vmware_engine_network",
          "description": "Creates a new VMware Engine network that can be used\nby a private cloud.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_create_vmware_engine_network():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        vmware_engine_network = vmwareengine_v1.VmwareEngineNetwork()\n        vmware_engine_network.type_ = \"STANDARD\"\n\n        request = vmwareengine_v1.CreateVmwareEngineNetworkRequest(\n            parent=\"parent_value\",\n            vmware_engine_network_id=\"vmware_engine_network_id_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location to create the new VMware Engine network in. A VMware Engine network of type ``LEGACY`` is a regional resource, and a VMware Engine network of type ``STANDARD`` is a global resource. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "vmware_engine_network": {
                "type": "google.cloud.vmwareengine_v1.types.VmwareEngineNetwork",
                "description": "Required. The initial description of the new VMware Engine network.  This corresponds to the ``vmware_engine_network`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "vmware_engine_network_id": {
                "type": "str",
                "description": "Required. The user-provided identifier of the new VMware Engine network. This identifier must be unique among VMware Engine network resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements:  -  For networks of type LEGACY, adheres to the format: ``{region-id}-default``. Replace ``{region-id}`` with the region where you want to create the VMware Engine network. For example, \"us-central1-default\". -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  This corresponds to the ``vmware_engine_network_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.VmwareEngineNetwork` VMware Engine network resource that provides connectivity for VMware Engine private clouds."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "vmware_engine_network",
              "vmware_engine_network_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_vmware_engine_network",
          "description": "Modifies a VMware Engine network resource. Only the following\nfields can be updated: ``description``. Only fields specified in\n``updateMask`` are applied.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_update_vmware_engine_network():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        vmware_engine_network = vmwareengine_v1.VmwareEngineNetwork()\n        vmware_engine_network.type_ = \"STANDARD\"\n\n        request = vmwareengine_v1.UpdateVmwareEngineNetworkRequest(\n            vmwa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "vmware_engine_network": {
                "type": "google.cloud.vmwareengine_v1.types.VmwareEngineNetwork",
                "description": "Required. VMware Engine network description.  This corresponds to the ``vmware_engine_network`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the VMware Engine network resource by the update. The fields specified in the ``update_mask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten. Only the following fields can be updated: ``description``.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.VmwareEngineNetwork` VMware Engine network resource that provides connectivity for VMware Engine private clouds."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "vmware_engine_network",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_vmware_engine_network",
          "description": "Deletes a ``VmwareEngineNetwork`` resource. You can only delete\na VMware Engine network after all resources that refer to it are\ndeleted. For example, a private cloud, a network peering, and a\nnetwork policy can all refer to the same VMware Engine network.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_delete_vmware_engine_network():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.DeleteVmwareEngineNetworkRequest(\n            name=\"name_value\",\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the VMware Engine network to be deleted. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global/vmwareEngineNetworks/my-network``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_vmware_engine_network",
          "description": "Retrieves a ``VmwareEngineNetwork`` resource by its resource\nname. The resource contains details of the VMware Engine\nnetwork, such as its VMware Engine network type, peered networks\nin a service project, and state (for example, ``CREATING``,\n``ACTIVE``, ``DELETING``).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_vmware_engine_network():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetVmwareEngineNetworkRequest(\n            name=\"name_valu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the VMware Engine network to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global/vmwareEngineNetworks/my-network``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.VmwareEngineNetwork: VMware Engine network resource that provides connectivity for VMware Engine private clouds."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.VmwareEngineNetwork"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_vmware_engine_networks",
          "description": "Lists ``VmwareEngineNetwork`` resources in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_vmware_engine_networks():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListVmwareEngineNetworksRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_vmware_engine_networks(request=request)\n\n        # Handle the response\n        async for response in page_result:",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location to query for VMware Engine networks. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListVmwareEngineNetworksAsyncPager: Response message for [VmwareEngine.ListVmwareEngineNetworks][google.cloud.vmwareengine.v1.VmwareEngine.ListVmwareEngineNetworks]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListVmwareEngineNetworksAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_private_connection",
          "description": "Creates a new private connection that can be used for\naccessing private Clouds.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_create_private_connection():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        private_connection = vmwareengine_v1.PrivateConnection()\n        private_connection.vmware_engine_network = \"vmware_engine_network_value\"\n        private_connection.type_ = \"THIRD_PARTY_SERVICE\"\n        private_connection.service_network = \"service_network_value\"\n\n        r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location to create the new private connection in. Private connection is a regional resource. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "private_connection": {
                "type": "google.cloud.vmwareengine_v1.types.PrivateConnection",
                "description": "Required. The initial description of the new private connection.  This corresponds to the ``private_connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "private_connection_id": {
                "type": "str",
                "description": "Required. The user-provided identifier of the new private connection. This identifier must be unique among private connection resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  This corresponds to the ``private_connection_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.PrivateConnection` Private connection resource that provides connectivity for VMware Engine private clouds."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "private_connection",
              "private_connection_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_private_connection",
          "description": "Retrieves a ``PrivateConnection`` resource by its resource name.\nThe resource contains details of the private connection, such as\nconnected network, routing mode and state.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_private_connection():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetPrivateConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_private_connection(reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the private connection to retrieve. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/privateConnections/my-connection``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.PrivateConnection: Private connection resource that provides connectivity for VMware Engine private clouds."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.PrivateConnection"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_private_connections",
          "description": "Lists ``PrivateConnection`` resources in a given project and\nlocation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_private_connections():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListPrivateConnectionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_private_connections(request=request)\n\n        # Handle the response\n        async for response in page_result:\n         ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the location to query for private connections. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListPrivateConnectionsAsyncPager: Response message for [VmwareEngine.ListPrivateConnections][google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateConnections]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListPrivateConnectionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_private_connection",
          "description": "Modifies a ``PrivateConnection`` resource. Only ``description``\nand ``routing_mode`` fields can be updated. Only fields\nspecified in ``updateMask`` are applied.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_update_private_connection():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        private_connection = vmwareengine_v1.PrivateConnection()\n        private_connection.vmware_engine_network = \"vmware_engine_network_value\"\n        private_connection.type_ = \"THIRD_PARTY_SERVICE",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "private_connection": {
                "type": "google.cloud.vmwareengine_v1.types.PrivateConnection",
                "description": "Required. Private connection description.  This corresponds to the ``private_connection`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Field mask is used to specify the fields to be overwritten in the ``PrivateConnection`` resource by the update. The fields specified in the ``update_mask`` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.PrivateConnection` Private connection resource that provides connectivity for VMware Engine private clouds."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "private_connection",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_private_connection",
          "description": "Deletes a ``PrivateConnection`` resource. When a private\nconnection is deleted for a VMware Engine network, the connected\nnetwork becomes inaccessible to that VMware Engine network.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_delete_private_connection():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.DeletePrivateConnectionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_private_con",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the private connection to be deleted. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1/privateConnections/my-connection``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_private_connection_peering_routes",
          "description": "Lists the private connection routes exchanged over a\npeering connection.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_list_private_connection_peering_routes():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.ListPrivateConnectionPeeringRoutesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_private_connection_peering_routes(request=request)\n\n        # Handle the response\n        as",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the private connection to retrieve peering routes from. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-west1/privateConnections/my-connection``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListPrivateConnectionPeeringRoutesAsyncPager: Response message for [VmwareEngine.ListPrivateConnectionPeeringRoutes][google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateConnectionPeeringRoutes]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.services.vmware_engine.pagers.ListPrivateConnectionPeeringRoutesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "grant_dns_bind_permission",
          "description": "Grants the bind permission to the customer provided\nprincipal(user / service account) to bind their DNS zone\nwith the intranet VPC associated with the project.\nDnsBindPermission is a global resource and location can\nonly be global.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_grant_dns_bind_permission():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        principal = vmwareengine_v1.Principal()\n        principal.user = \"user_value\"\n\n        request = vmwareengine_v1.GrantDnsB",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the resource which stores the users/service accounts having the permission to bind to the corresponding intranet VPC of the consumer project. DnsBindPermission is a global resource. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global/dnsBindPermission``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "principal": {
                "type": "google.cloud.vmwareengine_v1.types.Principal",
                "description": "Required. The consumer provided user/service account which needs to be granted permission to bind with the intranet VPC corresponding to the consumer project.  This corresponds to the ``principal`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.DnsBindPermission` DnsBindPermission resource that contains the accounts having the consumer DNS bind permission on the corresponding intranet VPC of the consumer project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "principal",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_dns_bind_permission",
          "description": "Gets all the principals having bind permission on the\nintranet VPC associated with the consumer project\ngranted by the Grant API. DnsBindPermission is a global\nresource and location can only be global.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_get_dns_bind_permission():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        request = vmwareengine_v1.GetDnsBindPermissionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await clien",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the resource which stores the users/service accounts having the permission to bind to the corresponding intranet VPC of the consumer project. DnsBindPermission is a global resource. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global/dnsBindPermission``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.vmwareengine_v1.types.DnsBindPermission: DnsBindPermission resource that contains the accounts having the consumer DNS bind permission on the corresponding intranet VPC of the consumer project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.vmwareengine_v1.types.DnsBindPermission"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "revoke_dns_bind_permission",
          "description": "Revokes the bind permission from the customer\nprovided principal(user / service account) on the\nintranet VPC associated with the consumer project.\nDnsBindPermission is a global resource and location can\nonly be global.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import vmwareengine_v1\n\n    async def sample_revoke_dns_bind_permission():\n        # Create a client\n        client = vmwareengine_v1.VmwareEngineAsyncClient()\n\n        # Initialize request argument(s)\n        principal = vmwareengine_v1.Principal()\n        principal.user = \"user_value\"\n\n        request = vmwareengine_v1.RevokeDnsBindPermissi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the resource which stores the users/service accounts having the permission to bind to the corresponding intranet VPC of the consumer project. DnsBindPermission is a global resource. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/global/dnsBindPermission``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "principal": {
                "type": "google.cloud.vmwareengine_v1.types.Principal",
                "description": "Required. The consumer provided user/service account which needs to be granted permission to bind with the intranet VPC corresponding to the consumer project.  This corresponds to the ``principal`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.vmwareengine_v1.types.DnsBindPermission` DnsBindPermission resource that contains the accounts having the consumer DNS bind permission on the corresponding intranet VPC of the consumer project."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "principal",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      }
    ]
  }
}