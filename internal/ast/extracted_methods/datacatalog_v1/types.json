{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-datacatalog/google/cloud/datacatalog_v1/types/datacatalog.py": [
    {
      "type": "function",
      "name": "SearchCatalogRequest",
      "description": "Request message for\n[SearchCatalog][google.cloud.datacatalog.v1.DataCatalog.SearchCatalog].\n\nAttributes:\n    scope (google.cloud.datacatalog_v1.types.SearchCatalogRequest.Scope):\n        Required. The scope of this search request.\n\n        The ``scope`` is invalid if ``include_org_ids``,\n        ``include_project_ids`` are empty AND\n        ``include_gcp_public_datasets`` is set to ``false``. In this\n        case, the request returns an error.\n    query (str):\n        Optional. The query string with a minimum of 3 characters\n        and specific syntax. For more information, see `Data Catalog\n        search\n        syntax <https://cloud.google.com/data-catalog/docs/how-to/search-reference>`__.\n\n        An empty query string returns all data assets (in the\n        specified scope) that you have access to.\n\n        A query string can be a simple ``xyz`` or qualified by\n        predicates:\n\n        -  ``name:x``\n        -  ``column:y``\n        -  ``description:z``\n    page_size (int):\n        Upper bound on the ",
      "parameters": {
        "type": "object",
        "properties": {
          "scope": {
            "description": "Required. The scope of this search request.  The ``scope`` is invalid if ``include_org_ids``, ``include_project_ids`` are empty AND ``include_gcp_public_datasets`` is set to ``false``. In this case, the request returns an error.",
            "reference": "google.cloud.datacatalog_v1.types.SearchCatalogRequest.Scope",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "include_org_ids": {
                  "description": "The list of organization IDs to search within. To find your organization ID, follow instructions in https://cloud.google.com/resource-manager/docs/creating-managing-organization.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "include_project_ids": {
                  "description": "The list of project IDs to search within. To learn more about the distinction between project names/IDs/numbers, go to https://cloud.google.com/docs/overview/#projects.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "include_gcp_public_datasets": {
                  "description": "If ``true``, include Google Cloud public datasets in the search results. Info on Google Cloud public datasets is available at https://cloud.google.com/public-datasets/. By default, Google Cloud public datasets are excluded.",
                  "type": "boolean"
                },
                "restricted_locations": {
                  "description": "Optional. The list of locations to search within.  1. If empty, search will be performed in all locations; 2. If any of the locations are NOT in the valid locations list, error will be returned; 3. Otherwise, search only the given locations for matching results. Typical usage is to leave this field empty. When a location is unreachable as returned in the ``SearchCatalogResponse.unreachable`` field, users can repeat the search request with this parameter set to get additional information on the error.  Valid locations:  -  asia-east1 -  asia-east2 -  asia-northeast1 -  asia-northeast2 -  asia-northeast3 -  asia-south1 -  asia-southeast1 -  australia-southeast1 -  eu -  europe-north1 -  europe-west1 -  europe-west2 -  europe-west3 -  europe-west4 -  europe-west6 -  global -  northamerica-northeast1 -  southamerica-east1 -  us -  us-central1 -  us-east1 -  us-east4 -  us-west1 -  us-west2",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "query": {
            "description": "Optional. The query string with a minimum of 3 characters and specific syntax. For more information, see `Data Catalog search syntax <https://cloud.google.com/data-catalog/docs/how-to/search-reference>`__.  An empty query string returns all data assets (in the specified scope) that you have access to.  A query string can be a simple ``xyz`` or qualified by predicates:  -  ``name:x`` -  ``column:y`` -  ``description:z``",
            "type": "string"
          },
          "page_size": {
            "description": "Upper bound on the number of results you can get in a single response. Can't be negative or 0, defaults to 10 in this case. The maximum number is 1000. If exceeded, throws an \"invalid argument\" exception.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. Pagination token that, if specified, returns the next page of search results. If empty, returns the first page.  This token is returned in the [SearchCatalogResponse.next_page_token][google.cloud.datacatalog.v1.SearchCatalogResponse.next_page_token] field of the response to a previous [SearchCatalogRequest][google.cloud.datacatalog.v1.DataCatalog.SearchCatalog] call.",
            "type": "string"
          },
          "order_by": {
            "description": "Specifies the order of results.  Currently supported case-sensitive values are:  -  ``relevance`` that can only be descending -  ``last_modified_timestamp [asc|desc]`` with descending (``desc``) as default -  ``default`` that can only be descending  Search queries don't guarantee full recall. Results that match your query might not be returned, even in subsequent result pages. Additionally, returned (and not returned) results can vary if you repeat search queries. If you are experiencing recall issues and you don't have to fetch the results in any specific order, consider setting this parameter to ``default``.  If this parameter is omitted, it defaults to the descending ``relevance``.",
            "type": "string"
          },
          "admin_search": {
            "description": "Optional. If set, use searchAll permission granted on organizations from ``include_org_ids`` and projects from ``include_project_ids`` instead of the fine grained per resource permissions when filtering the search results. The only allowed ``order_by`` criteria for admin_search mode is ``default``. Using this flags guarantees a full recall of the search results.",
            "type": "boolean"
          }
        },
        "required": [
          "scope"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateEntryGroupRequest",
      "description": "Request message for\n[CreateEntryGroup][google.cloud.datacatalog.v1.DataCatalog.CreateEntryGroup].\n\nAttributes:\n    parent (str):\n        Required. The names of the project and\n        location that the new entry group belongs to.\n\n        Note: The entry group itself and its child\n        resources might not be stored in the location\n        specified in its name.\n    entry_group_id (str):\n        Required. The ID of the entry group to create.\n\n        The ID must contain only letters (a-z, A-Z), numbers (0-9),\n        underscores (_), and must start with a letter or underscore.\n        The maximum size is 64 bytes when encoded in UTF-8.\n    entry_group (google.cloud.datacatalog_v1.types.EntryGroup):\n        The entry group to create. Defaults to empty.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The names of the project and location that the new entry group belongs to.  Note: The entry group itself and its child resources might not be stored in the location specified in its name.",
            "type": "string"
          },
          "entry_group_id": {
            "description": "Required. The ID of the entry group to create.  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and must start with a letter or underscore. The maximum size is 64 bytes when encoded in UTF-8.",
            "type": "string"
          },
          "entry_group": {
            "description": "The entry group to create. Defaults to empty.",
            "reference": "google.cloud.datacatalog_v1.types.EntryGroup",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The resource name of the entry group in URL format. Example:  -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}  Note that this EntryGroup and its child resources may not actually be stored in the location in this name.",
                  "type": "string"
                },
                "display_name": {
                  "description": "A short name to identify the entry group, for example, \"analytics data - jan 2011\". Default value is an empty string.",
                  "type": "string"
                },
                "description": {
                  "description": "Entry group description, which can consist of several sentences or paragraphs that describe entry group contents. Default value is an empty string.",
                  "type": "string"
                },
                "data_catalog_timestamps": {
                  "description": "Output only. Timestamps about this EntryGroup. Default value is empty timestamps.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.SystemTimestamps",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_time": {
                        "description": "The creation time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "update_time": {
                        "description": "The last-modified time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "expire_time": {
                        "description": "Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "entry_group_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateEntryGroupRequest",
      "description": "Request message for\n[UpdateEntryGroup][google.cloud.datacatalog.v1.DataCatalog.UpdateEntryGroup].\n\nAttributes:\n    entry_group (google.cloud.datacatalog_v1.types.EntryGroup):\n        Required. Updates for the entry group. The ``name`` field\n        must be set.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Names of fields whose values to overwrite on\n        an entry group.\n        If this parameter is absent or empty, all\n        modifiable fields are overwritten. If such\n        fields are non-required and omitted in the\n        request body, their values are emptied.",
      "parameters": {
        "type": "object",
        "properties": {
          "entry_group": {
            "description": "Required. Updates for the entry group. The ``name`` field must be set.",
            "reference": "google.cloud.datacatalog_v1.types.EntryGroup",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The resource name of the entry group in URL format. Example:  -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}  Note that this EntryGroup and its child resources may not actually be stored in the location in this name.",
                  "type": "string"
                },
                "display_name": {
                  "description": "A short name to identify the entry group, for example, \"analytics data - jan 2011\". Default value is an empty string.",
                  "type": "string"
                },
                "description": {
                  "description": "Entry group description, which can consist of several sentences or paragraphs that describe entry group contents. Default value is an empty string.",
                  "type": "string"
                },
                "data_catalog_timestamps": {
                  "description": "Output only. Timestamps about this EntryGroup. Default value is empty timestamps.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.SystemTimestamps",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_time": {
                        "description": "The creation time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "update_time": {
                        "description": "The last-modified time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "expire_time": {
                        "description": "Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "Names of fields whose values to overwrite on an entry group. If this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "entry_group"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetEntryGroupRequest",
      "description": "Request message for\n[GetEntryGroup][google.cloud.datacatalog.v1.DataCatalog.GetEntryGroup].\n\nAttributes:\n    name (str):\n        Required. The name of the entry group to get.\n    read_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The fields to return. If empty or omitted,\n        all fields are returned.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the entry group to get.",
            "type": "string"
          },
          "read_mask": {
            "description": "The fields to return. If empty or omitted, all fields are returned.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteEntryGroupRequest",
      "description": "Request message for\n[DeleteEntryGroup][google.cloud.datacatalog.v1.DataCatalog.DeleteEntryGroup].\n\nAttributes:\n    name (str):\n        Required. The name of the entry group to\n        delete.\n    force (bool):\n        Optional. If true, deletes all entries in the\n        entry group.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the entry group to delete.",
            "type": "string"
          },
          "force": {
            "description": "Optional. If true, deletes all entries in the entry group.",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListEntryGroupsRequest",
      "description": "Request message for\n[ListEntryGroups][google.cloud.datacatalog.v1.DataCatalog.ListEntryGroups].\n\nAttributes:\n    parent (str):\n        Required. The name of the location that\n        contains the entry groups to list.\n        Can be provided as a URL.\n    page_size (int):\n        Optional. The maximum number of items to return.\n\n        Default is 10. Maximum limit is 1000. Throws an invalid\n        argument if ``page_size`` is greater than 1000.\n    page_token (str):\n        Optional. Pagination token that specifies the\n        next page to return. If empty, returns the first\n        page.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the location that contains the entry groups to list. Can be provided as a URL.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of items to return.  Default is 10. Maximum limit is 1000. Throws an invalid argument if ``page_size`` is greater than 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. Pagination token that specifies the next page to return. If empty, returns the first page.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateEntryRequest",
      "description": "Request message for\n[CreateEntry][google.cloud.datacatalog.v1.DataCatalog.CreateEntry].\n\nAttributes:\n    parent (str):\n        Required. The name of the entry group this\n        entry belongs to.\n        Note: The entry itself and its child resources\n        might not be stored in the location specified in\n        its name.\n    entry_id (str):\n        Required. The ID of the entry to create.\n\n        The ID must contain only letters (a-z, A-Z), numbers (0-9),\n        and underscores (_). The maximum size is 64 bytes when\n        encoded in UTF-8.\n    entry (google.cloud.datacatalog_v1.types.Entry):\n        Required. The entry to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the entry group this entry belongs to. Note: The entry itself and its child resources might not be stored in the location specified in its name.",
            "type": "string"
          },
          "entry_id": {
            "description": "Required. The ID of the entry to create.  The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores (_). The maximum size is 64 bytes when encoded in UTF-8.",
            "type": "string"
          },
          "entry": {
            "description": "Required. The entry to create.",
            "reference": "google.cloud.datacatalog_v1.types.Entry",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "role": {
                  "description": "The granted role, which can be ``READER``, ``WRITER``, or ``OWNER``.",
                  "type": "string"
                },
                "group_email": {
                  "description": "Grants access to a group identified by an email address.",
                  "type": "string"
                },
                "user_email": {
                  "description": "Grants access to a user identified by an email address.",
                  "type": "string"
                },
                "domain": {
                  "description": "Grants access to all members of a domain.",
                  "type": "string"
                },
                "special_group": {
                  "description": "Grants access to special groups. Valid groups are ``PROJECT_OWNERS``, ``PROJECT_READERS``, ``PROJECT_WRITERS`` and ``ALL_AUTHENTICATED_USERS``.",
                  "type": "string"
                },
                "view_name": {
                  "description": "Grants access to a BigQuery View.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "description": "The project ID.",
                        "type": "string"
                      },
                      "dataset_id": {
                        "description": "The dataset ID within the project.",
                        "type": "string"
                      },
                      "table_id": {
                        "description": "The table ID of the table within the dataset.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "entry_id",
          "entry"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateEntryRequest",
      "description": "Request message for\n[UpdateEntry][google.cloud.datacatalog.v1.DataCatalog.UpdateEntry].\n\nAttributes:\n    entry (google.cloud.datacatalog_v1.types.Entry):\n        Required. Updates for the entry. The ``name`` field must be\n        set.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Names of fields whose values to overwrite on an entry.\n\n        If this parameter is absent or empty, all modifiable fields\n        are overwritten. If such fields are non-required and omitted\n        in the request body, their values are emptied.\n\n        You can modify only the fields listed below.\n\n        For entries with type ``DATA_STREAM``:\n\n        -  ``schema``\n\n        For entries with type ``FILESET``:\n\n        -  ``schema``\n        -  ``display_name``\n        -  ``description``\n        -  ``gcs_fileset_spec``\n        -  ``gcs_fileset_spec.file_patterns``\n\n        For entries with ``user_specified_type``:\n\n        -  ``schema``\n        -  ``display_name``\n        -  ``description``\n        -  ``user_s",
      "parameters": {
        "type": "object",
        "properties": {
          "entry": {
            "description": "Required. Updates for the entry. The ``name`` field must be set.",
            "reference": "google.cloud.datacatalog_v1.types.Entry",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "role": {
                  "description": "The granted role, which can be ``READER``, ``WRITER``, or ``OWNER``.",
                  "type": "string"
                },
                "group_email": {
                  "description": "Grants access to a group identified by an email address.",
                  "type": "string"
                },
                "user_email": {
                  "description": "Grants access to a user identified by an email address.",
                  "type": "string"
                },
                "domain": {
                  "description": "Grants access to all members of a domain.",
                  "type": "string"
                },
                "special_group": {
                  "description": "Grants access to special groups. Valid groups are ``PROJECT_OWNERS``, ``PROJECT_READERS``, ``PROJECT_WRITERS`` and ``ALL_AUTHENTICATED_USERS``.",
                  "type": "string"
                },
                "view_name": {
                  "description": "Grants access to a BigQuery View.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "description": "The project ID.",
                        "type": "string"
                      },
                      "dataset_id": {
                        "description": "The dataset ID within the project.",
                        "type": "string"
                      },
                      "table_id": {
                        "description": "The table ID of the table within the dataset.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "Names of fields whose values to overwrite on an entry.  If this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.  You can modify only the fields listed below.  For entries with type ``DATA_STREAM``:  -  ``schema``  For entries with type ``FILESET``:  -  ``schema`` -  ``display_name`` -  ``description`` -  ``gcs_fileset_spec`` -  ``gcs_fileset_spec.file_patterns``  For entries with ``user_specified_type``:  -  ``schema`` -  ``display_name`` -  ``description`` -  ``user_specified_type`` -  ``user_specified_system`` -  ``linked_resource`` -  ``source_system_timestamps``",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "entry"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteEntryRequest",
      "description": "Request message for\n[DeleteEntry][google.cloud.datacatalog.v1.DataCatalog.DeleteEntry].\n\nAttributes:\n    name (str):\n        Required. The name of the entry to delete.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the entry to delete.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetEntryRequest",
      "description": "Request message for\n[GetEntry][google.cloud.datacatalog.v1.DataCatalog.GetEntry].\n\nAttributes:\n    name (str):\n        Required. The name of the entry to get.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the entry to get.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "LookupEntryRequest",
      "description": "Request message for\n[LookupEntry][google.cloud.datacatalog.v1.DataCatalog.LookupEntry].\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    linked_resource (str):\n        The full name of the Google Cloud Platform resource the Data\n        Catalog entry represents. For more information, see [Full\n        Resource Name]\n        (https://cloud.google.com/apis/design/resource_names#full_resource_name).\n\n        Full names are case-sensitive. For example:\n\n        -  ``//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}``\n        -  ``//pubsub.googleapis.com/projects/{PROJECT_ID}/topics/{TOPIC_ID}``\n\n        This field is a member of `oneof`_ ``target_name``.\n    sql_resource (str):\n        The SQL name o",
      "parameters": {
        "type": "object",
        "properties": {
          "linked_resource": {
            "description": "The full name of the Google Cloud Platform resource the Data Catalog entry represents. For more information, see [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name).  Full names are case-sensitive. For example:  -  ``//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}`` -  ``//pubsub.googleapis.com/projects/{PROJECT_ID}/topics/{TOPIC_ID}``  This field is a member of `oneof`_ ``target_name``.",
            "type": "string"
          },
          "sql_resource": {
            "description": "The SQL name of the entry. SQL names are case-sensitive.  Examples:  -  ``pubsub.topic.{PROJECT_ID}.{TOPIC_ID}`` -  ``pubsub.topic.{PROJECT_ID}.``\\ \\`\\ ``{TOPIC.ID.SEPARATED.WITH.DOTS}``\\ \\` -  ``bigquery.table.{PROJECT_ID}.{DATASET_ID}.{TABLE_ID}`` -  ``bigquery.dataset.{PROJECT_ID}.{DATASET_ID}`` -  ``datacatalog.entry.{PROJECT_ID}.{LOCATION_ID}.{ENTRY_GROUP_ID}.{ENTRY_ID}``  Identifiers (``*_ID``) should comply with the [Lexical structure in Standard SQL] (https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical).  This field is a member of `oneof`_ ``target_name``.",
            "type": "string"
          },
          "fully_qualified_name": {
            "description": "`Fully Qualified Name (FQN) <https://cloud.google.com//data-catalog/docs/fully-qualified-names>`__ of the resource.  FQNs take two forms:  -  For non-regionalized resources:  ``{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}``  -  For regionalized resources:  ``{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}``  Example for a DPMS table:  ``dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}``  This field is a member of `oneof`_ ``target_name``.",
            "type": "string"
          },
          "project": {
            "description": "Project where the lookup should be performed. Required to lookup entry that is not a part of ``DPMS`` or ``DATAPLEX`` ``integrated_system`` using its ``fully_qualified_name``. Ignored in other cases.",
            "type": "string"
          },
          "location": {
            "description": "Location where the lookup should be performed. Required to lookup entry that is not a part of ``DPMS`` or ``DATAPLEX`` ``integrated_system`` using its ``fully_qualified_name``. Ignored in other cases.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "CreateTagTemplateRequest",
      "description": "Request message for\n[CreateTagTemplate][google.cloud.datacatalog.v1.DataCatalog.CreateTagTemplate].\n\nAttributes:\n    parent (str):\n        Required. The name of the project and the template location\n        `region <https://cloud.google.com/data-catalog/docs/concepts/regions>`__.\n    tag_template_id (str):\n        Required. The ID of the tag template to create.\n\n        The ID must contain only lowercase letters (a-z), numbers\n        (0-9), or underscores (_), and must start with a letter or\n        underscore. The maximum size is 64 bytes when encoded in\n        UTF-8.\n    tag_template (google.cloud.datacatalog_v1.types.TagTemplate):\n        Required. The tag template to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the project and the template location `region <https://cloud.google.com/data-catalog/docs/concepts/regions>`__.",
            "type": "string"
          },
          "tag_template_id": {
            "description": "Required. The ID of the tag template to create.  The ID must contain only lowercase letters (a-z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum size is 64 bytes when encoded in UTF-8.",
            "type": "string"
          },
          "tag_template": {
            "description": "Required. The tag template to create.",
            "reference": "google.cloud.datacatalog_v1.types.TagTemplate",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The resource name of the tag template in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}  Note that this TagTemplate and its child resources may not actually be stored in the location in this name.",
                  "type": "string"
                },
                "display_name": {
                  "description": "The display name for this template. Defaults to an empty string.",
                  "type": "string"
                },
                "fields": {
                  "description": "Required. Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields.  The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplateField",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Output only. Identifier. The resource name of the tag template field in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field}  Note that this TagTemplateField may not actually be stored in the location in this name.",
                          "type": "string",
                          "output_only": true
                        },
                        "display_name": {
                          "description": "The display name for this field. Defaults to an empty string.",
                          "type": "string"
                        },
                        "type_": {
                          "description": "Required. The type of value this tag field can contain.",
                          "type": "object",
                          "reference": "google.cloud.datacatalog_v1beta1.types.FieldType",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "primitive_type": {
                                "description": "Represents primitive types - string, bool etc.  This field is a member of `oneof`_ ``type_decl``.",
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.PrimitiveType"
                              },
                              "enum_type": {
                                "description": "Represents an enum type.  This field is a member of `oneof`_ ``type_decl``.",
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "allowed_values": {
                                      "description": "",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType.EnumValue",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "display_name": {
                                              "description": "Required. The display name of the enum value. Must not be an empty string.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "display_name"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "is_required": {
                          "description": "Whether this is a required field. Defaults to false.",
                          "type": "boolean"
                        },
                        "description": {
                          "description": "The description for this field. Defaults to an empty string.",
                          "type": "string"
                        },
                        "order": {
                          "description": "The order of this field with respect to other fields in this tag template.  A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "type_"
                      ]
                    }
                  }
                },
                "dataplex_transfer_status": {
                  "description": "Output only. Transfer status of the TagTemplate",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplate.DataplexTransferStatus",
                  "output_only": true
                }
              },
              "required": [
                "fields"
              ]
            }
          }
        },
        "required": [
          "parent",
          "tag_template_id",
          "tag_template"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTagTemplateRequest",
      "description": "Request message for\n[GetTagTemplate][google.cloud.datacatalog.v1.DataCatalog.GetTagTemplate].\n\nAttributes:\n    name (str):\n        Required. The name of the tag template to\n        get.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag template to get.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTagTemplateRequest",
      "description": "Request message for\n[UpdateTagTemplate][google.cloud.datacatalog.v1.DataCatalog.UpdateTagTemplate].\n\nAttributes:\n    tag_template (google.cloud.datacatalog_v1.types.TagTemplate):\n        Required. The template to update. The ``name`` field must be\n        set.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Names of fields whose values to overwrite on a tag template.\n        Currently, only ``display_name`` and\n        ``is_publicly_readable`` can be overwritten.\n\n        If this parameter is absent or empty, all modifiable fields\n        are overwritten. If such fields are non-required and omitted\n        in the request body, their values are emptied.\n\n        Note: Updating the ``is_publicly_readable`` field may\n        require up to 12 hours to take effect in search results.",
      "parameters": {
        "type": "object",
        "properties": {
          "tag_template": {
            "description": "Required. The template to update. The ``name`` field must be set.",
            "reference": "google.cloud.datacatalog_v1.types.TagTemplate",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The resource name of the tag template in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}  Note that this TagTemplate and its child resources may not actually be stored in the location in this name.",
                  "type": "string"
                },
                "display_name": {
                  "description": "The display name for this template. Defaults to an empty string.",
                  "type": "string"
                },
                "fields": {
                  "description": "Required. Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields.  The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplateField",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Output only. Identifier. The resource name of the tag template field in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field}  Note that this TagTemplateField may not actually be stored in the location in this name.",
                          "type": "string",
                          "output_only": true
                        },
                        "display_name": {
                          "description": "The display name for this field. Defaults to an empty string.",
                          "type": "string"
                        },
                        "type_": {
                          "description": "Required. The type of value this tag field can contain.",
                          "type": "object",
                          "reference": "google.cloud.datacatalog_v1beta1.types.FieldType",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "primitive_type": {
                                "description": "Represents primitive types - string, bool etc.  This field is a member of `oneof`_ ``type_decl``.",
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.PrimitiveType"
                              },
                              "enum_type": {
                                "description": "Represents an enum type.  This field is a member of `oneof`_ ``type_decl``.",
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "allowed_values": {
                                      "description": "",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType.EnumValue",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "display_name": {
                                              "description": "Required. The display name of the enum value. Must not be an empty string.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "display_name"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "is_required": {
                          "description": "Whether this is a required field. Defaults to false.",
                          "type": "boolean"
                        },
                        "description": {
                          "description": "The description for this field. Defaults to an empty string.",
                          "type": "string"
                        },
                        "order": {
                          "description": "The order of this field with respect to other fields in this tag template.  A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "type_"
                      ]
                    }
                  }
                },
                "dataplex_transfer_status": {
                  "description": "Output only. Transfer status of the TagTemplate",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplate.DataplexTransferStatus",
                  "output_only": true
                }
              },
              "required": [
                "fields"
              ]
            }
          },
          "update_mask": {
            "description": "Names of fields whose values to overwrite on a tag template. Currently, only ``display_name`` and ``is_publicly_readable`` can be overwritten.  If this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.  Note: Updating the ``is_publicly_readable`` field may require up to 12 hours to take effect in search results.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "tag_template"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTagTemplateRequest",
      "description": "Request message for\n[DeleteTagTemplate][google.cloud.datacatalog.v1.DataCatalog.DeleteTagTemplate].\n\nAttributes:\n    name (str):\n        Required. The name of the tag template to\n        delete.\n    force (bool):\n        Required. If true, deletes all tags that use this template.\n\n        Currently, ``true`` is the only supported value.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag template to delete.",
            "type": "string"
          },
          "force": {
            "description": "Required. If true, deletes all tags that use this template.  Currently, ``true`` is the only supported value.",
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "force"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateTagRequest",
      "description": "Request message for\n[CreateTag][google.cloud.datacatalog.v1.DataCatalog.CreateTag].\n\nAttributes:\n    parent (str):\n        Required. The name of the resource to attach\n        this tag to.\n        Tags can be attached to entries or entry groups.\n        An entry can have up to 1000 attached tags.\n\n        Note: The tag and its child resources might not\n        be stored in the location specified in its name.\n    tag (google.cloud.datacatalog_v1.types.Tag):\n        Required. The tag to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the resource to attach this tag to. Tags can be attached to entries or entry groups. An entry can have up to 1000 attached tags.  Note: The tag and its child resources might not be stored in the location specified in its name.",
            "type": "string"
          },
          "tag": {
            "description": "Required. The tag to create.",
            "reference": "google.cloud.datacatalog_v1.types.Tag",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "tag_key": {
                  "description": "TagKey namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}.  This field is a member of `oneof`_ ``_tag_key``.",
                  "type": "string"
                },
                "tag_key_id": {
                  "description": "TagKey ID, in the format of tagKeys/{TAG_KEY_ID}.  This field is a member of `oneof`_ ``_tag_key_id``.",
                  "type": "string"
                },
                "tag_value": {
                  "description": "TagValue namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}/{TAG_VALUE_SHORT_NAME}.  This field is a member of `oneof`_ ``_tag_value``.",
                  "type": "string"
                },
                "tag_value_id": {
                  "description": "TagValue ID, in the format of tagValues/{TAG_VALUE_ID}.  This field is a member of `oneof`_ ``_tag_value_id``.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "tag"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTagRequest",
      "description": "Request message for\n[UpdateTag][google.cloud.datacatalog.v1.DataCatalog.UpdateTag].\n\nAttributes:\n    tag (google.cloud.datacatalog_v1.types.Tag):\n        Required. The updated tag. The \"name\" field\n        must be set.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Names of fields whose values to overwrite on a tag.\n        Currently, a tag has the only modifiable field with the name\n        ``fields``.\n\n        In general, if this parameter is absent or empty, all\n        modifiable fields are overwritten. If such fields are\n        non-required and omitted in the request body, their values\n        are emptied.",
      "parameters": {
        "type": "object",
        "properties": {
          "tag": {
            "description": "Required. The updated tag. The \"name\" field must be set.",
            "reference": "google.cloud.datacatalog_v1.types.Tag",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "tag_key": {
                  "description": "TagKey namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}.  This field is a member of `oneof`_ ``_tag_key``.",
                  "type": "string"
                },
                "tag_key_id": {
                  "description": "TagKey ID, in the format of tagKeys/{TAG_KEY_ID}.  This field is a member of `oneof`_ ``_tag_key_id``.",
                  "type": "string"
                },
                "tag_value": {
                  "description": "TagValue namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}/{TAG_VALUE_SHORT_NAME}.  This field is a member of `oneof`_ ``_tag_value``.",
                  "type": "string"
                },
                "tag_value_id": {
                  "description": "TagValue ID, in the format of tagValues/{TAG_VALUE_ID}.  This field is a member of `oneof`_ ``_tag_value_id``.",
                  "type": "string"
                }
              }
            }
          },
          "update_mask": {
            "description": "Names of fields whose values to overwrite on a tag. Currently, a tag has the only modifiable field with the name ``fields``.  In general, if this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "tag"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTagRequest",
      "description": "Request message for\n[DeleteTag][google.cloud.datacatalog.v1.DataCatalog.DeleteTag].\n\nAttributes:\n    name (str):\n        Required. The name of the tag to delete.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag to delete.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateTagTemplateFieldRequest",
      "description": "Request message for\n[CreateTagTemplateField][google.cloud.datacatalog.v1.DataCatalog.CreateTagTemplateField].\n\nAttributes:\n    parent (str):\n        Required. The name of the project and the template location\n        `region <https://cloud.google.com/data-catalog/docs/concepts/regions>`__.\n    tag_template_field_id (str):\n        Required. The ID of the tag template field to create.\n\n        Note: Adding a required field to an existing template is\n        *not* allowed.\n\n        Field IDs can contain letters (both uppercase and\n        lowercase), numbers (0-9), underscores (_) and dashes (-).\n        Field IDs must be at least 1 character long and at most 128\n        characters long. Field IDs must also be unique within their\n        template.\n    tag_template_field (google.cloud.datacatalog_v1.types.TagTemplateField):\n        Required. The tag template field to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the project and the template location `region <https://cloud.google.com/data-catalog/docs/concepts/regions>`__.",
            "type": "string"
          },
          "tag_template_field_id": {
            "description": "Required. The ID of the tag template field to create.  Note: Adding a required field to an existing template is *not* allowed.  Field IDs can contain letters (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field IDs must be at least 1 character long and at most 128 characters long. Field IDs must also be unique within their template.",
            "type": "string"
          },
          "tag_template_field": {
            "description": "Required. The tag template field to create.",
            "reference": "google.cloud.datacatalog_v1.types.TagTemplateField",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. Identifier. The resource name of the tag template field in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field}  Note that this TagTemplateField may not actually be stored in the location in this name.",
                  "type": "string",
                  "output_only": true
                },
                "display_name": {
                  "description": "The display name for this field. Defaults to an empty string.",
                  "type": "string"
                },
                "type_": {
                  "description": "Required. The type of value this tag field can contain.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.FieldType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "primitive_type": {
                        "description": "Represents primitive types - string, bool etc.  This field is a member of `oneof`_ ``type_decl``.",
                        "type": "object",
                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.PrimitiveType"
                      },
                      "enum_type": {
                        "description": "Represents an enum type.  This field is a member of `oneof`_ ``type_decl``.",
                        "type": "object",
                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "allowed_values": {
                              "description": "",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType.EnumValue",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "display_name": {
                                      "description": "Required. The display name of the enum value. Must not be an empty string.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "display_name"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "is_required": {
                  "description": "Whether this is a required field. Defaults to false.",
                  "type": "boolean"
                },
                "description": {
                  "description": "The description for this field. Defaults to an empty string.",
                  "type": "string"
                },
                "order": {
                  "description": "The order of this field with respect to other fields in this tag template.  A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
                  "type": "integer"
                }
              },
              "required": [
                "type_"
              ]
            }
          }
        },
        "required": [
          "parent",
          "tag_template_field_id",
          "tag_template_field"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTagTemplateFieldRequest",
      "description": "Request message for\n[UpdateTagTemplateField][google.cloud.datacatalog.v1.DataCatalog.UpdateTagTemplateField].\n\nAttributes:\n    name (str):\n        Required. The name of the tag template field.\n    tag_template_field (google.cloud.datacatalog_v1.types.TagTemplateField):\n        Required. The template to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Optional. Names of fields whose values to overwrite on an\n        individual field of a tag template. The following fields are\n        modifiable:\n\n        -  ``display_name``\n        -  ``type.enum_type``\n        -  ``is_required``\n\n        If this parameter is absent or empty, all modifiable fields\n        are overwritten. If such fields are non-required and omitted\n        in the request body, their values are emptied with one\n        exception: when updating an enum type, the provided values\n        are merged with the existing values. Therefore, enum values\n        can only be added, existing enum values cannot be deleted or\n      ",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag template field.",
            "type": "string"
          },
          "tag_template_field": {
            "description": "Required. The template to update.",
            "reference": "google.cloud.datacatalog_v1.types.TagTemplateField",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. Identifier. The resource name of the tag template field in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field}  Note that this TagTemplateField may not actually be stored in the location in this name.",
                  "type": "string",
                  "output_only": true
                },
                "display_name": {
                  "description": "The display name for this field. Defaults to an empty string.",
                  "type": "string"
                },
                "type_": {
                  "description": "Required. The type of value this tag field can contain.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.FieldType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "primitive_type": {
                        "description": "Represents primitive types - string, bool etc.  This field is a member of `oneof`_ ``type_decl``.",
                        "type": "object",
                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.PrimitiveType"
                      },
                      "enum_type": {
                        "description": "Represents an enum type.  This field is a member of `oneof`_ ``type_decl``.",
                        "type": "object",
                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "allowed_values": {
                              "description": "",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType.EnumValue",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "display_name": {
                                      "description": "Required. The display name of the enum value. Must not be an empty string.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "display_name"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "is_required": {
                  "description": "Whether this is a required field. Defaults to false.",
                  "type": "boolean"
                },
                "description": {
                  "description": "The description for this field. Defaults to an empty string.",
                  "type": "string"
                },
                "order": {
                  "description": "The order of this field with respect to other fields in this tag template.  A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
                  "type": "integer"
                }
              },
              "required": [
                "type_"
              ]
            }
          },
          "update_mask": {
            "description": "Optional. Names of fields whose values to overwrite on an individual field of a tag template. The following fields are modifiable:  -  ``display_name`` -  ``type.enum_type`` -  ``is_required``  If this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied with one exception: when updating an enum type, the provided values are merged with the existing values. Therefore, enum values can only be added, existing enum values cannot be deleted or renamed.  Additionally, updating a template field from optional to required is *not* allowed.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "name",
          "tag_template_field"
        ]
      }
    },
    {
      "type": "function",
      "name": "RenameTagTemplateFieldRequest",
      "description": "Request message for\n[RenameTagTemplateField][google.cloud.datacatalog.v1.DataCatalog.RenameTagTemplateField].\n\nAttributes:\n    name (str):\n        Required. The name of the tag template field.\n    new_tag_template_field_id (str):\n        Required. The new ID of this tag template field. For\n        example, ``my_new_field``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag template field.",
            "type": "string"
          },
          "new_tag_template_field_id": {
            "description": "Required. The new ID of this tag template field. For example, ``my_new_field``.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "new_tag_template_field_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "RenameTagTemplateFieldEnumValueRequest",
      "description": "Request message for\n[RenameTagTemplateFieldEnumValue][google.cloud.datacatalog.v1.DataCatalog.RenameTagTemplateFieldEnumValue].\n\nAttributes:\n    name (str):\n        Required. The name of the enum field value.\n    new_enum_value_display_name (str):\n        Required. The new display name of the enum value. For\n        example, ``my_new_enum_value``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the enum field value.",
            "type": "string"
          },
          "new_enum_value_display_name": {
            "description": "Required. The new display name of the enum value. For example, ``my_new_enum_value``.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "new_enum_value_display_name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTagTemplateFieldRequest",
      "description": "Request message for\n[DeleteTagTemplateField][google.cloud.datacatalog.v1.DataCatalog.DeleteTagTemplateField].\n\nAttributes:\n    name (str):\n        Required. The name of the tag template field\n        to delete.\n    force (bool):\n        Required. If true, deletes this field from any tags that use\n        it.\n\n        Currently, ``true`` is the only supported value.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag template field to delete.",
            "type": "string"
          },
          "force": {
            "description": "Required. If true, deletes this field from any tags that use it.  Currently, ``true`` is the only supported value.",
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "force"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListTagsRequest",
      "description": "Request message for\n[ListTags][google.cloud.datacatalog.v1.DataCatalog.ListTags].\n\nAttributes:\n    parent (str):\n        Required. The name of the Data Catalog resource to list the\n        tags of.\n\n        The resource can be an\n        [Entry][google.cloud.datacatalog.v1.Entry] or an\n        [EntryGroup][google.cloud.datacatalog.v1.EntryGroup]\n        (without ``/entries/{entries}`` at the end).\n    page_size (int):\n        The maximum number of tags to return. Default\n        is 10. Maximum limit is 1000.\n    page_token (str):\n        Pagination token that specifies the next page\n        to return. If empty, the first page is returned.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the Data Catalog resource to list the tags of.  The resource can be an [Entry][google.cloud.datacatalog.v1.Entry] or an [EntryGroup][google.cloud.datacatalog.v1.EntryGroup] (without ``/entries/{entries}`` at the end).",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of tags to return. Default is 10. Maximum limit is 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "Pagination token that specifies the next page to return. If empty, the first page is returned.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "ReconcileTagsRequest",
      "description": "Request message for\n[ReconcileTags][google.cloud.datacatalog.v1.DataCatalog.ReconcileTags].\n\nAttributes:\n    parent (str):\n        Required. Name of [Entry][google.cloud.datacatalog.v1.Entry]\n        to be tagged.\n    tag_template (str):\n        Required. The name of the tag template, which\n        is used for reconciliation.\n    force_delete_missing (bool):\n        If set to ``true``, deletes entry tags related to a tag\n        template not listed in the tags source from an entry. If set\n        to ``false``, unlisted tags are retained.\n    tags (MutableSequence[google.cloud.datacatalog_v1.types.Tag]):\n        A list of tags to apply to an entry. A tag can specify a tag\n        template, which must be the template specified in the\n        ``ReconcileTagsRequest``. The sole entry and each of its\n        columns must be mentioned at most once.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Name of [Entry][google.cloud.datacatalog.v1.Entry] to be tagged.",
            "type": "string"
          },
          "tag_template": {
            "description": "Required. The name of the tag template, which is used for reconciliation.",
            "type": "string"
          },
          "force_delete_missing": {
            "description": "If set to ``true``, deletes entry tags related to a tag template not listed in the tags source from an entry. If set to ``false``, unlisted tags are retained.",
            "type": "boolean"
          },
          "tags": {
            "description": "A list of tags to apply to an entry. A tag can specify a tag template, which must be the template specified in the ``ReconcileTagsRequest``. The sole entry and each of its columns must be mentioned at most once.",
            "type": "array",
            "items": {
              "reference": "google.cloud.datacatalog_v1.types.Tag",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "tag_key": {
                    "description": "TagKey namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}.  This field is a member of `oneof`_ ``_tag_key``.",
                    "type": "string"
                  },
                  "tag_key_id": {
                    "description": "TagKey ID, in the format of tagKeys/{TAG_KEY_ID}.  This field is a member of `oneof`_ ``_tag_key_id``.",
                    "type": "string"
                  },
                  "tag_value": {
                    "description": "TagValue namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}/{TAG_VALUE_SHORT_NAME}.  This field is a member of `oneof`_ ``_tag_value``.",
                    "type": "string"
                  },
                  "tag_value_id": {
                    "description": "TagValue ID, in the format of tagValues/{TAG_VALUE_ID}.  This field is a member of `oneof`_ ``_tag_value_id``.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "tag_template"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListEntriesRequest",
      "description": "Request message for\n[ListEntries][google.cloud.datacatalog.v1.DataCatalog.ListEntries].\n\nAttributes:\n    parent (str):\n        Required. The name of the entry group that\n        contains the entries to list.\n        Can be provided in URL format.\n    page_size (int):\n        The maximum number of items to return. Default is 10.\n        Maximum limit is 1000. Throws an invalid argument if\n        ``page_size`` is more than 1000.\n    page_token (str):\n        Pagination token that specifies the next page\n        to return. If empty, the first page is returned.\n    read_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The fields to return for each entry. If empty or omitted,\n        all fields are returned.\n\n        For example, to return a list of entries with only the\n        ``name`` field, set ``read_mask`` to only one path with the\n        ``name`` value.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the entry group that contains the entries to list. Can be provided in URL format.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of items to return. Default is 10. Maximum limit is 1000. Throws an invalid argument if ``page_size`` is more than 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "Pagination token that specifies the next page to return. If empty, the first page is returned.",
            "type": "string"
          },
          "read_mask": {
            "description": "The fields to return for each entry. If empty or omitted, all fields are returned.  For example, to return a list of entries with only the ``name`` field, set ``read_mask`` to only one path with the ``name`` value.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "StarEntryRequest",
      "description": "Request message for\n[StarEntry][google.cloud.datacatalog.v1.DataCatalog.StarEntry].\n\nAttributes:\n    name (str):\n        Required. The name of the entry to mark as\n        starred.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the entry to mark as starred.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UnstarEntryRequest",
      "description": "Request message for\n[UnstarEntry][google.cloud.datacatalog.v1.DataCatalog.UnstarEntry].\n\nAttributes:\n    name (str):\n        Required. The name of the entry to mark as **not** starred.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the entry to mark as **not** starred.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ImportEntriesRequest",
      "description": "Request message for\n[ImportEntries][google.cloud.datacatalog.v1.DataCatalog.ImportEntries]\nmethod.\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    parent (str):\n        Required. Target entry group for ingested\n        entries.\n    gcs_bucket_path (str):\n        Path to a Cloud Storage bucket that contains\n        a dump ready for ingestion.\n\n        This field is a member of `oneof`_ ``source``.\n    job_id (str):\n        Optional. (Optional) Dataplex task job id, if\n        specified will be used as part of ImportEntries\n        LRO ID",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Target entry group for ingested entries.",
            "type": "string"
          },
          "gcs_bucket_path": {
            "description": "Path to a Cloud Storage bucket that contains a dump ready for ingestion.  This field is a member of `oneof`_ ``source``.",
            "type": "string"
          },
          "job_id": {
            "description": "Optional. (Optional) Dataplex task job id, if specified will be used as part of ImportEntries LRO ID",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "ModifyEntryOverviewRequest",
      "description": "Request message for\n[ModifyEntryOverview][google.cloud.datacatalog.v1.DataCatalog.ModifyEntryOverview].\n\nAttributes:\n    name (str):\n        Required. The full resource name of the\n        entry.\n    entry_overview (google.cloud.datacatalog_v1.types.EntryOverview):\n        Required. The new value for the Entry\n        Overview.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The full resource name of the entry.",
            "type": "string"
          },
          "entry_overview": {
            "description": "Required. The new value for the Entry Overview.",
            "reference": "google.cloud.datacatalog_v1.types.EntryOverview",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "overview": {
                  "description": "Entry overview with support for rich text.  The overview must only contain Unicode characters, and should be formatted using HTML. The maximum length is 10 MiB as this value holds HTML descriptions including encoded images. The maximum length of the text without images is 100 KiB.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "name",
          "entry_overview"
        ]
      }
    },
    {
      "type": "function",
      "name": "ModifyEntryContactsRequest",
      "description": "Request message for\n[ModifyEntryContacts][google.cloud.datacatalog.v1.DataCatalog.ModifyEntryContacts].\n\nAttributes:\n    name (str):\n        Required. The full resource name of the\n        entry.\n    contacts (google.cloud.datacatalog_v1.types.Contacts):\n        Required. The new value for the Contacts.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The full resource name of the entry.",
            "type": "string"
          },
          "contacts": {
            "description": "Required. The new value for the Contacts.",
            "reference": "google.cloud.datacatalog_v1.types.Contacts",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "people": {
                  "description": "The list of contact people for the entry.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1.types.Contacts.Person",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "designation": {
                          "description": "Designation of the person, for example, Data Steward.",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email of the person in the format of ``john.doe@xyz``, ``<john.doe@xyz>``, or ``John Doe<john.doe@xyz>``.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "contacts"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetConfigRequest",
      "description": "Request message for\n[SetConfig][google.cloud.datacatalog.v1.DataCatalog.SetConfig].\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Required. The organization or project whose\n        config is being specified.\n    tag_template_migration (google.cloud.datacatalog_v1.types.TagTemplateMigration):\n        Opt-in status for the migration of Tag\n        Templates to Dataplex.\n\n        This field is a member of `oneof`_ ``configuration``.\n    catalog_ui_experience (google.cloud.datacatalog_v1.types.CatalogUIExperience):\n        Opt-in status for the UI switch to Dataplex.\n\n        This field is a member of `oneof`_ ``configuration``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The organization or project whose config is being specified.",
            "type": "string"
          },
          "tag_template_migration": {
            "description": "Opt-in status for the migration of Tag Templates to Dataplex.  This field is a member of `oneof`_ ``configuration``.",
            "type": "object",
            "reference": "google.cloud.datacatalog_v1.types.TagTemplateMigration"
          },
          "catalog_ui_experience": {
            "description": "Opt-in status for the UI switch to Dataplex.  This field is a member of `oneof`_ ``configuration``.",
            "type": "object",
            "reference": "google.cloud.datacatalog_v1.types.CatalogUIExperience"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "RetrieveConfigRequest",
      "description": "Request message for\n[RetrieveConfig][google.cloud.datacatalog.v1.DataCatalog.RetrieveConfig].\n\nAttributes:\n    name (str):\n        Required. The organization whose config is\n        being retrieved.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The organization whose config is being retrieved.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "RetrieveEffectiveConfigRequest",
      "description": "Request message for\n[RetrieveEffectiveConfig][google.cloud.datacatalog.v1.DataCatalog.RetrieveEffectiveConfig].\n\nAttributes:\n    name (str):\n        Required. The resource whose effective config\n        is being retrieved.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource whose effective config is being retrieved.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-datacatalog/google/cloud/datacatalog_v1/types/policytagmanager.py": [
    {
      "type": "function",
      "name": "CreateTaxonomyRequest",
      "description": "Request message for\n[CreateTaxonomy][google.cloud.datacatalog.v1.PolicyTagManager.CreateTaxonomy].\n\nAttributes:\n    parent (str):\n        Required. Resource name of the project that\n        the taxonomy will belong to.\n    taxonomy (google.cloud.datacatalog_v1.types.Taxonomy):\n        The taxonomy to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the project that the taxonomy will belong to.",
            "type": "string"
          },
          "taxonomy": {
            "description": "The taxonomy to create.",
            "reference": "google.cloud.datacatalog_v1.types.Taxonomy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. Resource name of this taxonomy, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{id}\".",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.  The taxonomy display name must be unique within an organization.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.",
                  "type": "string"
                },
                "policy_tag_count": {
                  "description": "Output only. Number of policy tags contained in this taxonomy.",
                  "type": "integer",
                  "output_only": true
                },
                "taxonomy_timestamps": {
                  "description": "Output only. Timestamps about this taxonomy. Only create_time and update_time are used.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.SystemTimestamps",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_time": {
                        "description": "The creation time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "update_time": {
                        "description": "The last-modified time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "expire_time": {
                        "description": "Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      }
                    }
                  }
                },
                "activated_policy_types": {
                  "description": "Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy.PolicyType"
                  }
                },
                "service": {
                  "description": "Output only. Identity of the service which owns the Taxonomy. This field is only populated when the taxonomy is created by a Google Cloud service. Currently only 'DATAPLEX' is supported.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy.Service",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Immutable. The resource name for the service in the format ``projects/*/locations/*/namespaces/*/services/*``.",
                        "type": "string"
                      },
                      "annotations": {
                        "description": "Optional. Annotations for the service. This data can be consumed by service clients.  Restrictions:  -  The entire annotations dictionary may contain up to 2000 characters, spread accoss all key-value pairs. Annotations that go beyond this limit are rejected -  Valid annotation keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Annotations that fails to meet these requirements are rejected  Note: This field is equivalent to the ``metadata`` field in the v1beta1 API. They have the same syntax and read/write to the same location in Service Directory.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "endpoints": {
                        "description": "Output only. Endpoints associated with this service. Returned on [LookupService.ResolveService][google.cloud.servicedirectory.v1.LookupService.ResolveService]. Control plane clients should use [RegistrationService.ListEndpoints][google.cloud.servicedirectory.v1.RegistrationService.ListEndpoints].",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.servicedirectory_v1.types.Endpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "ip_address": {
                                "description": "The IP address of the endpoint, which can be an external or internal IP.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.",
                                "type": "integer"
                              },
                              "instance": {
                                "description": "A Compute Engine instance URI.",
                                "type": "string"
                              },
                              "forwarding_rule": {
                                "description": "A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format:  projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}",
                                "type": "string"
                              },
                              "forwarding_rule_target": {
                                "description": "Output only. Specifies the type of the target of the forwarding rule.  This field is a member of `oneof`_ ``_forwarding_rule_target``.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.ForwardingRuleTarget",
                                "output_only": true
                              },
                              "load_balancer_id": {
                                "description": "Output only. ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.  This field is a member of `oneof`_ ``_load_balancer_id``.",
                                "type": "string",
                                "output_only": true
                              },
                              "load_balancer_type": {
                                "description": "Output only. Type of the load balancer the forwarding rule points to.  This field is a member of `oneof`_ ``_load_balancer_type``.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.LoadBalancerType",
                                "output_only": true
                              },
                              "gke_master_cluster": {
                                "description": "A cluster URI for `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__.",
                                "type": "string"
                              },
                              "fqdn": {
                                "description": "DNS endpoint of `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__. Requires gke_master_cluster to be set, can't be used simultaneoulsly with ip_address or network. Applicable only to destination endpoint.",
                                "type": "string"
                              },
                              "cloud_sql_instance": {
                                "description": "A `Cloud SQL <https://cloud.google.com/sql>`__ instance URI.",
                                "type": "string"
                              },
                              "redis_instance": {
                                "description": "A `Redis Instance <https://cloud.google.com/memorystore/docs/redis>`__ URI.",
                                "type": "string"
                              },
                              "redis_cluster": {
                                "description": "A `Redis Cluster <https://cloud.google.com/memorystore/docs/cluster>`__ URI.",
                                "type": "string"
                              },
                              "cloud_function": {
                                "description": "A `Cloud Function <https://cloud.google.com/functions>`__.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.CloudFunctionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "A `Cloud Function <https://cloud.google.com/functions>`__ name.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "app_engine_version": {
                                "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.AppEngineVersionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__ name.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "cloud_run_revision": {
                                "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.CloudRunRevisionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__ URI. The format is: projects/{project}/locations/{location}/revisions/{revision}",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "network": {
                                "description": "A Compute Engine network URI.",
                                "type": "string"
                              },
                              "network_type": {
                                "description": "Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.NetworkType"
                              },
                              "project_id": {
                                "description": "Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID:  1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "output_only": true
                      },
                      "uid": {
                        "description": "Output only. The globally unique identifier of the service in the UUID4 format.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              },
              "required": [
                "display_name"
              ]
            }
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTaxonomyRequest",
      "description": "Request message for\n[DeleteTaxonomy][google.cloud.datacatalog.v1.PolicyTagManager.DeleteTaxonomy].\n\nAttributes:\n    name (str):\n        Required. Resource name of the taxonomy to\n        delete.\n        Note: All policy tags in this taxonomy are also\n        deleted.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the taxonomy to delete. Note: All policy tags in this taxonomy are also deleted.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTaxonomyRequest",
      "description": "Request message for\n[UpdateTaxonomy][google.cloud.datacatalog.v1.PolicyTagManager.UpdateTaxonomy].\n\nAttributes:\n    taxonomy (google.cloud.datacatalog_v1.types.Taxonomy):\n        The taxonomy to update. You can update only\n        its description, display name, and activated\n        policy types.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Specifies fields to update. If not set, defaults to all\n        fields you can update.\n\n        For more information, see [FieldMask]\n        (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).",
      "parameters": {
        "type": "object",
        "properties": {
          "taxonomy": {
            "description": "The taxonomy to update. You can update only its description, display name, and activated policy types.",
            "reference": "google.cloud.datacatalog_v1.types.Taxonomy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. Resource name of this taxonomy, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{id}\".",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.  The taxonomy display name must be unique within an organization.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.",
                  "type": "string"
                },
                "policy_tag_count": {
                  "description": "Output only. Number of policy tags contained in this taxonomy.",
                  "type": "integer",
                  "output_only": true
                },
                "taxonomy_timestamps": {
                  "description": "Output only. Timestamps about this taxonomy. Only create_time and update_time are used.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.SystemTimestamps",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_time": {
                        "description": "The creation time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "update_time": {
                        "description": "The last-modified time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "expire_time": {
                        "description": "Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      }
                    }
                  }
                },
                "activated_policy_types": {
                  "description": "Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy.PolicyType"
                  }
                },
                "service": {
                  "description": "Output only. Identity of the service which owns the Taxonomy. This field is only populated when the taxonomy is created by a Google Cloud service. Currently only 'DATAPLEX' is supported.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy.Service",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Immutable. The resource name for the service in the format ``projects/*/locations/*/namespaces/*/services/*``.",
                        "type": "string"
                      },
                      "annotations": {
                        "description": "Optional. Annotations for the service. This data can be consumed by service clients.  Restrictions:  -  The entire annotations dictionary may contain up to 2000 characters, spread accoss all key-value pairs. Annotations that go beyond this limit are rejected -  Valid annotation keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Annotations that fails to meet these requirements are rejected  Note: This field is equivalent to the ``metadata`` field in the v1beta1 API. They have the same syntax and read/write to the same location in Service Directory.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "endpoints": {
                        "description": "Output only. Endpoints associated with this service. Returned on [LookupService.ResolveService][google.cloud.servicedirectory.v1.LookupService.ResolveService]. Control plane clients should use [RegistrationService.ListEndpoints][google.cloud.servicedirectory.v1.RegistrationService.ListEndpoints].",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.servicedirectory_v1.types.Endpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "ip_address": {
                                "description": "The IP address of the endpoint, which can be an external or internal IP.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.",
                                "type": "integer"
                              },
                              "instance": {
                                "description": "A Compute Engine instance URI.",
                                "type": "string"
                              },
                              "forwarding_rule": {
                                "description": "A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format:  projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}",
                                "type": "string"
                              },
                              "forwarding_rule_target": {
                                "description": "Output only. Specifies the type of the target of the forwarding rule.  This field is a member of `oneof`_ ``_forwarding_rule_target``.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.ForwardingRuleTarget",
                                "output_only": true
                              },
                              "load_balancer_id": {
                                "description": "Output only. ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.  This field is a member of `oneof`_ ``_load_balancer_id``.",
                                "type": "string",
                                "output_only": true
                              },
                              "load_balancer_type": {
                                "description": "Output only. Type of the load balancer the forwarding rule points to.  This field is a member of `oneof`_ ``_load_balancer_type``.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.LoadBalancerType",
                                "output_only": true
                              },
                              "gke_master_cluster": {
                                "description": "A cluster URI for `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__.",
                                "type": "string"
                              },
                              "fqdn": {
                                "description": "DNS endpoint of `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__. Requires gke_master_cluster to be set, can't be used simultaneoulsly with ip_address or network. Applicable only to destination endpoint.",
                                "type": "string"
                              },
                              "cloud_sql_instance": {
                                "description": "A `Cloud SQL <https://cloud.google.com/sql>`__ instance URI.",
                                "type": "string"
                              },
                              "redis_instance": {
                                "description": "A `Redis Instance <https://cloud.google.com/memorystore/docs/redis>`__ URI.",
                                "type": "string"
                              },
                              "redis_cluster": {
                                "description": "A `Redis Cluster <https://cloud.google.com/memorystore/docs/cluster>`__ URI.",
                                "type": "string"
                              },
                              "cloud_function": {
                                "description": "A `Cloud Function <https://cloud.google.com/functions>`__.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.CloudFunctionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "A `Cloud Function <https://cloud.google.com/functions>`__ name.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "app_engine_version": {
                                "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.AppEngineVersionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__ name.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "cloud_run_revision": {
                                "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.CloudRunRevisionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__ URI. The format is: projects/{project}/locations/{location}/revisions/{revision}",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "network": {
                                "description": "A Compute Engine network URI.",
                                "type": "string"
                              },
                              "network_type": {
                                "description": "Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.NetworkType"
                              },
                              "project_id": {
                                "description": "Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID:  1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "output_only": true
                      },
                      "uid": {
                        "description": "Output only. The globally unique identifier of the service in the UUID4 format.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              },
              "required": [
                "display_name"
              ]
            }
          },
          "update_mask": {
            "description": "Specifies fields to update. If not set, defaults to all fields you can update.  For more information, see [FieldMask] (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "ListTaxonomiesRequest",
      "description": "Request message for\n[ListTaxonomies][google.cloud.datacatalog.v1.PolicyTagManager.ListTaxonomies].\n\nAttributes:\n    parent (str):\n        Required. Resource name of the project to\n        list the taxonomies of.\n    page_size (int):\n        The maximum number of items to return. Must\n        be a value between 1 and 1000 inclusively. If\n        not set, defaults to 50.\n    page_token (str):\n        The pagination token of the next results\n        page. If not set, the first page is returned.\n\n        The token is returned in the response to a\n        previous list request.\n    filter (str):\n        Supported field for filter is 'service' and\n        value is 'dataplex'. Eg: service=dataplex.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the project to list the taxonomies of.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of items to return. Must be a value between 1 and 1000 inclusively. If not set, defaults to 50.",
            "type": "integer"
          },
          "page_token": {
            "description": "The pagination token of the next results page. If not set, the first page is returned.  The token is returned in the response to a previous list request.",
            "type": "string"
          },
          "filter": {
            "description": "Supported field for filter is 'service' and value is 'dataplex'. Eg: service=dataplex.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTaxonomyRequest",
      "description": "Request message for\n[GetTaxonomy][google.cloud.datacatalog.v1.PolicyTagManager.GetTaxonomy].\n\nAttributes:\n    name (str):\n        Required. Resource name of the taxonomy to\n        get.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the taxonomy to get.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreatePolicyTagRequest",
      "description": "Request message for\n[CreatePolicyTag][google.cloud.datacatalog.v1.PolicyTagManager.CreatePolicyTag].\n\nAttributes:\n    parent (str):\n        Required. Resource name of the taxonomy that\n        the policy tag will belong to.\n    policy_tag (google.cloud.datacatalog_v1.types.PolicyTag):\n        The policy tag to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the taxonomy that the policy tag will belong to.",
            "type": "string"
          },
          "policy_tag": {
            "description": "The policy tag to create.",
            "reference": "google.cloud.datacatalog_v1.types.PolicyTag",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. Resource name of this policy tag, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\".",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.",
                  "type": "string"
                },
                "description": {
                  "description": "Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.",
                  "type": "string"
                },
                "parent_policy_tag": {
                  "description": "Resource name of this policy tag's parent policy tag (e.g. for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the \"Geolocation\" policy tag in the example above). If not set, defaults to an empty string.",
                  "type": "string"
                },
                "child_policy_tags": {
                  "description": "Output only. Resource names of child policy tags of this policy tag.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "output_only": true
                }
              },
              "required": [
                "display_name"
              ]
            }
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeletePolicyTagRequest",
      "description": "Request message for\n[DeletePolicyTag][google.cloud.datacatalog.v1.PolicyTagManager.DeletePolicyTag].\n\nAttributes:\n    name (str):\n        Required. Resource name of the policy tag to\n        delete.\n        Note: All of its descendant policy tags are also\n        deleted.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the policy tag to delete. Note: All of its descendant policy tags are also deleted.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdatePolicyTagRequest",
      "description": "Request message for\n[UpdatePolicyTag][google.cloud.datacatalog.v1.PolicyTagManager.UpdatePolicyTag].\n\nAttributes:\n    policy_tag (google.cloud.datacatalog_v1.types.PolicyTag):\n        The policy tag to update. You can update only\n        its description, display name, and parent policy\n        tag fields.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Specifies the fields to update.\n\n        You can update only display name, description, and parent\n        policy tag. If not set, defaults to all updatable fields.\n        For more information, see [FieldMask]\n        (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).",
      "parameters": {
        "type": "object",
        "properties": {
          "policy_tag": {
            "description": "The policy tag to update. You can update only its description, display name, and parent policy tag fields.",
            "reference": "google.cloud.datacatalog_v1.types.PolicyTag",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. Resource name of this policy tag, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\".",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.",
                  "type": "string"
                },
                "description": {
                  "description": "Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.",
                  "type": "string"
                },
                "parent_policy_tag": {
                  "description": "Resource name of this policy tag's parent policy tag (e.g. for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the \"Geolocation\" policy tag in the example above). If not set, defaults to an empty string.",
                  "type": "string"
                },
                "child_policy_tags": {
                  "description": "Output only. Resource names of child policy tags of this policy tag.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "output_only": true
                }
              },
              "required": [
                "display_name"
              ]
            }
          },
          "update_mask": {
            "description": "Specifies the fields to update.  You can update only display name, description, and parent policy tag. If not set, defaults to all updatable fields. For more information, see [FieldMask] (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "ListPolicyTagsRequest",
      "description": "Request message for\n[ListPolicyTags][google.cloud.datacatalog.v1.PolicyTagManager.ListPolicyTags].\n\nAttributes:\n    parent (str):\n        Required. Resource name of the taxonomy to\n        list the policy tags of.\n    page_size (int):\n        The maximum number of items to return. Must\n        be a value between 1 and 1000 inclusively.\n        If not set, defaults to 50.\n    page_token (str):\n        The pagination token of the next results\n        page. If not set, returns the first page.\n\n        The token is returned in the response to a\n        previous list request.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the taxonomy to list the policy tags of.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of items to return. Must be a value between 1 and 1000 inclusively. If not set, defaults to 50.",
            "type": "integer"
          },
          "page_token": {
            "description": "The pagination token of the next results page. If not set, returns the first page.  The token is returned in the response to a previous list request.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetPolicyTagRequest",
      "description": "Request message for\n[GetPolicyTag][google.cloud.datacatalog.v1.PolicyTagManager.GetPolicyTag].\n\nAttributes:\n    name (str):\n        Required. Resource name of the policy tag.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the policy tag.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-datacatalog/google/cloud/datacatalog_v1/types/policytagmanagerserialization.py": [
    {
      "type": "function",
      "name": "ReplaceTaxonomyRequest",
      "description": "Request message for\n[ReplaceTaxonomy][google.cloud.datacatalog.v1.PolicyTagManagerSerialization.ReplaceTaxonomy].\n\nAttributes:\n    name (str):\n        Required. Resource name of the taxonomy to\n        update.\n    serialized_taxonomy (google.cloud.datacatalog_v1.types.SerializedTaxonomy):\n        Required. Taxonomy to update along with its\n        child policy tags.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the taxonomy to update.",
            "type": "string"
          },
          "serialized_taxonomy": {
            "description": "Required. Taxonomy to update along with its child policy tags.",
            "reference": "google.cloud.datacatalog_v1.types.SerializedTaxonomy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "display_name": {
                  "description": "Required. Display name of the taxonomy. Max 200 bytes when encoded in UTF-8.",
                  "type": "string"
                },
                "description": {
                  "description": "Description of the serialized taxonomy. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.",
                  "type": "string"
                },
                "policy_tags": {
                  "description": "Top level policy tags associated with the taxonomy if any.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.SerializedPolicyTag",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "policy_tag": {
                          "description": "Resource name of the policy tag.  This field will be ignored when calling ImportTaxonomies.",
                          "type": "string"
                        },
                        "display_name": {
                          "description": "Required. Display name of the policy tag. Max 200 bytes when encoded in UTF-8.",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of the serialized policy tag. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.",
                          "type": "string"
                        },
                        "child_policy_tags": {
                          "description": "Children of the policy tag if any.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.datacatalog_v1beta1.types.SerializedPolicyTag"
                          }
                        }
                      },
                      "required": [
                        "display_name"
                      ]
                    }
                  }
                },
                "activated_policy_types": {
                  "description": "A list of policy types that are activated for a taxonomy.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy.PolicyType"
                  }
                }
              },
              "required": [
                "display_name"
              ]
            }
          }
        },
        "required": [
          "name",
          "serialized_taxonomy"
        ]
      }
    },
    {
      "type": "function",
      "name": "ImportTaxonomiesRequest",
      "description": "Request message for\n[ImportTaxonomies][google.cloud.datacatalog.v1.PolicyTagManagerSerialization.ImportTaxonomies].\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    parent (str):\n        Required. Resource name of project that the\n        imported taxonomies will belong to.\n    inline_source (google.cloud.datacatalog_v1.types.InlineSource):\n        Inline source taxonomy to import.\n\n        This field is a member of `oneof`_ ``source``.\n    cross_regional_source (google.cloud.datacatalog_v1.types.CrossRegionalSource):\n        Cross-regional source taxonomy to import.\n\n        This field is a member of `oneof`_ ``source``.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of project that the imported taxonomies will belong to.",
            "type": "string"
          },
          "inline_source": {
            "description": "Inline source taxonomy to import.  This field is a member of `oneof`_ ``source``.",
            "reference": "google.cloud.datacatalog_v1.types.InlineSource",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "taxonomies": {
                  "description": "Required. Taxonomies to be imported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.SerializedTaxonomy",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "display_name": {
                          "description": "Required. Display name of the taxonomy. Max 200 bytes when encoded in UTF-8.",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of the serialized taxonomy. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.",
                          "type": "string"
                        },
                        "policy_tags": {
                          "description": "Top level policy tags associated with the taxonomy if any.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.datacatalog_v1beta1.types.SerializedPolicyTag",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "policy_tag": {
                                  "description": "Resource name of the policy tag.  This field will be ignored when calling ImportTaxonomies.",
                                  "type": "string"
                                },
                                "display_name": {
                                  "description": "Required. Display name of the policy tag. Max 200 bytes when encoded in UTF-8.",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "Description of the serialized policy tag. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.",
                                  "type": "string"
                                },
                                "child_policy_tags": {
                                  "description": "Children of the policy tag if any.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "reference": "google.cloud.datacatalog_v1beta1.types.SerializedPolicyTag"
                                  }
                                }
                              },
                              "required": [
                                "display_name"
                              ]
                            }
                          }
                        },
                        "activated_policy_types": {
                          "description": "A list of policy types that are activated for a taxonomy.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy.PolicyType"
                          }
                        }
                      },
                      "required": [
                        "display_name"
                      ]
                    }
                  }
                }
              },
              "required": [
                "taxonomies"
              ]
            }
          },
          "cross_regional_source": {
            "description": "Cross-regional source taxonomy to import.  This field is a member of `oneof`_ ``source``.",
            "reference": "google.cloud.datacatalog_v1.types.CrossRegionalSource",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "taxonomy": {
                  "description": "Required. The resource name of the source taxonomy to import.",
                  "type": "string"
                }
              },
              "required": [
                "taxonomy"
              ]
            }
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "ExportTaxonomiesRequest",
      "description": "Request message for\n[ExportTaxonomies][google.cloud.datacatalog.v1.PolicyTagManagerSerialization.ExportTaxonomies].\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    parent (str):\n        Required. Resource name of the project that\n        the exported taxonomies belong to.\n    taxonomies (MutableSequence[str]):\n        Required. Resource names of the taxonomies to\n        export.\n    serialized_taxonomies (bool):\n        Serialized export taxonomies that contain all\n        the policy tags as nested protocol buffers.\n\n        This field is a member of `oneof`_ ``destination``.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the project that the exported taxonomies belong to.",
            "type": "string"
          },
          "taxonomies": {
            "description": "Required. Resource names of the taxonomies to export.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serialized_taxonomies": {
            "description": "Serialized export taxonomies that contain all the policy tags as nested protocol buffers.  This field is a member of `oneof`_ ``destination``.",
            "type": "boolean"
          }
        },
        "required": [
          "parent",
          "taxonomies"
        ]
      }
    }
  ]
}