{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-contentwarehouse/google/cloud/contentwarehouse_v1/types/pipeline_service.py": [
    {
      "type": "function",
      "name": "RunPipelineRequest",
      "description": "Request message for DocumentService.RunPipeline.\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    name (str):\n        Required. The resource name which owns the resources of the\n        pipeline. Format:\n        projects/{project_number}/locations/{location}.\n    gcs_ingest_pipeline (google.cloud.contentwarehouse_v1.types.GcsIngestPipeline):\n        Cloud Storage ingestion pipeline.\n\n        This field is a member of `oneof`_ ``pipeline``.\n    gcs_ingest_with_doc_ai_processors_pipeline (google.cloud.contentwarehouse_v1.types.GcsIngestWithDocAiProcessorsPipeline):\n        Use DocAI processors to process documents in\n        Cloud Storage and ingest them to Document\n        Warehouse.\n\n        This field is a member of `oneof`_ ``pipel",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name which owns the resources of the pipeline. Format: projects/{project_number}/locations/{location}.",
            "type": "string"
          },
          "gcs_ingest_pipeline": {
            "description": "Cloud Storage ingestion pipeline.  This field is a member of `oneof`_ ``pipeline``.",
            "reference": "google.cloud.contentwarehouse_v1.types.GcsIngestPipeline",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "input_path": {
                  "description": "The input Cloud Storage folder. All files under this folder will be imported to Document Warehouse. Format: ``gs://<bucket-name>/<folder-name>``.",
                  "type": "string"
                },
                "schema_name": {
                  "description": "The Document Warehouse schema resource name. All documents processed by this pipeline will use this schema. Format: projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.",
                  "type": "string"
                },
                "processor_type": {
                  "description": "The Doc AI processor type name. Only used when the format of ingested files is Doc AI Document proto format.",
                  "type": "string"
                },
                "skip_ingested_documents": {
                  "description": "The flag whether to skip ingested documents. If it is set to true, documents in Cloud Storage contains key \"status\" with value \"status=ingested\" in custom metadata will be skipped to ingest.",
                  "type": "boolean"
                },
                "pipeline_config": {
                  "description": "Optional. The config for the Cloud Storage Ingestion pipeline. It provides additional customization options to run the pipeline and can be skipped if it is not applicable.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.IngestPipelineConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "document_acl_policy": {
                        "description": "The document level acl policy config. This refers to an Identity and Access (IAM) policy, which specifies access controls for all documents ingested by the pipeline. The [role][google.iam.v1.Binding.role] and [members][google.iam.v1.Binding.role] under the policy needs to be specified.  The following roles are supported for document level acl control:  -  roles/contentwarehouse.documentAdmin -  roles/contentwarehouse.documentEditor -  roles/contentwarehouse.documentViewer  The following members are supported for document level acl control:  -  user:user-email@example.com -  group:group-email@example.com Note that for documents searched with LLM, only single level user or group acl check is supported.",
                        "type": "object",
                        "reference": "google.iam.v1.policy_pb2.Policy",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "type_": {
                              "description": "Policy type.",
                              "type": "object",
                              "reference": "google.shopping.merchant_accounts_v1beta.types.OnlineReturnPolicy.Policy.Type"
                            },
                            "days": {
                              "description": "The number of days items can be returned after delivery, where one day is defined as 24 hours after the delivery timestamp. Required for ``NUMBER_OF_DAYS_AFTER_DELIVERY`` returns.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "enable_document_text_extraction": {
                        "description": "The document text extraction enabled flag. If the flag is set to true, DWH will perform text extraction on the raw document.",
                        "type": "boolean"
                      },
                      "folder": {
                        "description": "Optional. The name of the folder to which all ingested documents will be linked during ingestion process. Format is ``projects/{project}/locations/{location}/documents/{folder_id}``",
                        "type": "string"
                      },
                      "cloud_function": {
                        "description": "The Cloud Function resource name. The Cloud Function needs to live inside consumer project and is accessible to Document AI Warehouse P4SA. Only Cloud Functions V2 is supported. Cloud function execution should complete within 5 minutes or this file ingestion may fail due to timeout. Format: ``https://{region}-{project_id}.cloudfunctions.net/{cloud_function}`` The following keys are available the request json payload.  -  display_name -  properties -  plain_text -  reference_id -  document_schema_name -  raw_document_path -  raw_document_file_type  The following keys from the cloud function json response payload will be ingested to the Document AI Warehouse as part of Document proto content and/or related information. The original values will be overridden if any key is present in the response.  -  display_name -  properties -  plain_text -  document_acl_policy -  folder",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "gcs_ingest_with_doc_ai_processors_pipeline": {
            "description": "Use DocAI processors to process documents in Cloud Storage and ingest them to Document Warehouse.  This field is a member of `oneof`_ ``pipeline``.",
            "reference": "google.cloud.contentwarehouse_v1.types.GcsIngestWithDocAiProcessorsPipeline",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "input_path": {
                  "description": "The input Cloud Storage folder. All files under this folder will be imported to Document Warehouse. Format: ``gs://<bucket-name>/<folder-name>``.",
                  "type": "string"
                },
                "split_classify_processor_info": {
                  "description": "The split and classify processor information. The split and classify result will be used to find a matched extract processor.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.ProcessorInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "processor_name": {
                        "description": "The processor resource name. Format is ``projects/{project}/locations/{location}/processors/{processor}``, or ``projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}``",
                        "type": "string"
                      },
                      "document_type": {
                        "description": "The processor will process the documents with this document type.",
                        "type": "string"
                      },
                      "schema_name": {
                        "description": "The Document schema resource name. All documents processed by this processor will use this schema. Format: projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.",
                        "type": "string"
                      }
                    }
                  }
                },
                "extract_processor_infos": {
                  "description": "The extract processors information. One matched extract processor will be used to process documents based on the classify processor result. If no classify processor is specified, the first extract processor will be used.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.contentwarehouse_v1.types.ProcessorInfo",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "processor_name": {
                          "description": "The processor resource name. Format is ``projects/{project}/locations/{location}/processors/{processor}``, or ``projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}``",
                          "type": "string"
                        },
                        "document_type": {
                          "description": "The processor will process the documents with this document type.",
                          "type": "string"
                        },
                        "schema_name": {
                          "description": "The Document schema resource name. All documents processed by this processor will use this schema. Format: projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "processor_results_folder_path": {
                  "description": "The Cloud Storage folder path used to store the raw results from processors. Format: ``gs://<bucket-name>/<folder-name>``.",
                  "type": "string"
                },
                "skip_ingested_documents": {
                  "description": "The flag whether to skip ingested documents. If it is set to true, documents in Cloud Storage contains key \"status\" with value \"status=ingested\" in custom metadata will be skipped to ingest.",
                  "type": "boolean"
                },
                "pipeline_config": {
                  "description": "Optional. The config for the Cloud Storage Ingestion with DocAI Processors pipeline. It provides additional customization options to run the pipeline and can be skipped if it is not applicable.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.IngestPipelineConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "document_acl_policy": {
                        "description": "The document level acl policy config. This refers to an Identity and Access (IAM) policy, which specifies access controls for all documents ingested by the pipeline. The [role][google.iam.v1.Binding.role] and [members][google.iam.v1.Binding.role] under the policy needs to be specified.  The following roles are supported for document level acl control:  -  roles/contentwarehouse.documentAdmin -  roles/contentwarehouse.documentEditor -  roles/contentwarehouse.documentViewer  The following members are supported for document level acl control:  -  user:user-email@example.com -  group:group-email@example.com Note that for documents searched with LLM, only single level user or group acl check is supported.",
                        "type": "object",
                        "reference": "google.iam.v1.policy_pb2.Policy",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "type_": {
                              "description": "Policy type.",
                              "type": "object",
                              "reference": "google.shopping.merchant_accounts_v1beta.types.OnlineReturnPolicy.Policy.Type"
                            },
                            "days": {
                              "description": "The number of days items can be returned after delivery, where one day is defined as 24 hours after the delivery timestamp. Required for ``NUMBER_OF_DAYS_AFTER_DELIVERY`` returns.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "enable_document_text_extraction": {
                        "description": "The document text extraction enabled flag. If the flag is set to true, DWH will perform text extraction on the raw document.",
                        "type": "boolean"
                      },
                      "folder": {
                        "description": "Optional. The name of the folder to which all ingested documents will be linked during ingestion process. Format is ``projects/{project}/locations/{location}/documents/{folder_id}``",
                        "type": "string"
                      },
                      "cloud_function": {
                        "description": "The Cloud Function resource name. The Cloud Function needs to live inside consumer project and is accessible to Document AI Warehouse P4SA. Only Cloud Functions V2 is supported. Cloud function execution should complete within 5 minutes or this file ingestion may fail due to timeout. Format: ``https://{region}-{project_id}.cloudfunctions.net/{cloud_function}`` The following keys are available the request json payload.  -  display_name -  properties -  plain_text -  reference_id -  document_schema_name -  raw_document_path -  raw_document_file_type  The following keys from the cloud function json response payload will be ingested to the Document AI Warehouse as part of Document proto content and/or related information. The original values will be overridden if any key is present in the response.  -  display_name -  properties -  plain_text -  document_acl_policy -  folder",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "export_cdw_pipeline": {
            "description": "Export docuemnts from Document Warehouse to CDW for training purpose.  This field is a member of `oneof`_ ``pipeline``.",
            "reference": "google.cloud.contentwarehouse_v1.types.ExportToCdwPipeline",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "documents": {
                  "description": "The list of all the resource names of the documents to be processed. Format: projects/{project_number}/locations/{location}/documents/{document_id}.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "export_folder_path": {
                  "description": "The Cloud Storage folder path used to store the exported documents before being sent to CDW. Format: ``gs://<bucket-name>/<folder-name>``.",
                  "type": "string"
                },
                "doc_ai_dataset": {
                  "description": "Optional. The CDW dataset resource name. This field is optional. If not set, the documents will be exported to Cloud Storage only. Format:  projects/{project}/locations/{location}/processors/{processor}/dataset",
                  "type": "string"
                },
                "training_split_ratio": {
                  "description": "Ratio of training dataset split. When importing into Document AI Workbench, documents will be automatically split into training and test split category with the specified ratio. This field is required if doc_ai_dataset is set.",
                  "type": "number"
                }
              }
            }
          },
          "process_with_doc_ai_pipeline": {
            "description": "Use a DocAI processor to process documents in Document Warehouse, and re-ingest the updated results into Document Warehouse.  This field is a member of `oneof`_ ``pipeline``.",
            "reference": "google.cloud.contentwarehouse_v1.types.ProcessWithDocAiPipeline",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "documents": {
                  "description": "The list of all the resource names of the documents to be processed. Format: projects/{project_number}/locations/{location}/documents/{document_id}.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "export_folder_path": {
                  "description": "The Cloud Storage folder path used to store the exported documents before being sent to CDW. Format: ``gs://<bucket-name>/<folder-name>``.",
                  "type": "string"
                },
                "processor_info": {
                  "description": "The CDW processor information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.ProcessorInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "processor_name": {
                        "description": "The processor resource name. Format is ``projects/{project}/locations/{location}/processors/{processor}``, or ``projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}``",
                        "type": "string"
                      },
                      "document_type": {
                        "description": "The processor will process the documents with this document type.",
                        "type": "string"
                      },
                      "schema_name": {
                        "description": "The Document schema resource name. All documents processed by this processor will use this schema. Format: projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.",
                        "type": "string"
                      }
                    }
                  }
                },
                "processor_results_folder_path": {
                  "description": "The Cloud Storage folder path used to store the raw results from processors. Format: ``gs://<bucket-name>/<folder-name>``.",
                  "type": "string"
                }
              }
            }
          },
          "request_metadata": {
            "description": "The meta information collected about the end user, used to enforce access control for the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-contentwarehouse/google/cloud/contentwarehouse_v1/types/synonymset_service_request.py": [
    {
      "type": "function",
      "name": "CreateSynonymSetRequest",
      "description": "Request message for SynonymSetService.CreateSynonymSet.\n\nAttributes:\n    parent (str):\n        Required. The parent name. Format:\n        projects/{project_number}/locations/{location}.\n    synonym_set (google.cloud.contentwarehouse_v1.types.SynonymSet):\n        Required. The synonymSet to be created for a\n        context",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent name. Format: projects/{project_number}/locations/{location}.",
            "type": "string"
          },
          "synonym_set": {
            "description": "Required. The synonymSet to be created for a context",
            "reference": "google.cloud.contentwarehouse_v1.types.SynonymSet",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The resource name of the SynonymSet This is mandatory for google.api.resource. Format: projects/{project_number}/locations/{location}/synonymSets/{context}.",
                  "type": "string"
                },
                "context": {
                  "description": "This is a freeform field. Example contexts can be \"sales,\" \"engineering,\" \"real estate,\" \"accounting,\" etc. The context can be supplied during search requests.",
                  "type": "string"
                },
                "synonyms": {
                  "description": "List of Synonyms for the context.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.contentwarehouse_v1.types.SynonymSet.Synonym",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "words": {
                          "description": "For example: sale, invoice, bill, order",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "synonym_set"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetSynonymSetRequest",
      "description": "Request message for SynonymSetService.GetSynonymSet.\nWill return synonymSet for a certain context.\n\nAttributes:\n    name (str):\n        Required. The name of the synonymSet to retrieve Format:\n        projects/{project_number}/locations/{location}/synonymSets/{context}.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the synonymSet to retrieve Format: projects/{project_number}/locations/{location}/synonymSets/{context}.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListSynonymSetsRequest",
      "description": "Request message for SynonymSetService.ListSynonymSets.\nWill return all synonymSets belonging to the customer project.\n\nAttributes:\n    parent (str):\n        Required. The parent name. Format:\n        projects/{project_number}/locations/{location}.\n    page_size (int):\n        The maximum number of synonymSets to return.\n        The service may return fewer than this value. If\n        unspecified, at most 50 rule sets will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListSynonymSets``\n        call. Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListSynonymSets`` must match the call that provided the\n        page token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent name. Format: projects/{project_number}/locations/{location}.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of synonymSets to return. The service may return fewer than this value. If unspecified, at most 50 rule sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListSynonymSets`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListSynonymSets`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateSynonymSetRequest",
      "description": "Request message for SynonymSetService.UpdateSynonymSet.\nRemoves the SynonymSet for the specified context and replaces it\nwith the SynonymSet in this request.\n\nAttributes:\n    name (str):\n        Required. The name of the synonymSet to update Format:\n        projects/{project_number}/locations/{location}/synonymSets/{context}.\n    synonym_set (google.cloud.contentwarehouse_v1.types.SynonymSet):\n        Required. The synonymSet to be updated for\n        the customer",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the synonymSet to update Format: projects/{project_number}/locations/{location}/synonymSets/{context}.",
            "type": "string"
          },
          "synonym_set": {
            "description": "Required. The synonymSet to be updated for the customer",
            "reference": "google.cloud.contentwarehouse_v1.types.SynonymSet",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The resource name of the SynonymSet This is mandatory for google.api.resource. Format: projects/{project_number}/locations/{location}/synonymSets/{context}.",
                  "type": "string"
                },
                "context": {
                  "description": "This is a freeform field. Example contexts can be \"sales,\" \"engineering,\" \"real estate,\" \"accounting,\" etc. The context can be supplied during search requests.",
                  "type": "string"
                },
                "synonyms": {
                  "description": "List of Synonyms for the context.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.contentwarehouse_v1.types.SynonymSet.Synonym",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "words": {
                          "description": "For example: sale, invoice, bill, order",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "synonym_set"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteSynonymSetRequest",
      "description": "Request message for SynonymSetService.DeleteSynonymSet.\n\nAttributes:\n    name (str):\n        Required. The name of the synonymSet to delete Format:\n        projects/{project_number}/locations/{location}/synonymSets/{context}.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the synonymSet to delete Format: projects/{project_number}/locations/{location}/synonymSets/{context}.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-contentwarehouse/google/cloud/contentwarehouse_v1/types/document_schema_service.py": [
    {
      "type": "function",
      "name": "CreateDocumentSchemaRequest",
      "description": "Request message for\nDocumentSchemaService.CreateDocumentSchema.\n\nAttributes:\n    parent (str):\n        Required. The parent name.\n    document_schema (google.cloud.contentwarehouse_v1.types.DocumentSchema):\n        Required. The document schema to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent name.",
            "type": "string"
          },
          "document_schema": {
            "description": "Required. The document schema to create.",
            "reference": "google.cloud.contentwarehouse_v1.types.DocumentSchema",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "display_name": {
                  "description": "Display name to show to users.",
                  "type": "string"
                },
                "description": {
                  "description": "Description of the schema.",
                  "type": "string"
                },
                "entity_types": {
                  "description": "Entity types of the schema.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.documentai_v1.types.DocumentSchema.EntityType",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The unique identifier of the entity type. Required for [EntityTypes.UpdateEntityType][google.cloud.dialogflow.v2.EntityTypes.UpdateEntityType] and [EntityTypes.BatchUpdateEntityTypes][google.cloud.dialogflow.v2.EntityTypes.BatchUpdateEntityTypes] methods. Format: ``projects/<Project ID>/agent/entityTypes/<Entity Type ID>``.",
                          "type": "string"
                        },
                        "display_name": {
                          "description": "Required. The name of the entity type.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Required. Indicates the kind of entity type.",
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.EntityType.Kind"
                        },
                        "auto_expansion_mode": {
                          "description": "Optional. Indicates whether the entity type can be automatically expanded.",
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.EntityType.AutoExpansionMode"
                        },
                        "entities": {
                          "description": "Optional. The collection of entity entries associated with the entity type.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.dialogflow_v2.types.EntityType.Entity",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*.  For ``KIND_MAP`` entity types:  -  A reference value to be used in place of synonyms.  For ``KIND_LIST`` entity types:  -  A string that can contain references to other entity types (with or without aliases).",
                                  "type": "string"
                                },
                                "synonyms": {
                                  "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and ``value`` is *scallions*, a synonym could be *green onions*.  For ``KIND_LIST`` entity types:  -  This collection must contain exactly one synonym equal to ``value``.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "value",
                                "synonyms"
                              ]
                            }
                          }
                        },
                        "enable_fuzzy_extraction": {
                          "description": "Optional. Enables fuzzy entity extraction during classification.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "display_name",
                        "kind"
                      ]
                    }
                  }
                },
                "metadata": {
                  "description": "Metadata of the schema.",
                  "type": "object",
                  "reference": "google.cloud.documentai_v1.types.DocumentSchema.Metadata",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "build_invocation_id": {
                        "description": "Identifies the particular build invocation, which can be useful for finding associated logs or other ad-hoc analysis. The value SHOULD be globally unique, per in-toto Provenance spec.",
                        "type": "string"
                      },
                      "build_started_on": {
                        "description": "The timestamp of when the build started.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "build_finished_on": {
                        "description": "The timestamp of when the build completed.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "completeness": {
                        "description": "Indicates that the builder claims certain fields in this message to be complete.",
                        "type": "object",
                        "reference": "grafeas.grafeas_v1.types.Completeness",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "arguments": {
                              "description": "If true, the builder claims that recipe.arguments is complete, meaning that all external inputs are properly captured in the recipe.",
                              "type": "boolean"
                            },
                            "environment": {
                              "description": "If true, the builder claims that recipe.environment is claimed to be complete.",
                              "type": "boolean"
                            },
                            "materials": {
                              "description": "If true, the builder claims that materials are complete, usually through some controls to prevent network access. Sometimes called \"hermetic\".",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "reproducible": {
                        "description": "If true, the builder claims that running the recipe on materials will produce bit-for-bit identical output.",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "document_schema"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetDocumentSchemaRequest",
      "description": "Request message for DocumentSchemaService.GetDocumentSchema.\n\nAttributes:\n    name (str):\n        Required. The name of the document schema to\n        retrieve.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the document schema to retrieve.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateDocumentSchemaRequest",
      "description": "Request message for\nDocumentSchemaService.UpdateDocumentSchema.\n\nAttributes:\n    name (str):\n        Required. The name of the document schema to update. Format:\n        projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.\n    document_schema (google.cloud.contentwarehouse_v1.types.DocumentSchema):\n        Required. The document schema to update with.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the document schema to update. Format: projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.",
            "type": "string"
          },
          "document_schema": {
            "description": "Required. The document schema to update with.",
            "reference": "google.cloud.contentwarehouse_v1.types.DocumentSchema",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "display_name": {
                  "description": "Display name to show to users.",
                  "type": "string"
                },
                "description": {
                  "description": "Description of the schema.",
                  "type": "string"
                },
                "entity_types": {
                  "description": "Entity types of the schema.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.documentai_v1.types.DocumentSchema.EntityType",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The unique identifier of the entity type. Required for [EntityTypes.UpdateEntityType][google.cloud.dialogflow.v2.EntityTypes.UpdateEntityType] and [EntityTypes.BatchUpdateEntityTypes][google.cloud.dialogflow.v2.EntityTypes.BatchUpdateEntityTypes] methods. Format: ``projects/<Project ID>/agent/entityTypes/<Entity Type ID>``.",
                          "type": "string"
                        },
                        "display_name": {
                          "description": "Required. The name of the entity type.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Required. Indicates the kind of entity type.",
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.EntityType.Kind"
                        },
                        "auto_expansion_mode": {
                          "description": "Optional. Indicates whether the entity type can be automatically expanded.",
                          "type": "object",
                          "reference": "google.cloud.dialogflow_v2.types.EntityType.AutoExpansionMode"
                        },
                        "entities": {
                          "description": "Optional. The collection of entity entries associated with the entity type.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.dialogflow_v2.types.EntityType.Entity",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*.  For ``KIND_MAP`` entity types:  -  A reference value to be used in place of synonyms.  For ``KIND_LIST`` entity types:  -  A string that can contain references to other entity types (with or without aliases).",
                                  "type": "string"
                                },
                                "synonyms": {
                                  "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and ``value`` is *scallions*, a synonym could be *green onions*.  For ``KIND_LIST`` entity types:  -  This collection must contain exactly one synonym equal to ``value``.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "value",
                                "synonyms"
                              ]
                            }
                          }
                        },
                        "enable_fuzzy_extraction": {
                          "description": "Optional. Enables fuzzy entity extraction during classification.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "display_name",
                        "kind"
                      ]
                    }
                  }
                },
                "metadata": {
                  "description": "Metadata of the schema.",
                  "type": "object",
                  "reference": "google.cloud.documentai_v1.types.DocumentSchema.Metadata",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "build_invocation_id": {
                        "description": "Identifies the particular build invocation, which can be useful for finding associated logs or other ad-hoc analysis. The value SHOULD be globally unique, per in-toto Provenance spec.",
                        "type": "string"
                      },
                      "build_started_on": {
                        "description": "The timestamp of when the build started.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "build_finished_on": {
                        "description": "The timestamp of when the build completed.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "completeness": {
                        "description": "Indicates that the builder claims certain fields in this message to be complete.",
                        "type": "object",
                        "reference": "grafeas.grafeas_v1.types.Completeness",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "arguments": {
                              "description": "If true, the builder claims that recipe.arguments is complete, meaning that all external inputs are properly captured in the recipe.",
                              "type": "boolean"
                            },
                            "environment": {
                              "description": "If true, the builder claims that recipe.environment is claimed to be complete.",
                              "type": "boolean"
                            },
                            "materials": {
                              "description": "If true, the builder claims that materials are complete, usually through some controls to prevent network access. Sometimes called \"hermetic\".",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "reproducible": {
                        "description": "If true, the builder claims that running the recipe on materials will produce bit-for-bit identical output.",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "document_schema"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteDocumentSchemaRequest",
      "description": "Request message for\nDocumentSchemaService.DeleteDocumentSchema.\n\nAttributes:\n    name (str):\n        Required. The name of the document schema to\n        delete.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the document schema to delete.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListDocumentSchemasRequest",
      "description": "Request message for\nDocumentSchemaService.ListDocumentSchemas.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of document\n        schemas. Format:\n        projects/{project_number}/locations/{location}.\n    page_size (int):\n        The maximum number of document schemas to\n        return. The service may return fewer than this\n        value. If unspecified, at most 50 document\n        schemas will be returned. The maximum value is\n        1000; values above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous\n        ``ListDocumentSchemas`` call. Provide this to retrieve the\n        subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListDocumentSchemas`` must match the call that provided\n        the page token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of document schemas. Format: projects/{project_number}/locations/{location}.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of document schemas to return. The service may return fewer than this value. If unspecified, at most 50 document schemas will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListDocumentSchemas`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListDocumentSchemas`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-contentwarehouse/google/cloud/contentwarehouse_v1/types/document_link_service.py": [
    {
      "type": "function",
      "name": "ListLinkedTargetsRequest",
      "description": "Request message for DocumentLinkService.ListLinkedTargets.\n\nAttributes:\n    parent (str):\n        Required. The name of the document, for which all target\n        links are returned. Format:\n        projects/{project_number}/locations/{location}/documents/{target_document_id}.\n    request_metadata (google.cloud.contentwarehouse_v1.types.RequestMetadata):\n        The meta information collected about the\n        document creator, used to enforce access control\n        for the service.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the document, for which all target links are returned. Format: projects/{project_number}/locations/{location}/documents/{target_document_id}.",
            "type": "string"
          },
          "request_metadata": {
            "description": "The meta information collected about the document creator, used to enforce access control for the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListLinkedSourcesRequest",
      "description": "Response message for DocumentLinkService.ListLinkedSources.\n\nAttributes:\n    parent (str):\n        Required. The name of the document, for which all source\n        links are returned. Format:\n        projects/{project_number}/locations/{location}/documents/{source_document_id}.\n    page_size (int):\n        The maximum number of document-links to\n        return. The service may return fewer than this\n        value.\n\n        If unspecified, at most 50 document-links will\n        be returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListLinkedSources``\n        call. Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListLinkedSources`` must match the call that provided the\n        page token.\n    request_metadata (google.cloud.contentwarehouse_v1.types.RequestMetadata):\n        The meta information collected about the\n        document creator,",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the document, for which all source links are returned. Format: projects/{project_number}/locations/{location}/documents/{source_document_id}.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of document-links to return. The service may return fewer than this value.  If unspecified, at most 50 document-links will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListLinkedSources`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListLinkedSources`` must match the call that provided the page token.",
            "type": "string"
          },
          "request_metadata": {
            "description": "The meta information collected about the document creator, used to enforce access control for the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateDocumentLinkRequest",
      "description": "Request message for DocumentLinkService.CreateDocumentLink.\n\nAttributes:\n    parent (str):\n        Required. Parent of the document-link to be created. parent\n        of document-link should be a document. Format:\n        projects/{project_number}/locations/{location}/documents/{source_document_id}.\n    document_link (google.cloud.contentwarehouse_v1.types.DocumentLink):\n        Required. Document links associated with the source\n        documents (source_document_id).\n    request_metadata (google.cloud.contentwarehouse_v1.types.RequestMetadata):\n        The meta information collected about the\n        document creator, used to enforce access control\n        for the service.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Parent of the document-link to be created. parent of document-link should be a document. Format: projects/{project_number}/locations/{location}/documents/{source_document_id}.",
            "type": "string"
          },
          "document_link": {
            "description": "Required. Document links associated with the source documents (source_document_id).",
            "reference": "google.cloud.contentwarehouse_v1.types.DocumentLink",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of this document-link. It is required that the parent derived form the name to be consistent with the source document reference. Otherwise an exception will be thrown. Format: projects/{project_number}/locations/{location}/documents/{source_document_id}/documentLinks/{document_link_id}.",
                  "type": "string"
                },
                "source_document_reference": {
                  "description": "Document references of the source document.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.DocumentReference",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "document_name": {
                        "description": "Required. Name of the referenced document.",
                        "type": "string"
                      },
                      "display_name": {
                        "description": "display_name of the referenced document; this name does not need to be consistent to the display_name in the Document proto, depending on the ACL constraint.",
                        "type": "string"
                      },
                      "snippet": {
                        "description": "Stores the subset of the referenced document's content. This is useful to allow user peek the information of the referenced document.",
                        "type": "string"
                      },
                      "document_is_folder": {
                        "description": "The document type of the document being referenced.",
                        "type": "boolean"
                      },
                      "update_time": {
                        "description": "Output only. The time when the document is last updated.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "create_time": {
                        "description": "Output only. The time when the document is created.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "delete_time": {
                        "description": "Output only. The time when the document is deleted.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "document_is_retention_folder": {
                        "description": "Document is a folder with retention policy.",
                        "type": "boolean"
                      },
                      "document_is_legal_hold_folder": {
                        "description": "Document is a folder with legal hold.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "document_name"
                    ]
                  }
                },
                "target_document_reference": {
                  "description": "Document references of the target document.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.DocumentReference",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "document_name": {
                        "description": "Required. Name of the referenced document.",
                        "type": "string"
                      },
                      "display_name": {
                        "description": "display_name of the referenced document; this name does not need to be consistent to the display_name in the Document proto, depending on the ACL constraint.",
                        "type": "string"
                      },
                      "snippet": {
                        "description": "Stores the subset of the referenced document's content. This is useful to allow user peek the information of the referenced document.",
                        "type": "string"
                      },
                      "document_is_folder": {
                        "description": "The document type of the document being referenced.",
                        "type": "boolean"
                      },
                      "update_time": {
                        "description": "Output only. The time when the document is last updated.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "create_time": {
                        "description": "Output only. The time when the document is created.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "delete_time": {
                        "description": "Output only. The time when the document is deleted.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      },
                      "document_is_retention_folder": {
                        "description": "Document is a folder with retention policy.",
                        "type": "boolean"
                      },
                      "document_is_legal_hold_folder": {
                        "description": "Document is a folder with legal hold.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "document_name"
                    ]
                  }
                },
                "description": {
                  "description": "Description of this document-link.",
                  "type": "string"
                },
                "update_time": {
                  "description": "Output only. The time when the documentLink is last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "create_time": {
                  "description": "Output only. The time when the documentLink is created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "state": {
                  "description": "The state of the documentlink. If target node has been deleted, the link is marked as invalid. Removing a source node will result in removal of all associated links.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.DocumentLink.State"
                }
              }
            }
          },
          "request_metadata": {
            "description": "The meta information collected about the document creator, used to enforce access control for the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "document_link"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteDocumentLinkRequest",
      "description": "Request message for DocumentLinkService.DeleteDocumentLink.\n\nAttributes:\n    name (str):\n        Required. The name of the document-link to be deleted.\n        Format:\n        projects/{project_number}/locations/{location}/documents/{source_document_id}/documentLinks/{document_link_id}.\n    request_metadata (google.cloud.contentwarehouse_v1.types.RequestMetadata):\n        The meta information collected about the\n        document creator, used to enforce access control\n        for the service.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the document-link to be deleted. Format: projects/{project_number}/locations/{location}/documents/{source_document_id}/documentLinks/{document_link_id}.",
            "type": "string"
          },
          "request_metadata": {
            "description": "The meta information collected about the document creator, used to enforce access control for the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-contentwarehouse/google/cloud/contentwarehouse_v1/types/ruleset_service_request.py": [
    {
      "type": "function",
      "name": "CreateRuleSetRequest",
      "description": "Request message for RuleSetService.CreateRuleSet.\n\nAttributes:\n    parent (str):\n        Required. The parent name. Format:\n        projects/{project_number}/locations/{location}.\n    rule_set (google.cloud.contentwarehouse_v1.types.RuleSet):\n        Required. The rule set to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent name. Format: projects/{project_number}/locations/{location}.",
            "type": "string"
          },
          "rule_set": {
            "description": "Required. The rule set to create.",
            "reference": "google.cloud.contentwarehouse_v1.types.RuleSet",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The resource name of the rule set. Managed internally. Format: projects/{project_number}/locations/{location}/ruleSet/{rule_set_id}.  The name is ignored when creating a rule set.",
                  "type": "string"
                },
                "description": {
                  "description": "Short description of the rule-set.",
                  "type": "string"
                },
                "source": {
                  "description": "Source of the rules i.e., customer name.",
                  "type": "string"
                },
                "rules": {
                  "description": "List of rules given by the customer.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.contentwarehouse_v1.types.Rule",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "List of values to be used for this policy rule. This field can be set only in policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "object",
                          "reference": "google.cloud.asset_v1.types.AnalyzerOrgPolicy.Rule.StringValues",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "allowed_values": {
                                "description": "List of values allowed at this resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "denied_values": {
                                "description": "List of values denied at this resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "allow_all": {
                          "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "deny_all": {
                          "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "enforce": {
                          "description": "If ``true``, then the ``Policy`` is enforced. If ``false``, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "condition": {
                          "description": "The evaluating condition for this rule.",
                          "type": "object",
                          "reference": "google.type.expr_pb2.Expr",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.  This field is a member of `oneof`_ ``_description``.",
                                "type": "string"
                              },
                              "expression": {
                                "description": "Textual representation of an expression in Common Expression Language syntax.  This field is a member of `oneof`_ ``_expression``.",
                                "type": "string"
                              },
                              "location": {
                                "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.  This field is a member of `oneof`_ ``_location``.",
                                "type": "string"
                              },
                              "title": {
                                "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.  This field is a member of `oneof`_ ``_title``.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "condition_evaluation": {
                          "description": "The condition evaluation result for this rule. Only populated if it meets all the following criteria:  -  There is a [condition][google.cloud.asset.v1.AnalyzerOrgPolicy.Rule.condition] defined for this rule. -  This rule is within [AnalyzeOrgPolicyGovernedContainersResponse.GovernedContainer.consolidated_policy][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedContainersResponse.GovernedContainer.consolidated_policy], or [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.consolidated_policy][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.consolidated_policy] when the [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset] has [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.governed_resource][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.governed_resource].",
                          "type": "object",
                          "reference": "google.cloud.asset_v1.types.ConditionEvaluation",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "evaluation_value": {
                                "description": "The evaluation result.",
                                "type": "object",
                                "reference": "google.cloud.asset_v1.types.ConditionEvaluation.EvaluationValue"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "rule_set"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetRuleSetRequest",
      "description": "Request message for RuleSetService.GetRuleSet.\n\nAttributes:\n    name (str):\n        Required. The name of the rule set to retrieve. Format:\n        projects/{project_number}/locations/{location}/ruleSets/{rule_set_id}.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the rule set to retrieve. Format: projects/{project_number}/locations/{location}/ruleSets/{rule_set_id}.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateRuleSetRequest",
      "description": "Request message for RuleSetService.UpdateRuleSet.\n\nAttributes:\n    name (str):\n        Required. The name of the rule set to update. Format:\n        projects/{project_number}/locations/{location}/ruleSets/{rule_set_id}.\n    rule_set (google.cloud.contentwarehouse_v1.types.RuleSet):\n        Required. The rule set to update.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the rule set to update. Format: projects/{project_number}/locations/{location}/ruleSets/{rule_set_id}.",
            "type": "string"
          },
          "rule_set": {
            "description": "Required. The rule set to update.",
            "reference": "google.cloud.contentwarehouse_v1.types.RuleSet",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The resource name of the rule set. Managed internally. Format: projects/{project_number}/locations/{location}/ruleSet/{rule_set_id}.  The name is ignored when creating a rule set.",
                  "type": "string"
                },
                "description": {
                  "description": "Short description of the rule-set.",
                  "type": "string"
                },
                "source": {
                  "description": "Source of the rules i.e., customer name.",
                  "type": "string"
                },
                "rules": {
                  "description": "List of rules given by the customer.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.contentwarehouse_v1.types.Rule",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "List of values to be used for this policy rule. This field can be set only in policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "object",
                          "reference": "google.cloud.asset_v1.types.AnalyzerOrgPolicy.Rule.StringValues",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "allowed_values": {
                                "description": "List of values allowed at this resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "denied_values": {
                                "description": "List of values denied at this resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "allow_all": {
                          "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "deny_all": {
                          "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "enforce": {
                          "description": "If ``true``, then the ``Policy`` is enforced. If ``false``, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.  This field is a member of `oneof`_ ``kind``.",
                          "type": "boolean"
                        },
                        "condition": {
                          "description": "The evaluating condition for this rule.",
                          "type": "object",
                          "reference": "google.type.expr_pb2.Expr",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.  This field is a member of `oneof`_ ``_description``.",
                                "type": "string"
                              },
                              "expression": {
                                "description": "Textual representation of an expression in Common Expression Language syntax.  This field is a member of `oneof`_ ``_expression``.",
                                "type": "string"
                              },
                              "location": {
                                "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.  This field is a member of `oneof`_ ``_location``.",
                                "type": "string"
                              },
                              "title": {
                                "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.  This field is a member of `oneof`_ ``_title``.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "condition_evaluation": {
                          "description": "The condition evaluation result for this rule. Only populated if it meets all the following criteria:  -  There is a [condition][google.cloud.asset.v1.AnalyzerOrgPolicy.Rule.condition] defined for this rule. -  This rule is within [AnalyzeOrgPolicyGovernedContainersResponse.GovernedContainer.consolidated_policy][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedContainersResponse.GovernedContainer.consolidated_policy], or [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.consolidated_policy][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.consolidated_policy] when the [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset] has [AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.governed_resource][google.cloud.asset.v1.AnalyzeOrgPolicyGovernedAssetsResponse.GovernedAsset.governed_resource].",
                          "type": "object",
                          "reference": "google.cloud.asset_v1.types.ConditionEvaluation",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "evaluation_value": {
                                "description": "The evaluation result.",
                                "type": "object",
                                "reference": "google.cloud.asset_v1.types.ConditionEvaluation.EvaluationValue"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "rule_set"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteRuleSetRequest",
      "description": "Request message for RuleSetService.DeleteRuleSet.\n\nAttributes:\n    name (str):\n        Required. The name of the rule set to delete. Format:\n        projects/{project_number}/locations/{location}/ruleSets/{rule_set_id}.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the rule set to delete. Format: projects/{project_number}/locations/{location}/ruleSets/{rule_set_id}.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListRuleSetsRequest",
      "description": "Request message for RuleSetService.ListRuleSets.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of\n        document. Format:\n        projects/{project_number}/locations/{location}.\n    page_size (int):\n        The maximum number of rule sets to return.\n        The service may return fewer than this value. If\n        unspecified, at most 50 rule sets will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListRuleSets``\n        call. Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListRuleSets`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of document. Format: projects/{project_number}/locations/{location}.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of rule sets to return. The service may return fewer than this value. If unspecified, at most 50 rule sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListRuleSets`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListRuleSets`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-contentwarehouse/google/cloud/contentwarehouse_v1/types/document_service_request.py": [
    {
      "type": "function",
      "name": "CreateDocumentRequest",
      "description": "Request message for DocumentService.CreateDocument.\n\nAttributes:\n    parent (str):\n        Required. The parent name. Format:\n        projects/{project_number}/locations/{location}.\n    document (google.cloud.contentwarehouse_v1.types.Document):\n        Required. The document to create.\n    request_metadata (google.cloud.contentwarehouse_v1.types.RequestMetadata):\n        The meta information collected about the end\n        user, used to enforce access control for the\n        service.\n    policy (google.iam.v1.policy_pb2.Policy):\n        Default document policy during creation.\n        This refers to an Identity and Access (IAM)\n        policy, which specifies access controls for the\n        Document.\n        Conditions defined in the policy will be\n        ignored.\n    cloud_ai_document_option (google.cloud.contentwarehouse_v1.types.CloudAIDocumentOption):\n        Request Option for processing Cloud AI\n        Document in Document Warehouse. This field\n        offers limited support for mapping entities from",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent name. Format: projects/{project_number}/locations/{location}.",
            "type": "string"
          },
          "document": {
            "description": "Required. The document to create.",
            "reference": "google.cloud.contentwarehouse_v1.types.Document",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. The document resource name. The name must be empty when creating a document. Format: ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>``.",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.",
                  "type": "string"
                },
                "mime_type": {
                  "description": "Required. The MIME type of this document.",
                  "type": "string"
                },
                "knowledge_types": {
                  "description": "Required. The knowledge type of document content.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.dialogflow_v2.types.Document.KnowledgeType"
                  }
                },
                "content_uri": {
                  "description": "The URI where the file content is located.  For documents stored in Google Cloud Storage, these URIs must have the form ``gs://<bucket-name>/<object-name>``.  NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the ``gs://`` format URI described above.  This field is a member of `oneof`_ ``source``.",
                  "type": "string"
                },
                "raw_content": {
                  "description": "The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.  This field is a member of `oneof`_ ``source``.",
                  "type": "object",
                  "reference": "bytes"
                },
                "enable_auto_reload": {
                  "description": "Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document.  Currently you can only enable automatic reload for documents sourced from a public url, see ``source`` field for the source types.  Reload status can be tracked in ``latest_reload_status``. If a reload fails, we will keep the document unchanged.  If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISSION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling ``ReloadDocument`` and clear the errors.",
                  "type": "boolean"
                },
                "latest_reload_status": {
                  "description": "Output only. The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Document.ReloadStatus",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "description": "The time of a reload attempt. This reload may have been triggered automatically or manually and may not have succeeded.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "status": {
                        "description": "The status of a reload attempt or the initial load.",
                        "type": "object",
                        "reference": "google.rpc.status_pb2.Status",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "state": {
                              "description": "Output only. State of the metadata job.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.MetadataJob.Status.State",
                              "output_only": true
                            },
                            "message": {
                              "description": "Output only. Message relating to the progression of a metadata job.",
                              "type": "string",
                              "output_only": true
                            },
                            "completion_percent": {
                              "description": "Output only. Progress tracking.",
                              "type": "integer",
                              "output_only": true
                            },
                            "update_time": {
                              "description": "Output only. The time when the status was updated.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp",
                              "output_only": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "metadata": {
                  "description": "Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a ``key`` or a ``value`` of the metadata is 1024 bytes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "state": {
                  "description": "Output only. The current state of the document.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Document.State",
                  "output_only": true
                }
              },
              "required": [
                "display_name",
                "mime_type",
                "knowledge_types"
              ]
            }
          },
          "request_metadata": {
            "description": "The meta information collected about the end user, used to enforce access control for the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          },
          "policy": {
            "description": "Default document policy during creation. This refers to an Identity and Access (IAM) policy, which specifies access controls for the Document. Conditions defined in the policy will be ignored.",
            "reference": "google.iam.v1.policy_pb2.Policy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "type_": {
                  "description": "Policy type.",
                  "type": "object",
                  "reference": "google.shopping.merchant_accounts_v1beta.types.OnlineReturnPolicy.Policy.Type"
                },
                "days": {
                  "description": "The number of days items can be returned after delivery, where one day is defined as 24 hours after the delivery timestamp. Required for ``NUMBER_OF_DAYS_AFTER_DELIVERY`` returns.",
                  "type": "integer"
                }
              }
            }
          },
          "cloud_ai_document_option": {
            "description": "Request Option for processing Cloud AI Document in Document Warehouse. This field offers limited support for mapping entities from Cloud AI Document to Warehouse Document. Please consult with product team before using this field and other available options.",
            "reference": "google.cloud.contentwarehouse_v1.types.CloudAIDocumentOption",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "enable_entities_conversions": {
                  "description": "Whether to convert all the entities to properties.",
                  "type": "boolean"
                },
                "customized_entities_properties_conversions": {
                  "description": "If set, only selected entities will be converted to properties.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "create_mask": {
            "description": "Field mask for creating Document fields. If mask path is empty, it means all fields are masked. For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "parent",
          "document"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetDocumentRequest",
      "description": "Request message for DocumentService.GetDocument.\n\nAttributes:\n    name (str):\n        Required. The name of the document to retrieve. Format:\n        projects/{project_number}/locations/{location}/documents/{document_id}\n        or\n        projects/{project_number}/locations/{location}/documents/referenceId/{reference_id}.\n    request_metadata (google.cloud.contentwarehouse_v1.types.RequestMetadata):\n        The meta information collected about the end\n        user, used to enforce access control for the\n        service.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the document to retrieve. Format: projects/{project_number}/locations/{location}/documents/{document_id} or projects/{project_number}/locations/{location}/documents/referenceId/{reference_id}.",
            "type": "string"
          },
          "request_metadata": {
            "description": "The meta information collected about the end user, used to enforce access control for the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateDocumentRequest",
      "description": "Request message for DocumentService.UpdateDocument.\n\nAttributes:\n    name (str):\n        Required. The name of the document to update. Format:\n        projects/{project_number}/locations/{location}/documents/{document_id}\n        or\n        projects/{project_number}/locations/{location}/documents/referenceId/{reference_id}.\n    document (google.cloud.contentwarehouse_v1.types.Document):\n        Required. The document to update.\n    request_metadata (google.cloud.contentwarehouse_v1.types.RequestMetadata):\n        The meta information collected about the end\n        user, used to enforce access control for the\n        service.\n    cloud_ai_document_option (google.cloud.contentwarehouse_v1.types.CloudAIDocumentOption):\n        Request Option for processing Cloud AI\n        Document in Document Warehouse. This field\n        offers limited support for mapping entities from\n        Cloud AI Document to Warehouse Document. Please\n        consult with product team before using this\n        field and other available ",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the document to update. Format: projects/{project_number}/locations/{location}/documents/{document_id} or projects/{project_number}/locations/{location}/documents/referenceId/{reference_id}.",
            "type": "string"
          },
          "document": {
            "description": "Required. The document to update.",
            "reference": "google.cloud.contentwarehouse_v1.types.Document",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. The document resource name. The name must be empty when creating a document. Format: ``projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>``.",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.",
                  "type": "string"
                },
                "mime_type": {
                  "description": "Required. The MIME type of this document.",
                  "type": "string"
                },
                "knowledge_types": {
                  "description": "Required. The knowledge type of document content.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.dialogflow_v2.types.Document.KnowledgeType"
                  }
                },
                "content_uri": {
                  "description": "The URI where the file content is located.  For documents stored in Google Cloud Storage, these URIs must have the form ``gs://<bucket-name>/<object-name>``.  NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the ``gs://`` format URI described above.  This field is a member of `oneof`_ ``source``.",
                  "type": "string"
                },
                "raw_content": {
                  "description": "The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.  This field is a member of `oneof`_ ``source``.",
                  "type": "object",
                  "reference": "bytes"
                },
                "enable_auto_reload": {
                  "description": "Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document.  Currently you can only enable automatic reload for documents sourced from a public url, see ``source`` field for the source types.  Reload status can be tracked in ``latest_reload_status``. If a reload fails, we will keep the document unchanged.  If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISSION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling ``ReloadDocument`` and clear the errors.",
                  "type": "boolean"
                },
                "latest_reload_status": {
                  "description": "Output only. The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Document.ReloadStatus",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "description": "The time of a reload attempt. This reload may have been triggered automatically or manually and may not have succeeded.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "status": {
                        "description": "The status of a reload attempt or the initial load.",
                        "type": "object",
                        "reference": "google.rpc.status_pb2.Status",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "state": {
                              "description": "Output only. State of the metadata job.",
                              "type": "object",
                              "reference": "google.cloud.dataplex_v1.types.MetadataJob.Status.State",
                              "output_only": true
                            },
                            "message": {
                              "description": "Output only. Message relating to the progression of a metadata job.",
                              "type": "string",
                              "output_only": true
                            },
                            "completion_percent": {
                              "description": "Output only. Progress tracking.",
                              "type": "integer",
                              "output_only": true
                            },
                            "update_time": {
                              "description": "Output only. The time when the status was updated.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp",
                              "output_only": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "metadata": {
                  "description": "Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a ``key`` or a ``value`` of the metadata is 1024 bytes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "state": {
                  "description": "Output only. The current state of the document.",
                  "type": "object",
                  "reference": "google.cloud.dialogflow_v2.types.Document.State",
                  "output_only": true
                }
              },
              "required": [
                "display_name",
                "mime_type",
                "knowledge_types"
              ]
            }
          },
          "request_metadata": {
            "description": "The meta information collected about the end user, used to enforce access control for the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          },
          "cloud_ai_document_option": {
            "description": "Request Option for processing Cloud AI Document in Document Warehouse. This field offers limited support for mapping entities from Cloud AI Document to Warehouse Document. Please consult with product team before using this field and other available options.",
            "reference": "google.cloud.contentwarehouse_v1.types.CloudAIDocumentOption",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "enable_entities_conversions": {
                  "description": "Whether to convert all the entities to properties.",
                  "type": "boolean"
                },
                "customized_entities_properties_conversions": {
                  "description": "If set, only selected entities will be converted to properties.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "update_options": {
            "description": "Options for the update operation.",
            "reference": "google.cloud.contentwarehouse_v1.types.UpdateOptions",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "update_type": {
                  "description": "Type for update.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UpdateType"
                },
                "update_mask": {
                  "description": "Field mask for merging Document fields. For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                  "type": "object",
                  "reference": "google.protobuf.field_mask_pb2.FieldMask"
                },
                "merge_fields_options": {
                  "description": "Options for merging.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.MergeFieldsOptions",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "replace_message_fields": {
                        "description": "When merging message fields, the default behavior is to merge the content of two message fields together. If you instead want to use the field from the source message to replace the corresponding field in the destination message, set this flag to true. When this flag is set, specified submessage fields that are missing in source will be cleared in destination.  This field is a member of `oneof`_ ``_replace_message_fields``.",
                        "type": "boolean"
                      },
                      "replace_repeated_fields": {
                        "description": "When merging repeated fields, the default behavior is to append entries from the source repeated field to the destination repeated field. If you instead want to keep only the entries from the source repeated field, set this flag to true.  If you want to replace a repeated field within a message field on the destination message, you must set both replace_repeated_fields and replace_message_fields to true, otherwise the repeated fields will be appended.  This field is a member of `oneof`_ ``_replace_repeated_fields``.",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "document"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteDocumentRequest",
      "description": "Request message for DocumentService.DeleteDocument.\n\nAttributes:\n    name (str):\n        Required. The name of the document to delete. Format:\n        projects/{project_number}/locations/{location}/documents/{document_id}\n        or\n        projects/{project_number}/locations/{location}/documents/referenceId/{reference_id}.\n    request_metadata (google.cloud.contentwarehouse_v1.types.RequestMetadata):\n        The meta information collected about the end\n        user, used to enforce access control for the\n        service.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the document to delete. Format: projects/{project_number}/locations/{location}/documents/{document_id} or projects/{project_number}/locations/{location}/documents/referenceId/{reference_id}.",
            "type": "string"
          },
          "request_metadata": {
            "description": "The meta information collected about the end user, used to enforce access control for the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "SearchDocumentsRequest",
      "description": "Request message for DocumentService.SearchDocuments.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of\n        documents. Format:\n        projects/{project_number}/locations/{location}.\n    request_metadata (google.cloud.contentwarehouse_v1.types.RequestMetadata):\n        The meta information collected about the end\n        user, used to enforce access control and improve\n        the search quality of the service.\n    document_query (google.cloud.contentwarehouse_v1.types.DocumentQuery):\n        Query used to search against documents\n        (keyword, filters, etc.).\n    offset (int):\n        An integer that specifies the current offset (that is,\n        starting result location, amongst the documents deemed by\n        the API as relevant) in search results. This field is only\n        considered if\n        [page_token][google.cloud.contentwarehouse.v1.SearchDocumentsRequest.page_token]\n        is unset.\n\n        The maximum allowed value is 5000. Otherwise an error is\n",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of documents. Format: projects/{project_number}/locations/{location}.",
            "type": "string"
          },
          "request_metadata": {
            "description": "The meta information collected about the end user, used to enforce access control and improve the search quality of the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          },
          "document_query": {
            "description": "Query used to search against documents (keyword, filters, etc.).",
            "reference": "google.cloud.contentwarehouse_v1.types.DocumentQuery",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "query": {
                  "description": "The query string that matches against the full text of the document and the searchable properties.  The query partially supports `Google AIP style syntax <https://google.aip.dev/160>`__. Specifically, the query supports literals, logical operators, negation operators, comparison operators, and functions.  Literals: A bare literal value (examples: \"42\", \"Hugo\") is a value to be matched against. It searches over the full text of the document and the searchable properties.  Logical operators: \"AND\", \"and\", \"OR\", and \"or\" are binary logical operators (example: \"engineer OR developer\").  Negation operators: \"NOT\" and \"!\" are negation operators (example: \"NOT software\").  Comparison operators: support the binary comparison operators =, !=, <, >, <= and >= for string, numeric, enum, boolean. Also support like operator ``~~`` for string. It provides semantic search functionality by parsing, stemming and doing synonyms expansion against the input query.  To specify a property in the query, the left hand side expression in the comparison must be the property ID including the parent. The right hand side must be literals. For example: \"\"projects/123/locations/us\".property_a < 1\" matches results whose \"property_a\" is less than 1 in project 123 and us location. The literals and comparison expression can be connected in a single query (example: \"software engineer \"projects/123/locations/us\".salary > 100\").  Functions: supported functions are ``LOWER([property_name])`` to perform a case insensitive match and ``EMPTY([property_name])`` to filter on the existence of a key.  Support nested expressions connected using parenthesis and logical operators. The default logical operators is ``AND`` if there is no operators between expressions.  The query can be used with other filters e.g. ``time_filters`` and ``folder_name_filter``. They are connected with ``AND`` operator under the hood.  The maximum number of allowed characters is 255.",
                  "type": "string"
                },
                "is_nl_query": {
                  "description": "Experimental, do not use. If the query is a natural language question. False by default. If true, then the question-answering feature will be used instead of search, and ``result_count`` in [SearchDocumentsRequest][google.cloud.contentwarehouse.v1.SearchDocumentsRequest] must be set. In addition, all other input fields related to search (pagination, histograms, etc.) will be ignored.",
                  "type": "boolean"
                },
                "custom_property_filter": {
                  "description": "This filter specifies a structured syntax to match against the [PropertyDefinition].[is_filterable][] marked as ``true``. The syntax for this expression is a subset of SQL syntax.  Supported operators are: ``=``, ``!=``, ``<``, ``<=``, ``>``, and ``>=`` where the left of the operator is a property name and the right of the operator is a number or a quoted string. You must escape backslash (\\) and quote (\") characters. Supported functions are ``LOWER([property_name])`` to perform a case insensitive match and ``EMPTY([property_name])`` to filter on the existence of a key.  Boolean expressions (AND/OR/NOT) are supported up to 3 levels of nesting (for example, \"((A AND B AND C) OR NOT D) AND E\"), a maximum of 100 comparisons or functions are allowed in the expression. The expression must be < 6000 bytes in length.  Sample Query: ``(LOWER(driving_license)=\"class \\\"a\\\"\" OR EMPTY(driving_license)) AND driving_years > 10``",
                  "type": "string"
                },
                "time_filters": {
                  "description": "Documents created/updated within a range specified by this filter are searched against.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.contentwarehouse_v1.types.TimeFilter",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "time_range": {
                          "description": "",
                          "type": "object",
                          "reference": "google.type.interval_pb2.Interval",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "min_": {
                                "description": "A minimum acceptable load. Must be \u2265 0. If they're both specified, [min][google.cloud.optimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.cloud.optimization.v1.Vehicle.LoadLimit.Interval.max].",
                                "type": "integer"
                              },
                              "max_": {
                                "description": "A maximum acceptable load. Must be \u2265 0. If unspecified, the maximum load is unrestricted by this message. If they're both specified, [min][google.cloud.optimization.v1.Vehicle.LoadLimit.Interval.min] must be \u2264 [max][google.cloud.optimization.v1.Vehicle.LoadLimit.Interval.max].  This field is a member of `oneof`_ ``_max``.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "time_field": {
                          "description": "Specifies which time field to filter documents on.  Defaults to [TimeField.UPLOAD_TIME][].",
                          "type": "object",
                          "reference": "google.cloud.contentwarehouse_v1.types.TimeFilter.TimeField"
                        }
                      }
                    }
                  }
                },
                "document_schema_names": {
                  "description": "This filter specifies the exact document schema [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name] of the documents to search against.  If a value isn't specified, documents within the search results are associated with any schema. If multiple values are specified, documents within the search results may be associated with any of the specified schemas.  At most 20 document schema names are allowed.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "property_filter": {
                  "description": "This filter specifies a structured syntax to match against the [PropertyDefinition.is_filterable][google.cloud.contentwarehouse.v1.PropertyDefinition.is_filterable] marked as ``true``. The relationship between the PropertyFilters is OR.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.contentwarehouse_v1.types.PropertyFilter",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "document_schema_name": {
                          "description": "The Document schema name [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]. Format: projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.",
                          "type": "string"
                        },
                        "condition": {
                          "description": "The filter condition. The syntax for this expression is a subset of SQL syntax.  Supported operators are: ``=``, ``!=``, ``<``, ``<=``, ``>``, ``>=``, and ``~~`` where the left of the operator is a property name and the right of the operator is a number or a quoted string. You must escape backslash (\\) and quote (\") characters.  ``~~`` is the LIKE operator. The right of the operator must be a string. The only supported property data type for LIKE is text_values. It provides semantic search functionality by parsing, stemming and doing synonyms expansion against the input query. It matches if the property contains semantic similar content to the query. It is not regex matching or wildcard matching. For example, \"property.company ~~ \"google\"\" will match records whose property ``property.compnay`` have values like \"Google Inc.\", \"Google LLC\" or \"Google Company\".  Supported functions are ``LOWER([property_name])`` to perform a case insensitive match and ``EMPTY([property_name])`` to filter on the existence of a key.  Boolean expressions (AND/OR/NOT) are supported up to 3 levels of nesting (for example, \"((A AND B AND C) OR NOT D) AND E\"), a maximum of 100 comparisons or functions are allowed in the expression. The expression must be < 6000 bytes in length.  Only properties that are marked filterable are allowed ([PropertyDefinition.is_filterable][google.cloud.contentwarehouse.v1.PropertyDefinition.is_filterable]). Property names do not need to be prefixed by the document schema id (as is the case with histograms), however property names will need to be prefixed by its parent hierarchy, if any. For example: top_property_name.sub_property_name.  Sample Query: ``(LOWER(driving_license)=\"class \\\"a\\\"\" OR EMPTY(driving_license)) AND driving_years > 10``  CMEK compliant deployment only supports:  -  Operators: ``=``, ``<``, ``<=``, ``>``, and ``>=``. -  Boolean expressions: AND and OR.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "file_type_filter": {
                  "description": "This filter specifies the types of files to return: ALL, FOLDER, or FILE. If FOLDER or FILE is specified, then only either folders or files will be returned, respectively. If ALL is specified, both folders and files will be returned.  If no value is specified, ALL files will be returned.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.FileTypeFilter",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "file_type": {
                        "description": "The type of files to return.",
                        "type": "object",
                        "reference": "google.cloud.contentwarehouse_v1.types.FileTypeFilter.FileType"
                      }
                    }
                  }
                },
                "folder_name_filter": {
                  "description": "Search all the documents under this specified folder. Format: projects/{project_number}/locations/{location}/documents/{document_id}.",
                  "type": "string"
                },
                "document_name_filter": {
                  "description": "Search the documents in the list. Format: projects/{project_number}/locations/{location}/documents/{document_id}.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "query_context": {
                  "description": "For custom synonyms. Customers provide the synonyms based on context. One customer can provide multiple set of synonyms based on different context. The search query will be expanded based on the custom synonyms of the query context set. By default, no custom synonyms wll be applied if no query context is provided. It is not supported for CMEK compliant deployment.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "document_creator_filter": {
                  "description": "The exact creator(s) of the documents to search against. If a value isn't specified, documents within the search results are associated with any creator. If multiple values are specified, documents within the search results may be associated with any of the specified creators.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_weights_metadata": {
                  "description": "To support the custom weighting across document schemas, customers need to provide the properties to be used to boost the ranking in the search request. For a search query with CustomWeightsMetadata specified, only the RetrievalImportance for the properties in the CustomWeightsMetadata will be honored.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.CustomWeightsMetadata",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "weighted_schema_properties": {
                        "description": "List of schema and property name. Allows a maximum of 10 schemas to be specified for relevance boosting.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.contentwarehouse_v1.types.WeightedSchemaProperty",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "document_schema_name": {
                                "description": "The document schema name.",
                                "type": "string"
                              },
                              "property_names": {
                                "description": "The property definition names in the schema.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "offset": {
            "description": "An integer that specifies the current offset (that is, starting result location, amongst the documents deemed by the API as relevant) in search results. This field is only considered if [page_token][google.cloud.contentwarehouse.v1.SearchDocumentsRequest.page_token] is unset.  The maximum allowed value is 5000. Otherwise an error is thrown.  For example, 0 means to return results starting from the first matching document, and 10 means to return from the 11th document. This can be used for pagination, (for example, pageSize = 10 and offset = 10 means to return from the second page).",
            "type": "integer"
          },
          "page_size": {
            "description": "A limit on the number of documents returned in the search results. Increasing this value above the default value of 10 can increase search response time. The value can be between 1 and 100.",
            "type": "integer"
          },
          "page_token": {
            "description": "The token specifying the current offset within search results. See [SearchDocumentsResponse.next_page_token][google.cloud.contentwarehouse.v1.SearchDocumentsResponse.next_page_token] for an explanation of how to obtain the next set of query results.",
            "type": "string"
          },
          "order_by": {
            "description": "The criteria determining how search results are sorted. For non-empty query, default is ``\"relevance desc\"``. For empty query, default is ``\"upload_date desc\"``.  Supported options are:  -  ``\"relevance desc\"``: By relevance descending, as determined by the API algorithms. -  ``\"upload_date desc\"``: By upload date descending. -  ``\"upload_date\"``: By upload date ascending. -  ``\"update_date desc\"``: By last updated date descending. -  ``\"update_date\"``: By last updated date ascending. -  ``\"retrieval_importance desc\"``: By retrieval importance of properties descending. This feature is still under development, please do not use unless otherwise instructed to do so.",
            "type": "string"
          },
          "histogram_queries": {
            "description": "An expression specifying a histogram request against matching documents. Expression syntax is an aggregation function call with histogram facets and other options.  The following aggregation functions are supported:  -  ``count(string_histogram_facet)``: Count the number of matching entities for each distinct attribute value.  Data types:  -  Histogram facet (aka filterable properties): Facet names with format <schema id>.<facet>. Facets will have the format of: ``[a-zA-Z][a-zA-Z0-9_:/-.]``. If the facet is a child facet, then the parent hierarchy needs to be specified separated by dots in the prefix after the schema id. Thus, the format for a multi- level facet is: <schema id>.<parent facet name>. <child facet name>. Example: schema123.root_parent_facet.middle_facet.child_facet -  DocumentSchemaId: (with no schema id prefix) to get histograms for each document type (returns the schema id path, e.g. projects/12345/locations/us-west/documentSchemas/abc123).  Example expression:  -  Document type counts: count('DocumentSchemaId')  -  For schema id, abc123, get the counts for MORTGAGE_TYPE: count('abc123.MORTGAGE_TYPE')",
            "type": "array",
            "items": {
              "reference": "google.cloud.contentwarehouse_v1.types.HistogramQuery",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "histogram_query": {
                    "description": "An expression specifies a histogram request against matching documents for searches.  See [SearchDocumentsRequest.histogram_queries][google.cloud.contentwarehouse.v1.SearchDocumentsRequest.histogram_queries] for details about syntax.",
                    "type": "string"
                  },
                  "require_precise_result_size": {
                    "description": "Controls if the histogram query requires the return of a precise count. Enable this flag may adversely impact performance.  Defaults to true.",
                    "type": "boolean"
                  },
                  "filters": {
                    "description": "Optional. Filter the result of histogram query by the property names. It only works with histogram query count('FilterableProperties'). It is an optional. It will perform histogram on all the property names for all the document schemas. Setting this field will have a better performance.",
                    "type": "object",
                    "reference": "google.cloud.contentwarehouse_v1.types.HistogramQueryPropertyNameFilter",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "document_schemas": {
                          "description": "This filter specifies the exact document schema(s) [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name] to run histogram query against. It is optional. It will perform histogram for property names for all the document schemas if it is not set.  At most 10 document schema names are allowed. Format: projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "property_names": {
                          "description": "It is optional. It will perform histogram for all the property names if it is not set. The properties need to be defined with the is_filterable flag set to true and the name of the property should be in the format: \"schemaId.propertyName\". The property needs to be defined in the schema. Example: the schema id is abc. Then the name of property for property MORTGAGE_TYPE will be \"abc.MORTGAGE_TYPE\".",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "y_axis": {
                          "description": "By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is not set.",
                          "type": "object",
                          "reference": "google.cloud.contentwarehouse_v1.types.HistogramQueryPropertyNameFilter.HistogramYAxis"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "require_total_size": {
            "description": "Controls if the search document request requires the return of a total size of matched documents. See [SearchDocumentsResponse.total_size][google.cloud.contentwarehouse.v1.SearchDocumentsResponse.total_size].  Enabling this flag may adversely impact performance. Hint: If this is used with pagination, set this flag on the initial query but set this to false on subsequent page calls (keep the total count locally).  Defaults to false.",
            "type": "boolean"
          },
          "total_result_size": {
            "description": "Controls if the search document request requires the return of a total size of matched documents. See [SearchDocumentsResponse.total_size][google.cloud.contentwarehouse.v1.SearchDocumentsResponse.total_size].",
            "type": "object",
            "reference": "google.cloud.contentwarehouse_v1.types.SearchDocumentsRequest.TotalResultSize"
          },
          "qa_size_limit": {
            "description": "Experimental, do not use. The limit on the number of documents returned for the question-answering feature. To enable the question-answering feature, set [DocumentQuery].[is_nl_query][] to true.",
            "type": "integer"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "LockDocumentRequest",
      "description": "Request message for DocumentService.LockDocument.\n\nAttributes:\n    name (str):\n        Required. The name of the document to lock. Format:\n        projects/{project_number}/locations/{location}/documents/{document}.\n    collection_id (str):\n        The collection the document connects to.\n    locking_user (google.cloud.contentwarehouse_v1.types.UserInfo):\n        The user information who locks the document.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the document to lock. Format: projects/{project_number}/locations/{location}/documents/{document}.",
            "type": "string"
          },
          "collection_id": {
            "description": "The collection the document connects to.",
            "type": "string"
          },
          "locking_user": {
            "description": "The user information who locks the document.",
            "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "visitor_id": {
                  "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                  "type": "string"
                },
                "user_id": {
                  "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                  "type": "string"
                },
                "ip_address": {
                  "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                  "type": "string"
                },
                "user_agent": {
                  "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                  "type": "string"
                },
                "direct_user_request": {
                  "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                  "type": "boolean"
                }
              },
              "required": [
                "visitor_id"
              ]
            }
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "FetchAclRequest",
      "description": "Request message for DocumentService.FetchAcl\n\nAttributes:\n    resource (str):\n        Required. REQUIRED: The resource for which the policy is\n        being requested. Format for document:\n        projects/{project_number}/locations/{location}/documents/{document_id}.\n        Format for collection:\n        projects/{project_number}/locations/{location}/collections/{collection_id}.\n        Format for project: projects/{project_number}.\n    request_metadata (google.cloud.contentwarehouse_v1.types.RequestMetadata):\n        The meta information collected about the end\n        user, used to enforce access control for the\n        service.\n    project_owner (bool):\n        For Get Project ACL only. Authorization check for end user\n        will be ignored when project_owner=true.",
      "parameters": {
        "type": "object",
        "properties": {
          "resource": {
            "description": "Required. REQUIRED: The resource for which the policy is being requested. Format for document: projects/{project_number}/locations/{location}/documents/{document_id}. Format for collection: projects/{project_number}/locations/{location}/collections/{collection_id}. Format for project: projects/{project_number}.",
            "type": "string"
          },
          "request_metadata": {
            "description": "The meta information collected about the end user, used to enforce access control for the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          },
          "project_owner": {
            "description": "For Get Project ACL only. Authorization check for end user will be ignored when project_owner=true.",
            "type": "boolean"
          }
        },
        "required": [
          "resource"
        ]
      }
    },
    {
      "type": "function",
      "name": "SetAclRequest",
      "description": "Request message for DocumentService.SetAcl.\n\nAttributes:\n    resource (str):\n        Required. REQUIRED: The resource for which the policy is\n        being requested. Format for document:\n        projects/{project_number}/locations/{location}/documents/{document_id}.\n        Format for collection:\n        projects/{project_number}/locations/{location}/collections/{collection_id}.\n        Format for project: projects/{project_number}.\n    policy (google.iam.v1.policy_pb2.Policy):\n        Required. REQUIRED: The complete policy to be applied to the\n        ``resource``. The size of the policy is limited to a few 10s\n        of KB. This refers to an Identity and Access (IAM) policy,\n        which specifies access controls for the Document.\n\n        You can set ACL with condition for projects only.\n\n        Supported operators are: ``=``, ``!=``, ``<``, ``<=``,\n        ``>``, and ``>=`` where the left of the operator is\n        ``DocumentSchemaId`` or property name and the right of the\n        operator is a numbe",
      "parameters": {
        "type": "object",
        "properties": {
          "resource": {
            "description": "Required. REQUIRED: The resource for which the policy is being requested. Format for document: projects/{project_number}/locations/{location}/documents/{document_id}. Format for collection: projects/{project_number}/locations/{location}/collections/{collection_id}. Format for project: projects/{project_number}.",
            "type": "string"
          },
          "policy": {
            "description": "Required. REQUIRED: The complete policy to be applied to the ``resource``. The size of the policy is limited to a few 10s of KB. This refers to an Identity and Access (IAM) policy, which specifies access controls for the Document.  You can set ACL with condition for projects only.  Supported operators are: ``=``, ``!=``, ``<``, ``<=``, ``>``, and ``>=`` where the left of the operator is ``DocumentSchemaId`` or property name and the right of the operator is a number or a quoted string. You must escape backslash (\\) and quote (\") characters.  Boolean expressions (AND/OR) are supported up to 3 levels of nesting (for example, \"((A AND B AND C) OR D) AND E\"), a maximum of 10 comparisons are allowed in the expression. The expression must be < 6000 bytes in length.  Sample condition: ``\"DocumentSchemaId = \\\"some schema id\\\" OR SchemaId.floatPropertyName >= 10\"``",
            "reference": "google.iam.v1.policy_pb2.Policy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "type_": {
                  "description": "Policy type.",
                  "type": "object",
                  "reference": "google.shopping.merchant_accounts_v1beta.types.OnlineReturnPolicy.Policy.Type"
                },
                "days": {
                  "description": "The number of days items can be returned after delivery, where one day is defined as 24 hours after the delivery timestamp. Required for ``NUMBER_OF_DAYS_AFTER_DELIVERY`` returns.",
                  "type": "integer"
                }
              }
            }
          },
          "request_metadata": {
            "description": "The meta information collected about the end user, used to enforce access control for the service.",
            "reference": "google.cloud.contentwarehouse_v1.types.RequestMetadata",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "user_info": {
                  "description": "Provides user unique identification and groups information.",
                  "type": "object",
                  "reference": "google.cloud.contentwarehouse_v1.types.UserInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "visitor_id": {
                        "description": "Required. A unique identifier for tracking visitors with a length limit of 128 bytes.  For example, this could be implemented with a http cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Maximum length 128 bytes. Cannot be empty.",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users.",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if ``direct_user_request`` is set. Used to extract location information for personalization.",
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB.  This should *not* be set when using the JavaScript pixel or if ``directUserRequest`` is set.",
                        "type": "string"
                      },
                      "direct_user_request": {
                        "description": "Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "visitor_id"
                    ]
                  }
                }
              }
            }
          },
          "project_owner": {
            "description": "For Set Project ACL only. Authorization check for end user will be ignored when project_owner=true.",
            "type": "boolean"
          }
        },
        "required": [
          "resource",
          "policy"
        ]
      }
    }
  ]
}