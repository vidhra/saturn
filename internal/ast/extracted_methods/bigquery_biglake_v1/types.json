{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-bigquery-biglake/google/cloud/bigquery_biglake_v1/types/metastore.py": [
    {
      "type": "function",
      "name": "CreateCatalogRequest",
      "description": "Request message for the CreateCatalog method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this catalog will be\n        created. Format:\n        projects/{project_id_or_number}/locations/{location_id}\n    catalog (google.cloud.bigquery_biglake_v1.types.Catalog):\n        Required. The catalog to create. The ``name`` field does not\n        need to be provided.\n    catalog_id (str):\n        Required. The ID to use for the catalog,\n        which will become the final component of the\n        catalog's resource name.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource where this catalog will be created. Format: projects/{project_id_or_number}/locations/{location_id}",
            "type": "string"
          },
          "catalog": {
            "description": "Required. The catalog to create. The ``name`` field does not need to be provided.",
            "reference": "google.cloud.bigquery_biglake_v1.types.Catalog",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. The resource name of the target catalog, in the format of \\`catalogs/{catalog}'.",
                  "type": "string"
                },
                "display_name": {
                  "description": "Output only. The descriptive name of the catalog as it appears in UIs.",
                  "type": "string"
                },
                "description": {
                  "description": "Output only. The description of the catalog.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The time when the catalog was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "update_time": {
                  "description": "Output only. The time when the catalog was last updated.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                }
              }
            }
          },
          "catalog_id": {
            "description": "Required. The ID to use for the catalog, which will become the final component of the catalog's resource name.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "catalog",
          "catalog_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteCatalogRequest",
      "description": "Request message for the DeleteCatalog method.\n\nAttributes:\n    name (str):\n        Required. The name of the catalog to delete. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the catalog to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetCatalogRequest",
      "description": "Request message for the GetCatalog method.\n\nAttributes:\n    name (str):\n        Required. The name of the catalog to retrieve. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the catalog to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListCatalogsRequest",
      "description": "Request message for the ListCatalogs method.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of\n        catalogs. Format:\n        projects/{project_id_or_number}/locations/{location_id}\n    page_size (int):\n        The maximum number of catalogs to return. The\n        service may return fewer than this value.\n        If unspecified, at most 50 catalogs will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListCatalogs``\n        call. Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListCatalogs`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of catalogs. Format: projects/{project_id_or_number}/locations/{location_id}",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of catalogs to return. The service may return fewer than this value. If unspecified, at most 50 catalogs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListCatalogs`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListCatalogs`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateDatabaseRequest",
      "description": "Request message for the CreateDatabase method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this database will be\n        created. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}\n    database (google.cloud.bigquery_biglake_v1.types.Database):\n        Required. The database to create. The ``name`` field does\n        not need to be provided.\n    database_id (str):\n        Required. The ID to use for the database,\n        which will become the final component of the\n        database's resource name.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource where this database will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
            "type": "string"
          },
          "database": {
            "description": "Required. The database to create. The ``name`` field does not need to be provided.",
            "reference": "google.cloud.bigquery_biglake_v1.types.Database",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. Name of the resource in the form of ``projects/{project}/locations/{location}/clusters/{cluster}/databases/{database}``.",
                  "type": "string"
                },
                "charset": {
                  "description": "Optional. Charset for the database. This field can contain any PostgreSQL supported charset name. Example values include \"UTF8\", \"SQL_ASCII\", etc.",
                  "type": "string"
                },
                "collation": {
                  "description": "Optional. Collation for the database. Name of the custom or native collation for postgres. Example values include \"C\", \"POSIX\", etc",
                  "type": "string"
                }
              }
            }
          },
          "database_id": {
            "description": "Required. The ID to use for the database, which will become the final component of the database's resource name.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "database",
          "database_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteDatabaseRequest",
      "description": "Request message for the DeleteDatabase method.\n\nAttributes:\n    name (str):\n        Required. The name of the database to delete. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the database to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateDatabaseRequest",
      "description": "Request message for the UpdateDatabase method.\n\nAttributes:\n    database (google.cloud.bigquery_biglake_v1.types.Database):\n        Required. The database to update.\n\n        The database's ``name`` field is used to identify the\n        database to update. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to update.\n\n        For the ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\n        If not set, defaults to all of the fields that are allowed\n        to update.",
      "parameters": {
        "type": "object",
        "properties": {
          "database": {
            "description": "Required. The database to update.  The database's ``name`` field is used to identify the database to update. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "reference": "google.cloud.bigquery_biglake_v1.types.Database",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. Name of the resource in the form of ``projects/{project}/locations/{location}/clusters/{cluster}/databases/{database}``.",
                  "type": "string"
                },
                "charset": {
                  "description": "Optional. Charset for the database. This field can contain any PostgreSQL supported charset name. Example values include \"UTF8\", \"SQL_ASCII\", etc.",
                  "type": "string"
                },
                "collation": {
                  "description": "Optional. Collation for the database. Name of the custom or native collation for postgres. Example values include \"C\", \"POSIX\", etc",
                  "type": "string"
                }
              }
            }
          },
          "update_mask": {
            "description": "The list of fields to update.  For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "database"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetDatabaseRequest",
      "description": "Request message for the GetDatabase method.\n\nAttributes:\n    name (str):\n        Required. The name of the database to retrieve. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the database to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListDatabasesRequest",
      "description": "Request message for the ListDatabases method.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of\n        databases. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}\n    page_size (int):\n        The maximum number of databases to return.\n        The service may return fewer than this value. If\n        unspecified, at most 50 databases will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListDatabases``\n        call. Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListDatabases`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of databases. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of databases to return. The service may return fewer than this value. If unspecified, at most 50 databases will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListDatabases`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListDatabases`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateTableRequest",
      "description": "Request message for the CreateTable method.\n\nAttributes:\n    parent (str):\n        Required. The parent resource where this table will be\n        created. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    table (google.cloud.bigquery_biglake_v1.types.Table):\n        Required. The table to create. The ``name`` field does not\n        need to be provided for the table creation.\n    table_id (str):\n        Required. The ID to use for the table, which\n        will become the final component of the table's\n        resource name.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent resource where this table will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "type": "string"
          },
          "table": {
            "description": "Required. The table to create. The ``name`` field does not need to be provided for the table creation.",
            "reference": "google.cloud.bigquery_biglake_v1.types.Table",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "table_name": {
                  "description": "The name of the table.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "description": "The project ID.",
                        "type": "string"
                      },
                      "dataset_id": {
                        "description": "The dataset ID within the project.",
                        "type": "string"
                      },
                      "table_id": {
                        "description": "The table ID of the table within the dataset.",
                        "type": "string"
                      }
                    }
                  }
                },
                "info": {
                  "description": "User-provided metadata for the table.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.TableInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "friendly_name": {
                        "description": "A short name for the table, such as\\ ``\"Analytics Data - Jan 2011\"``.",
                        "type": "string"
                      },
                      "description": {
                        "description": "A long description, perhaps several paragraphs, describing the table contents in detail.",
                        "type": "string"
                      },
                      "labels": {
                        "description": "Labels provided for the table.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "schema_json": {
                  "description": "A JSON representation of the table's schema.",
                  "type": "string"
                },
                "view": {
                  "description": "If present, this is a virtual table defined by a SQL query.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.TableViewDefinition",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "query": {
                        "description": "SQL query defining the view.",
                        "type": "string"
                      }
                    }
                  }
                },
                "expire_time": {
                  "description": "The expiration date for the table, after which the table is deleted and the storage reclaimed. If not present, the table persists indefinitely.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "create_time": {
                  "description": "The time the table was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "truncate_time": {
                  "description": "The time the table was last truncated by an operation with a ``writeDisposition`` of ``WRITE_TRUNCATE``.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "update_time": {
                  "description": "The time the table was last modified.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "encryption": {
                  "description": "The table encryption information. Set when non-default encryption is used.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.EncryptionInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kms_key_name": {
                        "description": "unique identifier for cloud kms key",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "table_id": {
            "description": "Required. The ID to use for the table, which will become the final component of the table's resource name.",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "table",
          "table_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTableRequest",
      "description": "Request message for the DeleteTable method.\n\nAttributes:\n    name (str):\n        Required. The name of the table to delete. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the table to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTableRequest",
      "description": "Request message for the UpdateTable method.\n\nAttributes:\n    table (google.cloud.bigquery_biglake_v1.types.Table):\n        Required. The table to update.\n\n        The table's ``name`` field is used to identify the table to\n        update. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The list of fields to update.\n\n        For the ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\n        If not set, defaults to all of the fields that are allowed\n        to update.",
      "parameters": {
        "type": "object",
        "properties": {
          "table": {
            "description": "Required. The table to update.  The table's ``name`` field is used to identify the table to update. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "reference": "google.cloud.bigquery_biglake_v1.types.Table",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "table_name": {
                  "description": "The name of the table.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "description": "The project ID.",
                        "type": "string"
                      },
                      "dataset_id": {
                        "description": "The dataset ID within the project.",
                        "type": "string"
                      },
                      "table_id": {
                        "description": "The table ID of the table within the dataset.",
                        "type": "string"
                      }
                    }
                  }
                },
                "info": {
                  "description": "User-provided metadata for the table.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.TableInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "friendly_name": {
                        "description": "A short name for the table, such as\\ ``\"Analytics Data - Jan 2011\"``.",
                        "type": "string"
                      },
                      "description": {
                        "description": "A long description, perhaps several paragraphs, describing the table contents in detail.",
                        "type": "string"
                      },
                      "labels": {
                        "description": "Labels provided for the table.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "schema_json": {
                  "description": "A JSON representation of the table's schema.",
                  "type": "string"
                },
                "view": {
                  "description": "If present, this is a virtual table defined by a SQL query.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.TableViewDefinition",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "query": {
                        "description": "SQL query defining the view.",
                        "type": "string"
                      }
                    }
                  }
                },
                "expire_time": {
                  "description": "The expiration date for the table, after which the table is deleted and the storage reclaimed. If not present, the table persists indefinitely.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "create_time": {
                  "description": "The time the table was created.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "truncate_time": {
                  "description": "The time the table was last truncated by an operation with a ``writeDisposition`` of ``WRITE_TRUNCATE``.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "update_time": {
                  "description": "The time the table was last modified.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp"
                },
                "encryption": {
                  "description": "The table encryption information. Set when non-default encryption is used.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.EncryptionInfo",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "kms_key_name": {
                        "description": "unique identifier for cloud kms key",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "The list of fields to update.  For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "table"
        ]
      }
    },
    {
      "type": "function",
      "name": "RenameTableRequest",
      "description": "Request message for the RenameTable method in\nMetastoreService\n\nAttributes:\n    name (str):\n        Required. The table's ``name`` field is used to identify the\n        table to rename. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}\n    new_name (str):\n        Required. The new ``name`` for the specified table, must be\n        in the same database. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The table's ``name`` field is used to identify the table to rename. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "type": "string"
          },
          "new_name": {
            "description": "Required. The new ``name`` for the specified table, must be in the same database. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "type": "string"
          }
        },
        "required": [
          "name",
          "new_name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTableRequest",
      "description": "Request message for the GetTable method.\n\nAttributes:\n    name (str):\n        Required. The name of the table to retrieve. Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the table to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListTablesRequest",
      "description": "Request message for the ListTables method.\n\nAttributes:\n    parent (str):\n        Required. The parent, which owns this collection of tables.\n        Format:\n        projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}\n    page_size (int):\n        The maximum number of tables to return. The\n        service may return fewer than this value.\n        If unspecified, at most 50 tables will be\n        returned. The maximum value is 1000; values\n        above 1000 will be coerced to 1000.\n    page_token (str):\n        A page token, received from a previous ``ListTables`` call.\n        Provide this to retrieve the subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListTables`` must match the call that provided the page\n        token.\n    view (google.cloud.bigquery_biglake_v1.types.TableView):\n        The view for the returned tables.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent, which owns this collection of tables. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of tables to return. The service may return fewer than this value. If unspecified, at most 50 tables will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "A page token, received from a previous ``ListTables`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListTables`` must match the call that provided the page token.",
            "type": "string"
          },
          "view": {
            "description": "The view for the returned tables.",
            "type": "object",
            "reference": "google.cloud.bigquery_biglake_v1.types.TableView"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ]
}