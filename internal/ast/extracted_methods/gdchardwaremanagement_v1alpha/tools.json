{
  "GDCHardwareManagement": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_orders",
          "description": "Lists orders in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_list_orders():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.ListOrdersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_orders(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location to list orders in. Format: ``projects/{project}/locations/{location}``  To list orders across all locations, substitute ``-`` (the hyphen or dash character) for the location and check the unreachable field in the response message.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.services.gdc_hardware_management.pagers.ListOrdersAsyncPager: A list of orders.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListOrdersRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_order",
          "description": "Gets details of an order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_get_order():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.GetOrderRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_order(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gdchardwaremanageme",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.types.Order: An order for GDC hardware."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetOrderRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_order",
          "description": "Creates a new order in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_create_order():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        order = gdchardwaremanagement_v1alpha.Order()\n        order.organization_contact.contacts.given_name = \"given_name_value\"\n        order.organization_contact.contacts.email = \"email_value\"\n        order.organization_contact.contacts.phone = \"phone_value\"\n        order.customer_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location to create the order in. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "order": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.Order",
                "description": "Required. The order to create. This corresponds to the ``order`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "order_id": {
                "type": "str",
                "description": "Optional. ID used to uniquely identify the Order within its parent scope. This field should contain at most 63 characters and must start with lowercase characters. Only lowercase characters, numbers and ``-`` are accepted. The ``-`` character cannot be the first or the last one. A system generated ID will be used if the field is not set.  The order.name field in the request will be ignored.  This corresponds to the ``order_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.Order` An order for GDC hardware."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "order",
              "order_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateOrderRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_order",
          "description": "Updates the parameters of an order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_update_order():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        order = gdchardwaremanagement_v1alpha.Order()\n        order.organization_contact.contacts.given_name = \"given_name_value\"\n        order.organization_contact.contacts.email = \"email_value\"\n        order.organization_contact.contacts.phone = \"phone_value\"\n        order.customer_motivation = \"cus",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "order": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.Order",
                "description": "Required. The order to update. This corresponds to the ``order`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. A mask to specify the fields in the Order to overwrite with this update. The fields specified in the update_mask are relative to the order, not the full request. A field will be overwritten if it is in the mask. If you don't provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.Order` An order for GDC hardware."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "order",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateOrderRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_order",
          "description": "Deletes an order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_delete_order():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.DeleteOrderRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_order(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the order. Format: ``projects/{project}/locations/{location}/orders/{order}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteOrderRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "submit_order",
          "description": "Submits an order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_submit_order():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.SubmitOrderRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.submit_order(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the order. Format: ``projects/{project}/locations/{location}/orders/{order}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.Order` An order for GDC hardware."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.SubmitOrderRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_sites",
          "description": "Lists sites in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_list_sites():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.ListSitesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_sites(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location to list sites in. Format: ``projects/{project}/locations/{location}``  To list sites across all locations, substitute ``-`` (the hyphen or dash character) for the location and check the unreachable field in the response message.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.services.gdc_hardware_management.pagers.ListSitesAsyncPager: A list of sites.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListSitesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_site",
          "description": "Gets details of a site.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_get_site():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.GetSiteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_site(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gdchardwaremanagement_v1",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the site. Format: ``projects/{project}/locations/{location}/sites/{site}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.types.Site: A physical site where hardware will be installed."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetSiteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_site",
          "description": "Creates a new site in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_create_site():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        site = gdchardwaremanagement_v1alpha.Site()\n        site.organization_contact.contacts.given_name = \"given_name_value\"\n        site.organization_contact.contacts.email = \"email_value\"\n        site.organization_contact.contacts.phone = \"phone_value\"\n\n        request = gdchardware",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location to create the site in. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "site": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.Site",
                "description": "Required. The site to create. This corresponds to the ``site`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "site_id": {
                "type": "str",
                "description": "Optional. ID used to uniquely identify the Site within its parent scope. This field should contain at most 63 characters and must start with lowercase characters. Only lowercase characters, numbers and ``-`` are accepted. The ``-`` character cannot be the first or the last one. A system generated ID will be used if the field is not set.  The site.name field in the request will be ignored.  This corresponds to the ``site_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.Site` A physical site where hardware will be installed."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "site",
              "site_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateSiteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_site",
          "description": "Updates the parameters of a site.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_update_site():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        site = gdchardwaremanagement_v1alpha.Site()\n        site.organization_contact.contacts.given_name = \"given_name_value\"\n        site.organization_contact.contacts.email = \"email_value\"\n        site.organization_contact.contacts.phone = \"phone_value\"\n\n        request = gdchardwaremanagement_v1alpha",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "site": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.Site",
                "description": "Required. The site to update. This corresponds to the ``site`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. A mask to specify the fields in the Site to overwrite with this update. The fields specified in the update_mask are relative to the site, not the full request. A field will be overwritten if it is in the mask. If you don't provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.Site` A physical site where hardware will be installed."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "site",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateSiteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_site",
          "description": "Deletes a site.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_delete_site():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.DeleteSiteRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_site(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the site. Format: ``projects/{project}/locations/{location}/sites/{site}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteSiteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_hardware_groups",
          "description": "Lists hardware groups in a given order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_list_hardware_groups():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.ListHardwareGroupsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_hardware_groups(request=request)\n\n        # Handle the response\n        async for response in page_result:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The order to list hardware groups in. Format: ``projects/{project}/locations/{location}/orders/{order}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.services.gdc_hardware_management.pagers.ListHardwareGroupsAsyncPager: A list of hardware groups.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListHardwareGroupsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_hardware_group",
          "description": "Gets details of a hardware group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_get_hardware_group():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.GetHardwareGroupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_hardware_group(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Unio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the hardware group. Format: ``projects/{project}/locations/{location}/orders/{order}/hardwareGroups/{hardware_group}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.types.HardwareGroup: A group of hardware that is part of the same order, has the same SKU, and is delivered to the same site."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetHardwareGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_hardware_group",
          "description": "Creates a new hardware group in a given order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_create_hardware_group():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        hardware_group = gdchardwaremanagement_v1alpha.HardwareGroup()\n        hardware_group.hardware_count = 1494\n        hardware_group.config.sku = \"sku_value\"\n        hardware_group.config.power_supply = \"POWER_SUPPLY_DC\"\n        hardware_group.site = \"site_value\"\n\n        req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The order to create the hardware group in. Format: ``projects/{project}/locations/{location}/orders/{order}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "hardware_group": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.HardwareGroup",
                "description": "Required. The hardware group to create.  This corresponds to the ``hardware_group`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "hardware_group_id": {
                "type": "str",
                "description": "Optional. ID used to uniquely identify the HardwareGroup within its parent scope. This field should contain at most 63 characters and must start with lowercase characters. Only lowercase characters, numbers and ``-`` are accepted. The ``-`` character cannot be the first or the last one. A system generated ID will be used if the field is not set.  The hardware_group.name field in the request will be ignored.  This corresponds to the ``hardware_group_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.HardwareGroup` A group of hardware that is part of the same order, has the same SKU, and is delivered to the same site."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "hardware_group",
              "hardware_group_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateHardwareGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_hardware_group",
          "description": "Updates the parameters of a hardware group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_update_hardware_group():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        hardware_group = gdchardwaremanagement_v1alpha.HardwareGroup()\n        hardware_group.hardware_count = 1494\n        hardware_group.config.sku = \"sku_value\"\n        hardware_group.config.power_supply = \"POWER_SUPPLY_DC\"\n        hardware_group.site = \"site_value\"\n\n        reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "hardware_group": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.HardwareGroup",
                "description": "Required. The hardware group to update.  This corresponds to the ``hardware_group`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. A mask to specify the fields in the HardwareGroup to overwrite with this update. The fields specified in the update_mask are relative to the hardware group, not the full request. A field will be overwritten if it is in the mask. If you don't provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.HardwareGroup` A group of hardware that is part of the same order, has the same SKU, and is delivered to the same site."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "hardware_group",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateHardwareGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_hardware_group",
          "description": "Deletes a hardware group.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_delete_hardware_group():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.DeleteHardwareGroupRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_hardware_group(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the hardware group. Format: ``projects/{project}/locations/{location}/orders/{order}/hardwareGroups/{hardware_group}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteHardwareGroupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_hardware",
          "description": "Lists hardware in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_list_hardware():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.ListHardwareRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_hardware(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location to list hardware in. Format: ``projects/{project}/locations/{location}``  To list hardware across all locations, substitute ``-`` (the hyphen or dash character) for the location and check the unreachable field in the response message.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.services.gdc_hardware_management.pagers.ListHardwareAsyncPager: A list of hardware.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListHardwareRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_hardware",
          "description": "Gets hardware details.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_get_hardware():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.GetHardwareRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_hardware(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gdchardwarema",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the hardware. Format: ``projects/{project}/locations/{location}/hardware/{hardware}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.types.Hardware: An instance of hardware installed at a site."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetHardwareRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_hardware",
          "description": "Creates new hardware in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_create_hardware():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        hardware = gdchardwaremanagement_v1alpha.Hardware()\n        hardware.order = \"order_value\"\n        hardware.site = \"site_value\"\n        hardware.config.sku = \"sku_value\"\n        hardware.config.power_supply = \"POWER_SUPPLY_DC\"\n        hardware.zone = \"zone_value\"\n\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location to create hardware in. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "hardware": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.Hardware",
                "description": "Required. The resource to create. This corresponds to the ``hardware`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "hardware_id": {
                "type": "str",
                "description": "Optional. ID used to uniquely identify the Hardware within its parent scope. This field should contain at most 63 characters and must start with lowercase characters. Only lowercase characters, numbers and ``-`` are accepted. The ``-`` character cannot be the first or the last one. A system generated ID will be used if the field is not set.  The hardware.name field in the request will be ignored.  This corresponds to the ``hardware_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.Hardware` An instance of hardware installed at a site."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "hardware",
              "hardware_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateHardwareRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_hardware",
          "description": "Updates hardware parameters.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_update_hardware():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        hardware = gdchardwaremanagement_v1alpha.Hardware()\n        hardware.order = \"order_value\"\n        hardware.site = \"site_value\"\n        hardware.config.sku = \"sku_value\"\n        hardware.config.power_supply = \"POWER_SUPPLY_DC\"\n        hardware.zone = \"zone_value\"\n\n        request = gdchardwaremana",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "hardware": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.Hardware",
                "description": "Required. The hardware to update. This corresponds to the ``hardware`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. A mask to specify the fields in the Hardware to overwrite with this update. The fields specified in the update_mask are relative to the hardware, not the full request. A field will be overwritten if it is in the mask. If you don't provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.Hardware` An instance of hardware installed at a site."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "hardware",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateHardwareRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_hardware",
          "description": "Deletes hardware.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_delete_hardware():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.DeleteHardwareRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_hardware(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Hand",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the hardware. Format: ``projects/{project}/locations/{location}/hardware/{hardware}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteHardwareRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_comments",
          "description": "Lists the comments on an order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_list_comments():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.ListCommentsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_comments(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The order to list comments on. Format: ``projects/{project}/locations/{location}/orders/{order}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.services.gdc_hardware_management.pagers.ListCommentsAsyncPager: A request to list comments.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListCommentsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_comment",
          "description": "Gets the content of a comment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_get_comment():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.GetCommentRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_comment(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gdchardw",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the comment. Format: ``projects/{project}/locations/{location}/orders/{order}/comments/{comment}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.types.Comment: A comment on an order."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetCommentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_comment",
          "description": "Creates a new comment on an order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_create_comment():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        comment = gdchardwaremanagement_v1alpha.Comment()\n        comment.text = \"text_value\"\n\n        request = gdchardwaremanagement_v1alpha.CreateCommentRequest(\n            parent=\"parent_value\",\n            comment=comment,\n        )\n\n        # Make the request\n        operation = client.create_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The order to create the comment on. Format: ``projects/{project}/locations/{location}/orders/{order}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "comment": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.Comment",
                "description": "Required. The comment to create. This corresponds to the ``comment`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "comment_id": {
                "type": "str",
                "description": "Optional. ID used to uniquely identify the Comment within its parent scope. This field should contain at most 63 characters and must start with lowercase characters. Only lowercase characters, numbers and ``-`` are accepted. The ``-`` character cannot be the first or the last one. A system generated ID will be used if the field is not set.  The comment.name field in the request will be ignored.  This corresponds to the ``comment_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.Comment` A comment on an order."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "comment",
              "comment_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateCommentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "record_action_on_comment",
          "description": "Record Action on a Comment. If the Action specified\nin the request is READ, the viewed time in the comment\nis set to the time the request was received. If the\ncomment is already marked as read, subsequent calls will\nbe ignored. If the Action is UNREAD, the viewed time is\ncleared from the comment.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_record_action_on_comment():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwar",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the comment. Format: ``projects/{project}/locations/{location}/orders/{order}/comments/{comment}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "action_type": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.RecordActionOnCommentRequest.ActionType",
                "description": "Required. The action type of the recorded action.  This corresponds to the ``action_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.types.Comment: A comment on an order."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "action_type",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.RecordActionOnCommentRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_change_log_entries",
          "description": "Lists the changes made to an order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_list_change_log_entries():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.ListChangeLogEntriesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_change_log_entries(request=request)\n\n        # Handle the response\n        async for response in page_resul",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The order to list change log entries for. Format: ``projects/{project}/locations/{location}/orders/{order}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.services.gdc_hardware_management.pagers.ListChangeLogEntriesAsyncPager: A list of change log entries.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListChangeLogEntriesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_change_log_entry",
          "description": "Gets details of a change to an order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_get_change_log_entry():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.GetChangeLogEntryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_change_log_entry(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Opti",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the change log entry. Format: ``projects/{project}/locations/{location}/orders/{order}/changeLogEntries/{change_log_entry}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.types.ChangeLogEntry: A log entry of a change made to an order."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetChangeLogEntryRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_skus",
          "description": "Lists SKUs for a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_list_skus():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.ListSkusRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_skus(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location to list SKUs in. Format: ``projects/{project}/locations/{location}``  To list SKUs across all locations, substitute ``-`` (the hyphen or dash character) for the location and check the unreachable field in the response message.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.services.gdc_hardware_management.pagers.ListSkusAsyncPager: A list of SKUs.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListSkusRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_sku",
          "description": "Gets details of an SKU.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_get_sku():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.GetSkuRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_sku(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gdchardwaremanagement_v1alp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the SKU. Format: ``projects/{project}/locations/{location}/skus/{sku}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.types.Sku: A stock keeping unit (SKU) of GDC hardware."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetSkuRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_zones",
          "description": "Lists zones in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_list_zones():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.ListZonesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_zones(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location to list zones in. Format: ``projects/{project}/locations/{location}``  To list zones across all locations, substitute ``-`` (the hyphen or dash character) for the location and check the unreachable field in the response message.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.services.gdc_hardware_management.pagers.ListZonesAsyncPager: A list of zones.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListZonesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_zone",
          "description": "Gets details of a zone.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_get_zone():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.GetZoneRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_zone(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.gdchardwaremanagement_v1",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the zone. Format: ``projects/{project}/locations/{location}/zones/{zone}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.gdchardwaremanagement_v1alpha.types.Zone: A zone holding a set of hardware."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetZoneRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_zone",
          "description": "Creates a new zone in a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_create_zone():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        zone = gdchardwaremanagement_v1alpha.Zone()\n        zone.contacts.given_name = \"given_name_value\"\n        zone.contacts.email = \"email_value\"\n        zone.contacts.phone = \"phone_value\"\n\n        request = gdchardwaremanagement_v1alpha.CreateZoneRequest(\n            parent=\"paren",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location to create the zone in. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "zone": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.Zone",
                "description": "Required. The zone to create. This corresponds to the ``zone`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "zone_id": {
                "type": "str",
                "description": "Optional. ID used to uniquely identify the Zone within its parent scope. This field should contain at most 63 characters and must start with lowercase characters. Only lowercase characters, numbers and ``-`` are accepted. The ``-`` character cannot be the first or the last one. A system generated ID will be used if the field is not set.  The zone.name field in the request will be ignored.  This corresponds to the ``zone_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.Zone` A zone holding a set of hardware."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "zone",
              "zone_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateZoneRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_zone",
          "description": "Updates the parameters of a zone.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_update_zone():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        zone = gdchardwaremanagement_v1alpha.Zone()\n        zone.contacts.given_name = \"given_name_value\"\n        zone.contacts.email = \"email_value\"\n        zone.contacts.phone = \"phone_value\"\n\n        request = gdchardwaremanagement_v1alpha.UpdateZoneRequest(\n            zone=zone,\n        )\n\n        #",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "zone": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.Zone",
                "description": "Required. The zone to update. This corresponds to the ``zone`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. A mask to specify the fields in the Zone to overwrite with this update. The fields specified in the update_mask are relative to the zone, not the full request. A field will be overwritten if it is in the mask. If you don't provide a mask then all fields will be overwritten.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.Zone` A zone holding a set of hardware."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "zone",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.UpdateZoneRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_zone",
          "description": "Deletes a zone.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_delete_zone():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.DeleteZoneRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_zone(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the zone. Format: ``projects/{project}/locations/{location}/zones/{zone}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteZoneRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "signal_zone_state",
          "description": "Signals the state of a zone.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import gdchardwaremanagement_v1alpha\n\n    async def sample_signal_zone_state():\n        # Create a client\n        client = gdchardwaremanagement_v1alpha.GDCHardwareManagementAsyncClient()\n\n        # Initialize request argument(s)\n        request = gdchardwaremanagement_v1alpha.SignalZoneStateRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.signal_zone_state(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the zone. Format: ``projects/{project}/locations/{location}/zones/{zone}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "state_signal": {
                "type": "google.cloud.gdchardwaremanagement_v1alpha.types.SignalZoneStateRequest.StateSignal",
                "description": "Optional. The state signal to send for this zone. Either state_signal or provisioning_state_signal must be set, but not both.  This corresponds to the ``state_signal`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.gdchardwaremanagement_v1alpha.types.Zone` A zone holding a set of hardware."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "state_signal",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.SignalZoneStateRequest"
          ]
        }
      }
    ]
  }
}