{
  "Lineage": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "process_open_lineage_run_event",
          "description": "Creates new lineage events together with their\nparents: process and run. Updates the process and run if\nthey already exist. Mapped from Open Lineage\nspecification:\n\nhttps://github.com/OpenLineage/OpenLineage/blob/main/spec/OpenLineage.json.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_process_open_lineage_run_event():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.ProcessOpenLineageRunEventRequest(\n            parent=\"parent_valu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the project and its location that should own the process, run, and lineage event.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "open_lineage": {
                "type": "google.protobuf.struct_pb2.Struct",
                "description": "Required. OpenLineage message following OpenLineage format: https://github.com/OpenLineage/OpenLineage/blob/main/spec/OpenLineage.json  This corresponds to the ``open_lineage`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.types.ProcessOpenLineageRunEventResponse: Response message for [ProcessOpenLineageRunEvent][google.cloud.datacatalog.lineage.v1.ProcessOpenLineageRunEvent]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "open_lineage",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.ProcessOpenLineageRunEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_process",
          "description": "Creates a new process.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_create_process():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.CreateProcessRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_process(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datacatalog_lineage_v1.types.CreatePro",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the project and its location that should own the process.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "process": {
                "type": "google.cloud.datacatalog_lineage_v1.types.Process",
                "description": "Required. The process to create. This corresponds to the ``process`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.types.Process: A process is the definition of a data transformation operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "process",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.CreateProcessRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_process",
          "description": "Updates a process.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_update_process():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.UpdateProcessRequest(\n        )\n\n        # Make the request\n        response = await client.update_process(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datacatalog_lineage_v1.types.UpdateProcessRequest, dict]]):\n        The reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "process": {
                "type": "google.cloud.datacatalog_lineage_v1.types.Process",
                "description": "Required. The lineage process to update.  The process's ``name`` field is used to identify the process to update.  This corresponds to the ``process`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to update. Currently not used. The whole message is updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.types.Process: A process is the definition of a data transformation operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "process",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.UpdateProcessRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_process",
          "description": "Gets the details of the specified process.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_get_process():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.GetProcessRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_process(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datacatalog_lineage_v1.types.Ge",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the process to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.types.Process: A process is the definition of a data transformation operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.GetProcessRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_processes",
          "description": "List processes in the given project and location.\nList order is descending by insertion time.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_list_processes():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.ListProcessesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_processes(request=request)\n\n        # Handle the response\n        async for response in page_result:",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the project and its location that owns this collection of processes.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.services.lineage.pagers.ListProcessesAsyncPager: Response message for [ListProcesses][google.cloud.datacatalog.lineage.v1.ListProcesses].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.ListProcessesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_process",
          "description": "Deletes the process with the specified name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_delete_process():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.DeleteProcessRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_process(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the process to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.DeleteProcessRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_run",
          "description": "Creates a new run.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_create_run():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        run = datacatalog_lineage_v1.Run()\n        run.state = \"ABORTED\"\n\n        request = datacatalog_lineage_v1.CreateRunRequest(\n            parent=\"parent_value\",\n            run=run,\n        )\n\n        # Make the request\n        response = await client.create_run(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the process that should own the run.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "run": {
                "type": "google.cloud.datacatalog_lineage_v1.types.Run",
                "description": "Required. The run to create. This corresponds to the ``run`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.types.Run: A lineage run represents an execution of a process that creates lineage events."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "run",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.CreateRunRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_run",
          "description": "Updates a run.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_update_run():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        run = datacatalog_lineage_v1.Run()\n        run.state = \"ABORTED\"\n\n        request = datacatalog_lineage_v1.UpdateRunRequest(\n            run=run,\n        )\n\n        # Make the request\n        response = await client.update_run(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.clou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "run": {
                "type": "google.cloud.datacatalog_lineage_v1.types.Run",
                "description": "Required. The lineage run to update.  The run's ``name`` field is used to identify the run to update.  Format: ``projects/{project}/locations/{location}/processes/{process}/runs/{run}``.  This corresponds to the ``run`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to update. Currently not used. The whole message is updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.types.Run: A lineage run represents an execution of a process that creates lineage events."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "run",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.UpdateRunRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_run",
          "description": "Gets the details of the specified run.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_get_run():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.GetRunRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_run(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datacatalog_lineage_v1.types.GetRunRequest, dic",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the run to get. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.types.Run: A lineage run represents an execution of a process that creates lineage events."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.GetRunRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_runs",
          "description": "Lists runs in the given project and location. List order is\ndescending by ``start_time``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_list_runs():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.ListRunsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_runs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of process that owns this collection of runs.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.services.lineage.pagers.ListRunsAsyncPager: Response message for [ListRuns][google.cloud.datacatalog.lineage.v1.ListRuns].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.ListRunsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_run",
          "description": "Deletes the run with the specified name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_delete_run():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.DeleteRunRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_run(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        pri",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the run to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.DeleteRunRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_lineage_event",
          "description": "Creates a new lineage event.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_create_lineage_event():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.CreateLineageEventRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_lineage_event(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datacatalog_lin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the run that should own the lineage event.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "lineage_event": {
                "type": "google.cloud.datacatalog_lineage_v1.types.LineageEvent",
                "description": "Required. The lineage event to create.  This corresponds to the ``lineage_event`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.types.LineageEvent: A lineage event represents an operation on assets. Within the operation, the data flows from the source to the target defined in the links field."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "lineage_event",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.CreateLineageEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_lineage_event",
          "description": "Gets details of a specified lineage event.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_get_lineage_event():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.GetLineageEventRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_lineage_event(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datacatalog_li",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the lineage event to get.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.types.LineageEvent: A lineage event represents an operation on assets. Within the operation, the data flows from the source to the target defined in the links field."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.GetLineageEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_lineage_events",
          "description": "Lists lineage events in the given project and\nlocation. The list order is not defined.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_list_lineage_events():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.ListLineageEventsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_lineage_events(request=request)\n\n        # Handle the response\n        async for response in page_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the run that owns the collection of lineage events to get.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datacatalog_lineage_v1.services.lineage.pagers.ListLineageEventsAsyncPager: Response message for [ListLineageEvents][google.cloud.datacatalog.lineage.v1.ListLineageEvents].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.ListLineageEventsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_lineage_event",
          "description": "Deletes the lineage event with the specified name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_delete_lineage_event():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsyncClient()\n\n        # Initialize request argument(s)\n        request = datacatalog_lineage_v1.DeleteLineageEventRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_lineage_event(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.datacatalog_lineage_v1.types.DeleteLineageEventRequest, dict]])",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the lineage event to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.DeleteLineageEventRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_links",
          "description": "Retrieve a list of links connected to a specific asset. Links\nrepresent the data flow between **source** (upstream) and\n**target** (downstream) assets in transformation pipelines.\nLinks are stored in the same project as the Lineage Events that\ncreate them.\n\nYou can retrieve links in every project where you have the\n``datalineage.events.get`` permission. The project provided in\nthe URL is used for Billing and Quota.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datacatalog_lineage_v1\n\n    async def sample_search_links():\n        # Create a client\n        client = datacatalog_lineage_v1.LineageAsy",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.SearchLinksRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_search_link_processes",
          "description": "Retrieve information about LineageProcesses associated with\nspecific links. LineageProcesses are transformation pipelines\nthat result in data flowing from **source** to **target**\nassets. Links between assets represent this operation.\n\nIf you have specific link names, you can use this method to\nverify which LineageProcesses contribute to creating those\nlinks. See the\n[SearchLinks][google.cloud.datacatalog.lineage.v1.Lineage.SearchLinks]\nmethod for more information on how to retrieve link name.\n\nYou can retrieve the LineageProcess information in every project\nwhere you have the ``datalineage.events.get`` permission. The\nproject provided in the URL is used for Billing and Quota.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "lineage.BatchSearchLinkProcessesRequest"
          ]
        }
      }
    ]
  }
}