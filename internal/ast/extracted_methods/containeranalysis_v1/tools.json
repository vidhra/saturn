{
  "ContainerAnalysis": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "set_iam_policy",
          "description": "Sets the access control policy on the specified note or\noccurrence. Requires ``containeranalysis.notes.setIamPolicy`` or\n``containeranalysis.occurrences.setIamPolicy`` permission if the\nresource is a note or an occurrence, respectively.\n\nThe resource takes the format\n``projects/[PROJECT_ID]/notes/[NOTE_ID]`` for notes and\n``projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`` for\noccurrences.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import containeranalysis_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_set_iam_policy():\n        # Create a client\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.policy_pb2.Policy: An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.  A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.  For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](\\ https://cloud.google.com/iam/help/conditions/resource-policies).  **JSON example:**  :literal:`\\`     {       \"bindings\": [         {           \"role\": \"roles/resourcemanager.organizationAdmin\",           \"members\": [             \"user:mike@example.com\",             \"group:admins@example.com\",             \"domain:google.com\",             \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"           ]         },         {           \"role\": \"roles/resourcemanager.organizationViewer\",           \"members\": [             \"user:eve@example.com\"           ],           \"condition\": {             \"title\": \"expirable access\",             \"description\": \"Does not grant access after Sep 2020\",             \"expression\": \"request.time <             timestamp('2020-10-01T00:00:00.000Z')\",           }         }       ],       \"etag\": \"BwWWja0YfJA=\",       \"version\": 3     }`\\ \\`  **YAML example:**  :literal:`\\`     bindings:     - members:       - user:mike@example.com       - group:admins@example.com       - domain:google.com       - serviceAccount:my-project-id@appspot.gserviceaccount.com       role: roles/resourcemanager.organizationAdmin     - members:       - user:eve@example.com       role: roles/resourcemanager.organizationViewer       condition:         title: expirable access         description: Does not grant access after Sep 2020         expression: request.time < timestamp('2020-10-01T00:00:00.000Z')     etag: BwWWja0YfJA=     version: 3`\\ \\`  For a description of IAM and its features, see the [IAM documentation](\\ https://cloud.google.com/iam/docs/)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.SetIamPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_iam_policy",
          "description": "Gets the access control policy for a note or an occurrence\nresource. Requires ``containeranalysis.notes.setIamPolicy`` or\n``containeranalysis.occurrences.setIamPolicy`` permission if the\nresource is a note or occurrence, respectively.\n\nThe resource takes the format\n``projects/[PROJECT_ID]/notes/[NOTE_ID]`` for notes and\n``projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`` for\noccurrences.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import containeranalysis_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_get_iam_policy():\n        # Create a client\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.policy_pb2.Policy: An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.  A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.  For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](\\ https://cloud.google.com/iam/help/conditions/resource-policies).  **JSON example:**  :literal:`\\`     {       \"bindings\": [         {           \"role\": \"roles/resourcemanager.organizationAdmin\",           \"members\": [             \"user:mike@example.com\",             \"group:admins@example.com\",             \"domain:google.com\",             \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"           ]         },         {           \"role\": \"roles/resourcemanager.organizationViewer\",           \"members\": [             \"user:eve@example.com\"           ],           \"condition\": {             \"title\": \"expirable access\",             \"description\": \"Does not grant access after Sep 2020\",             \"expression\": \"request.time <             timestamp('2020-10-01T00:00:00.000Z')\",           }         }       ],       \"etag\": \"BwWWja0YfJA=\",       \"version\": 3     }`\\ \\`  **YAML example:**  :literal:`\\`     bindings:     - members:       - user:mike@example.com       - group:admins@example.com       - domain:google.com       - serviceAccount:my-project-id@appspot.gserviceaccount.com       role: roles/resourcemanager.organizationAdmin     - members:       - user:eve@example.com       role: roles/resourcemanager.organizationViewer       condition:         title: expirable access         description: Does not grant access after Sep 2020         expression: request.time < timestamp('2020-10-01T00:00:00.000Z')     etag: BwWWja0YfJA=     version: 3`\\ \\`  For a description of IAM and its features, see the [IAM documentation](\\ https://cloud.google.com/iam/docs/)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.GetIamPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "test_iam_permissions",
          "description": "Returns the permissions that a caller has on the specified note\nor occurrence. Requires list permission on the project (for\nexample, ``containeranalysis.notes.list``).\n\nThe resource takes the format\n``projects/[PROJECT_ID]/notes/[NOTE_ID]`` for notes and\n``projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`` for\noccurrences.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import containeranalysis_v1\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_test_iam_permissions():\n        # Create a client\n        client = containeranalysis_v1.ContainerAnalysisAsyncClient(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "permissions": {
                "type": "MutableSequence[str]",
                "description": "The set of permissions to check for the ``resource``. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see `IAM Overview <https://cloud.google.com/iam/docs/overview#permissions>`__.  This corresponds to the ``permissions`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse: Response message for TestIamPermissions method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "permissions",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.TestIamPermissionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_vulnerability_occurrences_summary",
          "description": "Gets a summary of the number and severity of\noccurrences.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud.devtools import containeranalysis_v1\n\n    async def sample_get_vulnerability_occurrences_summary():\n        # Create a client\n        client = containeranalysis_v1.ContainerAnalysisAsyncClient()\n\n        # Initialize request argument(s)\n        request = containeranalysis_v1.GetVulnerabilityOccurrencesSummaryRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.get_vulnerability_occurrences_summary(request=request)\n\n        # Handle the resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the project to get a vulnerability summary for in the form of ``projects/[PROJECT_ID]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "The filter expression. This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.devtools.containeranalysis_v1.types.VulnerabilityOccurrencesSummary: A summary of how many vulnerability occurrences there are per resource and severity type."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "containeranalysis.GetVulnerabilityOccurrencesSummaryRequest"
          ]
        }
      }
    ]
  }
}