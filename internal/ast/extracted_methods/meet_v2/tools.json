{
  "ConferenceRecordsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "get_conference_record",
          "description": "Gets a conference record by conference ID.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_get_conference_record():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.GetConferenceRecordRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_conference_record(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.apps.meet_v2.types.GetConferenceRecor",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the conference.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.types.ConferenceRecord: Single instance of a meeting held in a space."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.types.ConferenceRecord"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_conference_records",
          "description": "Lists the conference records. By default, ordered by\nstart time and in descending order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_list_conference_records():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.ListConferenceRecordsRequest(\n        )\n\n        # Make the request\n        page_result = client.list_conference_records(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.services.conference_records_service.pagers.ListConferenceRecordsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_participant",
          "description": "Gets a participant by participant ID.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_get_participant():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.GetParticipantRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_participant(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.apps.meet_v2.types.GetParticipantRequest, dict]]):\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the participant.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.types.Participant: User who attended or is attending a conference."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.types.Participant"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_participants",
          "description": "Lists the participants in a conference record. By default,\nordered by join time and in descending order. This API supports\n``fields`` as standard parameters like every other API. However,\nwhen the ``fields`` request parameter is omitted, this API\ndefaults to ``'participants/*, next_page_token'``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_list_participants():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.ListParticipantsRequest(\n            parent=\"parent",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: ``conferenceRecords/{conference_record}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.services.conference_records_service.pagers.ListParticipantsAsyncPager: Response of ListParticipants method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.services.conference_records_service.pagers.ListParticipantsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_participant_session",
          "description": "Gets a participant session by participant session ID.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_get_participant_session():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.GetParticipantSessionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_participant_session(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.apps.meet_v2.types.G",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the participant.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.types.ParticipantSession: Refers to each unique join or leave session when a user joins a conference from a device. Note that any time a user joins the conference a new unique ID is assigned. That means if a user joins a space multiple times from the same device, they're assigned different IDs, and are also be treated as different participant sessions."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.types.ParticipantSession"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_participant_sessions",
          "description": "Lists the participant sessions of a participant in a conference\nrecord. By default, ordered by join time and in descending\norder. This API supports ``fields`` as standard parameters like\nevery other API. However, when the ``fields`` request parameter\nis omitted this API defaults to\n``'participantsessions/*, next_page_token'``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_list_participant_sessions():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.ListParticip",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: ``conferenceRecords/{conference_record}/participants/{participant}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.services.conference_records_service.pagers.ListParticipantSessionsAsyncPager: Response of ListParticipants method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.services.conference_records_service.pagers.ListParticipantSessionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_recording",
          "description": "Gets a recording by recording ID.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_get_recording():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.GetRecordingRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_recording(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.apps.meet_v2.types.GetRecordingRequest, dict]]):\n        The request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the recording.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.types.Recording: Metadata about a recording created during a conference."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.types.Recording"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_recordings",
          "description": "Lists the recording resources from the conference\nrecord. By default, ordered by start time and in\nascending order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_list_recordings():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.ListRecordingsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_recordings(request=request)\n\n        # Handle the response\n        async for response in page_result:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: ``conferenceRecords/{conference_record}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.services.conference_records_service.pagers.ListRecordingsAsyncPager: Response for ListRecordings method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.services.conference_records_service.pagers.ListRecordingsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_transcript",
          "description": "Gets a transcript by transcript ID.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_get_transcript():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.GetTranscriptRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_transcript(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.apps.meet_v2.types.GetTranscriptRequest, dict]]):\n        The re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the transcript.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.types.Transcript: Metadata for a transcript generated from a conference. It refers to the ASR (Automatic Speech Recognition) result of user's speech during the conference."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.types.Transcript"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_transcripts",
          "description": "Lists the set of transcripts from the conference\nrecord. By default, ordered by start time and in\nascending order.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_list_transcripts():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.ListTranscriptsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_transcripts(request=request)\n\n        # Handle the response\n        async for response in page_result:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: ``conferenceRecords/{conference_record}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.services.conference_records_service.pagers.ListTranscriptsAsyncPager: Response for ListTranscripts method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.services.conference_records_service.pagers.ListTranscriptsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_transcript_entry",
          "description": "Gets a ``TranscriptEntry`` resource by entry ID.\n\nNote: The transcript entries returned by the Google Meet API\nmight not match the transcription found in the Google Docs\ntranscript file. This can occur when the Google Docs transcript\nfile is modified after generation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_get_transcript_entry():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.GetTranscriptEntryRequest(\n            name=\"name_value\",\n        )\n\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the ``TranscriptEntry``. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.types.TranscriptEntry: Single entry for one user\u2019s speech during a transcript session."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.types.TranscriptEntry"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_transcript_entries",
          "description": "Lists the structured transcript entries per\ntranscript. By default, ordered by start time and in\nascending order.\n\nNote: The transcript entries returned by the Google Meet\nAPI might not match the transcription found in the\nGoogle Docs transcript file. This can occur when the\nGoogle Docs transcript file is modified after\ngeneration.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_list_transcript_entries():\n        # Create a client\n        client = meet_v2.ConferenceRecordsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.ListTrans",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Format: ``conferenceRecords/{conference_record}/transcripts/{transcript}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.services.conference_records_service.pagers.ListTranscriptEntriesAsyncPager: Response for ListTranscriptEntries method. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.services.conference_records_service.pagers.ListTranscriptEntriesAsyncPager"
          ]
        }
      }
    ]
  },
  "SpacesService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_space",
          "description": "Creates a space.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_create_space():\n        # Create a client\n        client = meet_v2.SpacesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.CreateSpaceRequest(\n        )\n\n        # Make the request\n        response = await client.create_space(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.apps.meet_v2.types.CreateSpaceRequest, dict]]):\n        The request object. Request to create a space.\n    space (:class:`google.ap",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "space": {
                "type": "google.apps.meet_v2.types.Space",
                "description": "Space to be created. As of May 2023, the input space can be empty. Later on the input space can be non-empty when space configuration is introduced.  This corresponds to the ``space`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.types.Space: Virtual place where conferences are held. Only one active conference can be held in one space at any given time."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "space",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.types.Space"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_space",
          "description": "Gets a space by ``space_id`` or ``meeting_code``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_get_space():\n        # Create a client\n        client = meet_v2.SpacesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.GetSpaceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_space(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.apps.meet_v2.types.GetSpaceRequest, dict]]):\n        The request object. Req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the space. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.types.Space: Virtual place where conferences are held. Only one active conference can be held in one space at any given time."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.types.Space"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_space",
          "description": "Updates a space.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_update_space():\n        # Create a client\n        client = meet_v2.SpacesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.UpdateSpaceRequest(\n        )\n\n        # Make the request\n        response = await client.update_space(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.apps.meet_v2.types.UpdateSpaceRequest, dict]]):\n        The request object. Request to update a space.\n    space (:class:`google.ap",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "space": {
                "type": "google.apps.meet_v2.types.Space",
                "description": "Required. Space to be updated. This corresponds to the ``space`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Field mask used to specify the fields to be updated in the space. If update_mask isn't provided, it defaults to '*' and updates all fields provided in the request, including deleting fields not set in the request.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.apps.meet_v2.types.Space: Virtual place where conferences are held. Only one active conference can be held in one space at any given time."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "space",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.apps.meet_v2.types.Space"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "end_active_conference",
          "description": "Ends an active conference (if there's one).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.apps import meet_v2\n\n    async def sample_end_active_conference():\n        # Create a client\n        client = meet_v2.SpacesServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = meet_v2.EndActiveConferenceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.end_active_conference(request=request)\n\nArgs:\n    request (Optional[Union[google.apps.meet_v2.types.EndActiveConferenceRequest, dict]]):\n        The request object. Request to end an ongoing con",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Resource name of the space. This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      }
    ]
  }
}