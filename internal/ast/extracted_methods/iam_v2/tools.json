{
  "Policies": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_policies",
          "description": "Retrieves the policies of the specified kind that are\nattached to a resource.\n\nThe response lists only policy metadata. In particular,\npolicy rules are omitted.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_v2\n\n    async def sample_list_policies():\n        # Create a client\n        client = iam_v2.PoliciesAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_v2.ListPoliciesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_policies(request=request)\n\n        # Handle the response\n        async for respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource that the policy is attached to, along with the kind of policy to list. Format: ``policies/{attachment_point}/denypolicies``  The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, ``/``, must be written as ``%2F``. For example, ``policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies``.  For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iam_v2.services.policies.pagers.ListPoliciesAsyncPager: Response message for ListPolicies.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "ListPoliciesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_policy",
          "description": "Gets a policy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_v2\n\n    async def sample_get_policy():\n        # Create a client\n        client = iam_v2.PoliciesAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_v2.GetPolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_policy(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.iam_v2.types.GetPolicyRequest, dict]]):\n        The request object. Request message for ``GetPolicy``.\n    na",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the policy to retrieve. Format: ``policies/{attachment_point}/denypolicies/{policy_id}``  Use the URL-encoded full resource name, which means that the forward-slash character, ``/``, must be written as ``%2F``. For example, ``policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-policy``.  For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.iam_v2.types.Policy: Data for an IAM policy."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "GetPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_policy",
          "description": "Creates a policy.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_v2\n\n    async def sample_create_policy():\n        # Create a client\n        client = iam_v2.PoliciesAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_v2.CreatePolicyRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_policy(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource that the policy is attached to, along with the kind of policy to create. Format: ``policies/{attachment_point}/denypolicies``  The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, ``/``, must be written as ``%2F``. For example, ``policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies``.  For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "policy": {
                "type": "google.cloud.iam_v2.types.Policy",
                "description": "Required. The policy to create. This corresponds to the ``policy`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "policy_id": {
                "type": "str",
                "description": "The ID to use for this policy, which will become the final component of the policy's resource name. The ID must contain 3 to 63 characters. It can contain lowercase letters and numbers, as well as dashes (``-``) and periods (``.``). The first character must be a lowercase letter.  This corresponds to the ``policy_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.iam_v2.types.Policy` Data for an IAM policy."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "policy",
              "policy_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "CreatePolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_policy",
          "description": "Updates the specified policy.\n\nYou can update only the rules and the display name for the\npolicy.\n\nTo update a policy, you should use a read-modify-write loop:\n\n1. Use [GetPolicy][google.iam.v2.Policies.GetPolicy] to read the\n   current version of the policy.\n2. Modify the policy as needed.\n3. Use ``UpdatePolicy`` to write the updated policy.\n\nThis pattern helps prevent conflicts between concurrent updates.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_v2\n\n    async def sample_update_policy():\n        # Create a client\n        client = iam_v2.PoliciesAsyncClient()\n\n        # Initialize reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "UpdatePolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_policy",
          "description": "Deletes a policy. This action is permanent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import iam_v2\n\n    async def sample_delete_policy():\n        # Create a client\n        client = iam_v2.PoliciesAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_v2.DeletePolicyRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_policy(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Op",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the policy to delete. Format: ``policies/{attachment_point}/denypolicies/{policy_id}``  Use the URL-encoded full resource name, which means that the forward-slash character, ``/``, must be written as ``%2F``. For example, ``policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-policy``.  For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.iam_v2.types.Policy` Data for an IAM policy."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "DeletePolicyRequest"
          ]
        }
      }
    ]
  }
}