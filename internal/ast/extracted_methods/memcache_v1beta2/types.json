{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-memcache/google/cloud/memcache_v1beta2/types/cloud_memcache.py": [
    {
      "type": "function",
      "name": "ListInstancesRequest",
      "description": "Request for\n[ListInstances][google.cloud.memcache.v1beta2.CloudMemcache.ListInstances].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the instance location using\n        the form: ``projects/{project_id}/locations/{location_id}``\n        where ``location_id`` refers to a GCP region\n    page_size (int):\n        The maximum number of items to return.\n\n        If not specified, a default value of 1000 will be used by\n        the service. Regardless of the ``page_size`` value, the\n        response may include a partial list and a caller should only\n        rely on response's\n        [``next_page_token``][google.cloud.memcache.v1beta2.ListInstancesResponse.next_page_token]\n        to determine if there are more instances left to be queried.\n    page_token (str):\n        The ``next_page_token`` value returned from a previous List\n        request, if any.\n    filter (str):\n        List filter. For example, exclude all Memcached instances\n        with name as my-instance by specifying\n        ",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the instance location using the form: ``projects/{project_id}/locations/{location_id}`` where ``location_id`` refers to a GCP region",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of items to return.  If not specified, a default value of 1000 will be used by the service. Regardless of the ``page_size`` value, the response may include a partial list and a caller should only rely on response's [``next_page_token``][google.cloud.memcache.v1beta2.ListInstancesResponse.next_page_token] to determine if there are more instances left to be queried.",
            "type": "integer"
          },
          "page_token": {
            "description": "The ``next_page_token`` value returned from a previous List request, if any.",
            "type": "string"
          },
          "filter": {
            "description": "List filter. For example, exclude all Memcached instances with name as my-instance by specifying ``\"name != my-instance\"``.",
            "type": "string"
          },
          "order_by": {
            "description": "Sort results. Supported values are \"name\", \"name desc\" or \"\" (unsorted).",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetInstanceRequest",
      "description": "Request for\n[GetInstance][google.cloud.memcache.v1beta2.CloudMemcache.GetInstance].\n\nAttributes:\n    name (str):\n        Required. Memcached instance resource name in the format:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Memcached instance resource name in the format: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateInstanceRequest",
      "description": "Request for\n[CreateInstance][google.cloud.memcache.v1beta2.CloudMemcache.CreateInstance].\n\nAttributes:\n    parent (str):\n        Required. The resource name of the instance location using\n        the form: ``projects/{project_id}/locations/{location_id}``\n        where ``location_id`` refers to a GCP region\n    instance_id (str):\n        Required. The logical name of the Memcached instance in the\n        user project with the following restrictions:\n\n        -  Must contain only lowercase letters, numbers, and\n           hyphens.\n        -  Must start with a letter.\n        -  Must be between 1-40 characters.\n        -  Must end with a number or a letter.\n        -  Must be unique within the user project / location.\n\n        If any of the above are not met, the API raises an invalid\n        argument error.\n    resource (google.cloud.memcache_v1beta2.types.Instance):\n        Required. A Memcached [Instance] resource",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The resource name of the instance location using the form: ``projects/{project_id}/locations/{location_id}`` where ``location_id`` refers to a GCP region",
            "type": "string"
          },
          "instance_id": {
            "description": "Required. The logical name of the Memcached instance in the user project with the following restrictions:  -  Must contain only lowercase letters, numbers, and hyphens. -  Must start with a letter. -  Must be between 1-40 characters. -  Must end with a number or a letter. -  Must be unique within the user project / location.  If any of the above are not met, the API raises an invalid argument error.",
            "type": "string"
          },
          "resource": {
            "description": "Required. A Memcached [Instance] resource",
            "reference": "google.cloud.memcache_v1beta2.types.Instance",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. A unique identifier for an instance. The name should be of the format: ``projects/{project_number}/locations/{location_id}/instances/{instance_id}``  ``project_number``: Maps to a unique int64 id assigned to each project.  ``location_id``: Refers to the region where the instance will be deployed. Since Secure Source Manager is a regional service, it must be one of the valid GCP regions.  ``instance_id``: User provided name for the instance, must be unique for a project_number and location_id combination.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. Create timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. Update timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Labels as key value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "private_config": {
                  "description": "Optional. Private settings for private instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.PrivateConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "is_private": {
                        "description": "Required. Immutable. Indicate if it's private instance.",
                        "type": "boolean"
                      },
                      "ca_pool": {
                        "description": "Required. Immutable. CA pool resource, resource must in the format of ``projects/{project}/locations/{location}/caPools/{ca_pool}``.",
                        "type": "string"
                      },
                      "http_service_attachment": {
                        "description": "Output only. Service Attachment for HTTP, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string",
                        "output_only": true
                      },
                      "ssh_service_attachment": {
                        "description": "Output only. Service Attachment for SSH, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string",
                        "output_only": true
                      },
                      "psc_allowed_projects": {
                        "description": "Optional. Additional allowed projects for setting up PSC connections. Instance host project is automatically allowed and does not need to be included in this list.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "is_private",
                      "ca_pool"
                    ]
                  }
                },
                "state": {
                  "description": "Output only. Current state of the instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.State",
                  "output_only": true
                },
                "state_note": {
                  "description": "Output only. An optional field providing information about the current instance state.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.StateNote",
                  "output_only": true
                },
                "kms_key": {
                  "description": "Optional. Immutable. Customer-managed encryption key name, in the format projects/\\ */locations/*/keyRings/*/cryptoKeys/*.",
                  "type": "string"
                },
                "host_config": {
                  "description": "Output only. A list of hostnames for this instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.HostConfig",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "html": {
                        "description": "Output only. HTML hostname.",
                        "type": "string",
                        "output_only": true
                      },
                      "api": {
                        "description": "Output only. API hostname. This is the hostname to use for **Host: Data Plane** endpoints.",
                        "type": "string",
                        "output_only": true
                      },
                      "git_http": {
                        "description": "Output only. Git HTTP hostname.",
                        "type": "string",
                        "output_only": true
                      },
                      "git_ssh": {
                        "description": "Output only. Git SSH hostname.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "instance_id",
          "resource"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateInstanceRequest",
      "description": "Request for\n[UpdateInstance][google.cloud.memcache.v1beta2.CloudMemcache.UpdateInstance].\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Mask of fields to update.\n\n        -  ``displayName``\n    resource (google.cloud.memcache_v1beta2.types.Instance):\n        Required. A Memcached [Instance] resource. Only fields\n        specified in update_mask are updated.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Mask of fields to update.  -  ``displayName``",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "resource": {
            "description": "Required. A Memcached [Instance] resource. Only fields specified in update_mask are updated.",
            "reference": "google.cloud.memcache_v1beta2.types.Instance",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Optional. A unique identifier for an instance. The name should be of the format: ``projects/{project_number}/locations/{location_id}/instances/{instance_id}``  ``project_number``: Maps to a unique int64 id assigned to each project.  ``location_id``: Refers to the region where the instance will be deployed. Since Secure Source Manager is a regional service, it must be one of the valid GCP regions.  ``instance_id``: User provided name for the instance, must be unique for a project_number and location_id combination.",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. Create timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "update_time": {
                  "description": "Output only. Update timestamp.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "labels": {
                  "description": "Optional. Labels as key value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "private_config": {
                  "description": "Optional. Private settings for private instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.PrivateConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "is_private": {
                        "description": "Required. Immutable. Indicate if it's private instance.",
                        "type": "boolean"
                      },
                      "ca_pool": {
                        "description": "Required. Immutable. CA pool resource, resource must in the format of ``projects/{project}/locations/{location}/caPools/{ca_pool}``.",
                        "type": "string"
                      },
                      "http_service_attachment": {
                        "description": "Output only. Service Attachment for HTTP, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string",
                        "output_only": true
                      },
                      "ssh_service_attachment": {
                        "description": "Output only. Service Attachment for SSH, resource is in the format of ``projects/{project}/regions/{region}/serviceAttachments/{service_attachment}``.",
                        "type": "string",
                        "output_only": true
                      },
                      "psc_allowed_projects": {
                        "description": "Optional. Additional allowed projects for setting up PSC connections. Instance host project is automatically allowed and does not need to be included in this list.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "is_private",
                      "ca_pool"
                    ]
                  }
                },
                "state": {
                  "description": "Output only. Current state of the instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.State",
                  "output_only": true
                },
                "state_note": {
                  "description": "Output only. An optional field providing information about the current instance state.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.StateNote",
                  "output_only": true
                },
                "kms_key": {
                  "description": "Optional. Immutable. Customer-managed encryption key name, in the format projects/\\ */locations/*/keyRings/*/cryptoKeys/*.",
                  "type": "string"
                },
                "host_config": {
                  "description": "Output only. A list of hostnames for this instance.",
                  "type": "object",
                  "reference": "google.cloud.securesourcemanager_v1.types.Instance.HostConfig",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "html": {
                        "description": "Output only. HTML hostname.",
                        "type": "string",
                        "output_only": true
                      },
                      "api": {
                        "description": "Output only. API hostname. This is the hostname to use for **Host: Data Plane** endpoints.",
                        "type": "string",
                        "output_only": true
                      },
                      "git_http": {
                        "description": "Output only. Git HTTP hostname.",
                        "type": "string",
                        "output_only": true
                      },
                      "git_ssh": {
                        "description": "Output only. Git SSH hostname.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "update_mask",
          "resource"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteInstanceRequest",
      "description": "Request for\n[DeleteInstance][google.cloud.memcache.v1beta2.CloudMemcache.DeleteInstance].\n\nAttributes:\n    name (str):\n        Required. Memcached instance resource name in the format:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Memcached instance resource name in the format: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "RescheduleMaintenanceRequest",
      "description": "Request for\n[RescheduleMaintenance][google.cloud.memcache.v1beta2.CloudMemcache.RescheduleMaintenance].\n\nAttributes:\n    instance (str):\n        Required. Memcache instance resource name using the form:\n        ``projects/{project_id}/locations/{location_id}/instances/{instance_id}``\n        where ``location_id`` refers to a GCP region.\n    reschedule_type (google.cloud.memcache_v1beta2.types.RescheduleMaintenanceRequest.RescheduleType):\n        Required. If reschedule type is SPECIFIC_TIME, must set up\n        schedule_time as well.\n    schedule_time (google.protobuf.timestamp_pb2.Timestamp):\n        Timestamp when the maintenance shall be rescheduled to if\n        reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for\n        example ``2012-11-15T16:19:00.094Z``.",
      "parameters": {
        "type": "object",
        "properties": {
          "instance": {
            "description": "Required. Memcache instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.",
            "type": "string"
          },
          "reschedule_type": {
            "description": "Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well.",
            "type": "object",
            "reference": "google.cloud.memcache_v1beta2.types.RescheduleMaintenanceRequest.RescheduleType"
          },
          "schedule_time": {
            "description": "Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example ``2012-11-15T16:19:00.094Z``.",
            "type": "object",
            "reference": "google.protobuf.timestamp_pb2.Timestamp"
          }
        },
        "required": [
          "instance",
          "reschedule_type"
        ]
      }
    },
    {
      "type": "function",
      "name": "ApplyParametersRequest",
      "description": "Request for\n[ApplyParameters][google.cloud.memcache.v1beta2.CloudMemcache.ApplyParameters].\n\nAttributes:\n    name (str):\n        Required. Resource name of the Memcached\n        instance for which parameter group updates\n        should be applied.\n    node_ids (MutableSequence[str]):\n        Nodes to which the instance-level parameter\n        group is applied.\n    apply_all (bool):\n        Whether to apply instance-level parameter group to all\n        nodes. If set to true, users are restricted from specifying\n        individual nodes, and ``ApplyParameters`` updates all nodes\n        within the instance.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the Memcached instance for which parameter group updates should be applied.",
            "type": "string"
          },
          "node_ids": {
            "description": "Nodes to which the instance-level parameter group is applied.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "apply_all": {
            "description": "Whether to apply instance-level parameter group to all nodes. If set to true, users are restricted from specifying individual nodes, and ``ApplyParameters`` updates all nodes within the instance.",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateParametersRequest",
      "description": "Request for\n[UpdateParameters][google.cloud.memcache.v1beta2.CloudMemcache.UpdateParameters].\n\nAttributes:\n    name (str):\n        Required. Resource name of the Memcached\n        instance for which the parameters should be\n        updated.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Mask of fields to update.\n    parameters (google.cloud.memcache_v1beta2.types.MemcacheParameters):\n        The parameters to apply to the instance.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the Memcached instance for which the parameters should be updated.",
            "type": "string"
          },
          "update_mask": {
            "description": "Required. Mask of fields to update.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "parameters": {
            "description": "The parameters to apply to the instance.",
            "reference": "google.cloud.memcache_v1beta2.types.MemcacheParameters",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Output only. The unique ID associated with this set of parameters. Users can use this id to determine if the parameters associated with the instance differ from the parameters associated with the nodes. A discrepancy between parameter ids can inform users that they may need to take action to apply parameters on nodes.",
                  "type": "string",
                  "output_only": true
                },
                "params": {
                  "description": "User defined set of parameters to use in the memcached process.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "update_mask"
        ]
      }
    },
    {
      "type": "function",
      "name": "ApplySoftwareUpdateRequest",
      "description": "Request for\n[ApplySoftwareUpdate][google.cloud.memcache.v1beta2.CloudMemcache.ApplySoftwareUpdate].\n\nAttributes:\n    instance (str):\n        Required. Resource name of the Memcached\n        instance for which software update should be\n        applied.\n    node_ids (MutableSequence[str]):\n        Nodes to which we should apply the update to.\n        Note all the selected nodes are updated in\n        parallel.\n    apply_all (bool):\n        Whether to apply the update to all nodes. If\n        set to true, will explicitly restrict users from\n        specifying any nodes, and apply software update\n        to all nodes (where applicable) within the\n        instance.",
      "parameters": {
        "type": "object",
        "properties": {
          "instance": {
            "description": "Required. Resource name of the Memcached instance for which software update should be applied.",
            "type": "string"
          },
          "node_ids": {
            "description": "Nodes to which we should apply the update to. Note all the selected nodes are updated in parallel.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "apply_all": {
            "description": "Whether to apply the update to all nodes. If set to true, will explicitly restrict users from specifying any nodes, and apply software update to all nodes (where applicable) within the instance.",
            "type": "boolean"
          }
        },
        "required": [
          "instance"
        ]
      }
    }
  ]
}