{
  "DocumentProcessorService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "process_document",
          "description": "Processes a single document.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_process_document():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        inline_document = documentai_v1beta3.Document()\n        inline_document.uri = \"uri_value\"\n\n        request = documentai_v1beta3.ProcessRequest(\n            inline_document=inline_document,\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.process_document(request=r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [Processor][google.cloud.documentai.v1beta3.Processor] or [ProcessorVersion][google.cloud.documentai.v1beta3.ProcessorVersion] to use for processing. If a [Processor][google.cloud.documentai.v1beta3.Processor] is specified, the server will use its [default version][google.cloud.documentai.v1beta3.Processor.default_processor_version]. Format: ``projects/{project}/locations/{location}/processors/{processor}``, or ``projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.types.ProcessResponse: Response message for the [ProcessDocument][google.cloud.documentai.v1beta3.DocumentProcessorService.ProcessDocument] method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.types.ProcessResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_process_documents",
          "description": "LRO endpoint to batch process many documents. The output is\nwritten to Cloud Storage as JSON in the [Document] format.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_batch_process_documents():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.BatchProcessRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.batch_process_documents(request=request)\n\n        print(\"Waiting for oper",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of [Processor][google.cloud.documentai.v1beta3.Processor] or [ProcessorVersion][google.cloud.documentai.v1beta3.ProcessorVersion]. Format: ``projects/{project}/locations/{location}/processors/{processor}``, or ``projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.documentai_v1beta3.types.BatchProcessResponse` Response message for [BatchProcessDocuments][google.cloud.documentai.v1beta3.DocumentProcessorService.BatchProcessDocuments]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_processor_types",
          "description": "Fetches processor types. Note that we don't use\n[ListProcessorTypes][google.cloud.documentai.v1beta3.DocumentProcessorService.ListProcessorTypes]\nhere, because it isn't paginated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_fetch_processor_types():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.FetchProcessorTypesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await clien",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location of processor types to list. Format: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.types.FetchProcessorTypesResponse: Response message for the [FetchProcessorTypes][google.cloud.documentai.v1beta3.DocumentProcessorService.FetchProcessorTypes] method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.types.FetchProcessorTypesResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_processor_types",
          "description": "Lists the processor types that exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_list_processor_types():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.ListProcessorTypesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_processor_types(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The location of processor types to list. Format: ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.services.document_processor_service.pagers.ListProcessorTypesAsyncPager: Response message for the [ListProcessorTypes][google.cloud.documentai.v1beta3.DocumentProcessorService.ListProcessorTypes] method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.services.document_processor_service.pagers.ListProcessorTypesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_processor_type",
          "description": "Gets a processor type detail.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_get_processor_type():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.GetProcessorTypeRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_processor_type(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.documentai_v1beta3.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The processor type resource name.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.types.ProcessorType: A processor type is responsible for performing a certain document understanding task on a certain type of document."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.types.ProcessorType"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_processors",
          "description": "Lists all processors which belong to this project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_list_processors():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.ListProcessorsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_processors(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent (project and location) which owns this collection of Processors. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.services.document_processor_service.pagers.ListProcessorsAsyncPager: Response message for the [ListProcessors][google.cloud.documentai.v1beta3.DocumentProcessorService.ListProcessors] method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.services.document_processor_service.pagers.ListProcessorsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_processor",
          "description": "Gets a processor detail.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_get_processor():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.GetProcessorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_processor(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.documentai_v1beta3.types.GetProcessorR",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The processor resource name.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.types.Processor: The first-class citizen for Document AI. Each processor defines how to extract structural information from a document."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.types.Processor"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "train_processor_version",
          "description": "Trains a new processor version. Operation metadata is returned\nas\n[TrainProcessorVersionMetadata][google.cloud.documentai.v1beta3.TrainProcessorVersionMetadata].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_train_processor_version():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.TrainProcessorVersionRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.train_processor_v",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent (project, location and processor) to create the new version for. Format: ``projects/{project}/locations/{location}/processors/{processor}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "processor_version": {
                "type": "google.cloud.documentai_v1beta3.types.ProcessorVersion",
                "description": "Required. The processor version to be created.  This corresponds to the ``processor_version`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.documentai_v1beta3.types.TrainProcessorVersionResponse` The response for [TrainProcessorVersion][google.cloud.documentai.v1beta3.DocumentProcessorService.TrainProcessorVersion]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "processor_version",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_processor_version",
          "description": "Gets a processor version detail.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_get_processor_version():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.GetProcessorVersionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_processor_version(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.documen",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The processor resource name.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.types.ProcessorVersion: A processor version is an implementation of a processor. Each processor can have multiple versions, pretrained by Google internally or uptrained by the customer. A processor can only have one default version at a time. Its document-processing behavior is defined by that version."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.types.ProcessorVersion"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_processor_versions",
          "description": "Lists all versions of a processor.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_list_processor_versions():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.ListProcessorVersionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_processor_versions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent (project, location and processor) to list all versions. Format: ``projects/{project}/locations/{location}/processors/{processor}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.services.document_processor_service.pagers.ListProcessorVersionsAsyncPager: Response message for the [ListProcessorVersions][google.cloud.documentai.v1beta3.DocumentProcessorService.ListProcessorVersions] method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.services.document_processor_service.pagers.ListProcessorVersionsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_processor_version",
          "description": "Deletes the processor version, all artifacts under\nthe processor version will be deleted.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_delete_processor_version():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.DeleteProcessorVersionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_processor_version(request=request)\n\n        print(\"Waiting for operation to complete",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The processor version resource name to be deleted.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "deploy_processor_version",
          "description": "Deploys the processor version.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_deploy_processor_version():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.DeployProcessorVersionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.deploy_processor_version(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The processor version resource name to be deployed.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.documentai_v1beta3.types.DeployProcessorVersionResponse` Response message for the [DeployProcessorVersion][google.cloud.documentai.v1beta3.DocumentProcessorService.DeployProcessorVersion] method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undeploy_processor_version",
          "description": "Undeploys the processor version.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_undeploy_processor_version():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.UndeployProcessorVersionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.undeploy_processor_version(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The processor version resource name to be undeployed.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.documentai_v1beta3.types.UndeployProcessorVersionResponse` Response message for the [UndeployProcessorVersion][google.cloud.documentai.v1beta3.DocumentProcessorService.UndeployProcessorVersion] method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_processor",
          "description": "Creates a processor from the\n[ProcessorType][google.cloud.documentai.v1beta3.ProcessorType]\nprovided. The processor will be at ``ENABLED`` state by default\nafter its creation. Note that this method requires the\n``documentai.processors.create`` permission on the project,\nwhich is highly privileged. A user or service account with this\npermission can create new processors that can interact with any\ngcs bucket in your project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_create_processor():\n        # Create a client\n        client = documentai_v1beta3.Docume",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent (project and location) under which to create the processor. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "processor": {
                "type": "google.cloud.documentai_v1beta3.types.Processor",
                "description": "Required. The processor to be created, requires [Processor.type][google.cloud.documentai.v1beta3.Processor.type] and [Processor.display_name][google.cloud.documentai.v1beta3.Processor.display_name] to be set. Also, the [Processor.kms_key_name][google.cloud.documentai.v1beta3.Processor.kms_key_name] field must be set if the processor is under CMEK.  This corresponds to the ``processor`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.types.Processor: The first-class citizen for Document AI. Each processor defines how to extract structural information from a document."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "processor",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.types.Processor"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_processor",
          "description": "Deletes the processor, unloads all deployed model\nartifacts if it was enabled and then deletes all\nartifacts associated with this processor.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_delete_processor():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.DeleteProcessorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_processor(request=request)\n\n        print(\"Waiti",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The processor resource name to be deleted.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "enable_processor",
          "description": "Enables a processor\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_enable_processor():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.EnableProcessorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.enable_processor(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "disable_processor",
          "description": "Disables a processor\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_disable_processor():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.DisableProcessorRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.disable_processor(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_default_processor_version",
          "description": "Set the default (active) version of a\n[Processor][google.cloud.documentai.v1beta3.Processor] that will\nbe used in\n[ProcessDocument][google.cloud.documentai.v1beta3.DocumentProcessorService.ProcessDocument]\nand\n[BatchProcessDocuments][google.cloud.documentai.v1beta3.DocumentProcessorService.BatchProcessDocuments].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_set_default_processor_version():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documen",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "review_document",
          "description": "Send a document for Human Review. The input document\nshould be processed by the specified processor.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_review_document():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        inline_document = documentai_v1beta3.Document()\n        inline_document.uri = \"uri_value\"\n\n        request = documentai_v1beta3.ReviewDocumentRequest(\n            inline_document=inline_document,\n            human_review_config=\"human_review_con",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "human_review_config": {
                "type": "str",
                "description": "Required. The resource name of the [HumanReviewConfig][google.cloud.documentai.v1beta3.HumanReviewConfig] that the document will be reviewed with.  This corresponds to the ``human_review_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.documentai_v1beta3.types.ReviewDocumentResponse` Response message for the [ReviewDocument][google.cloud.documentai.v1beta3.DocumentProcessorService.ReviewDocument] method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "human_review_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "evaluate_processor_version",
          "description": "Evaluates a ProcessorVersion against annotated\ndocuments, producing an Evaluation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_evaluate_processor_version():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.EvaluateProcessorVersionRequest(\n            processor_version=\"processor_version_value\",\n        )\n\n        # Make the request\n        operation = client.evaluate_processor_version(request=request)\n\n        print(\"Waiting ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "processor_version": {
                "type": "str",
                "description": "Required. The resource name of the [ProcessorVersion][google.cloud.documentai.v1beta3.ProcessorVersion] to evaluate. ``projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}``  This corresponds to the ``processor_version`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.documentai_v1beta3.types.EvaluateProcessorVersionResponse` Response of the [EvaluateProcessorVersion][google.cloud.documentai.v1beta3.DocumentProcessorService.EvaluateProcessorVersion] method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "processor_version",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_evaluation",
          "description": "Retrieves a specific evaluation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_get_evaluation():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.GetEvaluationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_evaluation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.documentai_v1beta3.types.Ge",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the [Evaluation][google.cloud.documentai.v1beta3.Evaluation] to get. ``projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}/evaluations/{evaluation}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.types.Evaluation: An evaluation of a ProcessorVersion's performance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.types.Evaluation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_evaluations",
          "description": "Retrieves a set of evaluations for a given processor\nversion.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_list_evaluations():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.ListEvaluationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_evaluations(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the [ProcessorVersion][google.cloud.documentai.v1beta3.ProcessorVersion] to list evaluations for. ``projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.services.document_processor_service.pagers.ListEvaluationsAsyncPager: The response from ListEvaluations.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.services.document_processor_service.pagers.ListEvaluationsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_processor_version",
          "description": "Imports a processor version from source processor\nversion.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_import_processor_version():\n        # Create a client\n        client = documentai_v1beta3.DocumentProcessorServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.ImportProcessorVersionRequest(\n            processor_version_source=\"processor_version_source_value\",\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.import_processor_version(request=request)\n\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The destination processor name to create the processor version in. Format: ``projects/{project}/locations/{location}/processors/{processor}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.documentai_v1beta3.types.ImportProcessorVersionResponse` The response message for the [ImportProcessorVersion][google.cloud.documentai.v1beta3.DocumentProcessorService.ImportProcessorVersion] method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      }
    ]
  },
  "DocumentService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "update_dataset",
          "description": "Updates metadata associated with a dataset. Note that this\nmethod requires the\n``documentai.googleapis.com/datasets.update`` permission on the\nproject, which is highly privileged. A user or service account\nwith this permission can create new processors that can interact\nwith any gcs bucket in your project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_update_dataset():\n        # Create a client\n        client = documentai_v1beta3.DocumentServiceAsyncClient()\n\n        # Initialize request argument(s)\n        dataset = documentai_v1beta3.Dataset()\n        d",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "dataset": {
                "type": "google.cloud.documentai_v1beta3.types.Dataset",
                "description": "Required. The ``name`` field of the ``Dataset`` is used to identify the resource to be updated.  This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The update mask applies to the resource.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.documentai_v1beta3.types.Dataset` A singleton resource under a [Processor][google.cloud.documentai.v1beta3.Processor] which configures a collection of documents."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "dataset",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_documents",
          "description": "Import documents into a dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_import_documents():\n        # Create a client\n        client = documentai_v1beta3.DocumentServiceAsyncClient()\n\n        # Initialize request argument(s)\n        batch_documents_import_configs = documentai_v1beta3.BatchDocumentsImportConfig()\n        batch_documents_import_configs.dataset_split = \"DATASET_SPLIT_UNASSIGNED\"\n\n        request = documentai_v1beta3.ImportDocumentsRequest(\n            dataset=\"dataset_value\",\n            batch_documents_import_configs=batch_documents_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "dataset": {
                "type": "str",
                "description": "Required. The dataset resource name. Format:  projects/{project}/locations/{location}/processors/{processor}/dataset  This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.documentai_v1beta3.types.ImportDocumentsResponse` Response of the import document operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "dataset",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_document",
          "description": "Returns relevant fields present in the requested\ndocument.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_get_document():\n        # Create a client\n        client = documentai_v1beta3.DocumentServiceAsyncClient()\n\n        # Initialize request argument(s)\n        document_id = documentai_v1beta3.DocumentId()\n        document_id.gcs_managed_doc_id.gcs_uri = \"gcs_uri_value\"\n\n        request = documentai_v1beta3.GetDocumentRequest(\n            dataset=\"dataset_value\",\n            document_id=document_id,\n        )\n\n        # Make the request\n        response =",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "dataset": {
                "type": "str",
                "description": "Required. The resource name of the dataset that the document belongs to . Format:  projects/{project}/locations/{location}/processors/{processor}/dataset  This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.types.GetDocumentResponse:"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "dataset",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.types.GetDocumentResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_documents",
          "description": "Returns a list of documents present in the dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_list_documents():\n        # Create a client\n        client = documentai_v1beta3.DocumentServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.ListDocumentsRequest(\n            dataset=\"dataset_value\",\n        )\n\n        # Make the request\n        page_result = client.list_documents(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "dataset": {
                "type": "str",
                "description": "Required. The resource name of the dataset to be listed. Format:  projects/{project}/locations/{location}/processors/{processor}/dataset  This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.services.document_service.pagers.ListDocumentsAsyncPager: Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "dataset",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.services.document_service.pagers.ListDocumentsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_delete_documents",
          "description": "Deletes a set of documents.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_batch_delete_documents():\n        # Create a client\n        client = documentai_v1beta3.DocumentServiceAsyncClient()\n\n        # Initialize request argument(s)\n        dataset_documents = documentai_v1beta3.BatchDatasetDocuments()\n        dataset_documents.individual_document_ids.document_ids.gcs_managed_doc_id.gcs_uri = \"gcs_uri_value\"\n\n        request = documentai_v1beta3.BatchDeleteDocumentsRequest(\n            dataset=\"dataset_value\",\n            dataset_documents=dataset_documen",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "dataset": {
                "type": "str",
                "description": "Required. The dataset resource name. Format:  projects/{project}/locations/{location}/processors/{processor}/dataset  This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.documentai_v1beta3.types.BatchDeleteDocumentsResponse` Response of the delete documents operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "dataset",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_dataset_schema",
          "description": "Gets the ``DatasetSchema`` of a ``Dataset``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_get_dataset_schema():\n        # Create a client\n        client = documentai_v1beta3.DocumentServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.GetDatasetSchemaRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_dataset_schema(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.documentai_v1",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The dataset schema resource name. Format:  projects/{project}/locations/{location}/processors/{processor}/dataset/datasetSchema  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.types.DatasetSchema: Dataset Schema."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.types.DatasetSchema"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_dataset_schema",
          "description": "Updates a ``DatasetSchema``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import documentai_v1beta3\n\n    async def sample_update_dataset_schema():\n        # Create a client\n        client = documentai_v1beta3.DocumentServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = documentai_v1beta3.UpdateDatasetSchemaRequest(\n        )\n\n        # Make the request\n        response = await client.update_dataset_schema(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.documentai_v1beta3.types.UpdateDatasetSchemaRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "dataset_schema": {
                "type": "google.cloud.documentai_v1beta3.types.DatasetSchema",
                "description": "Required. The name field of the ``DatasetSchema`` is used to identify the resource to be updated.  This corresponds to the ``dataset_schema`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The update mask applies to the resource.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.documentai_v1beta3.types.DatasetSchema: Dataset Schema."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "dataset_schema",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.documentai_v1beta3.types.DatasetSchema"
          ]
        }
      }
    ]
  }
}