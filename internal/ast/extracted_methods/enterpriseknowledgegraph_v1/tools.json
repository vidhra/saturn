{
  "EnterpriseKnowledgeGraphService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_entity_reconciliation_job",
          "description": "Creates a EntityReconciliationJob. A\nEntityReconciliationJob once created will right away be\nattempted to start.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import enterpriseknowledgegraph_v1\n\n    async def sample_create_entity_reconciliation_job():\n        # Create a client\n        client = enterpriseknowledgegraph_v1.EnterpriseKnowledgeGraphServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = enterpriseknowledgegraph_v1.CreateEntityReconciliationJobRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_ent",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the Location to create the EntityReconciliationJob in. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "entity_reconciliation_job": {
                "type": "google.cloud.enterpriseknowledgegraph_v1.types.EntityReconciliationJob",
                "description": "Required. The EntityReconciliationJob to create.  This corresponds to the ``entity_reconciliation_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.enterpriseknowledgegraph_v1.types.EntityReconciliationJob: Entity reconciliation job message."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "entity_reconciliation_job",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CreateEntityReconciliationJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_entity_reconciliation_job",
          "description": "Gets a EntityReconciliationJob.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import enterpriseknowledgegraph_v1\n\n    async def sample_get_entity_reconciliation_job():\n        # Create a client\n        client = enterpriseknowledgegraph_v1.EnterpriseKnowledgeGraphServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = enterpriseknowledgegraph_v1.GetEntityReconciliationJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_entity_reconciliation_job(request=request)\n\n        # Handle the response\n        print(response)",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the EntityReconciliationJob resource. Format: ``projects/{project}/locations/{location}/entityReconciliationJobs/{entity_reconciliation_job}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.enterpriseknowledgegraph_v1.types.EntityReconciliationJob: Entity reconciliation job message."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.GetEntityReconciliationJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_entity_reconciliation_jobs",
          "description": "Lists Entity Reconciliation Jobs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import enterpriseknowledgegraph_v1\n\n    async def sample_list_entity_reconciliation_jobs():\n        # Create a client\n        client = enterpriseknowledgegraph_v1.EnterpriseKnowledgeGraphServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = enterpriseknowledgegraph_v1.ListEntityReconciliationJobsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_entity_reconciliation_jobs(request=request)\n\n        # Handle the response\n        async ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the EntityReconciliationJob's parent resource. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.enterpriseknowledgegraph_v1.services.enterprise_knowledge_graph_service.pagers.ListEntityReconciliationJobsAsyncPager: Response message for [EnterpriseKnowledgeGraphService.ListEntityReconciliationJobs][google.cloud.enterpriseknowledgegraph.v1.EnterpriseKnowledgeGraphService.ListEntityReconciliationJobs].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.ListEntityReconciliationJobsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_entity_reconciliation_job",
          "description": "Cancels a EntityReconciliationJob. Success of\ncancellation is not guaranteed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import enterpriseknowledgegraph_v1\n\n    async def sample_cancel_entity_reconciliation_job():\n        # Create a client\n        client = enterpriseknowledgegraph_v1.EnterpriseKnowledgeGraphServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = enterpriseknowledgegraph_v1.CancelEntityReconciliationJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.cancel_entity_reconciliation_job(request=request)\n\nArgs:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the EntityReconciliationJob resource. Format: ``projects/{project}/locations/{location}/entityReconciliationJobs/{entity_reconciliation_job}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.CancelEntityReconciliationJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_entity_reconciliation_job",
          "description": "Deletes a EntityReconciliationJob.\nIt only deletes the job when the job state is in FAILED,\nSUCCEEDED, and CANCELLED.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import enterpriseknowledgegraph_v1\n\n    async def sample_delete_entity_reconciliation_job():\n        # Create a client\n        client = enterpriseknowledgegraph_v1.EnterpriseKnowledgeGraphServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = enterpriseknowledgegraph_v1.DeleteEntityReconciliationJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_entity_reconc",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the EntityReconciliationJob resource. Format: ``projects/{project}/locations/{location}/entityReconciliationJobs/{entity_reconciliation_job}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.DeleteEntityReconciliationJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "lookup",
          "description": "Finds the Cloud KG entities with CKG ID(s).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import enterpriseknowledgegraph_v1\n\n    async def sample_lookup():\n        # Create a client\n        client = enterpriseknowledgegraph_v1.EnterpriseKnowledgeGraphServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = enterpriseknowledgegraph_v1.LookupRequest(\n            parent=\"parent_value\",\n            ids=['ids_value1', 'ids_value2'],\n        )\n\n        # Make the request\n        response = await client.lookup(request=request)\n\n        # Handle the response\n        print(response)\n\nAr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the Entity's parent resource. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ids": {
                "type": "MutableSequence[str]",
                "description": "Required. The list of entity ids to be used for lookup.  This corresponds to the ``ids`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.enterpriseknowledgegraph_v1.types.LookupResponse: Response message for [EnterpriseKnowledgeGraphService.Lookup][google.cloud.enterpriseknowledgegraph.v1.EnterpriseKnowledgeGraphService.Lookup]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "ids",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.LookupRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search",
          "description": "Searches the Cloud KG entities with entity name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import enterpriseknowledgegraph_v1\n\n    async def sample_search():\n        # Create a client\n        client = enterpriseknowledgegraph_v1.EnterpriseKnowledgeGraphServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = enterpriseknowledgegraph_v1.SearchRequest(\n            parent=\"parent_value\",\n            query=\"query_value\",\n        )\n\n        # Make the request\n        response = await client.search(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the Entity's parent resource. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query": {
                "type": "str",
                "description": "Required. The literal query string for search.  This corresponds to the ``query`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.enterpriseknowledgegraph_v1.types.SearchResponse: Response message for [EnterpriseKnowledgeGraphService.Search][google.cloud.enterpriseknowledgegraph.v1.EnterpriseKnowledgeGraphService.Search]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "query",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.SearchRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "lookup_public_kg",
          "description": "Finds the public KG entities with public KG ID(s).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import enterpriseknowledgegraph_v1\n\n    async def sample_lookup_public_kg():\n        # Create a client\n        client = enterpriseknowledgegraph_v1.EnterpriseKnowledgeGraphServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = enterpriseknowledgegraph_v1.LookupPublicKgRequest(\n            parent=\"parent_value\",\n            ids=['ids_value1', 'ids_value2'],\n        )\n\n        # Make the request\n        response = await client.lookup_public_kg(request=request)\n\n        # Handle the r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the Entity's parent resource. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "ids": {
                "type": "MutableSequence[str]",
                "description": "Required. The list of entity ids to be used for lookup.  This corresponds to the ``ids`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.enterpriseknowledgegraph_v1.types.LookupPublicKgResponse: Response message for [EnterpriseKnowledgeGraphService.LookupPublicKg][google.cloud.enterpriseknowledgegraph.v1.EnterpriseKnowledgeGraphService.LookupPublicKg]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "ids",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.LookupPublicKgRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_public_kg",
          "description": "Searches the public KG entities with entity name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import enterpriseknowledgegraph_v1\n\n    async def sample_search_public_kg():\n        # Create a client\n        client = enterpriseknowledgegraph_v1.EnterpriseKnowledgeGraphServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = enterpriseknowledgegraph_v1.SearchPublicKgRequest(\n            parent=\"parent_value\",\n            query=\"query_value\",\n        )\n\n        # Make the request\n        response = await client.search_public_kg(request=request)\n\n        # Handle the response\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the Entity's parent resource. Format: ``projects/{project}/locations/{location}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "query": {
                "type": "str",
                "description": "Required. The literal query string for search.  This corresponds to the ``query`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.enterpriseknowledgegraph_v1.types.SearchPublicKgResponse: Response message for [EnterpriseKnowledgeGraphService.Search][google.cloud.enterpriseknowledgegraph.v1.EnterpriseKnowledgeGraphService.Search]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "query",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "service.SearchPublicKgRequest"
          ]
        }
      }
    ]
  }
}