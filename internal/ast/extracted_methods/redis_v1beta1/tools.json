{
  "CloudRedis": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_instances",
          "description": "Lists all Redis instances owned by a project in either the\nspecified location (region) or all locations.\n\nThe location should have the following format:\n\n-  ``projects/{project_id}/locations/{location_id}``\n\nIf ``location_id`` is specified as ``-`` (wildcard), then all\nregions available to the project are queried, and the results\nare aggregated.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_v1beta1\n\n    async def sample_list_instances():\n        # Create a client\n        client = redis_v1beta1.CloudRedisAsyncClient()\n\n        # Initialize request argument(s)\n        request = redis_v1beta1",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the instance location using the form: ``projects/{project_id}/locations/{location_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.redis_v1beta1.services.cloud_redis.pagers.ListInstancesAsyncPager: Response for [ListInstances][google.cloud.redis.v1beta1.CloudRedis.ListInstances].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.redis_v1beta1.services.cloud_redis.pagers.ListInstancesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_instance",
          "description": "Gets the details of a specific Redis instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_v1beta1\n\n    async def sample_get_instance():\n        # Create a client\n        client = redis_v1beta1.CloudRedisAsyncClient()\n\n        # Initialize request argument(s)\n        request = redis_v1beta1.GetInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_instance(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.redis_v1beta1.types.GetInstanceRequest, dict]]):",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.redis_v1beta1.types.Instance: A Memorystore for Redis instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.redis_v1beta1.types.Instance"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_instance_auth_string",
          "description": "Gets the AUTH string for a Redis instance. If AUTH is\nnot enabled for the instance the response will be empty.\nThis information is not included in the details returned\nto GetInstance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_v1beta1\n\n    async def sample_get_instance_auth_string():\n        # Create a client\n        client = redis_v1beta1.CloudRedisAsyncClient()\n\n        # Initialize request argument(s)\n        request = redis_v1beta1.GetInstanceAuthStringRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_instance_auth_stri",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.redis_v1beta1.types.InstanceAuthString: Instance AUTH string details."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.redis_v1beta1.types.InstanceAuthString"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_instance",
          "description": "Creates a Redis instance based on the specified tier and memory\nsize.\n\nBy default, the instance is accessible from the project's\n`default network <https://cloud.google.com/vpc/docs/vpc>`__.\n\nThe creation is executed asynchronously and callers may check\nthe returned operation to track its progress. Once the operation\nis completed the Redis instance will be fully functional. The\ncompleted longrunning.Operation will contain the new instance\nobject in the response field.\n\nThe returned operation is automatically deleted after a few\nhours, so there is no need to call DeleteOperation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the instance location using the form: ``projects/{project_id}/locations/{location_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "instance_id": {
                "type": "str",
                "description": "Required. The logical name of the Redis instance in the customer project with the following restrictions:  -  Must contain only lowercase letters, numbers, and hyphens. -  Must start with a letter. -  Must be between 1-40 characters. -  Must end with a number or a letter. -  Must be unique within the customer project / location  This corresponds to the ``instance_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "instance": {
                "type": "google.cloud.redis_v1beta1.types.Instance",
                "description": "Required. A Redis [Instance] resource This corresponds to the ``instance`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.redis_v1beta1.types.Instance` A Memorystore for Redis instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "instance_id",
              "instance",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_instance",
          "description": "Updates the metadata and configuration of a specific\nRedis instance.\nCompleted longrunning.Operation will contain the new\ninstance object in the response field. The returned\noperation is automatically deleted after a few hours, so\nthere is no need to call DeleteOperation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_v1beta1\n\n    async def sample_update_instance():\n        # Create a client\n        client = redis_v1beta1.CloudRedisAsyncClient()\n\n        # Initialize request argument(s)\n        instance = redis_v1beta1.Instance()\n        instance.name = \"name_value\"\n        instance.tier = ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [Instance][google.cloud.redis.v1beta1.Instance]:  -  ``displayName`` -  ``labels`` -  ``memorySizeGb`` -  ``redisConfig`` -  ``replica_count``  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "instance": {
                "type": "google.cloud.redis_v1beta1.types.Instance",
                "description": "Required. Update description. Only fields specified in update_mask are updated.  This corresponds to the ``instance`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.redis_v1beta1.types.Instance` A Memorystore for Redis instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "update_mask",
              "instance",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "upgrade_instance",
          "description": "Upgrades Redis instance to the newer Redis version\nspecified in the request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_v1beta1\n\n    async def sample_upgrade_instance():\n        # Create a client\n        client = redis_v1beta1.CloudRedisAsyncClient()\n\n        # Initialize request argument(s)\n        request = redis_v1beta1.UpgradeInstanceRequest(\n            name=\"name_value\",\n            redis_version=\"redis_version_value\",\n        )\n\n        # Make the request\n        operation = client.upgrade_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "redis_version": {
                "type": "str",
                "description": "Required. Specifies the target version of Redis software to upgrade to.  This corresponds to the ``redis_version`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.redis_v1beta1.types.Instance` A Memorystore for Redis instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "redis_version",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_instance",
          "description": "Import a Redis RDB snapshot file from Cloud Storage\ninto a Redis instance.\nRedis may stop serving during this operation. Instance\nstate will be IMPORTING for entire operation. When\ncomplete, the instance will contain only data from the\nimported file.\n\nThe returned operation is automatically deleted after a\nfew hours, so there is no need to call DeleteOperation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_v1beta1\n\n    async def sample_import_instance():\n        # Create a client\n        client = redis_v1beta1.CloudRedisAsyncClient()\n\n        # Initialize request argument(s)\n        input_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input_config": {
                "type": "google.cloud.redis_v1beta1.types.InputConfig",
                "description": "Required. Specify data to be imported.  This corresponds to the ``input_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.redis_v1beta1.types.Instance` A Memorystore for Redis instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "input_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_instance",
          "description": "Export Redis instance data into a Redis RDB format\nfile in Cloud Storage.\nRedis will continue serving during this operation.\n\nThe returned operation is automatically deleted after a\nfew hours, so there is no need to call DeleteOperation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_v1beta1\n\n    async def sample_export_instance():\n        # Create a client\n        client = redis_v1beta1.CloudRedisAsyncClient()\n\n        # Initialize request argument(s)\n        output_config = redis_v1beta1.OutputConfig()\n        output_config.gcs_destination.uri = \"uri_value\"\n\n        request = redis_v1beta",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.redis_v1beta1.types.OutputConfig",
                "description": "Required. Specify data to be exported.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.redis_v1beta1.types.Instance` A Memorystore for Redis instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "output_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "failover_instance",
          "description": "Initiates a failover of the primary node to current\nreplica node for a specific STANDARD tier Cloud\nMemorystore for Redis instance.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_v1beta1\n\n    async def sample_failover_instance():\n        # Create a client\n        client = redis_v1beta1.CloudRedisAsyncClient()\n\n        # Initialize request argument(s)\n        request = redis_v1beta1.FailoverInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.failover_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "data_protection_mode": {
                "type": "google.cloud.redis_v1beta1.types.FailoverInstanceRequest.DataProtectionMode",
                "description": "Optional. Available data protection modes that the user can choose. If it's unspecified, data protection mode will be LIMITED_DATA_LOSS by default.  This corresponds to the ``data_protection_mode`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.redis_v1beta1.types.Instance` A Memorystore for Redis instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "data_protection_mode",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_instance",
          "description": "Deletes a specific Redis instance.  Instance stops\nserving and data is deleted.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_v1beta1\n\n    async def sample_delete_instance():\n        # Create a client\n        client = redis_v1beta1.CloudRedisAsyncClient()\n\n        # Initialize request argument(s)\n        request = redis_v1beta1.DeleteInstanceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_instance(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # H",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.protobuf.empty_pb2.Empty` A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:  service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);  }"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "reschedule_maintenance",
          "description": "Reschedule maintenance for a given instance in a\ngiven project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import redis_v1beta1\n\n    async def sample_reschedule_maintenance():\n        # Create a client\n        client = redis_v1beta1.CloudRedisAsyncClient()\n\n        # Initialize request argument(s)\n        request = redis_v1beta1.RescheduleMaintenanceRequest(\n            name=\"name_value\",\n            reschedule_type=\"SPECIFIC_TIME\",\n        )\n\n        # Make the request\n        operation = client.reschedule_maintenance(request=request)\n\n        print(\"Waiting for operation to complete..",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Redis instance resource name using the form: ``projects/{project_id}/locations/{location_id}/instances/{instance_id}`` where ``location_id`` refers to a GCP region.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "reschedule_type": {
                "type": "google.cloud.redis_v1beta1.types.RescheduleMaintenanceRequest.RescheduleType",
                "description": "Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well.  This corresponds to the ``reschedule_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "schedule_time": {
                "type": "google.protobuf.timestamp_pb2.Timestamp",
                "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example ``2012-11-15T16:19:00.094Z``.  This corresponds to the ``schedule_time`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.redis_v1beta1.types.Instance` A Memorystore for Redis instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "reschedule_type",
              "schedule_time",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      }
    ]
  }
}