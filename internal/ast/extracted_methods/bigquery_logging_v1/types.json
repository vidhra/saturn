{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-bigquery-logging\\google\\cloud\\bigquery_logging_v1\\types\\audit_data.py": [
    {
      "type": "function",
      "name": "TableInsertRequest",
      "description": "Table insert request.\n\nAttributes:\n    resource (google.cloud.bigquery_logging_v1.types.Table):\n        The new table.",
      "parameters": {
        "type": "object",
        "properties": {
          "resource": {
            "description": "The new table.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the table. Required for subtables, ignored for the main table.  This field is a member of `oneof`_ ``_name``.",
                "type": "string"
              },
              "row_headers": {
                "type": "object",
                "properties": {
                  "prices": {
                    "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "weights": {
                    "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "unit": {
                          "description": "Required. The weight unit. Acceptable values are: kg and lb",
                          "type": "object",
                          "reference": "google.shopping.type.types.Weight.WeightUnit"
                        }
                      },
                      "required": [
                        "amount_micros",
                        "unit"
                      ]
                    }
                  },
                  "number_of_items": {
                    "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "postal_code_group_names": {
                    "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "locations": {
                    "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "location_ids": {
                          "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "location_ids"
                      ]
                    }
                  }
                },
                "required": [
                  "prices",
                  "weights",
                  "number_of_items",
                  "postal_code_group_names",
                  "locations"
                ]
              },
              "column_headers": {
                "type": "object",
                "properties": {
                  "prices": {
                    "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "weights": {
                    "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "unit": {
                          "description": "Required. The weight unit. Acceptable values are: kg and lb",
                          "type": "object",
                          "reference": "google.shopping.type.types.Weight.WeightUnit"
                        }
                      },
                      "required": [
                        "amount_micros",
                        "unit"
                      ]
                    }
                  },
                  "number_of_items": {
                    "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "postal_code_group_names": {
                    "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "locations": {
                    "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "location_ids": {
                          "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "location_ids"
                      ]
                    }
                  }
                },
                "required": [
                  "prices",
                  "weights",
                  "number_of_items",
                  "postal_code_group_names",
                  "locations"
                ]
              },
              "rows": {
                "description": "Required. The list of rows that constitute the table. Must have the same length as ``row_headers``.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "cells": {
                      "description": "Required. The list of cells that constitute the row. Must have the same length as ``columnHeaders`` for two-dimensional tables, a length of 1 for one-dimensional tables.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "no_shipping": {
                            "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                            "type": "boolean"
                          },
                          "flat_rate": {
                            "type": "object",
                            "properties": {
                              "amount_micros": {
                                "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                "type": "integer"
                              },
                              "currency_code": {
                                "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                "type": "string"
                              }
                            }
                          },
                          "price_percentage": {
                            "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                            "type": "string"
                          },
                          "carrier_rate": {
                            "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                            "type": "string"
                          },
                          "subtable": {
                            "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "cells"
                  ]
                }
              }
            },
            "required": [
              "row_headers",
              "rows"
            ]
          }
        }
      }
    },
    {
      "type": "function",
      "name": "TableUpdateRequest",
      "description": "Table update request.\n\nAttributes:\n    resource (google.cloud.bigquery_logging_v1.types.Table):\n        The table to be updated.",
      "parameters": {
        "type": "object",
        "properties": {
          "resource": {
            "description": "The table to be updated.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the table. Required for subtables, ignored for the main table.  This field is a member of `oneof`_ ``_name``.",
                "type": "string"
              },
              "row_headers": {
                "type": "object",
                "properties": {
                  "prices": {
                    "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "weights": {
                    "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "unit": {
                          "description": "Required. The weight unit. Acceptable values are: kg and lb",
                          "type": "object",
                          "reference": "google.shopping.type.types.Weight.WeightUnit"
                        }
                      },
                      "required": [
                        "amount_micros",
                        "unit"
                      ]
                    }
                  },
                  "number_of_items": {
                    "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "postal_code_group_names": {
                    "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "locations": {
                    "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "location_ids": {
                          "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "location_ids"
                      ]
                    }
                  }
                },
                "required": [
                  "prices",
                  "weights",
                  "number_of_items",
                  "postal_code_group_names",
                  "locations"
                ]
              },
              "column_headers": {
                "type": "object",
                "properties": {
                  "prices": {
                    "description": "Required. A list of inclusive order price upper bounds. The last price's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"currency_code\": \"USD\"}, {\"amount_micros\": 500000000, \"currency_code\": \"USD\"}, {\"amount_micros\": -1, \"currency_code\": \"USD\"}]`` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "currency_code": {
                          "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "weights": {
                    "description": "Required. A list of inclusive order weight upper bounds. The last weight's value can be infinity by setting price amount_micros = -1. For example ``[{\"amount_micros\": 10000000, \"unit\": \"kg\"}, {\"amount_micros\": 50000000, \"unit\": \"kg\"}, {\"amount_micros\": -1, \"unit\": \"kg\"}]`` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Must be positive except -1. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount_micros": {
                          "description": "Required. The weight represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 kg = 1000000 micros). This field can also be set as infinity by setting to -1. This field only support -1 and positive value.  This field is a member of `oneof`_ ``_amount_micros``.",
                          "type": "integer"
                        },
                        "unit": {
                          "description": "Required. The weight unit. Acceptable values are: kg and lb",
                          "type": "object",
                          "reference": "google.shopping.type.types.Weight.WeightUnit"
                        }
                      },
                      "required": [
                        "amount_micros",
                        "unit"
                      ]
                    }
                  },
                  "number_of_items": {
                    "description": "Required. A list of inclusive number of items upper bounds. The last value can be ``\"infinity\"``. For example ``[\"10\", \"50\", \"infinity\"]`` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "postal_code_group_names": {
                    "description": "Required. A list of postal group names. The last value can be ``\"all other locations\"``. Example: ``[\"zone 1\", \"zone 2\", \"all other locations\"]``. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "locations": {
                    "description": "Required. A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "location_ids": {
                          "description": "Required. A non-empty list of `location IDs <https://developers.google.com/adwords/api/docs/appendix/geotargeting>`__. They must all be of the same location type (For example, state).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "location_ids"
                      ]
                    }
                  }
                },
                "required": [
                  "prices",
                  "weights",
                  "number_of_items",
                  "postal_code_group_names",
                  "locations"
                ]
              },
              "rows": {
                "description": "Required. The list of rows that constitute the table. Must have the same length as ``row_headers``.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "cells": {
                      "description": "Required. The list of cells that constitute the row. Must have the same length as ``columnHeaders`` for two-dimensional tables, a length of 1 for one-dimensional tables.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "no_shipping": {
                            "description": "If true, then the product can't be shipped. Must be true when set, can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_no_shipping``.",
                            "type": "boolean"
                          },
                          "flat_rate": {
                            "type": "object",
                            "properties": {
                              "amount_micros": {
                                "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).  This field is a member of `oneof`_ ``_amount_micros``.",
                                "type": "integer"
                              },
                              "currency_code": {
                                "description": "The currency of the price using three-letter acronyms according to `ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`__.  This field is a member of `oneof`_ ``_currency_code``.",
                                "type": "string"
                              }
                            }
                          },
                          "price_percentage": {
                            "description": "A percentage of the price represented as a number in decimal notation (For example, ``\"5.4\"``). Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_price_percentage``.",
                            "type": "string"
                          },
                          "carrier_rate": {
                            "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.  This field is a member of `oneof`_ ``_carrier_rate``.",
                            "type": "string"
                          },
                          "subtable": {
                            "description": "The name of a subtable. Can only be set in table cells (For example, not for single values), and only if all other fields are not set.  This field is a member of `oneof`_ ``_subtable``.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "cells"
                  ]
                }
              }
            },
            "required": [
              "row_headers",
              "rows"
            ]
          }
        }
      }
    },
    {
      "type": "function",
      "name": "DatasetListRequest",
      "description": "Dataset list request.\n\nAttributes:\n    list_all (bool):\n        Whether to list all datasets, including\n        hidden ones.",
      "parameters": {
        "type": "object",
        "properties": {
          "list_all": {
            "description": "Whether to list all datasets, including hidden ones.",
            "type": "boolean"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "DatasetInsertRequest",
      "description": "Dataset insert request.\n\nAttributes:\n    resource (google.cloud.bigquery_logging_v1.types.Dataset):\n        The dataset to be inserted.",
      "parameters": {
        "type": "object",
        "properties": {
          "resource": {
            "description": "The dataset to be inserted.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Resource name. Format: projects/{project}/datasets/{dataset_id}",
                "type": "string"
              },
              "display_name": {
                "description": "Human readable name, shown in the console UI.  Must be unique within a project.",
                "type": "string"
              },
              "description": {
                "description": "A description of this dataset.",
                "type": "string"
              },
              "version_id": {
                "description": "The version ID of the dataset.",
                "type": "string"
              },
              "usage": {
                "description": "Specified use case for this dataset.",
                "type": "array",
                "items": {
                  "type": "object",
                  "reference": "google.maps.mapsplatformdatasets_v1.types.Usage"
                }
              },
              "local_file_source": {
                "type": "object",
                "properties": {
                  "filename": {
                    "description": "The file name of the uploaded file.",
                    "type": "string"
                  },
                  "file_format": {
                    "description": "The format of the file that is being uploaded.",
                    "type": "object",
                    "reference": "google.maps.mapsplatformdatasets_v1.types.FileFormat"
                  }
                }
              },
              "gcs_source": {
                "type": "object",
                "properties": {
                  "uri": {
                    "description": "Required. URI of a Google Cloud Storage object with the format ``gs://bucket/path/to/object``.",
                    "type": "string"
                  }
                },
                "required": [
                  "uri"
                ]
              },
              "status": {
                "type": "object",
                "properties": {
                  "state": {
                    "description": "State enum for status.",
                    "type": "object",
                    "reference": "google.maps.mapsplatformdatasets_v1.types.Status.State"
                  },
                  "error_message": {
                    "description": "Error message indicating reason of failure. It is empty if the datasets is not in a failed state.",
                    "type": "string"
                  }
                }
              },
              "create_time": {
                "description": "Output only. Time when the dataset was first created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. Time when the dataset metadata was last updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "version_create_time": {
                "description": "Output only. Time when this version was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "version_description": {
                "description": "Output only. The description for this version of dataset. It is provided when importing data to the dataset.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "DatasetUpdateRequest",
      "description": "Dataset update request.\n\nAttributes:\n    resource (google.cloud.bigquery_logging_v1.types.Dataset):\n        The dataset to be updated.",
      "parameters": {
        "type": "object",
        "properties": {
          "resource": {
            "description": "The dataset to be updated.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Resource name. Format: projects/{project}/datasets/{dataset_id}",
                "type": "string"
              },
              "display_name": {
                "description": "Human readable name, shown in the console UI.  Must be unique within a project.",
                "type": "string"
              },
              "description": {
                "description": "A description of this dataset.",
                "type": "string"
              },
              "version_id": {
                "description": "The version ID of the dataset.",
                "type": "string"
              },
              "usage": {
                "description": "Specified use case for this dataset.",
                "type": "array",
                "items": {
                  "type": "object",
                  "reference": "google.maps.mapsplatformdatasets_v1.types.Usage"
                }
              },
              "local_file_source": {
                "type": "object",
                "properties": {
                  "filename": {
                    "description": "The file name of the uploaded file.",
                    "type": "string"
                  },
                  "file_format": {
                    "description": "The format of the file that is being uploaded.",
                    "type": "object",
                    "reference": "google.maps.mapsplatformdatasets_v1.types.FileFormat"
                  }
                }
              },
              "gcs_source": {
                "type": "object",
                "properties": {
                  "uri": {
                    "description": "Required. URI of a Google Cloud Storage object with the format ``gs://bucket/path/to/object``.",
                    "type": "string"
                  }
                },
                "required": [
                  "uri"
                ]
              },
              "status": {
                "type": "object",
                "properties": {
                  "state": {
                    "description": "State enum for status.",
                    "type": "object",
                    "reference": "google.maps.mapsplatformdatasets_v1.types.Status.State"
                  },
                  "error_message": {
                    "description": "Error message indicating reason of failure. It is empty if the datasets is not in a failed state.",
                    "type": "string"
                  }
                }
              },
              "create_time": {
                "description": "Output only. Time when the dataset was first created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. Time when the dataset metadata was last updated.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "version_create_time": {
                "description": "Output only. Time when this version was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "version_description": {
                "description": "Output only. The description for this version of dataset. It is provided when importing data to the dataset.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "JobInsertRequest",
      "description": "Job insert request.\n\nAttributes:\n    resource (google.cloud.bigquery_logging_v1.types.Job):\n        Job insert request.",
      "parameters": {
        "type": "object",
        "properties": {
          "resource": {
            "description": "Job insert request.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The resource name of the job. Format: ``projects/{project_number}/locations/{location}/jobs/{job}``",
                "type": "string"
              },
              "input_uri": {
                "description": "Input only. Specify the ``input_uri`` to populate empty ``uri`` fields in each element of ``Job.config.inputs`` or ``JobTemplate.config.inputs`` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, ``gs://bucket/inputs/file.mp4``). See `Supported input and output formats <https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats>`__.",
                "type": "string"
              },
              "output_uri": {
                "description": "Input only. Specify the ``output_uri`` to populate an empty ``Job.config.output.uri`` or ``JobTemplate.config.output.uri`` when using template. URI for the output file(s). For example, ``gs://my-bucket/outputs/``. See `Supported input and output formats <https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats>`__.",
                "type": "string"
              },
              "template_id": {
                "description": "Input only. Specify the ``template_id`` to use for populating ``Job.config``. The default is ``preset/web-hd``, which is the only supported preset.  User defined JobTemplate: ``{job_template_id}``  This field is a member of `oneof`_ ``job_config``.",
                "type": "string"
              },
              "config": {
                "type": "object",
                "properties": {
                  "inputs": {
                    "description": "List of input assets stored in Cloud Storage.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "A unique key for this input. Must be specified when using advanced mapping and edit lists.",
                          "type": "string"
                        },
                        "uri": {
                          "description": "URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, ``gs://bucket/inputs/file.mp4``). If empty, the value is populated from ``Job.input_uri``. See `Supported input and output formats <https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats>`__.",
                          "type": "string"
                        },
                        "preprocessing_config": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "type": "object",
                              "properties": {
                                "saturation": {
                                  "description": "Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.",
                                  "type": "number"
                                },
                                "contrast": {
                                  "description": "Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.",
                                  "type": "number"
                                },
                                "brightness": {
                                  "description": "Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.",
                                  "type": "number"
                                }
                              }
                            },
                            "denoise": {
                              "type": "object",
                              "properties": {
                                "strength": {
                                  "description": "Set strength of the denoise. Enter a value between 0 and 1. The higher the value, the smoother the image. 0 is no denoising. The default is 0.",
                                  "type": "number"
                                },
                                "tune": {
                                  "description": "Set the denoiser mode. The default is ``standard``.  Supported denoiser modes:  -  ``standard`` -  ``grain``",
                                  "type": "string"
                                }
                              }
                            },
                            "deblock": {
                              "type": "object",
                              "properties": {
                                "strength": {
                                  "description": "Set strength of the deblocker. Enter a value between 0 and 1. The higher the value, the stronger the block removal. 0 is no deblocking. The default is 0.",
                                  "type": "number"
                                },
                                "enabled": {
                                  "description": "Enable deblocker. The default is ``false``.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "audio": {
                              "type": "object",
                              "properties": {
                                "lufs": {
                                  "description": "Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where:  -  -24 is the Advanced Television Systems Committee (ATSC A/85) standard -  -23 is the EU R128 broadcast standard -  -19 is the prior standard for online mono audio -  -18 is the ReplayGain standard -  -16 is the prior standard for stereo audio -  -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo -  0 disables normalization",
                                  "type": "number"
                                },
                                "high_boost": {
                                  "description": "Enable boosting high frequency components. The default is ``false``.  **Note:** This field is not supported.",
                                  "type": "boolean"
                                },
                                "low_boost": {
                                  "description": "Enable boosting low frequency components. The default is ``false``.  **Note:** This field is not supported.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "crop": {
                              "type": "object",
                              "properties": {
                                "top_pixels": {
                                  "description": "The number of pixels to crop from the top. The default is 0.",
                                  "type": "integer"
                                },
                                "bottom_pixels": {
                                  "description": "The number of pixels to crop from the bottom. The default is 0.",
                                  "type": "integer"
                                },
                                "left_pixels": {
                                  "description": "The number of pixels to crop from the left. The default is 0.",
                                  "type": "integer"
                                },
                                "right_pixels": {
                                  "description": "The number of pixels to crop from the right. The default is 0.",
                                  "type": "integer"
                                }
                              }
                            },
                            "pad": {
                              "type": "object",
                              "properties": {
                                "top_pixels": {
                                  "description": "The number of pixels to add to the top. The default is 0.",
                                  "type": "integer"
                                },
                                "bottom_pixels": {
                                  "description": "The number of pixels to add to the bottom. The default is 0.",
                                  "type": "integer"
                                },
                                "left_pixels": {
                                  "description": "The number of pixels to add to the left. The default is 0.",
                                  "type": "integer"
                                },
                                "right_pixels": {
                                  "description": "The number of pixels to add to the right. The default is 0.",
                                  "type": "integer"
                                }
                              }
                            },
                            "deinterlace": {
                              "type": "object",
                              "properties": {
                                "yadif": {
                                  "type": "object",
                                  "properties": {
                                    "mode": {
                                      "description": "Specifies the deinterlacing mode to adopt. The default is ``send_frame``. Supported values:  -  ``send_frame``: Output one frame for each frame -  ``send_field``: Output one frame for each field",
                                      "type": "string"
                                    },
                                    "disable_spatial_interlacing": {
                                      "description": "Disable spacial interlacing. The default is ``false``.",
                                      "type": "boolean"
                                    },
                                    "parity": {
                                      "description": "The picture field parity assumed for the input interlaced video. The default is ``auto``. Supported values:  -  ``tff``: Assume the top field is first -  ``bff``: Assume the bottom field is first -  ``auto``: Enable automatic detection of field parity",
                                      "type": "string"
                                    },
                                    "deinterlace_all_frames": {
                                      "description": "Deinterlace all frames rather than just the frames identified as interlaced. The default is ``false``.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "bwdif": {
                                  "type": "object",
                                  "properties": {
                                    "mode": {
                                      "description": "Specifies the deinterlacing mode to adopt. The default is ``send_frame``. Supported values:  -  ``send_frame``: Output one frame for each frame -  ``send_field``: Output one frame for each field",
                                      "type": "string"
                                    },
                                    "parity": {
                                      "description": "The picture field parity assumed for the input interlaced video. The default is ``auto``. Supported values:  -  ``tff``: Assume the top field is first -  ``bff``: Assume the bottom field is first -  ``auto``: Enable automatic detection of field parity",
                                      "type": "string"
                                    },
                                    "deinterlace_all_frames": {
                                      "description": "Deinterlace all frames rather than just the frames identified as interlaced. The default is ``false``.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "edit_list": {
                    "description": "List of ``Edit atom``\\ s. Defines the ultimate timeline of the resulting file or manifest.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "A unique key for this atom. Must be specified when using advanced mapping.",
                          "type": "string"
                        },
                        "inputs": {
                          "description": "List of ``Input.key``\\ s identifying files that should be used in this atom. The listed ``inputs`` must have the same timeline.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "end_time_offset": {
                          "type": "object",
                          "properties": {
                            "nanos": {
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                              "type": "integer"
                            }
                          }
                        },
                        "start_time_offset": {
                          "type": "object",
                          "properties": {
                            "nanos": {
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "elementary_streams": {
                    "description": "List of elementary streams.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "A unique key for this elementary stream.",
                          "type": "string"
                        },
                        "video_stream": {
                          "type": "object",
                          "properties": {
                            "h264": {
                              "type": "object",
                              "properties": {
                                "width_pixels": {
                                  "description": "The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used.  For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
                                  "type": "integer"
                                },
                                "height_pixels": {
                                  "description": "The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used.  For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
                                  "type": "integer"
                                },
                                "frame_rate": {
                                  "description": "Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See `Calculating frame rate <https://cloud.google.com/transcoder/docs/concepts/frame-rate>`__ for more information.",
                                  "type": "number"
                                },
                                "bitrate_bps": {
                                  "description": "Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 800,000,000.",
                                  "type": "integer"
                                },
                                "pixel_format": {
                                  "description": "Pixel format to use. The default is ``yuv420p``.  Supported pixel formats:  -  ``yuv420p`` pixel format -  ``yuv422p`` pixel format -  ``yuv444p`` pixel format -  ``yuv420p10`` 10-bit HDR pixel format -  ``yuv422p10`` 10-bit HDR pixel format -  ``yuv444p10`` 10-bit HDR pixel format -  ``yuv420p12`` 12-bit HDR pixel format -  ``yuv422p12`` 12-bit HDR pixel format -  ``yuv444p12`` 12-bit HDR pixel format",
                                  "type": "string"
                                },
                                "rate_control_mode": {
                                  "description": "Specify the ``rate_control_mode``. The default is ``vbr``.  Supported rate control modes:  -  ``vbr`` - variable bitrate -  ``crf`` - constant rate factor",
                                  "type": "string"
                                },
                                "crf_level": {
                                  "description": "Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.",
                                  "type": "integer"
                                },
                                "allow_open_gop": {
                                  "description": "Specifies whether an open Group of Pictures (GOP) structure should be allowed or not. The default is ``false``.",
                                  "type": "boolean"
                                },
                                "gop_frame_count": {
                                  "description": "Select the GOP size based on the specified frame count. Must be greater than zero.  This field is a member of `oneof`_ ``gop_mode``.",
                                  "type": "integer"
                                },
                                "gop_duration": {
                                  "type": "object",
                                  "properties": {
                                    "nanos": {
                                      "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                      "type": "integer"
                                    },
                                    "seconds": {
                                      "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                      "type": "integer"
                                    }
                                  }
                                },
                                "enable_two_pass": {
                                  "description": "Use two-pass encoding strategy to achieve better video quality. ``VideoStream.rate_control_mode`` must be ``vbr``. The default is ``false``.",
                                  "type": "boolean"
                                },
                                "vbv_size_bits": {
                                  "description": "Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to ``VideoStream.bitrate_bps``.",
                                  "type": "integer"
                                },
                                "vbv_fullness_bits": {
                                  "description": "Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to 90% of ``VideoStream.vbv_size_bits``.",
                                  "type": "integer"
                                },
                                "entropy_coder": {
                                  "description": "The entropy coder to use. The default is ``cabac``.  Supported entropy coders:  -  ``cavlc`` -  ``cabac``",
                                  "type": "string"
                                },
                                "b_pyramid": {
                                  "description": "Allow B-pyramid for reference frame selection. This may not be supported on all decoders. The default is ``false``.",
                                  "type": "boolean"
                                },
                                "b_frame_count": {
                                  "description": "The number of consecutive B-frames. Must be greater than or equal to zero. Must be less than ``VideoStream.gop_frame_count`` if set. The default is 0.",
                                  "type": "integer"
                                },
                                "aq_strength": {
                                  "description": "Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A higher value equals a lower bitrate but smoother image. The default is 0.",
                                  "type": "number"
                                },
                                "profile": {
                                  "description": "Enforces the specified codec profile. The following profiles are supported:  -  ``baseline`` -  ``main`` -  ``high`` (default)  The available options are `FFmpeg-compatible <https://trac.ffmpeg.org/wiki/Encode/H.264#Tune>`__. Note that certain values for this field may cause the transcoder to override other fields you set in the ``H264CodecSettings`` message.",
                                  "type": "string"
                                },
                                "tune": {
                                  "description": "Enforces the specified codec tune. The available options are `FFmpeg-compatible <https://trac.ffmpeg.org/wiki/Encode/H.264#Tune>`__. Note that certain values for this field may cause the transcoder to override other fields you set in the ``H264CodecSettings`` message.",
                                  "type": "string"
                                },
                                "preset": {
                                  "description": "Enforces the specified codec preset. The default is ``veryfast``. The available options are `FFmpeg-compatible <https://trac.ffmpeg.org/wiki/Encode/H.264#Preset>`__. Note that certain values for this field may cause the transcoder to override other fields you set in the ``H264CodecSettings`` message.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "frame_rate",
                                "bitrate_bps"
                              ]
                            },
                            "h265": {
                              "type": "object",
                              "properties": {
                                "width_pixels": {
                                  "description": "The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used.  For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
                                  "type": "integer"
                                },
                                "height_pixels": {
                                  "description": "The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used.  For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
                                  "type": "integer"
                                },
                                "frame_rate": {
                                  "description": "Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See `Calculating frame rate <https://cloud.google.com/transcoder/docs/concepts/frame-rate>`__ for more information.",
                                  "type": "number"
                                },
                                "bitrate_bps": {
                                  "description": "Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 800,000,000.",
                                  "type": "integer"
                                },
                                "pixel_format": {
                                  "description": "Pixel format to use. The default is ``yuv420p``.  Supported pixel formats:  -  ``yuv420p`` pixel format -  ``yuv422p`` pixel format -  ``yuv444p`` pixel format -  ``yuv420p10`` 10-bit HDR pixel format -  ``yuv422p10`` 10-bit HDR pixel format -  ``yuv444p10`` 10-bit HDR pixel format -  ``yuv420p12`` 12-bit HDR pixel format -  ``yuv422p12`` 12-bit HDR pixel format -  ``yuv444p12`` 12-bit HDR pixel format",
                                  "type": "string"
                                },
                                "rate_control_mode": {
                                  "description": "Specify the ``rate_control_mode``. The default is ``vbr``.  Supported rate control modes:  -  ``vbr`` - variable bitrate -  ``crf`` - constant rate factor",
                                  "type": "string"
                                },
                                "crf_level": {
                                  "description": "Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.",
                                  "type": "integer"
                                },
                                "allow_open_gop": {
                                  "description": "Specifies whether an open Group of Pictures (GOP) structure should be allowed or not. The default is ``false``.",
                                  "type": "boolean"
                                },
                                "gop_frame_count": {
                                  "description": "Select the GOP size based on the specified frame count. Must be greater than zero.  This field is a member of `oneof`_ ``gop_mode``.",
                                  "type": "integer"
                                },
                                "gop_duration": {
                                  "type": "object",
                                  "properties": {
                                    "nanos": {
                                      "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                      "type": "integer"
                                    },
                                    "seconds": {
                                      "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                      "type": "integer"
                                    }
                                  }
                                },
                                "enable_two_pass": {
                                  "description": "Use two-pass encoding strategy to achieve better video quality. ``VideoStream.rate_control_mode`` must be ``vbr``. The default is ``false``.",
                                  "type": "boolean"
                                },
                                "vbv_size_bits": {
                                  "description": "Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to ``VideoStream.bitrate_bps``.",
                                  "type": "integer"
                                },
                                "vbv_fullness_bits": {
                                  "description": "Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to 90% of ``VideoStream.vbv_size_bits``.",
                                  "type": "integer"
                                },
                                "b_pyramid": {
                                  "description": "Allow B-pyramid for reference frame selection. This may not be supported on all decoders. The default is ``false``.",
                                  "type": "boolean"
                                },
                                "b_frame_count": {
                                  "description": "The number of consecutive B-frames. Must be greater than or equal to zero. Must be less than ``VideoStream.gop_frame_count`` if set. The default is 0.",
                                  "type": "integer"
                                },
                                "aq_strength": {
                                  "description": "Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A higher value equals a lower bitrate but smoother image. The default is 0.",
                                  "type": "number"
                                },
                                "profile": {
                                  "description": "Enforces the specified codec profile. The following profiles are supported:  -  8-bit profiles  -  ``main`` (default) -  ``main-intra`` -  ``mainstillpicture``  -  10-bit profiles  -  ``main10`` (default) -  ``main10-intra`` -  ``main422-10`` -  ``main422-10-intra`` -  ``main444-10`` -  ``main444-10-intra``  -  12-bit profiles  -  ``main12`` (default) -  ``main12-intra`` -  ``main422-12`` -  ``main422-12-intra`` -  ``main444-12`` -  ``main444-12-intra``  The available options are `FFmpeg-compatible <https://x265.readthedocs.io/>`__. Note that certain values for this field may cause the transcoder to override other fields you set in the ``H265CodecSettings`` message.",
                                  "type": "string"
                                },
                                "tune": {
                                  "description": "Enforces the specified codec tune. The available options are `FFmpeg-compatible <https://trac.ffmpeg.org/wiki/Encode/H.265>`__. Note that certain values for this field may cause the transcoder to override other fields you set in the ``H265CodecSettings`` message.",
                                  "type": "string"
                                },
                                "preset": {
                                  "description": "Enforces the specified codec preset. The default is ``veryfast``. The available options are `FFmpeg-compatible <https://trac.ffmpeg.org/wiki/Encode/H.265>`__. Note that certain values for this field may cause the transcoder to override other fields you set in the ``H265CodecSettings`` message.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "frame_rate",
                                "bitrate_bps"
                              ]
                            },
                            "vp9": {
                              "type": "object",
                              "properties": {
                                "width_pixels": {
                                  "description": "The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used.  For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
                                  "type": "integer"
                                },
                                "height_pixels": {
                                  "description": "The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used.  For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
                                  "type": "integer"
                                },
                                "frame_rate": {
                                  "description": "Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See `Calculating frame rate <https://cloud.google.com/transcoder/docs/concepts/frame-rate>`__ for more information.",
                                  "type": "number"
                                },
                                "bitrate_bps": {
                                  "description": "Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 480,000,000.",
                                  "type": "integer"
                                },
                                "pixel_format": {
                                  "description": "Pixel format to use. The default is ``yuv420p``.  Supported pixel formats:  -  ``yuv420p`` pixel format -  ``yuv422p`` pixel format -  ``yuv444p`` pixel format -  ``yuv420p10`` 10-bit HDR pixel format -  ``yuv422p10`` 10-bit HDR pixel format -  ``yuv444p10`` 10-bit HDR pixel format -  ``yuv420p12`` 12-bit HDR pixel format -  ``yuv422p12`` 12-bit HDR pixel format -  ``yuv444p12`` 12-bit HDR pixel format",
                                  "type": "string"
                                },
                                "rate_control_mode": {
                                  "description": "Specify the ``rate_control_mode``. The default is ``vbr``.  Supported rate control modes:  -  ``vbr`` - variable bitrate",
                                  "type": "string"
                                },
                                "crf_level": {
                                  "description": "Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.  **Note:** This field is not supported.",
                                  "type": "integer"
                                },
                                "gop_frame_count": {
                                  "description": "Select the GOP size based on the specified frame count. Must be greater than zero.  This field is a member of `oneof`_ ``gop_mode``.",
                                  "type": "integer"
                                },
                                "gop_duration": {
                                  "type": "object",
                                  "properties": {
                                    "nanos": {
                                      "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                      "type": "integer"
                                    },
                                    "seconds": {
                                      "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                      "type": "integer"
                                    }
                                  }
                                },
                                "profile": {
                                  "description": "Enforces the specified codec profile. The following profiles are supported:  -  ``profile0`` (default) -  ``profile1`` -  ``profile2`` -  ``profile3``  The available options are `WebM-compatible <https://www.webmproject.org/vp9/profiles/>`__. Note that certain values for this field may cause the transcoder to override other fields you set in the ``Vp9CodecSettings`` message.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "frame_rate",
                                "bitrate_bps"
                              ]
                            }
                          }
                        },
                        "audio_stream": {
                          "type": "object",
                          "properties": {
                            "codec": {
                              "description": "The codec for this audio stream. The default is ``aac``.  Supported audio codecs:  -  ``aac`` -  ``aac-he`` -  ``aac-he-v2`` -  ``mp3`` -  ``ac3`` -  ``eac3``",
                              "type": "string"
                            },
                            "bitrate_bps": {
                              "description": "Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000.",
                              "type": "integer"
                            },
                            "channel_count": {
                              "description": "Number of audio channels. Must be between 1 and 6. The default is 2.",
                              "type": "integer"
                            },
                            "channel_layout": {
                              "description": "A list of channel names specifying layout of the audio channels. This only affects the metadata embedded in the container headers, if supported by the specified format. The default is ``[\"fl\", \"fr\"]``.  Supported channel names:  -  ``fl`` - Front left channel -  ``fr`` - Front right channel -  ``sl`` - Side left channel -  ``sr`` - Side right channel -  ``fc`` - Front center channel -  ``lfe`` - Low frequency",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "mapping_": {
                              "description": "The mapping for the ``Job.edit_list`` atoms with audio ``EditAtom.inputs``.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "atom_key": {
                                    "description": "Required. The ``EditAtom.key`` that references the atom with audio inputs in the ``Job.edit_list``.",
                                    "type": "string"
                                  },
                                  "input_key": {
                                    "description": "Required. The ``Input.key`` that identifies the input file.",
                                    "type": "string"
                                  },
                                  "input_track": {
                                    "description": "Required. The zero-based index of the track in the input file.",
                                    "type": "integer"
                                  },
                                  "input_channel": {
                                    "description": "Required. The zero-based index of the channel in the input audio stream.",
                                    "type": "integer"
                                  },
                                  "output_channel": {
                                    "description": "Required. The zero-based index of the channel in the output audio stream.",
                                    "type": "integer"
                                  },
                                  "gain_db": {
                                    "description": "Audio volume control in dB. Negative values decrease volume, positive values increase. The default is 0.",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "atom_key",
                                  "input_key",
                                  "input_track",
                                  "input_channel",
                                  "output_channel"
                                ]
                              }
                            },
                            "sample_rate_hertz": {
                              "description": "The audio sample rate in Hertz. The default is 48000 Hertz.",
                              "type": "integer"
                            },
                            "language_code": {
                              "description": "The BCP-47 language code, such as ``en-US`` or ``sr-Latn``. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier. Not supported in MP4 files.",
                              "type": "string"
                            },
                            "display_name": {
                              "description": "The name for this particular audio stream that will be added to the HLS/DASH manifest. Not supported in MP4 files.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "bitrate_bps"
                          ]
                        },
                        "text_stream": {
                          "type": "object",
                          "properties": {
                            "codec": {
                              "description": "The codec for this text stream. The default is ``webvtt``.  Supported text codecs:  -  ``srt`` -  ``ttml`` -  ``cea608`` -  ``cea708`` -  ``webvtt``",
                              "type": "string"
                            },
                            "language_code": {
                              "description": "The BCP-47 language code, such as ``en-US`` or ``sr-Latn``. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier. Not supported in MP4 files.",
                              "type": "string"
                            },
                            "mapping_": {
                              "description": "The mapping for the ``Job.edit_list`` atoms with text ``EditAtom.inputs``.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "atom_key": {
                                    "description": "Required. The ``EditAtom.key`` that references atom with text inputs in the ``Job.edit_list``.",
                                    "type": "string"
                                  },
                                  "input_key": {
                                    "description": "Required. The ``Input.key`` that identifies the input file.",
                                    "type": "string"
                                  },
                                  "input_track": {
                                    "description": "Required. The zero-based index of the track in the input file.",
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "atom_key",
                                  "input_key",
                                  "input_track"
                                ]
                              }
                            },
                            "display_name": {
                              "description": "The name for this particular text stream that will be added to the HLS/DASH manifest. Not supported in MP4 files.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "mux_streams": {
                    "description": "List of multiplexing settings for output streams.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "A unique key for this multiplexed stream. HLS media manifests will be named ``MuxStream.key`` with the ``.m3u8`` extension suffix.",
                          "type": "string"
                        },
                        "file_name": {
                          "description": "The name of the generated file. The default is ``MuxStream.key`` with the extension suffix corresponding to the ``MuxStream.container``.  Individual segments also have an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as ``mux_stream0000000123.ts``.",
                          "type": "string"
                        },
                        "container": {
                          "description": "The container format. The default is ``mp4``  Supported container formats:  -  ``ts`` -  ``fmp4``- the corresponding file extension is ``.m4s`` -  ``mp4`` -  ``vtt``  See also: `Supported input and output formats <https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats>`__",
                          "type": "string"
                        },
                        "elementary_streams": {
                          "description": "List of ``ElementaryStream.key``\\ s multiplexed in this stream.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "segment_settings": {
                          "type": "object",
                          "properties": {
                            "segment_duration": {
                              "type": "object",
                              "properties": {
                                "nanos": {
                                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                  "type": "integer"
                                },
                                "seconds": {
                                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                  "type": "integer"
                                }
                              }
                            },
                            "individual_segments": {
                              "description": "Required. Create an individual segment file. The default is ``false``.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "individual_segments"
                          ]
                        },
                        "encryption_id": {
                          "description": "Identifier of the encryption configuration to use. If omitted, output will be unencrypted.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "manifests": {
                    "description": "List of output manifests.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "file_name": {
                          "description": "The name of the generated file. The default is ``manifest`` with the extension suffix corresponding to the ``Manifest.type``.",
                          "type": "string"
                        },
                        "type_": {
                          "description": "Required. Type of the manifest.",
                          "type": "object",
                          "reference": "google.cloud.video.transcoder_v1.types.Manifest.ManifestType"
                        },
                        "mux_streams": {
                          "description": "Required. List of user given ``MuxStream.key``\\ s that should appear in this manifest.  When ``Manifest.type`` is ``HLS``, a media manifest with name ``MuxStream.key`` and ``.m3u8`` extension is generated for each element of the ``Manifest.mux_streams``.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dash": {
                          "type": "object",
                          "properties": {
                            "segment_reference_scheme": {
                              "description": "The segment reference scheme for a ``DASH`` manifest. The default is ``SEGMENT_LIST``.",
                              "type": "object",
                              "reference": "google.cloud.video.transcoder_v1.types.Manifest.DashConfig.SegmentReferenceScheme"
                            }
                          }
                        }
                      },
                      "required": [
                        "type_",
                        "mux_streams"
                      ]
                    }
                  },
                  "output": {
                    "type": "object",
                    "properties": {
                      "uri": {
                        "description": "URI for the output file(s). For example, ``gs://my-bucket/outputs/``. If empty, the value is populated from ``Job.output_uri``. See `Supported input and output formats <https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats>`__.",
                        "type": "string"
                      }
                    }
                  },
                  "ad_breaks": {
                    "description": "List of ad breaks. Specifies where to insert ad break tags in the output manifests.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "start_time_offset": {
                          "type": "object",
                          "properties": {
                            "nanos": {
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pubsub_destination": {
                    "type": "object",
                    "properties": {
                      "topic": {
                        "description": "The name of the Pub/Sub topic to publish job completion notification to. For example: ``projects/{project}/topics/{topic}``.",
                        "type": "string"
                      }
                    }
                  },
                  "sprite_sheets": {
                    "description": "List of output sprite sheets. Spritesheets require at least one VideoStream in the Jobconfig.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "format_": {
                          "description": "Format type. The default is ``jpeg``.  Supported formats:  -  ``jpeg``",
                          "type": "string"
                        },
                        "file_prefix": {
                          "description": "Required. File name prefix for the generated sprite sheets.  Each sprite sheet has an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as ``sprite_sheet0000000123.jpeg``.",
                          "type": "string"
                        },
                        "sprite_width_pixels": {
                          "description": "Required. The width of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the [SpriteSheet.sprite_width_pixels][google.cloud.video.transcoder.v1.SpriteSheet.sprite_width_pixels] field or the [SpriteSheet.sprite_height_pixels][google.cloud.video.transcoder.v1.SpriteSheet.sprite_height_pixels] field, but not both (the API will automatically calculate the missing field).  For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
                          "type": "integer"
                        },
                        "sprite_height_pixels": {
                          "description": "Required. The height of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the [SpriteSheet.sprite_height_pixels][google.cloud.video.transcoder.v1.SpriteSheet.sprite_height_pixels] field or the [SpriteSheet.sprite_width_pixels][google.cloud.video.transcoder.v1.SpriteSheet.sprite_width_pixels] field, but not both (the API will automatically calculate the missing field).  For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
                          "type": "integer"
                        },
                        "column_count": {
                          "description": "The maximum number of sprites per row in a sprite sheet. The default is 0, which indicates no maximum limit.",
                          "type": "integer"
                        },
                        "row_count": {
                          "description": "The maximum number of rows per sprite sheet. When the sprite sheet is full, a new sprite sheet is created. The default is 0, which indicates no maximum limit.",
                          "type": "integer"
                        },
                        "start_time_offset": {
                          "type": "object",
                          "properties": {
                            "nanos": {
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                              "type": "integer"
                            }
                          }
                        },
                        "end_time_offset": {
                          "type": "object",
                          "properties": {
                            "nanos": {
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                              "type": "integer"
                            }
                          }
                        },
                        "total_count": {
                          "description": "Total number of sprites. Create the specified number of sprites distributed evenly across the timeline of the output media. The default is 100.  This field is a member of `oneof`_ ``extraction_strategy``.",
                          "type": "integer"
                        },
                        "interval": {
                          "type": "object",
                          "properties": {
                            "nanos": {
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                              "type": "integer"
                            }
                          }
                        },
                        "quality": {
                          "description": "The quality of the generated sprite sheet. Enter a value between 1 and 100, where 1 is the lowest quality and 100 is the highest quality. The default is 100. A high quality value corresponds to a low image data compression ratio.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "file_prefix",
                        "sprite_width_pixels",
                        "sprite_height_pixels"
                      ]
                    }
                  },
                  "overlays": {
                    "description": "List of overlays on the output video, in descending Z-order.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "image": {
                          "type": "object",
                          "properties": {
                            "content": {
                              "description": "Image content, represented as a stream of bytes. Note: As with all ``bytes`` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
                              "type": "object",
                              "reference": "bytes"
                            },
                            "source": {
                              "type": "object",
                              "properties": {
                                "gcs_image_uri": {
                                  "description": "**Use ``image_uri`` instead.**  The Google Cloud Storage URI of the form ``gs://bucket_name/object_name``. Object versioning is not supported. See `Google Cloud Storage Request URIs <https://cloud.google.com/storage/docs/reference-uris>`__ for more info.",
                                  "type": "string"
                                },
                                "image_uri": {
                                  "description": "The URI of the source image. Can be either:  1. A Google Cloud Storage URI of the form ``gs://bucket_name/object_name``. Object versioning is not supported. See `Google Cloud Storage Request URIs <https://cloud.google.com/storage/docs/reference-uris>`__ for more info.  2. A publicly-accessible image HTTP/HTTPS URL. When fetching images from HTTP/HTTPS URLs, Google cannot guarantee that the request will be completed. Your request may fail if the specified host denies the request (e.g. due to request throttling or DOS prevention), or if Google throttles requests to the site for abuse prevention. You should not depend on externally-hosted images for production applications.  When both ``gcs_image_uri`` and ``image_uri`` are specified, ``image_uri`` takes precedence.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "animations": {
                          "description": "List of Animations. The list should be chronological, without any time overlap.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "animation_static": {
                                "type": "object",
                                "properties": {
                                  "xy": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "description": "Normalized x coordinate.",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "Normalized y coordinate.",
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "start_time_offset": {
                                    "type": "object",
                                    "properties": {
                                      "nanos": {
                                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                        "type": "integer"
                                      },
                                      "seconds": {
                                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                        "type": "integer"
                                      }
                                    }
                                  }
                                }
                              },
                              "animation_fade": {
                                "type": "object",
                                "properties": {
                                  "fade_type": {
                                    "description": "Required. Type of fade animation: ``FADE_IN`` or ``FADE_OUT``.",
                                    "type": "object",
                                    "reference": "google.cloud.video.transcoder_v1.types.Overlay.FadeType"
                                  },
                                  "xy": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "description": "Normalized x coordinate.",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "Normalized y coordinate.",
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "start_time_offset": {
                                    "type": "object",
                                    "properties": {
                                      "nanos": {
                                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                        "type": "integer"
                                      },
                                      "seconds": {
                                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                        "type": "integer"
                                      }
                                    }
                                  },
                                  "end_time_offset": {
                                    "type": "object",
                                    "properties": {
                                      "nanos": {
                                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                        "type": "integer"
                                      },
                                      "seconds": {
                                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "fade_type"
                                ]
                              },
                              "animation_end": {
                                "type": "object",
                                "properties": {
                                  "start_time_offset": {
                                    "type": "object",
                                    "properties": {
                                      "nanos": {
                                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                                        "type": "integer"
                                      },
                                      "seconds": {
                                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                                        "type": "integer"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "encryptions": {
                    "description": "List of encryption configurations for the content. Each configuration has an ID. Specify this ID in the [MuxStream.encryption_id][google.cloud.video.transcoder.v1.MuxStream.encryption_id] field to indicate the configuration to use for that ``MuxStream`` output.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Required. Identifier for this set of encryption options.",
                          "type": "string"
                        },
                        "aes_128": {
                          "type": "object",
                          "properties": {}
                        },
                        "sample_aes": {
                          "type": "object",
                          "properties": {}
                        },
                        "mpeg_cenc": {
                          "type": "object",
                          "properties": {
                            "scheme": {
                              "description": "Required. Specify the encryption scheme.  Supported encryption schemes:  -  ``cenc`` -  ``cbcs``",
                              "type": "string"
                            }
                          },
                          "required": [
                            "scheme"
                          ]
                        },
                        "secret_manager_key_source": {
                          "type": "object",
                          "properties": {
                            "secret_version": {
                              "description": "Required. The name of the Secret Version containing the encryption key in the following format: ``projects/{project}/secrets/{secret_id}/versions/{version_number}``  Note that only numbered versions are supported. Aliases like \"latest\" are not supported.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "secret_version"
                          ]
                        },
                        "drm_systems": {
                          "type": "object",
                          "properties": {
                            "widevine": {
                              "type": "object",
                              "properties": {}
                            },
                            "fairplay": {
                              "type": "object",
                              "properties": {}
                            },
                            "playready": {
                              "type": "object",
                              "properties": {}
                            },
                            "clearkey": {
                              "type": "object",
                              "properties": {}
                            }
                          }
                        }
                      },
                      "required": [
                        "id",
                        "drm_systems"
                      ]
                    }
                  }
                }
              },
              "state": {
                "description": "Output only. The current state of the job.",
                "type": "object",
                "reference": "google.cloud.video.transcoder_v1.types.Job.ProcessingState"
              },
              "create_time": {
                "description": "Output only. The time the job was created.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "start_time": {
                "description": "Output only. The time the transcoding started.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "end_time": {
                "description": "Output only. The time the transcoding finished.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "ttl_after_completion_days": {
                "description": "Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30.",
                "type": "integer"
              },
              "labels": {
                "description": "The labels associated with this job. You can use these to organize and group your jobs.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "error": {
                "type": "object",
                "properties": {
                  "state": {
                    "description": "State enum for status.",
                    "type": "object",
                    "reference": "google.maps.mapsplatformdatasets_v1.types.Status.State"
                  },
                  "error_message": {
                    "description": "Error message indicating reason of failure. It is empty if the datasets is not in a failed state.",
                    "type": "string"
                  }
                }
              },
              "mode": {
                "description": "The processing mode of the job. The default is ``PROCESSING_MODE_INTERACTIVE``.",
                "type": "object",
                "reference": "google.cloud.video.transcoder_v1.types.Job.ProcessingMode"
              },
              "batch_mode_priority": {
                "description": "The processing priority of a batch job. This field can only be set for batch mode jobs. The default value is 0. This value cannot be negative. Higher values correspond to higher priorities for the job.",
                "type": "integer"
              },
              "optimization": {
                "description": "Optional. The optimization strategy of the job. The default is ``AUTODETECT``.",
                "type": "object",
                "reference": "google.cloud.video.transcoder_v1.types.Job.OptimizationStrategy"
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "JobQueryRequest",
      "description": "Job query request.\n\nAttributes:\n    query (str):\n        The query.\n    max_results (int):\n        The maximum number of results.\n    default_dataset (google.cloud.bigquery_logging_v1.types.DatasetName):\n        The default dataset for tables that do not\n        have a dataset specified.\n    project_id (str):\n        Project that the query should be charged to.\n    dry_run (bool):\n        If true, don't actually run the job. Just\n        check that it would run.",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "description": "The query.",
            "type": "string"
          },
          "max_results": {
            "description": "The maximum number of results.",
            "type": "integer"
          },
          "default_dataset": {
            "description": "The default dataset for tables that do not have a dataset specified.",
            "type": "object",
            "properties": {
              "project_id": {
                "description": "The project ID.",
                "type": "string"
              },
              "dataset_id": {
                "description": "The dataset ID within the project.",
                "type": "string"
              }
            }
          },
          "project_id": {
            "description": "Project that the query should be charged to.",
            "type": "string"
          },
          "dry_run": {
            "description": "If true, don't actually run the job. Just check that it would run.",
            "type": "boolean"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "JobGetQueryResultsRequest",
      "description": "Job getQueryResults request.\n\nAttributes:\n    max_results (int):\n        Maximum number of results to return.\n    start_row (int):\n        Zero-based row number at which to start.",
      "parameters": {
        "type": "object",
        "properties": {
          "max_results": {
            "description": "Maximum number of results to return.",
            "type": "integer"
          },
          "start_row": {
            "description": "Zero-based row number at which to start.",
            "type": "integer"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "TableDataListRequest",
      "description": "Table data-list request.\n\nAttributes:\n    start_row (int):\n        Starting row offset.\n    max_results (int):\n        Maximum number of results to return.",
      "parameters": {
        "type": "object",
        "properties": {
          "start_row": {
            "description": "Starting row offset.",
            "type": "integer"
          },
          "max_results": {
            "description": "Maximum number of results to return.",
            "type": "integer"
          }
        }
      }
    }
  ]
}