{
  "TranslationService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "translate_text",
          "description": "Translates input text and returns translated text.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3beta1\n\n    async def sample_translate_text():\n        # Create a client\n        client = translate_v3beta1.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3beta1.TranslateTextRequest(\n            contents=['contents_value1', 'contents_value2'],\n            target_language_code=\"target_language_code_value\",\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.translate_text(request=re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3beta1.types.TranslateTextResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "detect_language",
          "description": "Detects the language of text within a request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3beta1\n\n    async def sample_detect_language():\n        # Create a client\n        client = translate_v3beta1.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3beta1.DetectLanguageRequest(\n            content=\"content_value\",\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.detect_language(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Option",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Project or location to make a call. Must refer to a caller's project.  Format: ``projects/{project-number-or-id}/locations/{location-id}`` or ``projects/{project-number-or-id}``.  For global calls, use ``projects/{project-number-or-id}/locations/global`` or ``projects/{project-number-or-id}``.  Only models within the same region (has same location-id) can be used. Otherwise an INVALID_ARGUMENT (400) error is returned.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "model": {
                "type": "str",
                "description": "Optional. The language detection model to be used.  Format: ``projects/{project-number-or-id}/locations/{location-id}/models/language-detection/{model-id}``  Only one language detection model is currently supported: ``projects/{project-number-or-id}/locations/{location-id}/models/language-detection/default``.  If not specified, the default model is used.  This corresponds to the ``model`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mime_type": {
                "type": "str",
                "description": "Optional. The format of the source text, for example, \"text/html\", \"text/plain\". If left blank, the MIME type defaults to \"text/html\".  This corresponds to the ``mime_type`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3beta1.types.DetectLanguageResponse: The response message for language detection."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "model",
              "mime_type",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3beta1.types.DetectLanguageResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_supported_languages",
          "description": "Returns a list of supported languages for\ntranslation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3beta1\n\n    async def sample_get_supported_languages():\n        # Create a client\n        client = translate_v3beta1.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3beta1.GetSupportedLanguagesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.get_supported_languages(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Uni",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Project or location to make a call. Must refer to a caller's project.  Format: ``projects/{project-number-or-id}`` or ``projects/{project-number-or-id}/locations/{location-id}``.  For global calls, use ``projects/{project-number-or-id}/locations/global`` or ``projects/{project-number-or-id}``.  Non-global location is required for AutoML models.  Only models within the same region (have same location-id) can be used, otherwise an INVALID_ARGUMENT (400) error is returned.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "display_language_code": {
                "type": "str",
                "description": "Optional. The language to use to return localized, human readable names of supported languages. If missing, then display names are not returned in a response.  This corresponds to the ``display_language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "model": {
                "type": "str",
                "description": "Optional. Get supported languages of this model.  The format depends on model type:  -  AutoML Translation models: ``projects/{project-number-or-id}/locations/{location-id}/models/{model-id}``  -  General (built-in) models: ``projects/{project-number-or-id}/locations/{location-id}/models/general/nmt``,  Returns languages supported by the specified model. If missing, we get supported languages of Google general NMT model.  This corresponds to the ``model`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3beta1.types.SupportedLanguages: The response message for discovering supported languages."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "display_language_code",
              "model",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3beta1.types.SupportedLanguages"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "translate_document",
          "description": "Translates documents in synchronous mode.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3beta1\n\n    async def sample_translate_document():\n        # Create a client\n        client = translate_v3beta1.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        document_input_config = translate_v3beta1.DocumentInputConfig()\n        document_input_config.content = b'content_blob'\n\n        request = translate_v3beta1.TranslateDocumentRequest(\n            parent=\"parent_value\",\n            target_language_code=\"target_language_code_value\",\n            document_input_c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3beta1.types.TranslateDocumentResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_translate_text",
          "description": "Translates a large volume of text in asynchronous\nbatch mode. This function provides real-time output as\nthe inputs are being processed. If caller cancels a\nrequest, the partial results (for an input file, it's\nall or nothing) may still be available on the specified\noutput location.\n\nThis call returns immediately and you can\nuse google.longrunning.Operation.name to poll the status\nof the call.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3beta1\n\n    async def sample_batch_translate_text():\n        # Create a client\n        client = translate_v3beta1.TranslationServiceAsyncClient()\n\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_translate_document",
          "description": "Translates a large volume of document in asynchronous\nbatch mode. This function provides real-time output as\nthe inputs are being processed. If caller cancels a\nrequest, the partial results (for an input file, it's\nall or nothing) may still be available on the specified\noutput location.\n\nThis call returns immediately and you can use\ngoogle.longrunning.Operation.name to poll the status of\nthe call.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3beta1\n\n    async def sample_batch_translate_document():\n        # Create a client\n        client = translate_v3beta1.TranslationServiceAsyncCli",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Location to make a regional call.  Format: ``projects/{project-number-or-id}/locations/{location-id}``.  The ``global`` location is not supported for batch translation.  Only AutoML Translation models or glossaries within the same region (have the same location-id) can be used, otherwise an INVALID_ARGUMENT (400) error is returned.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "source_language_code": {
                "type": "str",
                "description": "Required. The BCP-47 language code of the input document if known, for example, \"en-US\" or \"sr-Latn\". Supported language codes are listed in `Language Support <https://cloud.google.com/translate/docs/languages>`__.  This corresponds to the ``source_language_code`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "target_language_codes": {
                "type": "MutableSequence[str]",
                "description": "Required. The BCP-47 language code to use for translation of the input document. Specify up to 10 language codes here.  This corresponds to the ``target_language_codes`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input_configs": {
                "type": "MutableSequence[google.cloud.translate_v3beta1.types.BatchDocumentInputConfig]",
                "description": "Required. Input configurations. The total number of files matched should be <= 100. The total content size to translate should be <= 100M Unicode codepoints. The files must use UTF-8 encoding.  This corresponds to the ``input_configs`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.translate_v3beta1.types.BatchDocumentOutputConfig",
                "description": "Required. Output configuration. If 2 input configs match to the same file (that is, same input path), we don't generate output for duplicate inputs.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.translate_v3beta1.types.BatchTranslateDocumentResponse` Stored in the [google.longrunning.Operation.response][google.longrunning.Operation.response] field returned by BatchTranslateDocument if at least one document is translated successfully."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "source_language_code",
              "target_language_codes",
              "input_configs",
              "output_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_glossary",
          "description": "Creates a glossary and returns the long-running operation.\nReturns NOT_FOUND, if the project doesn't exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3beta1\n\n    async def sample_create_glossary():\n        # Create a client\n        client = translate_v3beta1.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        glossary = translate_v3beta1.Glossary()\n        glossary.name = \"name_value\"\n\n        request = translate_v3beta1.CreateGlossaryRequest(\n            parent=\"parent_value\",\n            glossary=glossary,\n        )\n\n        # Make the request\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project name. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "glossary": {
                "type": "google.cloud.translate_v3beta1.types.Glossary",
                "description": "Required. The glossary to create. This corresponds to the ``glossary`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.translate_v3beta1.types.Glossary` Represents a glossary built from user provided data."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "glossary",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_glossaries",
          "description": "Lists glossaries in a project. Returns NOT_FOUND, if the project\ndoesn't exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3beta1\n\n    async def sample_list_glossaries():\n        # Create a client\n        client = translate_v3beta1.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3beta1.ListGlossariesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_glossaries(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            pr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the project from which to list all of the glossaries.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Optional. Filter specifying constraints of a list operation. Specify the constraint by the format of \"key=value\", where key must be \"src\" or \"tgt\", and the value must be a valid language code. For multiple restrictions, concatenate them by \"AND\" (uppercase only), such as: \"src=en-US AND tgt=zh-CN\". Notice that the exact match is used here, which means using 'en-US' and 'en' can lead to different results, which depends on the language code you used when you create the glossary. For the unidirectional glossaries, the \"src\" and \"tgt\" add restrictions on the source and target language code separately. For the equivalent term set glossaries, the \"src\" and/or \"tgt\" add restrictions on the term set. For example: \"src=en-US AND tgt=zh-CN\" will only pick the unidirectional glossaries which exactly match the source language code as \"en-US\" and the target language code \"zh-CN\", but all equivalent term set glossaries which contain \"en-US\" and \"zh-CN\" in their language set will be picked. If missing, no filtering is performed.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3beta1.services.translation_service.pagers.ListGlossariesAsyncPager: Response message for ListGlossaries.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3beta1.services.translation_service.pagers.ListGlossariesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_glossary",
          "description": "Gets a glossary. Returns NOT_FOUND, if the glossary doesn't\nexist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3beta1\n\n    async def sample_get_glossary():\n        # Create a client\n        client = translate_v3beta1.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3beta1.GetGlossaryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_glossary(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.translat",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the glossary to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.translate_v3beta1.types.Glossary: Represents a glossary built from user provided data."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.translate_v3beta1.types.Glossary"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_glossary",
          "description": "Deletes a glossary, or cancels glossary construction if the\nglossary isn't created yet. Returns NOT_FOUND, if the glossary\ndoesn't exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import translate_v3beta1\n\n    async def sample_delete_glossary():\n        # Create a client\n        client = translate_v3beta1.TranslationServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = translate_v3beta1.DeleteGlossaryRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_glossary(request=request)\n\n        print(\"Waiting for operatio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the glossary to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.translate_v3beta1.types.DeleteGlossaryResponse` Stored in the [google.longrunning.Operation.response][google.longrunning.Operation.response] field returned by DeleteGlossary."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      }
    ]
  }
}