{
  "Speech": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_recognizer",
          "description": "Creates a [Recognizer][google.cloud.speech.v2.Recognizer].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_create_recognizer():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.CreateRecognizerRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_recognizer(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location where this Recognizer will be created. The expected format is ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "recognizer": {
                "type": "google.cloud.speech_v2.types.Recognizer",
                "description": "Required. The Recognizer to create. This corresponds to the ``recognizer`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "recognizer_id": {
                "type": "str",
                "description": "The ID to use for the Recognizer, which will become the final component of the Recognizer's resource name.  This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/.  This corresponds to the ``recognizer_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.Recognizer` A Recognizer message. Stores recognition configuration and metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "recognizer",
              "recognizer_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_recognizers",
          "description": "Lists Recognizers.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_list_recognizers():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.ListRecognizersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_recognizers(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v2.types.ListRecognizersR",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location of Recognizers to list. The expected format is ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v2.services.speech.pagers.ListRecognizersAsyncPager: Response message for the [ListRecognizers][google.cloud.speech.v2.Speech.ListRecognizers] method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.speech_v2.services.speech.pagers.ListRecognizersAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_recognizer",
          "description": "Returns the requested\n[Recognizer][google.cloud.speech.v2.Recognizer]. Fails with\n[NOT_FOUND][google.rpc.Code.NOT_FOUND] if the requested\nRecognizer doesn't exist.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_get_recognizer():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.GetRecognizerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_recognizer(request=request)\n\n        # Handle the response\n        print",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Recognizer to retrieve. The expected format is ``projects/{project}/locations/{location}/recognizers/{recognizer}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v2.types.Recognizer: A Recognizer message. Stores recognition configuration and metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.speech_v2.types.Recognizer"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_recognizer",
          "description": "Updates the [Recognizer][google.cloud.speech.v2.Recognizer].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_update_recognizer():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.UpdateRecognizerRequest(\n        )\n\n        # Make the request\n        operation = client.update_recognizer(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "recognizer": {
                "type": "google.cloud.speech_v2.types.Recognizer",
                "description": "Required. The Recognizer to update.  The Recognizer's ``name`` field is used to identify the Recognizer to update. Format: ``projects/{project}/locations/{location}/recognizers/{recognizer}``.  This corresponds to the ``recognizer`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to update. If empty, all non-default valued fields are considered for update. Use ``*`` to update the entire Recognizer resource.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.Recognizer` A Recognizer message. Stores recognition configuration and metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "recognizer",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_recognizer",
          "description": "Deletes the [Recognizer][google.cloud.speech.v2.Recognizer].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_delete_recognizer():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.DeleteRecognizerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_recognizer(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        pr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Recognizer to delete. Format: ``projects/{project}/locations/{location}/recognizers/{recognizer}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.Recognizer` A Recognizer message. Stores recognition configuration and metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undelete_recognizer",
          "description": "Undeletes the [Recognizer][google.cloud.speech.v2.Recognizer].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_undelete_recognizer():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.UndeleteRecognizerRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.undelete_recognizer(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n  ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the Recognizer to undelete. Format: ``projects/{project}/locations/{location}/recognizers/{recognizer}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.Recognizer` A Recognizer message. Stores recognition configuration and metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "recognize",
          "description": "Performs synchronous Speech recognition: receive\nresults after all audio has been sent and processed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_recognize():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.RecognizeRequest(\n            content=b'content_blob',\n            recognizer=\"recognizer_value\",\n        )\n\n        # Make the request\n        response = await client.recognize(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "recognizer": {
                "type": "str",
                "description": "Required. The name of the Recognizer to use during recognition. The expected format is ``projects/{project}/locations/{location}/recognizers/{recognizer}``. The {recognizer} segment may be set to ``_`` to use an empty implicit Recognizer.  This corresponds to the ``recognizer`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "config": {
                "type": "google.cloud.speech_v2.types.RecognitionConfig",
                "description": "Features and audio metadata to use for the Automatic Speech Recognition. This field in combination with the [config_mask][google.cloud.speech.v2.RecognizeRequest.config_mask] field can be used to override parts of the [default_recognition_config][google.cloud.speech.v2.Recognizer.default_recognition_config] of the Recognizer resource.  This corresponds to the ``config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "config_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields in [config][google.cloud.speech.v2.RecognizeRequest.config] that override the values in the [default_recognition_config][google.cloud.speech.v2.Recognizer.default_recognition_config] of the recognizer during this recognition request. If no mask is provided, all non-default valued fields in [config][google.cloud.speech.v2.RecognizeRequest.config] override the values in the recognizer for this recognition request. If a mask is provided, only the fields listed in the mask override the config in the recognizer for this recognition request. If a wildcard (``*``) is provided, [config][google.cloud.speech.v2.RecognizeRequest.config] completely overrides and replaces the config in the recognizer for this recognition request.  This corresponds to the ``config_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "content": {
                "type": "bytes",
                "description": "The audio data bytes encoded as specified in [RecognitionConfig][google.cloud.speech.v2.RecognitionConfig]. As with all bytes fields, proto buffers use a pure binary representation, whereas JSON representations use base64.  This corresponds to the ``content`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "uri": {
                "type": "str",
                "description": "URI that points to a file that contains audio data bytes as specified in [RecognitionConfig][google.cloud.speech.v2.RecognitionConfig]. The file must not be compressed (for example, gzip). Currently, only Google Cloud Storage URIs are supported, which must be specified in the following format: ``gs://bucket_name/object_name`` (other URI formats return [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see `Request URIs <https://cloud.google.com/storage/docs/reference-uris>`__.  This corresponds to the ``uri`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v2.types.RecognizeResponse: Response message for the [Recognize][google.cloud.speech.v2.Speech.Recognize] method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "recognizer",
              "config",
              "config_mask",
              "content",
              "uri",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.speech_v2.types.RecognizeResponse"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "streaming_recognize",
          "description": "Performs bidirectional streaming speech recognition:\nreceive results while sending audio. This method is only\navailable via the gRPC API (not REST).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_streaming_recognize():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.StreamingRecognizeRequest(\n            recognizer=\"recognizer_value\",\n        )\n\n        # This method expects an iterator which contains\n        # 'speech_v2.StreamingRecognizeRequest' objects\n        # Here ",
          "parameters": {
            "type": "object",
            "properties": {
              "requests": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_recognize",
          "description": "Performs batch asynchronous speech recognition: send\na request with N audio files and receive a long running\noperation that can be polled to see when the\ntranscriptions are finished.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_batch_recognize():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.BatchRecognizeRequest(\n            recognizer=\"recognizer_value\",\n        )\n\n        # Make the request\n        operation = client.batch_recognize(request=request)\n\n        print(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "recognizer": {
                "type": "str",
                "description": "Required. The name of the Recognizer to use during recognition. The expected format is ``projects/{project}/locations/{location}/recognizers/{recognizer}``. The {recognizer} segment may be set to ``_`` to use an empty implicit Recognizer.  This corresponds to the ``recognizer`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "config": {
                "type": "google.cloud.speech_v2.types.RecognitionConfig",
                "description": "Features and audio metadata to use for the Automatic Speech Recognition. This field in combination with the [config_mask][google.cloud.speech.v2.BatchRecognizeRequest.config_mask] field can be used to override parts of the [default_recognition_config][google.cloud.speech.v2.Recognizer.default_recognition_config] of the Recognizer resource.  This corresponds to the ``config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "config_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields in [config][google.cloud.speech.v2.BatchRecognizeRequest.config] that override the values in the [default_recognition_config][google.cloud.speech.v2.Recognizer.default_recognition_config] of the recognizer during this recognition request. If no mask is provided, all given fields in [config][google.cloud.speech.v2.BatchRecognizeRequest.config] override the values in the recognizer for this recognition request. If a mask is provided, only the fields listed in the mask override the config in the recognizer for this recognition request. If a wildcard (``*``) is provided, [config][google.cloud.speech.v2.BatchRecognizeRequest.config] completely overrides and replaces the config in the recognizer for this recognition request.  This corresponds to the ``config_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "files": {
                "type": "MutableSequence[google.cloud.speech_v2.types.BatchRecognizeFileMetadata]",
                "description": "Audio files with file metadata for ASR. The maximum number of files allowed to be specified is 15.  This corresponds to the ``files`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.BatchRecognizeResponse` Response message for [BatchRecognize][google.cloud.speech.v2.Speech.BatchRecognize] that is packaged into a longrunning [Operation][google.longrunning.Operation]."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "recognizer",
              "config",
              "config_mask",
              "files",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_config",
          "description": "Returns the requested [Config][google.cloud.speech.v2.Config].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_get_config():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.GetConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v2.types.GetConfigRequest, dict]]):\n        The",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the config to retrieve. There is exactly one config resource per project per location. The expected format is ``projects/{project}/locations/{location}/config``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v2.types.Config: Message representing the config for the Speech-to-Text API. This includes an optional [KMS key](\\ https://cloud.google.com/kms/docs/resource-hierarchy#keys) with which incoming data will be encrypted."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.speech_v2.types.Config"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_config",
          "description": "Updates the [Config][google.cloud.speech.v2.Config].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_update_config():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.UpdateConfigRequest(\n        )\n\n        # Make the request\n        response = await client.update_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v2.types.UpdateConfigRequest, dict]]):\n        The request object. Request mess",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "config": {
                "type": "google.cloud.speech_v2.types.Config",
                "description": "Required. The config to update.  The config's ``name`` field is used to identify the config to be updated. The expected format is ``projects/{project}/locations/{location}/config``.  This corresponds to the ``config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v2.types.Config: Message representing the config for the Speech-to-Text API. This includes an optional [KMS key](\\ https://cloud.google.com/kms/docs/resource-hierarchy#keys) with which incoming data will be encrypted."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.speech_v2.types.Config"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_custom_class",
          "description": "Creates a [CustomClass][google.cloud.speech.v2.CustomClass].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_create_custom_class():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.CreateCustomClassRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_custom_class(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location where this CustomClass will be created. The expected format is ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "custom_class": {
                "type": "google.cloud.speech_v2.types.CustomClass",
                "description": "Required. The CustomClass to create. This corresponds to the ``custom_class`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "custom_class_id": {
                "type": "str",
                "description": "The ID to use for the CustomClass, which will become the final component of the CustomClass's resource name.  This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/.  This corresponds to the ``custom_class_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.CustomClass` CustomClass for biasing in speech recognition. Used to define a set of words or phrases that represents a common concept or theme likely to appear in your audio, for example a list of passenger ship names."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "custom_class",
              "custom_class_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_custom_classes",
          "description": "Lists CustomClasses.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_list_custom_classes():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.ListCustomClassesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_custom_classes(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v2.types.ListCu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location of CustomClass resources to list. The expected format is ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v2.services.speech.pagers.ListCustomClassesAsyncPager: Response message for the [ListCustomClasses][google.cloud.speech.v2.Speech.ListCustomClasses] method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.speech_v2.services.speech.pagers.ListCustomClassesAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_custom_class",
          "description": "Returns the requested\n[CustomClass][google.cloud.speech.v2.CustomClass].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_get_custom_class():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.GetCustomClassRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_custom_class(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v2.types.GetCustomCl",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CustomClass to retrieve. The expected format is ``projects/{project}/locations/{location}/customClasses/{custom_class}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v2.types.CustomClass: CustomClass for biasing in speech recognition. Used to define a set of words or phrases that represents a common concept or theme likely to appear in your audio, for example a list of passenger ship names."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.speech_v2.types.CustomClass"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_custom_class",
          "description": "Updates the [CustomClass][google.cloud.speech.v2.CustomClass].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_update_custom_class():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.UpdateCustomClassRequest(\n        )\n\n        # Make the request\n        operation = client.update_custom_class(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "custom_class": {
                "type": "google.cloud.speech_v2.types.CustomClass",
                "description": "Required. The CustomClass to update.  The CustomClass's ``name`` field is used to identify the CustomClass to update. Format: ``projects/{project}/locations/{location}/customClasses/{custom_class}``.  This corresponds to the ``custom_class`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. If empty, all fields are considered for update.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.CustomClass` CustomClass for biasing in speech recognition. Used to define a set of words or phrases that represents a common concept or theme likely to appear in your audio, for example a list of passenger ship names."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "custom_class",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_custom_class",
          "description": "Deletes the [CustomClass][google.cloud.speech.v2.CustomClass].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_delete_custom_class():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.DeleteCustomClassRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_custom_class(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CustomClass to delete. Format: ``projects/{project}/locations/{location}/customClasses/{custom_class}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.CustomClass` CustomClass for biasing in speech recognition. Used to define a set of words or phrases that represents a common concept or theme likely to appear in your audio, for example a list of passenger ship names."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undelete_custom_class",
          "description": "Undeletes the [CustomClass][google.cloud.speech.v2.CustomClass].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_undelete_custom_class():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.UndeleteCustomClassRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.undelete_custom_class(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the CustomClass to undelete. Format: ``projects/{project}/locations/{location}/customClasses/{custom_class}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.CustomClass` CustomClass for biasing in speech recognition. Used to define a set of words or phrases that represents a common concept or theme likely to appear in your audio, for example a list of passenger ship names."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_phrase_set",
          "description": "Creates a [PhraseSet][google.cloud.speech.v2.PhraseSet].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_create_phrase_set():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.CreatePhraseSetRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_phrase_set(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        pri",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location where this PhraseSet will be created. The expected format is ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "phrase_set": {
                "type": "google.cloud.speech_v2.types.PhraseSet",
                "description": "Required. The PhraseSet to create. This corresponds to the ``phrase_set`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "phrase_set_id": {
                "type": "str",
                "description": "The ID to use for the PhraseSet, which will become the final component of the PhraseSet's resource name.  This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/.  This corresponds to the ``phrase_set_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.PhraseSet` PhraseSet for biasing in speech recognition. A PhraseSet is used to provide \"hints\" to the speech recognizer to favor specific words and phrases in the results."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "phrase_set",
              "phrase_set_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_phrase_sets",
          "description": "Lists PhraseSets.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_list_phrase_sets():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.ListPhraseSetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_phrase_sets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v2.types.ListPhraseSetsRequ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The project and location of PhraseSet resources to list. The expected format is ``projects/{project}/locations/{location}``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v2.services.speech.pagers.ListPhraseSetsAsyncPager: Response message for the [ListPhraseSets][google.cloud.speech.v2.Speech.ListPhraseSets] method.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.speech_v2.services.speech.pagers.ListPhraseSetsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_phrase_set",
          "description": "Returns the requested\n[PhraseSet][google.cloud.speech.v2.PhraseSet].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_get_phrase_set():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.GetPhraseSetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_phrase_set(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.speech_v2.types.GetPhraseSetRequest, ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the PhraseSet to retrieve. The expected format is ``projects/{project}/locations/{location}/phraseSets/{phrase_set}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.speech_v2.types.PhraseSet: PhraseSet for biasing in speech recognition. A PhraseSet is used to provide \"hints\" to the speech recognizer to favor specific words and phrases in the results."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.speech_v2.types.PhraseSet"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_phrase_set",
          "description": "Updates the [PhraseSet][google.cloud.speech.v2.PhraseSet].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_update_phrase_set():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.UpdatePhraseSetRequest(\n        )\n\n        # Make the request\n        operation = client.update_phrase_set(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "phrase_set": {
                "type": "google.cloud.speech_v2.types.PhraseSet",
                "description": "Required. The PhraseSet to update.  The PhraseSet's ``name`` field is used to identify the PhraseSet to update. Format: ``projects/{project}/locations/{location}/phraseSets/{phrase_set}``.  This corresponds to the ``phrase_set`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to update. If empty, all non-default valued fields are considered for update. Use ``*`` to update the entire PhraseSet resource.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.PhraseSet` PhraseSet for biasing in speech recognition. A PhraseSet is used to provide \"hints\" to the speech recognizer to favor specific words and phrases in the results."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "phrase_set",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_phrase_set",
          "description": "Deletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_delete_phrase_set():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.DeletePhraseSetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.delete_phrase_set(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n        print",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the PhraseSet to delete. Format: ``projects/{project}/locations/{location}/phraseSets/{phrase_set}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.PhraseSet` PhraseSet for biasing in speech recognition. A PhraseSet is used to provide \"hints\" to the speech recognizer to favor specific words and phrases in the results."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "undelete_phrase_set",
          "description": "Undeletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import speech_v2\n\n    async def sample_undelete_phrase_set():\n        # Create a client\n        client = speech_v2.SpeechAsyncClient()\n\n        # Initialize request argument(s)\n        request = speech_v2.UndeletePhraseSetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        operation = client.undelete_phrase_set(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).result()\n\n        # Handle the response\n     ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the PhraseSet to undelete. Format: ``projects/{project}/locations/{location}/phraseSets/{phrase_set}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.speech_v2.types.PhraseSet` PhraseSet for biasing in speech recognition. A PhraseSet is used to provide \"hints\" to the speech recognizer to favor specific words and phrases in the results."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.api_core.operation_async.AsyncOperation"
          ]
        }
      }
    ]
  }
}