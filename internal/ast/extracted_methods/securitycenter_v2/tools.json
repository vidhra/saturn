{
  "SecurityCenter": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "batch_create_resource_value_configs",
          "description": "Creates a ResourceValueConfig for an organization.\nMaps user's tags to difference resource values for use\nby the attack path simulation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_batch_create_resource_value_configs():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        requests = securitycenter_v2.CreateResourceValueConfigRequest()\n        requests.parent = \"parent_value\"\n\n        request = securitycenter_v2.BatchCreateResourceValueConfigsRequest(\n            parent=",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the new ResourceValueConfig's parent. The parent field in the CreateResourceValueConfigRequest messages must either be empty or match this field.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "requests": {
                "type": "MutableSequence[google.cloud.securitycenter_v2.types.CreateResourceValueConfigRequest]",
                "description": "Required. The resource value configs to be created.  This corresponds to the ``requests`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.BatchCreateResourceValueConfigsResponse: Response message for BatchCreateResourceValueConfigs"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "requests",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.BatchCreateResourceValueConfigsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "bulk_mute_findings",
          "description": "Kicks off an LRO to bulk mute findings for a parent\nbased on a filter. If no location is specified, findings\nare muted in global. The parent can be either an\norganization, folder, or project. The findings matched\nby the filter will be muted after the LRO is done.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_bulk_mute_findings():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.BulkMuteFindingsRequest(\n            parent=\"parent_value\",\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, at which bulk action needs to be applied. If no location is specified, findings are updated in global. The following list shows some examples:  -  ``organizations/[organization_id]`` -  ``organizations/[organization_id]/locations/[location_id]`` -  ``folders/[folder_id]`` -  ``folders/[folder_id]/locations/[location_id]`` -  ``projects/[project_id]`` -  ``projects/[project_id]/locations/[location_id]``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.securitycenter_v2.types.BulkMuteFindingsResponse` The response to a BulkMute request. Contains the LRO information."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.BulkMuteFindingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_big_query_export",
          "description": "Creates a BigQuery export.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_create_big_query_export():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.CreateBigQueryExportRequest(\n            parent=\"parent_value\",\n            big_query_export_id=\"big_query_export_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_big_query_export(request=request)\n\n        # Handle the response\n        print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the parent resource of the new BigQuery export. Its format is ``organizations/[organization_id]/locations/[location_id]``, ``folders/[folder_id]/locations/[location_id]``, or ``projects/[project_id]/locations/[location_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "big_query_export": {
                "type": "google.cloud.securitycenter_v2.types.BigQueryExport",
                "description": "Required. The BigQuery export being created.  This corresponds to the ``big_query_export`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "big_query_export_id": {
                "type": "str",
                "description": "Required. Unique identifier provided by the client within the parent scope. It must consist of only lowercase letters, numbers, and hyphens, must start with a letter, must end with either a letter or a number, and must be 63 characters or less.  This corresponds to the ``big_query_export_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.BigQueryExport: Configures how to deliver Findings to BigQuery Instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "big_query_export",
              "big_query_export_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.CreateBigQueryExportRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_finding",
          "description": "Creates a finding in a location. The corresponding\nsource must exist for finding creation to succeed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_create_finding():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.CreateFindingRequest(\n            parent=\"parent_value\",\n            finding_id=\"finding_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_finding(request=request)\n\n        # Handle the respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the new finding's parent. The following list shows some examples of the format: + ``organizations/[organization_id]/sources/[source_id]`` + ``organizations/[organization_id]/sources/[source_id]/locations/[location_id]``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "finding": {
                "type": "google.cloud.securitycenter_v2.types.Finding",
                "description": "Required. The Finding being created. The name and security_marks will be ignored as they are both output only fields on this resource.  This corresponds to the ``finding`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "finding_id": {
                "type": "str",
                "description": "Required. Unique identifier provided by the client within the parent scope. It must be alphanumeric and less than or equal to 32 characters and greater than 0 characters in length.  This corresponds to the ``finding_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.Finding: Security Command Center finding.  A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "finding",
              "finding_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.CreateFindingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_mute_config",
          "description": "Creates a mute config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_create_mute_config():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        mute_config = securitycenter_v2.MuteConfig()\n        mute_config.filter = \"filter_value\"\n        mute_config.type_ = \"DYNAMIC\"\n\n        request = securitycenter_v2.CreateMuteConfigRequest(\n            parent=\"parent_value\",\n            mute_config=mute_config,\n            mute_config_id=\"mute_config_id_value\",\n        )\n\n        #",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the new mute configs's parent. Its format is ``organizations/[organization_id]/locations/[location_id]``, ``folders/[folder_id]/locations/[location_id]``, or ``projects/[project_id]/locations/[location_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mute_config": {
                "type": "google.cloud.securitycenter_v2.types.MuteConfig",
                "description": "Required. The mute config being created.  This corresponds to the ``mute_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mute_config_id": {
                "type": "str",
                "description": "Required. Unique identifier provided by the client within the parent scope. It must consist of only lowercase letters, numbers, and hyphens, must start with a letter, must end with either a letter or a number, and must be 63 characters or less.  This corresponds to the ``mute_config_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.MuteConfig: A mute config is a Cloud SCC resource that contains the configuration to mute create/update events of findings."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "mute_config",
              "mute_config_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.CreateMuteConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_notification_config",
          "description": "Creates a notification config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_create_notification_config():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.CreateNotificationConfigRequest(\n            parent=\"parent_value\",\n            config_id=\"config_id_value\",\n        )\n\n        # Make the request\n        response = await client.create_notification_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the new notification config's parent. Its format is ``organizations/[organization_id]/locations/[location_id]``, ``folders/[folder_id]/locations/[location_id]``, or ``projects/[project_id]/locations/[location_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "notification_config": {
                "type": "google.cloud.securitycenter_v2.types.NotificationConfig",
                "description": "Required. The notification config being created. The name and the service account will be ignored as they are both output only fields on this resource.  This corresponds to the ``notification_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "config_id": {
                "type": "str",
                "description": "Required. Unique identifier provided by the client within the parent scope. It must be between 1 and 128 characters and contain alphanumeric characters, underscores, or hyphens only.  This corresponds to the ``config_id`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.NotificationConfig: Cloud Security Command Center (Cloud SCC) notification configs. A notification config is a Cloud SCC resource that contains the configuration to send notifications for create/update events of findings, assets and etc."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "notification_config",
              "config_id",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.CreateNotificationConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_source",
          "description": "Creates a source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_create_source():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.CreateSourceRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_source(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v2.types.CreateSourceRequest, dict]]):\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the new source's parent. Its format should be ``organizations/[organization_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "source": {
                "type": "google.cloud.securitycenter_v2.types.Source",
                "description": "Required. The Source being created, only the display_name and description will be used. All other fields will be ignored.  This corresponds to the ``source`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.Source: Security Command Center finding source. A finding source is an entity or a mechanism that can produce a finding. A source is like a container of findings that come from the same scanner, logger, monitor, and other tools."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "source",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.CreateSourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_big_query_export",
          "description": "Deletes an existing BigQuery export.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_delete_big_query_export():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.DeleteBigQueryExportRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_big_query_export(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v2.types.DeleteBigQueryExportRequest, dict]]):\n        The req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the BigQuery export to delete. The following list shows some examples of the format:  -  ``organizations/{organization}/locations/{location}/bigQueryExports/{export_id}``  -  ``folders/{folder}/locations/{location}/bigQueryExports/{export_id}`` -  ``projects/{project}/locations/{location}/bigQueryExports/{export_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.DeleteBigQueryExportRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_mute_config",
          "description": "Deletes an existing mute config. If no location is\nspecified, default is global.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_delete_mute_config():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.DeleteMuteConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_mute_config(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v2.types.DeleteMuteConfigRequest",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the mute config to delete. The following list shows some examples of the format:  -  ``organizations/{organization}/muteConfigs/{config_id}`` -  ``organizations/{organization}/locations/{location}/muteConfigs/{config_id}``  -  ``folders/{folder}/muteConfigs/{config_id}`` -  ``folders/{folder}/locations/{location}/muteConfigs/{config_id}`` -  ``projects/{project}/muteConfigs/{config_id}`` -  ``projects/{project}/locations/{location}/muteConfigs/{config_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.DeleteMuteConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_notification_config",
          "description": "Deletes a notification config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_delete_notification_config():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.DeleteNotificationConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_notification_config(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v2.types.DeleteNotificationConfigRequest, dict]]):\n       ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the notification config to delete. The following list shows some examples of the format:  -  ``organizations/[organization_id]/locations/[location_id]/notificationConfigs/[config_id]`` + ``folders/[folder_id]/locations/[location_id]notificationConfigs/[config_id]`` + ``projects/[project_id]/locations/[location_id]notificationConfigs/[config_id]``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.DeleteNotificationConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_resource_value_config",
          "description": "Deletes a ResourceValueConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_delete_resource_value_config():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.DeleteResourceValueConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_resource_value_config(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v2.types.DeleteResourceValueConfigRequest, dict]]):\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the ResourceValueConfig to delete  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.DeleteResourceValueConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_big_query_export",
          "description": "Gets a BigQuery export.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_get_big_query_export():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.GetBigQueryExportRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_big_query_export(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v2.types.GetBigQue",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the BigQuery export to retrieve. The following list shows some examples of the format:  -  ``organizations/{organization}/locations/{location}/bigQueryExports/{export_id}``  -  ``folders/{folder}/locations/{location}/bigQueryExports/{export_id}`` -  ``projects/{project}locations/{location}//bigQueryExports/{export_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.BigQueryExport: Configures how to deliver Findings to BigQuery Instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.GetBigQueryExportRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_simulation",
          "description": "Get the simulation by name or the latest simulation\nfor the given organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_get_simulation():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.GetSimulationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_simulation(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The organization name or simulation name of this simulation  Valid format: ``organizations/{organization}/simulations/latest`` ``organizations/{organization}/simulations/{simulation}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.Simulation: Attack path simulation"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.GetSimulationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_valued_resource",
          "description": "Get the valued resource by name\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_get_valued_resource():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.GetValuedResourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_valued_resource(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v2.types.Get",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of this valued resource  Valid format: ``organizations/{organization}/simulations/{simulation}/valuedResources/{valued_resource}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.ValuedResource: A resource that is determined to have value to a user's system"
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.GetValuedResourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_iam_policy",
          "description": "Gets the access control policy on the specified\nSource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_get_iam_policy():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.GetIamPolicyRequest(\n            resource=\"resource_value\",\n        )\n\n        # Make the request\n        response = await client.get_iam_policy(request=request)\n\n        # Handle the response\n        print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.policy_pb2.Policy: An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.  A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.  For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](\\ https://cloud.google.com/iam/help/conditions/resource-policies).  **JSON example:**  :literal:`\\`     {       \"bindings\": [         {           \"role\": \"roles/resourcemanager.organizationAdmin\",           \"members\": [             \"user:mike@example.com\",             \"group:admins@example.com\",             \"domain:google.com\",             \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"           ]         },         {           \"role\": \"roles/resourcemanager.organizationViewer\",           \"members\": [             \"user:eve@example.com\"           ],           \"condition\": {             \"title\": \"expirable access\",             \"description\": \"Does not grant access after Sep 2020\",             \"expression\": \"request.time <             timestamp('2020-10-01T00:00:00.000Z')\",           }         }       ],       \"etag\": \"BwWWja0YfJA=\",       \"version\": 3     }`\\ \\`  **YAML example:**  :literal:`\\`     bindings:     - members:       - user:mike@example.com       - group:admins@example.com       - domain:google.com       - serviceAccount:my-project-id@appspot.gserviceaccount.com       role: roles/resourcemanager.organizationAdmin     - members:       - user:eve@example.com       role: roles/resourcemanager.organizationViewer       condition:         title: expirable access         description: Does not grant access after Sep 2020         expression: request.time < timestamp('2020-10-01T00:00:00.000Z')     etag: BwWWja0YfJA=     version: 3`\\ \\`  For a description of IAM and its features, see the [IAM documentation](\\ https://cloud.google.com/iam/docs/)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.GetIamPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_mute_config",
          "description": "Gets a mute config. If no location is specified,\ndefault is global.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_get_mute_config():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.GetMuteConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_mute_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.sec",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the mute config to retrieve. The following list shows some examples of the format:  -  ``organizations/{organization}/muteConfigs/{config_id}`` -  ``organizations/{organization}/locations/{location}/muteConfigs/{config_id}``  -  ``folders/{folder}/muteConfigs/{config_id}`` -  ``folders/{folder}/locations/{location}/muteConfigs/{config_id}`` -  ``projects/{project}/muteConfigs/{config_id}`` -  ``projects/{project}/locations/{location}/muteConfigs/{config_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.MuteConfig: A mute config is a Cloud SCC resource that contains the configuration to mute create/update events of findings."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.GetMuteConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_notification_config",
          "description": "Gets a notification config.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_get_notification_config():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.GetNotificationConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_notification_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v2.t",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the notification config to get. The following list shows some examples of the format:  -  ``organizations/[organization_id]/locations/[location_id]/notificationConfigs/[config_id]`` + ``folders/[folder_id]/locations/[location_id]/notificationConfigs/[config_id]`` + ``projects/[project_id]/locations/[location_id]/notificationConfigs/[config_id]``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.NotificationConfig: Cloud Security Command Center (Cloud SCC) notification configs. A notification config is a Cloud SCC resource that contains the configuration to send notifications for create/update events of findings, assets and etc."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.GetNotificationConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_resource_value_config",
          "description": "Gets a ResourceValueConfig.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_get_resource_value_config():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.GetResourceValueConfigRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_resource_value_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource value config to retrieve. Its format is organizations/{organization}/resourceValueConfigs/{config_id}.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.ResourceValueConfig: A resource value configuration (RVC) is a mapping configuration of user's resources to resource values. Used in Attack path simulations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.GetResourceValueConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_source",
          "description": "Gets a source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_get_source():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.GetSourceRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_source(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v2.types.GetSourceRequest, dict]]):\n        The request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Relative resource name of the source. Its format is ``organizations/[organization_id]/source/[source_id]``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.Source: Security Command Center finding source. A finding source is an entity or a mechanism that can produce a finding. A source is like a container of findings that come from the same scanner, logger, monitor, and other tools."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.GetSourceRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "group_findings",
          "description": "Filters an organization or source's findings and groups them by\ntheir specified properties in a location. If no location is\nspecified, findings are assumed to be in global\n\nTo group across all sources provide a ``-`` as the source id.\nThe following list shows some examples:\n\n-  ``/v2/organizations/{organization_id}/sources/-/findings``\n-\n\n``/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings``\n\n-  ``/v2/folders/{folder_id}/sources/-/findings``\n-  ``/v2/folders/{folder_id}/sources/-/locations/{location_id}/findings``\n-  ``/v2/projects/{project_id}/sources/-/findings``\n-  ``/v2/projects/{project_id}/sources/-/locations/{location_id}/findings``\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the source to groupBy. If no location is specified, finding is assumed to be in global. The following list shows some examples:  -  ``organizations/[organization_id]/sources/[source_id]`` -  ``organizations/[organization_id]/sources/[source_id]/locations/[location_id]``  -  ``folders/[folder_id]/sources/[source_id]`` -  ``folders/[folder_id]/sources/[source_id]/locations/[location_id]`` -  ``projects/[project_id]/sources/[source_id]`` -  ``projects/[project_id]/sources/[source_id]/locations/[location_id]``  To groupBy across all sources provide a source_id of ``-``. The following list shows some examples:  -  ``organizations/{organization_id}/sources/-`` -  ``organizations/{organization_id}/sources/-/locations/[location_id]`` -  ``folders/{folder_id}/sources/-`` -  ``folders/{folder_id}/sources/-/locations/[location_id]`` -  ``projects/{project_id}/sources/-`` -  ``projects/{project_id}/sources/-/locations/[location_id]``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "group_by": {
                "type": "str",
                "description": "Required. Expression that defines what assets fields to use for grouping. The string value should follow SQL syntax: comma separated list of fields. For example: \"parent,resource_name\".  This corresponds to the ``group_by`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.services.security_center.pagers.GroupFindingsAsyncPager: Response message for group by findings. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "group_by",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.GroupFindingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_attack_paths",
          "description": "Lists the attack paths for a set of simulation\nresults or valued resources and filter.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_list_attack_paths():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.ListAttackPathsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_attack_paths(request=request)\n\n        # Handle the response\n        async for response in page_result:\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of parent to list attack paths.  Valid formats: ``organizations/{organization}``, ``organizations/{organization}/simulations/{simulation}`` ``organizations/{organization}/simulations/{simulation}/attackExposureResults/{attack_exposure_result_v2}`` ``organizations/{organization}/simulations/{simulation}/valuedResources/{valued_resource}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.services.security_center.pagers.ListAttackPathsAsyncPager: Response message for listing the attack paths for a given simulation or valued resource.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.ListAttackPathsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_big_query_exports",
          "description": "Lists BigQuery exports. Note that when requesting\nBigQuery exports at a given level all exports under that\nlevel are also returned e.g. if requesting BigQuery\nexports under a folder, then all BigQuery exports\nimmediately under the folder plus the ones created under\nthe projects within the folder are returned.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_list_big_query_exports():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.ListBigQuery",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns the collection of BigQuery exports. Its format is ``organizations/[organization_id]/locations/[location_id]``, ``folders/[folder_id]/locations/[location_id]``, or ``projects/[project_id]/locations/[location_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.services.security_center.pagers.ListBigQueryExportsAsyncPager: Response message for listing BigQuery exports. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.ListBigQueryExportsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_findings",
          "description": "Lists an organization or source's findings.\n\nTo list across all sources for a given location provide a ``-``\nas the source id. If no location is specified, finding are\nassumed to be in global. The following list shows some examples:\n\n-  ``/v2/organizations/{organization_id}/sources/-/findings``\n-\n\n``/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings``\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_list_findings():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the source the findings belong to. If no location is specified, the default is global. The following list shows some examples:  -  ``organizations/[organization_id]/sources/[source_id]`` -  ``organizations/[organization_id]/sources/[source_id]/locations/[location_id]``  -  ``folders/[folder_id]/sources/[source_id]`` -  ``folders/[folder_id]/sources/[source_id]/locations/[location_id]`` -  ``projects/[project_id]/sources/[source_id]`` -  ``projects/[project_id]/sources/[source_id]/locations/[location_id]``  To list across all sources provide a source_id of ``-``. The following list shows some examples:  -  ``organizations/{organization_id}/sources/-`` -  ``organizations/{organization_id}/sources/-/locations/{location_id}`` -  ``folders/{folder_id}/sources/-`` -  ``folders/{folder_id}/sources/-locations/{location_id}`` -  ``projects/{projects_id}/sources/-`` -  ``projects/{projects_id}/sources/-/locations/{location_id}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.services.security_center.pagers.ListFindingsAsyncPager: Response message for listing findings. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.ListFindingsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_mute_configs",
          "description": "Lists mute configs. If no location is specified,\ndefault is global.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_list_mute_configs():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.ListMuteConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_mute_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns the collection of mute configs. Its format is ``organizations/[organization_id]\", \"folders/[folder_id]``, ``projects/[project_id]``, ``organizations/[organization_id]/locations/[location_id]``, ``folders/[folder_id]/locations/[location_id]``, ``projects/[project_id]/locations/[location_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.services.security_center.pagers.ListMuteConfigsAsyncPager: Response message for listing mute configs. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.ListMuteConfigsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_notification_configs",
          "description": "Lists notification configs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_list_notification_configs():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.ListNotificationConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_notification_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The name of the parent in which to list the notification configurations. Its format is \"organizations/[organization_id]/locations/[location_id]\", \"folders/[folder_id]/locations/[location_id]\", or \"projects/[project_id]/locations/[location_id]\".  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.services.security_center.pagers.ListNotificationConfigsAsyncPager: Response message for listing notification configs. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.ListNotificationConfigsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_resource_value_configs",
          "description": "Lists all ResourceValueConfigs.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_list_resource_value_configs():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.ListResourceValueConfigsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_resource_value_configs(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArg",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The parent, which owns the collection of resource value configs. Its format is ``organizations/[organization_id]``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.services.security_center.pagers.ListResourceValueConfigsAsyncPager: Response message to list resource value configs Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.ListResourceValueConfigsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_sources",
          "description": "Lists all sources belonging to an organization.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_list_sources():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.ListSourcesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_sources(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Un",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the parent of sources to list. Its format should be ``organizations/[organization_id]``, ``folders/[folder_id]``, or ``projects/[project_id]``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.services.security_center.pagers.ListSourcesAsyncPager: Response message for listing sources.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.ListSourcesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_valued_resources",
          "description": "Lists the valued resources for a set of simulation\nresults and filter.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_list_valued_resources():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.ListValuedResourcesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_valued_resources(request=request)\n\n        # Handle the response\n        async for response in page_result:\n          ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of parent to list exposed resources.  Valid formats: ``organizations/{organization}``, ``organizations/{organization}/simulations/{simulation}`` ``organizations/{organization}/simulations/{simulation}/attackExposureResults/{attack_exposure_result_v2}``  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.services.security_center.pagers.ListValuedResourcesAsyncPager: Response message for listing the valued resources for a given simulation. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.ListValuedResourcesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_finding_state",
          "description": "Updates the state of a finding. If no location is\nspecified, finding is assumed to be in global\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_set_finding_state():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.SetFindingStateRequest(\n            name=\"name_value\",\n            state=\"INACTIVE\",\n        )\n\n        # Make the request\n        response = await client.set_finding_state(request=request)\n\n        # Handle the response\n        pri",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The `relative resource name <https://cloud.google.com/apis/design/resource_names#relative_resource_name>`__ of the finding. If no location is specified, finding is assumed to be in global. The following list shows some examples:  -  ``organizations/{organization_id}/sources/{source_id}/findings/{finding_id}`` + ``organizations/{organization_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}``  -  ``folders/{folder_id}/sources/{source_id}/findings/{finding_id}`` -  ``folders/{folder_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}``  -  ``projects/{project_id}/sources/{source_id}/findings/{finding_id}`` -  ``projects/{project_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "state": {
                "type": "google.cloud.securitycenter_v2.types.Finding.State",
                "description": "Required. The desired State of the finding.  This corresponds to the ``state`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.Finding: Security Command Center finding.  A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "state",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.SetFindingStateRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_iam_policy",
          "description": "Sets the access control policy on the specified\nSource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_set_iam_policy():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.SetIamPolicyRequest(\n            resource=\"resource_value\",\n        )\n\n        # Make the request\n        response = await client.set_iam_policy(request=request)\n\n        # Handle the response\n        print(response)\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.policy_pb2.Policy: An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.  A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.  For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](\\ https://cloud.google.com/iam/help/conditions/resource-policies).  **JSON example:**  :literal:`\\`     {       \"bindings\": [         {           \"role\": \"roles/resourcemanager.organizationAdmin\",           \"members\": [             \"user:mike@example.com\",             \"group:admins@example.com\",             \"domain:google.com\",             \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"           ]         },         {           \"role\": \"roles/resourcemanager.organizationViewer\",           \"members\": [             \"user:eve@example.com\"           ],           \"condition\": {             \"title\": \"expirable access\",             \"description\": \"Does not grant access after Sep 2020\",             \"expression\": \"request.time <             timestamp('2020-10-01T00:00:00.000Z')\",           }         }       ],       \"etag\": \"BwWWja0YfJA=\",       \"version\": 3     }`\\ \\`  **YAML example:**  :literal:`\\`     bindings:     - members:       - user:mike@example.com       - group:admins@example.com       - domain:google.com       - serviceAccount:my-project-id@appspot.gserviceaccount.com       role: roles/resourcemanager.organizationAdmin     - members:       - user:eve@example.com       role: roles/resourcemanager.organizationViewer       condition:         title: expirable access         description: Does not grant access after Sep 2020         expression: request.time < timestamp('2020-10-01T00:00:00.000Z')     etag: BwWWja0YfJA=     version: 3`\\ \\`  For a description of IAM and its features, see the [IAM documentation](\\ https://cloud.google.com/iam/docs/)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.SetIamPolicyRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "set_mute",
          "description": "Updates the mute state of a finding. If no location\nis specified, finding is assumed to be in global\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_set_mute():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.SetMuteRequest(\n            name=\"name_value\",\n            mute=\"UNDEFINED\",\n        )\n\n        # Make the request\n        response = await client.set_mute(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The `relative resource name <https://cloud.google.com/apis/design/resource_names#relative_resource_name>`__ of the finding. If no location is specified, finding is assumed to be in global. The following list shows some examples:  -  ``organizations/{organization_id}/sources/{source_id}/findings/{finding_id}`` + ``organizations/{organization_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}``  -  ``folders/{folder_id}/sources/{source_id}/findings/{finding_id}`` -  ``folders/{folder_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}``  -  ``projects/{project_id}/sources/{source_id}/findings/{finding_id}`` -  ``projects/{project_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}``  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "mute": {
                "type": "google.cloud.securitycenter_v2.types.Finding.Mute",
                "description": "Required. The desired state of the Mute.  This corresponds to the ``mute`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.Finding: Security Command Center finding.  A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "mute",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.SetMuteRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "test_iam_permissions",
          "description": "Returns the permissions that a caller has on the\nspecified source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n    from google.iam.v1 import iam_policy_pb2  # type: ignore\n\n    async def sample_test_iam_permissions():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = iam_policy_pb2.TestIamPermissionsRequest(\n            resource=\"resource_value\",\n            permissions=['permissions_value1', 'permissions_value2'],\n        )\n\n        # Make the request\n        response = await c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource": {
                "type": "str",
                "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.  This corresponds to the ``resource`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "permissions": {
                "type": "MutableSequence[str]",
                "description": "The set of permissions to check for the ``resource``. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see `IAM Overview <https://cloud.google.com/iam/docs/overview#permissions>`__.  This corresponds to the ``permissions`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse: Response message for TestIamPermissions method."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource",
              "permissions",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "iam_policy_pb2.TestIamPermissionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_big_query_export",
          "description": "Updates a BigQuery export.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_update_big_query_export():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.UpdateBigQueryExportRequest(\n        )\n\n        # Make the request\n        response = await client.update_big_query_export(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v2.types.UpdateBigQueryExportRequest,",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "big_query_export": {
                "type": "google.cloud.securitycenter_v2.types.BigQueryExport",
                "description": "Required. The BigQuery export being updated.  This corresponds to the ``big_query_export`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. If empty all mutable fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.BigQueryExport: Configures how to deliver Findings to BigQuery Instance."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "big_query_export",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.UpdateBigQueryExportRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_external_system",
          "description": "Updates external system. This is for a given finding.\nIf no location is specified, finding is assumed to be in\nglobal\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_update_external_system():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.UpdateExternalSystemRequest(\n        )\n\n        # Make the request\n        response = await client.update_external_system(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "external_system": {
                "type": "google.cloud.securitycenter_v2.types.ExternalSystem",
                "description": "Required. The external system resource to update.  This corresponds to the ``external_system`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The FieldMask to use when updating the external system resource. If empty all mutable fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.ExternalSystem: Representation of third party SIEM/SOAR fields within SCC."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "external_system",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.UpdateExternalSystemRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_finding",
          "description": "Creates or updates a finding. If no location is\nspecified, finding is assumed to be in global. The\ncorresponding source must exist for a finding creation\nto succeed.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_update_finding():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.UpdateFindingRequest(\n        )\n\n        # Make the request\n        response = await client.update_finding(request=request)\n\n        # Handle the response\n        pr",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "finding": {
                "type": "google.cloud.securitycenter_v2.types.Finding",
                "description": "Required. The finding resource to update or create if it does not already exist. parent, security_marks, and update_time will be ignored.  In the case of creation, the finding id portion of the name must be alphanumeric and less than or equal to 32 characters and greater than 0 characters in length.  This corresponds to the ``finding`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The FieldMask to use when updating the finding resource. This field should not be specified when creating a finding.  When updating a finding, an empty mask is treated as updating all mutable fields and replacing source_properties. Individual source_properties can be added/updated by using \"source_properties.\" in the field mask.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.Finding: Security Command Center finding.  A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "finding",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.UpdateFindingRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_mute_config",
          "description": "Updates a mute config. If no location is specified,\ndefault is global.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_update_mute_config():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        mute_config = securitycenter_v2.MuteConfig()\n        mute_config.filter = \"filter_value\"\n        mute_config.type_ = \"DYNAMIC\"\n\n        request = securitycenter_v2.UpdateMuteConfigRequest(\n            mute_config=mute_config,\n        )\n\n        # Make the request\n        response = a",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "mute_config": {
                "type": "google.cloud.securitycenter_v2.types.MuteConfig",
                "description": "Required. The mute config being updated.  This corresponds to the ``mute_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. If empty all mutable fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.MuteConfig: A mute config is a Cloud SCC resource that contains the configuration to mute create/update events of findings."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "mute_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.UpdateMuteConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_notification_config",
          "description": "Updates a notification config. The following update fields are\nallowed: description, pubsub_topic, streaming_config.filter\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_update_notification_config():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.UpdateNotificationConfigRequest(\n        )\n\n        # Make the request\n        response = await client.update_notification_config(request=request)\n\n        # Handle the response\n        print(resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "notification_config": {
                "type": "google.cloud.securitycenter_v2.types.NotificationConfig",
                "description": "Required. The notification config to update.  This corresponds to the ``notification_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The FieldMask to use when updating the notification config. If empty all mutable fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.NotificationConfig: Cloud Security Command Center (Cloud SCC) notification configs. A notification config is a Cloud SCC resource that contains the configuration to send notifications for create/update events of findings, assets and etc."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "notification_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.UpdateNotificationConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_resource_value_config",
          "description": "Updates an existing ResourceValueConfigs with new\nrules.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_update_resource_value_config():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.UpdateResourceValueConfigRequest(\n        )\n\n        # Make the request\n        response = await client.update_resource_value_config(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securit",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "resource_value_config": {
                "type": "google.cloud.securitycenter_v2.types.ResourceValueConfig",
                "description": "Required. The resource value config being updated.  This corresponds to the ``resource_value_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The list of fields to be updated. If empty all mutable fields will be updated.  To update nested fields, include the top level field in the mask For example, to update gcp_metadata.resource_type, include the \"gcp_metadata\" field mask  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.ResourceValueConfig: A resource value configuration (RVC) is a mapping configuration of user's resources to resource values. Used in Attack path simulations."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "resource_value_config",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.UpdateResourceValueConfigRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_security_marks",
          "description": "Updates security marks. For Finding Security marks,\nif no location is specified, finding is assumed to be in\nglobal. Assets Security Marks can only be accessed\nthrough global endpoint.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_update_security_marks():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.UpdateSecurityMarksRequest(\n        )\n\n        # Make the request\n        response = await client.update_security_marks(request=request)\n\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "security_marks": {
                "type": "google.cloud.securitycenter_v2.types.SecurityMarks",
                "description": "Required. The security marks resource to update.  This corresponds to the ``security_marks`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The FieldMask to use when updating the security marks resource.  The field mask must not contain duplicate fields. If empty or set to \"marks\", all marks will be replaced. Individual marks can be updated using \"marks.<mark_key>\".  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.SecurityMarks: User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "security_marks",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.UpdateSecurityMarksRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_source",
          "description": "Updates a source.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import securitycenter_v2\n\n    async def sample_update_source():\n        # Create a client\n        client = securitycenter_v2.SecurityCenterAsyncClient()\n\n        # Initialize request argument(s)\n        request = securitycenter_v2.UpdateSourceRequest(\n        )\n\n        # Make the request\n        response = await client.update_source(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.securitycenter_v2.types.UpdateSourceRequest, dict]]):\n        The request object. Request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "source": {
                "type": "google.cloud.securitycenter_v2.types.Source",
                "description": "Required. The source resource to update.  This corresponds to the ``source`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "The FieldMask to use when updating the source resource. If empty all mutable fields will be updated.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.securitycenter_v2.types.Source: Security Command Center finding source. A finding source is an entity or a mechanism that can produce a finding. A source is like a container of findings that come from the same scanner, logger, monitor, and other tools."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "source",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "securitycenter_service.UpdateSourceRequest"
          ]
        }
      }
    ]
  }
}