{
  "DataLabelingService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "create_dataset",
          "description": "Creates dataset. If success return a Dataset\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_create_dataset():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.CreateDatasetRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_dataset(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Dataset resource parent, format: projects/{project_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "dataset": {
                "type": "google.cloud.datalabeling_v1beta1.types.Dataset",
                "description": "Required. The dataset to be created. This corresponds to the ``dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.Dataset: Dataset is the resource to hold your data. You can request multiple labeling tasks for a dataset while each one will generate an AnnotatedDataset."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "dataset",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.CreateDatasetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_dataset",
          "description": "Gets dataset by resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_get_dataset():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.GetDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_dataset(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datalabeling_v1beta1.types.GetDataset",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.Dataset: Dataset is the resource to hold your data. You can request multiple labeling tasks for a dataset while each one will generate an AnnotatedDataset."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.GetDatasetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_datasets",
          "description": "Lists datasets under a project. Pagination is\nsupported.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_list_datasets():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.ListDatasetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_datasets(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Dataset resource parent, format: projects/{project_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Optional. Filter on dataset is not supported at this moment.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.services.data_labeling_service.pagers.ListDatasetsAsyncPager: Results of listing datasets within a project. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.ListDatasetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_dataset",
          "description": "Deletes a dataset by resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_delete_dataset():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.DeleteDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_dataset(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.datalabeling_v1beta1.types.DeleteDatasetRequest, dict]]):\n        The request object. Req",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.DeleteDatasetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_data",
          "description": "Imports data into dataset based on source locations\ndefined in request. It can be called multiple times for\nthe same dataset. Each dataset can only have one long\nrunning operation running on it. For example, no\nlabeling task (also long running operation) can be\nstarted while importing is still ongoing. Vice versa.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_import_data():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.Impo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "input_config": {
                "type": "google.cloud.datalabeling_v1beta1.types.InputConfig",
                "description": "Required. Specify the input source of the data.  This corresponds to the ``input_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datalabeling_v1beta1.types.ImportDataOperationResponse` Response used for ImportData longrunning operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "input_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.ImportDataRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "export_data",
          "description": "Exports data and annotations from dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_export_data():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.ExportDataRequest(\n            name=\"name_value\",\n            annotated_dataset=\"annotated_dataset_value\",\n        )\n\n        # Make the request\n        operation = client.export_data(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "annotated_dataset": {
                "type": "str",
                "description": "Required. Annotated dataset resource name. DataItem in Dataset and their annotations in specified annotated dataset will be exported. It's in format of projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}  This corresponds to the ``annotated_dataset`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Optional. Filter is not supported at this moment.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "output_config": {
                "type": "google.cloud.datalabeling_v1beta1.types.OutputConfig",
                "description": "Required. Specify the output destination.  This corresponds to the ``output_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datalabeling_v1beta1.types.ExportDataOperationResponse` Response used for ExportDataset longrunning operation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "annotated_dataset",
              "filter",
              "output_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.ExportDataRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_data_item",
          "description": "Gets a data item in a dataset by resource name. This\nAPI can be called after data are imported into dataset.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_get_data_item():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.GetDataItemRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_data_item(request=request)\n\n        # Handle the response\n        print(response)\n\nA",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The name of the data item to get, format: projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.DataItem: DataItem is a piece of data, without annotation. For example, an image."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.GetDataItemRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_data_items",
          "description": "Lists data items in a dataset. This API can be called\nafter data are imported into dataset. Pagination is\nsupported.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_list_data_items():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.ListDataItemsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_data_items(request=request)\n\n        # Handle the response\n        asy",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the dataset to list data items, format: projects/{project_id}/datasets/{dataset_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Optional. Filter is not supported at this moment.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.services.data_labeling_service.pagers.ListDataItemsAsyncPager: Results of listing data items in a dataset. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.ListDataItemsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_annotated_dataset",
          "description": "Gets an annotated dataset by resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_get_annotated_dataset():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.GetAnnotatedDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_annotated_dataset(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the annotated dataset to get, format: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.AnnotatedDataset: AnnotatedDataset is a set holding annotations for data in a Dataset. Each labeling task will generate an AnnotatedDataset under the Dataset that the task is requested for."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.GetAnnotatedDatasetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_annotated_datasets",
          "description": "Lists annotated datasets for a dataset. Pagination is\nsupported.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_list_annotated_datasets():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.ListAnnotatedDatasetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_annotated_datasets(request=request)\n\n        # Handle the response\n        async for response in page_resu",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the dataset to list annotated datasets, format: projects/{project_id}/datasets/{dataset_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Optional. Filter is not supported at this moment.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.services.data_labeling_service.pagers.ListAnnotatedDatasetsAsyncPager: Results of listing annotated datasets for a dataset. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.ListAnnotatedDatasetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_annotated_dataset",
          "description": "Deletes an annotated dataset by resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_delete_annotated_dataset():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.DeleteAnnotatedDatasetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_annotated_dataset(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.datalabeling_v1beta1.types.DeleteAnnotatedDataset",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.DeleteAnnotatedDatasetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "label_image",
          "description": "Starts a labeling task for image. The type of image\nlabeling task is configured by feature in the request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_label_image():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        image_classification_config = datalabeling_v1beta1.ImageClassificationConfig()\n        image_classification_config.annotation_spec_set = \"annotation_spec_set_value\"\n\n        basic_config = datalabeling_v1beta1.HumanAnnotationConfig()\n        ba",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the dataset to request labeling task, format: projects/{project_id}/datasets/{dataset_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "basic_config": {
                "type": "google.cloud.datalabeling_v1beta1.types.HumanAnnotationConfig",
                "description": "Required. Basic human annotation config.  This corresponds to the ``basic_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "feature": {
                "type": "google.cloud.datalabeling_v1beta1.types.LabelImageRequest.Feature",
                "description": "Required. The type of image labeling task.  This corresponds to the ``feature`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datalabeling_v1beta1.types.AnnotatedDataset` AnnotatedDataset is a set holding annotations for data in a Dataset. Each labeling task will generate an AnnotatedDataset under the Dataset that the task is requested for."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "basic_config",
              "feature",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.LabelImageRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "label_video",
          "description": "Starts a labeling task for video. The type of video\nlabeling task is configured by feature in the request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_label_video():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        video_classification_config = datalabeling_v1beta1.VideoClassificationConfig()\n        video_classification_config.annotation_spec_set_configs.annotation_spec_set = \"annotation_spec_set_value\"\n\n        basic_config = datalabeling_v1beta1.HumanA",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the dataset to request labeling task, format: projects/{project_id}/datasets/{dataset_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "basic_config": {
                "type": "google.cloud.datalabeling_v1beta1.types.HumanAnnotationConfig",
                "description": "Required. Basic human annotation config.  This corresponds to the ``basic_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "feature": {
                "type": "google.cloud.datalabeling_v1beta1.types.LabelVideoRequest.Feature",
                "description": "Required. The type of video labeling task.  This corresponds to the ``feature`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datalabeling_v1beta1.types.AnnotatedDataset` AnnotatedDataset is a set holding annotations for data in a Dataset. Each labeling task will generate an AnnotatedDataset under the Dataset that the task is requested for."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "basic_config",
              "feature",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.LabelVideoRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "label_text",
          "description": "Starts a labeling task for text. The type of text\nlabeling task is configured by feature in the request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_label_text():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        text_classification_config = datalabeling_v1beta1.TextClassificationConfig()\n        text_classification_config.annotation_spec_set = \"annotation_spec_set_value\"\n\n        basic_config = datalabeling_v1beta1.HumanAnnotationConfig()\n        basic_co",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the data set to request labeling task, format: projects/{project_id}/datasets/{dataset_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "basic_config": {
                "type": "google.cloud.datalabeling_v1beta1.types.HumanAnnotationConfig",
                "description": "Required. Basic human annotation config.  This corresponds to the ``basic_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "feature": {
                "type": "google.cloud.datalabeling_v1beta1.types.LabelTextRequest.Feature",
                "description": "Required. The type of text labeling task.  This corresponds to the ``feature`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datalabeling_v1beta1.types.AnnotatedDataset` AnnotatedDataset is a set holding annotations for data in a Dataset. Each labeling task will generate an AnnotatedDataset under the Dataset that the task is requested for."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "basic_config",
              "feature",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.LabelTextRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_example",
          "description": "Gets an example by resource name, including both data\nand annotation.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_get_example():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.GetExampleRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_example(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.clou",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of example, format: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}/examples/{example_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Optional. An expression for filtering Examples. Filter by annotation_spec.display_name is supported. Format \"annotation_spec.display_name = {display_name}\"  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.Example: An Example is a piece of data and its annotation. For example, an image with label \"house\"."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.GetExampleRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_examples",
          "description": "Lists examples in an annotated dataset. Pagination is\nsupported.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_list_examples():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.ListExamplesRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_examples(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(respons",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Example resource parent. This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Optional. An expression for filtering Examples. For annotated datasets that have annotation spec set, filter by annotation_spec.display_name is supported. Format \"annotation_spec.display_name = {display_name}\"  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.services.data_labeling_service.pagers.ListExamplesAsyncPager: Results of listing Examples in and annotated dataset. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.ListExamplesRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_annotation_spec_set",
          "description": "Creates an annotation spec set by providing a set of\nlabels.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_create_annotation_spec_set():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.CreateAnnotationSpecSetRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_annotation_spec_set(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. AnnotationSpecSet resource parent, format: projects/{project_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "annotation_spec_set": {
                "type": "google.cloud.datalabeling_v1beta1.types.AnnotationSpecSet",
                "description": "Required. Annotation spec set to create. Annotation specs must be included. Only one annotation spec will be accepted for annotation specs with same display_name.  This corresponds to the ``annotation_spec_set`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.AnnotationSpecSet: An AnnotationSpecSet is a collection of label definitions. For example, in image classification tasks, you define a set of possible labels for images as an AnnotationSpecSet. An AnnotationSpecSet is immutable upon creation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "annotation_spec_set",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.CreateAnnotationSpecSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_annotation_spec_set",
          "description": "Gets an annotation spec set by resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_get_annotation_spec_set():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.GetAnnotationSpecSetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_annotation_spec_set(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[g",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. AnnotationSpecSet resource name, format: projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.AnnotationSpecSet: An AnnotationSpecSet is a collection of label definitions. For example, in image classification tasks, you define a set of possible labels for images as an AnnotationSpecSet. An AnnotationSpecSet is immutable upon creation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.GetAnnotationSpecSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_annotation_spec_sets",
          "description": "Lists annotation spec sets for a project. Pagination\nis supported.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_list_annotation_spec_sets():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.ListAnnotationSpecSetsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_annotation_spec_sets(request=request)\n\n        # Handle the response\n        async for response in pa",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent of AnnotationSpecSet resource, format: projects/{project_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Optional. Filter is not supported at this moment.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.services.data_labeling_service.pagers.ListAnnotationSpecSetsAsyncPager: Results of listing annotation spec set under a project. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.ListAnnotationSpecSetsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_annotation_spec_set",
          "description": "Deletes an annotation spec set by resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_delete_annotation_spec_set():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.DeleteAnnotationSpecSetRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_annotation_spec_set(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.datalabeling_v1beta1.types.DeleteAnnotatio",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. AnnotationSpec resource name, format: ``projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}``.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.DeleteAnnotationSpecSetRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_instruction",
          "description": "Creates an instruction for how data should be\nlabeled.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_create_instruction():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.CreateInstructionRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        operation = client.create_instruction(request=request)\n\n        print(\"Waiting for operation to complete...\")\n\n        response = (await operation).res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Instruction resource parent, format: projects/{project_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "instruction": {
                "type": "google.cloud.datalabeling_v1beta1.types.Instruction",
                "description": "Required. Instruction of how to perform the labeling task.  This corresponds to the ``instruction`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.api_core.operation_async.AsyncOperation: An object representing a long-running operation.  The result type for the operation will be :class:`google.cloud.datalabeling_v1beta1.types.Instruction` Instruction of how to perform the labeling task for human operators. Currently only PDF instruction is supported."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "instruction",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.CreateInstructionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_instruction",
          "description": "Gets an instruction by resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_get_instruction():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.GetInstructionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_instruction(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datalabeling_v1bet",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Instruction resource name, format: projects/{project_id}/instructions/{instruction_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.Instruction: Instruction of how to perform the labeling task for human operators. Currently only PDF instruction is supported."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.GetInstructionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_instructions",
          "description": "Lists instructions for a project. Pagination is\nsupported.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_list_instructions():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.ListInstructionsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_instructions(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(r",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Instruction resource parent, format: projects/{project_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Optional. Filter is not supported at this moment.  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.services.data_labeling_service.pagers.ListInstructionsAsyncPager: Results of listing instructions under a project. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.ListInstructionsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_instruction",
          "description": "Deletes an instruction object by resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_delete_instruction():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.DeleteInstructionRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_instruction(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.datalabeling_v1beta1.types.DeleteInstructionRequest, dict]]):\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Instruction resource name, format: projects/{project_id}/instructions/{instruction_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.DeleteInstructionRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_evaluation",
          "description": "Gets an evaluation by resource name (to search, use\n[projects.evaluations.search][google.cloud.datalabeling.v1beta1.DataLabelingService.SearchEvaluations]).\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_get_evaluation():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.GetEvaluationRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_evaluation(request=request)\n\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the evaluation. Format:  \"projects/{project_id}/datasets/{dataset_id}/evaluations/{evaluation_id}'  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.Evaluation: Describes an evaluation between a machine learning model's predictions and ground truth labels. Created when an [EvaluationJob][google.cloud.datalabeling.v1beta1.EvaluationJob] runs successfully."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.GetEvaluationRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_evaluations",
          "description": "Searches\n[evaluations][google.cloud.datalabeling.v1beta1.Evaluation]\nwithin a project.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_search_evaluations():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.SearchEvaluationsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.search_evaluations(request=request)\n\n        # Handle the response\n        async for response in p",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Evaluation search parent (project ID). Format: \"projects/{project_id}\"  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Optional. To search evaluations, you can filter by the following:  -  evaluation\\_job.evaluation_job_id (the last part of [EvaluationJob.name][google.cloud.datalabeling.v1beta1.EvaluationJob.name]) -  evaluation\\_job.model_id (the {model_name} portion of [EvaluationJob.modelVersion][google.cloud.datalabeling.v1beta1.EvaluationJob.model_version]) -  evaluation\\_job.evaluation_job_run_time_start (Minimum threshold for the [evaluationJobRunTime][google.cloud.datalabeling.v1beta1.Evaluation.evaluation_job_run_time] that created the evaluation) -  evaluation\\_job.evaluation_job_run_time_end (Maximum threshold for the [evaluationJobRunTime][google.cloud.datalabeling.v1beta1.Evaluation.evaluation_job_run_time] that created the evaluation) -  evaluation\\_job.job_state ([EvaluationJob.state][google.cloud.datalabeling.v1beta1.EvaluationJob.state]) -  annotation\\_spec.display_name (the Evaluation contains a metric for the annotation spec with this [displayName][google.cloud.datalabeling.v1beta1.AnnotationSpec.display_name])  To filter by multiple critiera, use the ``AND`` operator or the ``OR`` operator. The following examples shows a string that filters by several critiera:  \"evaluation\\ *job.evaluation_job_id = {evaluation_job_id} AND evaluation*\\ job.model_id = {model_name} AND evaluation\\ *job.evaluation_job_run_time_start = {timestamp_1} AND evaluation*\\ job.evaluation_job_run_time_end = {timestamp_2} AND annotation\\_spec.display_name = {display_name}\"  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.services.data_labeling_service.pagers.SearchEvaluationsAsyncPager: Results of searching evaluations.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.SearchEvaluationsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "search_example_comparisons",
          "description": "Searches example comparisons from an evaluation. The\nreturn format is a list of example comparisons that show\nground truth and prediction(s) for a single input.\nSearch by providing an evaluation ID.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_search_example_comparisons():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.SearchExampleComparisonsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Name of the [Evaluation][google.cloud.datalabeling.v1beta1.Evaluation] resource to search for example comparisons from. Format:  \"projects/{project_id}/datasets/{dataset_id}/evaluations/{evaluation_id}\"  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.services.data_labeling_service.pagers.SearchExampleComparisonsAsyncPager: Results of searching example comparisons. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.SearchExampleComparisonsRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_evaluation_job",
          "description": "Creates an evaluation job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_create_evaluation_job():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.CreateEvaluationJobRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        response = await client.create_evaluation_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datalabe",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Evaluation job resource parent. Format: \"projects/{project_id}\"  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "job": {
                "type": "google.cloud.datalabeling_v1beta1.types.EvaluationJob",
                "description": "Required. The evaluation job to create.  This corresponds to the ``job`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.EvaluationJob: Defines an evaluation job that runs periodically to generate [Evaluations][google.cloud.datalabeling.v1beta1.Evaluation]. [Creating an evaluation job](/ml-engine/docs/continuous-evaluation/create-job) is the starting point for using continuous evaluation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "job",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.CreateEvaluationJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_evaluation_job",
          "description": "Updates an evaluation job. You can only update certain fields of\nthe job's\n[EvaluationJobConfig][google.cloud.datalabeling.v1beta1.EvaluationJobConfig]:\n``humanAnnotationConfig.instruction``, ``exampleCount``, and\n``exampleSamplePercentage``.\n\nIf you want to change any other aspect of the evaluation job,\nyou must delete the job and create a new one.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_update_evaluation_job():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "evaluation_job": {
                "type": "google.cloud.datalabeling_v1beta1.types.EvaluationJob",
                "description": "Required. Evaluation job that is going to be updated.  This corresponds to the ``evaluation_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "update_mask": {
                "type": "google.protobuf.field_mask_pb2.FieldMask",
                "description": "Optional. Mask for which fields to update. You can only provide the following fields:  -  ``evaluationJobConfig.humanAnnotationConfig.instruction`` -  ``evaluationJobConfig.exampleCount`` -  ``evaluationJobConfig.exampleSamplePercentage``  You can provide more than one of these fields by separating them with commas.  This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.EvaluationJob: Defines an evaluation job that runs periodically to generate [Evaluations][google.cloud.datalabeling.v1beta1.Evaluation]. [Creating an evaluation job](/ml-engine/docs/continuous-evaluation/create-job) is the starting point for using continuous evaluation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "evaluation_job",
              "update_mask",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.UpdateEvaluationJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_evaluation_job",
          "description": "Gets an evaluation job by resource name.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_get_evaluation_job():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.GetEvaluationJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_evaluation_job(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.datalab",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the evaluation job. Format:  \"projects/{project_id}/evaluationJobs/{evaluation_job_id}\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.types.EvaluationJob: Defines an evaluation job that runs periodically to generate [Evaluations][google.cloud.datalabeling.v1beta1.Evaluation]. [Creating an evaluation job](/ml-engine/docs/continuous-evaluation/create-job) is the starting point for using continuous evaluation."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.GetEvaluationJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "pause_evaluation_job",
          "description": "Pauses an evaluation job. Pausing an evaluation job that is\nalready in a ``PAUSED`` state is a no-op.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_pause_evaluation_job():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.PauseEvaluationJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.pause_evaluation_job(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.datala",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the evaluation job that is going to be paused. Format:  \"projects/{project_id}/evaluationJobs/{evaluation_job_id}\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.PauseEvaluationJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "resume_evaluation_job",
          "description": "Resumes a paused evaluation job. A deleted evaluation\njob can't be resumed. Resuming a running or scheduled\nevaluation job is a no-op.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_resume_evaluation_job():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.ResumeEvaluationJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.resume_evaluation_job(request=request)\n\nArgs:\n    request",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the evaluation job that is going to be resumed. Format:  \"projects/{project_id}/evaluationJobs/{evaluation_job_id}\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.ResumeEvaluationJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_evaluation_job",
          "description": "Stops and deletes an evaluation job.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_delete_evaluation_job():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.DeleteEvaluationJobRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        await client.delete_evaluation_job(request=request)\n\nArgs:\n    request (Optional[Union[google.cloud.datalabeling_v1beta1.types.DeleteEvaluationJobRequest, dict]]):\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the evaluation job that is going to be deleted. Format:  \"projects/{project_id}/evaluationJobs/{evaluation_job_id}\"  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.DeleteEvaluationJobRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_evaluation_jobs",
          "description": "Lists all evaluation jobs within a project with\npossible filters. Pagination is supported.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import datalabeling_v1beta1\n\n    async def sample_list_evaluation_jobs():\n        # Create a client\n        client = datalabeling_v1beta1.DataLabelingServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = datalabeling_v1beta1.ListEvaluationJobsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_evaluation_jobs(request=request)\n\n        # Handle the response\n        async for resp",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Evaluation job resource parent. Format: \"projects/{project_id}\"  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "filter": {
                "type": "str",
                "description": "Optional. You can filter the jobs to list by model_id (also known as model_name, as described in [EvaluationJob.modelVersion][google.cloud.datalabeling.v1beta1.EvaluationJob.model_version]) or by evaluation job state (as described in [EvaluationJob.state][google.cloud.datalabeling.v1beta1.EvaluationJob.state]). To filter by both criteria, use the ``AND`` operator or the ``OR`` operator. For example, you can use the following string for your filter: \"evaluation\\ *job.model_id = {model_name} AND evaluation*\\ job.state = {evaluation_job_state}\"  This corresponds to the ``filter`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.datalabeling_v1beta1.services.data_labeling_service.pagers.ListEvaluationJobsAsyncPager: Results for listing evaluation jobs.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "filter",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "data_labeling_service.ListEvaluationJobsRequest"
          ]
        }
      }
    ]
  }
}