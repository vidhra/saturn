{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-cloud-managedkafka\\google\\cloud\\managedkafka_v1\\types\\managed_kafka.py": [
    {
      "type": "function",
      "name": "ListClustersRequest",
      "description": "Request for ListClusters.\n\nAttributes:\n    parent (str):\n        Required. The parent location whose clusters are to be\n        listed. Structured like\n        ``projects/{project}/locations/{location}``.\n    page_size (int):\n        Optional. The maximum number of clusters to\n        return. The service may return fewer than this\n        value. If unspecified, server will pick an\n        appropriate default.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListClusters`` call. Provide this to retrieve the\n        subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListClusters`` must match the call that provided the page\n        token.\n    filter (str):\n        Optional. Filter expression for the result.\n    order_by (str):\n        Optional. Order by fields for the result.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent location whose clusters are to be listed. Structured like ``projects/{project}/locations/{location}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of clusters to return. The service may return fewer than this value. If unspecified, server will pick an appropriate default.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListClusters`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListClusters`` must match the call that provided the page token.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. Filter expression for the result.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. Order by fields for the result.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetClusterRequest",
      "description": "Request for GetCluster.\n\nAttributes:\n    name (str):\n        Required. The name of the cluster whose\n        configuration to return.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the cluster whose configuration to return.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateClusterRequest",
      "description": "Request for CreateCluster.\n\nAttributes:\n    parent (str):\n        Required. The parent region in which to create the cluster.\n        Structured like ``projects/{project}/locations/{location}``.\n    cluster_id (str):\n        Required. The ID to use for the cluster, which will become\n        the final component of the cluster's name. The ID must be\n        1-63 characters long, and match the regular expression\n        ``[a-z]([-a-z0-9]*[a-z0-9])?`` to comply with RFC 1035.\n\n        This value is structured like: ``my-cluster-id``.\n    cluster (google.cloud.managedkafka_v1.types.Cluster):\n        Required. Configuration of the cluster to create. Its\n        ``name`` field is ignored.\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID to avoid\n        duplication of requests. If a request times out\n        or fails, retrying with the same ID allows the\n        server to recognize the previous attempt. For at\n        least 60 minutes, the serve",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent region in which to create the cluster. Structured like ``projects/{project}/locations/{location}``.",
            "type": "string"
          },
          "cluster_id": {
            "description": "Required. The ID to use for the cluster, which will become the final component of the cluster's name. The ID must be 1-63 characters long, and match the regular expression ``[a-z]([-a-z0-9]*[a-z0-9])?`` to comply with RFC 1035.  This value is structured like: ``my-cluster-id``.",
            "type": "string"
          },
          "cluster": {
            "description": "Required. Configuration of the cluster to create. Its ``name`` field is ignored.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Output only. The resource name of this cluster. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster``",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. Creation time of this resource.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. Last update time of this resource.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "state": {
                "description": "Output only. State of the resource.",
                "type": "object",
                "reference": "google.cloud.vmwareengine_v1.types.Cluster.State"
              },
              "management": {
                "description": "Output only. True if the cluster is a management cluster; false otherwise. There can only be one management cluster in a private cloud and it has to be the first one.",
                "type": "boolean"
              },
              "autoscaling_settings": {
                "type": "object",
                "properties": {
                  "autoscaling_policies": {
                    "description": "Required. The map with autoscaling policies applied to the cluster. The key is the identifier of the policy. It must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  Currently there map must contain only one element that describes the autoscaling policy for compute nodes.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "node_type_id": {
                          "description": "Required. The canonical identifier of the node type to add or remove. Corresponds to the ``NodeType``.",
                          "type": "string"
                        },
                        "scale_out_size": {
                          "description": "Required. Number of nodes to add to a cluster during a scale-out operation. Must be divisible by 2 for stretched clusters. During a scale-in operation only one node (or 2 for stretched clusters) are removed in a single iteration.",
                          "type": "integer"
                        },
                        "cpu_thresholds": {
                          "type": "object",
                          "properties": {
                            "scale_out": {
                              "description": "Required. The utilization triggering the scale-out operation in percent.",
                              "type": "integer"
                            },
                            "scale_in": {
                              "description": "Required. The utilization triggering the scale-in operation in percent.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "scale_out",
                            "scale_in"
                          ]
                        },
                        "granted_memory_thresholds": {
                          "type": "object",
                          "properties": {
                            "scale_out": {
                              "description": "Required. The utilization triggering the scale-out operation in percent.",
                              "type": "integer"
                            },
                            "scale_in": {
                              "description": "Required. The utilization triggering the scale-in operation in percent.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "scale_out",
                            "scale_in"
                          ]
                        },
                        "consumed_memory_thresholds": {
                          "type": "object",
                          "properties": {
                            "scale_out": {
                              "description": "Required. The utilization triggering the scale-out operation in percent.",
                              "type": "integer"
                            },
                            "scale_in": {
                              "description": "Required. The utilization triggering the scale-in operation in percent.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "scale_out",
                            "scale_in"
                          ]
                        },
                        "storage_thresholds": {
                          "type": "object",
                          "properties": {
                            "scale_out": {
                              "description": "Required. The utilization triggering the scale-out operation in percent.",
                              "type": "integer"
                            },
                            "scale_in": {
                              "description": "Required. The utilization triggering the scale-in operation in percent.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "scale_out",
                            "scale_in"
                          ]
                        }
                      },
                      "required": [
                        "node_type_id",
                        "scale_out_size"
                      ]
                    }
                  },
                  "min_cluster_node_count": {
                    "description": "Optional. Minimum number of nodes of any type in a cluster. If not specified the default limits apply.",
                    "type": "integer"
                  },
                  "max_cluster_node_count": {
                    "description": "Optional. Maximum number of nodes of any type in a cluster. If not specified the default limits apply.",
                    "type": "integer"
                  },
                  "cool_down_period": {
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                        "type": "integer"
                      },
                      "seconds": {
                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "required": [
                  "autoscaling_policies"
                ]
              },
              "uid": {
                "description": "Output only. System-generated unique identifier for the resource.",
                "type": "string"
              },
              "node_type_configs": {
                "description": "Required. The map of cluster node types in this cluster, where the key is canonical identifier of the node type (corresponds to the ``NodeType``).",
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "node_count": {
                      "description": "Required. The number of nodes of this type in the cluster",
                      "type": "integer"
                    },
                    "custom_core_count": {
                      "description": "Optional. Customized number of cores available to each node of the type. This number must always be one of ``nodeType.availableCustomCoreCounts``. If zero is provided max value from ``nodeType.availableCustomCoreCounts`` will be used.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "node_count"
                  ]
                }
              },
              "stretched_cluster_config": {
                "type": "object",
                "properties": {
                  "preferred_location": {
                    "description": "Required. Zone that will remain operational when connection between the two zones is lost. Specify the resource name of a zone that belongs to the region of the private cloud. For example: ``projects/{project}/locations/europe-west3-a`` where ``{project}`` can either be a project number or a project ID.",
                    "type": "string"
                  },
                  "secondary_location": {
                    "description": "Required. Additional zone for a higher level of availability and load balancing. Specify the resource name of a zone that belongs to the region of the private cloud. For example: ``projects/{project}/locations/europe-west3-b`` where ``{project}`` can either be a project number or a project ID.",
                    "type": "string"
                  }
                },
                "required": [
                  "preferred_location",
                  "secondary_location"
                ]
              }
            },
            "required": [
              "node_type_configs"
            ]
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID to avoid duplication of requests. If a request times out or fails, retrying with the same ID allows the server to recognize the previous attempt. For at least 60 minutes, the server ignores duplicate requests bearing the same ID.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID within 60 minutes of the last request, the server checks if an original operation with the same request ID was received. If so, the server ignores the second request.  The request ID must be a valid UUID. A zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "cluster_id",
          "cluster"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateClusterRequest",
      "description": "Request for UpdateCluster.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Field mask is used to specify the fields to be\n        overwritten in the cluster resource by the update. The\n        fields specified in the update_mask are relative to the\n        resource, not the full request. A field will be overwritten\n        if it is in the mask. The mask is required and a value of \\*\n        will update all fields.\n    cluster (google.cloud.managedkafka_v1.types.Cluster):\n        Required. The cluster to update. Its ``name`` field must be\n        populated.\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID to avoid\n        duplication of requests. If a request times out\n        or fails, retrying with the same ID allows the\n        server to recognize the previous attempt. For at\n        least 60 minutes, the server ignores duplicate\n        requests bearing the same ID.\n\n        For example, consi",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Field mask is used to specify the fields to be overwritten in the cluster resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. The mask is required and a value of \\* will update all fields.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "cluster": {
            "description": "Required. The cluster to update. Its ``name`` field must be populated.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Output only. The resource name of this cluster. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: ``projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster``",
                "type": "string"
              },
              "create_time": {
                "description": "Output only. Creation time of this resource.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "update_time": {
                "description": "Output only. Last update time of this resource.",
                "type": "object",
                "reference": "google.protobuf.timestamp_pb2.Timestamp"
              },
              "state": {
                "description": "Output only. State of the resource.",
                "type": "object",
                "reference": "google.cloud.vmwareengine_v1.types.Cluster.State"
              },
              "management": {
                "description": "Output only. True if the cluster is a management cluster; false otherwise. There can only be one management cluster in a private cloud and it has to be the first one.",
                "type": "boolean"
              },
              "autoscaling_settings": {
                "type": "object",
                "properties": {
                  "autoscaling_policies": {
                    "description": "Required. The map with autoscaling policies applied to the cluster. The key is the identifier of the policy. It must meet the following requirements:  -  Only contains 1-63 alphanumeric characters and hyphens -  Begins with an alphabetical character -  Ends with a non-hyphen character -  Not formatted as a UUID -  Complies with `RFC 1034 <https://datatracker.ietf.org/doc/html/rfc1034>`__ (section 3.5)  Currently there map must contain only one element that describes the autoscaling policy for compute nodes.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "node_type_id": {
                          "description": "Required. The canonical identifier of the node type to add or remove. Corresponds to the ``NodeType``.",
                          "type": "string"
                        },
                        "scale_out_size": {
                          "description": "Required. Number of nodes to add to a cluster during a scale-out operation. Must be divisible by 2 for stretched clusters. During a scale-in operation only one node (or 2 for stretched clusters) are removed in a single iteration.",
                          "type": "integer"
                        },
                        "cpu_thresholds": {
                          "type": "object",
                          "properties": {
                            "scale_out": {
                              "description": "Required. The utilization triggering the scale-out operation in percent.",
                              "type": "integer"
                            },
                            "scale_in": {
                              "description": "Required. The utilization triggering the scale-in operation in percent.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "scale_out",
                            "scale_in"
                          ]
                        },
                        "granted_memory_thresholds": {
                          "type": "object",
                          "properties": {
                            "scale_out": {
                              "description": "Required. The utilization triggering the scale-out operation in percent.",
                              "type": "integer"
                            },
                            "scale_in": {
                              "description": "Required. The utilization triggering the scale-in operation in percent.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "scale_out",
                            "scale_in"
                          ]
                        },
                        "consumed_memory_thresholds": {
                          "type": "object",
                          "properties": {
                            "scale_out": {
                              "description": "Required. The utilization triggering the scale-out operation in percent.",
                              "type": "integer"
                            },
                            "scale_in": {
                              "description": "Required. The utilization triggering the scale-in operation in percent.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "scale_out",
                            "scale_in"
                          ]
                        },
                        "storage_thresholds": {
                          "type": "object",
                          "properties": {
                            "scale_out": {
                              "description": "Required. The utilization triggering the scale-out operation in percent.",
                              "type": "integer"
                            },
                            "scale_in": {
                              "description": "Required. The utilization triggering the scale-in operation in percent.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "scale_out",
                            "scale_in"
                          ]
                        }
                      },
                      "required": [
                        "node_type_id",
                        "scale_out_size"
                      ]
                    }
                  },
                  "min_cluster_node_count": {
                    "description": "Optional. Minimum number of nodes of any type in a cluster. If not specified the default limits apply.",
                    "type": "integer"
                  },
                  "max_cluster_node_count": {
                    "description": "Optional. Maximum number of nodes of any type in a cluster. If not specified the default limits apply.",
                    "type": "integer"
                  },
                  "cool_down_period": {
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                        "type": "integer"
                      },
                      "seconds": {
                        "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "required": [
                  "autoscaling_policies"
                ]
              },
              "uid": {
                "description": "Output only. System-generated unique identifier for the resource.",
                "type": "string"
              },
              "node_type_configs": {
                "description": "Required. The map of cluster node types in this cluster, where the key is canonical identifier of the node type (corresponds to the ``NodeType``).",
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "node_count": {
                      "description": "Required. The number of nodes of this type in the cluster",
                      "type": "integer"
                    },
                    "custom_core_count": {
                      "description": "Optional. Customized number of cores available to each node of the type. This number must always be one of ``nodeType.availableCustomCoreCounts``. If zero is provided max value from ``nodeType.availableCustomCoreCounts`` will be used.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "node_count"
                  ]
                }
              },
              "stretched_cluster_config": {
                "type": "object",
                "properties": {
                  "preferred_location": {
                    "description": "Required. Zone that will remain operational when connection between the two zones is lost. Specify the resource name of a zone that belongs to the region of the private cloud. For example: ``projects/{project}/locations/europe-west3-a`` where ``{project}`` can either be a project number or a project ID.",
                    "type": "string"
                  },
                  "secondary_location": {
                    "description": "Required. Additional zone for a higher level of availability and load balancing. Specify the resource name of a zone that belongs to the region of the private cloud. For example: ``projects/{project}/locations/europe-west3-b`` where ``{project}`` can either be a project number or a project ID.",
                    "type": "string"
                  }
                },
                "required": [
                  "preferred_location",
                  "secondary_location"
                ]
              }
            },
            "required": [
              "node_type_configs"
            ]
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID to avoid duplication of requests. If a request times out or fails, retrying with the same ID allows the server to recognize the previous attempt. For at least 60 minutes, the server ignores duplicate requests bearing the same ID.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID within 60 minutes of the last request, the server checks if an original operation with the same request ID was received. If so, the server ignores the second request.  The request ID must be a valid UUID. A zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "update_mask",
          "cluster"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteClusterRequest",
      "description": "Request for DeleteCluster.\n\nAttributes:\n    name (str):\n        Required. The name of the cluster to delete.\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID to avoid\n        duplication of requests. If a request times out\n        or fails, retrying with the same ID allows the\n        server to recognize the previous attempt. For at\n        least 60 minutes, the server ignores duplicate\n        requests bearing the same ID.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID within 60 minutes of the last request, the\n        server checks if an original operation with the\n        same request ID was received. If so, the server\n        ignores the second request.\n\n        The request ID must be a valid UUID. A zero UUID\n        is not supported\n        (00000000-0000-0000-0000-000000000000).",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the cluster to delete.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID to avoid duplication of requests. If a request times out or fails, retrying with the same ID allows the server to recognize the previous attempt. For at least 60 minutes, the server ignores duplicate requests bearing the same ID.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID within 60 minutes of the last request, the server checks if an original operation with the same request ID was received. If so, the server ignores the second request.  The request ID must be a valid UUID. A zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListTopicsRequest",
      "description": "Request for ListTopics.\n\nAttributes:\n    parent (str):\n        Required. The parent cluster whose topics are to be listed.\n        Structured like\n        ``projects/{project}/locations/{location}/clusters/{cluster}``.\n    page_size (int):\n        Optional. The maximum number of topics to\n        return. The service may return fewer than this\n        value. If unset or zero, all topics for the\n        parent is returned.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListTopics`` call. Provide this to retrieve the subsequent\n        page.\n\n        When paginating, all other parameters provided to\n        ``ListTopics`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent cluster whose topics are to be listed. Structured like ``projects/{project}/locations/{location}/clusters/{cluster}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of topics to return. The service may return fewer than this value. If unset or zero, all topics for the parent is returned.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListTopics`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListTopics`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTopicRequest",
      "description": "Request for GetTopic.\n\nAttributes:\n    name (str):\n        Required. The name of the topic whose\n        configuration to return. Structured like:\n\n        projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the topic whose configuration to return. Structured like:  projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateTopicRequest",
      "description": "Request for CreateTopic.\n\nAttributes:\n    parent (str):\n        Required. The parent cluster in which to create the topic.\n        Structured like\n        ``projects/{project}/locations/{location}/clusters/{cluster}``.\n    topic_id (str):\n        Required. The ID to use for the topic, which will become the\n        final component of the topic's name.\n\n        This value is structured like: ``my-topic-name``.\n    topic (google.cloud.managedkafka_v1.types.Topic):\n        Required. Configuration of the topic to create. Its ``name``\n        field is ignored.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent cluster in which to create the topic. Structured like ``projects/{project}/locations/{location}/clusters/{cluster}``.",
            "type": "string"
          },
          "topic_id": {
            "description": "Required. The ID to use for the topic, which will become the final component of the topic's name.  This value is structured like: ``my-topic-name``.",
            "type": "string"
          },
          "topic": {
            "description": "Required. Configuration of the topic to create. Its ``name`` field is ignored.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Required. The resource name of the Pub/Sub topic that will be published to, in the following format: ``projects/*/topics/*``. For publication to succeed, the Secret Manager service agent must have the ``pubsub.topic.publish`` permission on the topic. The Pub/Sub Publisher role (``roles/pubsub.publisher``) includes this permission.",
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "parent",
          "topic_id",
          "topic"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTopicRequest",
      "description": "Request for UpdateTopic.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Field mask is used to specify the fields to be\n        overwritten in the Topic resource by the update. The fields\n        specified in the update_mask are relative to the resource,\n        not the full request. A field will be overwritten if it is\n        in the mask. The mask is required and a value of \\* will\n        update all fields.\n    topic (google.cloud.managedkafka_v1.types.Topic):\n        Required. The topic to update. Its ``name`` field must be\n        populated.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Field mask is used to specify the fields to be overwritten in the Topic resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. The mask is required and a value of \\* will update all fields.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "topic": {
            "description": "Required. The topic to update. Its ``name`` field must be populated.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Required. The resource name of the Pub/Sub topic that will be published to, in the following format: ``projects/*/topics/*``. For publication to succeed, the Secret Manager service agent must have the ``pubsub.topic.publish`` permission on the topic. The Pub/Sub Publisher role (``roles/pubsub.publisher``) includes this permission.",
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "update_mask",
          "topic"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTopicRequest",
      "description": "Request for DeleteTopic.\n\nAttributes:\n    name (str):\n        Required. The name of the topic to delete.\n        ``projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the topic to delete. ``projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListConsumerGroupsRequest",
      "description": "Request for ListConsumerGroups.\n\nAttributes:\n    parent (str):\n        Required. The parent cluster whose consumer groups are to be\n        listed. Structured like\n        ``projects/{project}/locations/{location}/clusters/{cluster}``.\n    page_size (int):\n        Optional. The maximum number of consumer\n        groups to return. The service may return fewer\n        than this value. If unset or zero, all consumer\n        groups for the parent is returned.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListConsumerGroups`` call. Provide this to retrieve the\n        subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListConsumerGroups`` must match the call that provided the\n        page token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent cluster whose consumer groups are to be listed. Structured like ``projects/{project}/locations/{location}/clusters/{cluster}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of consumer groups to return. The service may return fewer than this value. If unset or zero, all consumer groups for the parent is returned.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListConsumerGroups`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListConsumerGroups`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetConsumerGroupRequest",
      "description": "Request for GetConsumerGroup.\n\nAttributes:\n    name (str):\n        Required. The name of the consumer group whose configuration\n        to return.\n        ``projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumerGroup}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the consumer group whose configuration to return. ``projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumerGroup}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateConsumerGroupRequest",
      "description": "Request for UpdateConsumerGroup.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Field mask is used to specify the fields to be\n        overwritten in the ConsumerGroup resource by the update. The\n        fields specified in the update_mask are relative to the\n        resource, not the full request. A field will be overwritten\n        if it is in the mask. The mask is required and a value of \\*\n        will update all fields.\n    consumer_group (google.cloud.managedkafka_v1.types.ConsumerGroup):\n        Required. The consumer group to update. Its ``name`` field\n        must be populated.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Field mask is used to specify the fields to be overwritten in the ConsumerGroup resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. The mask is required and a value of \\* will update all fields.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "consumer_group": {
            "description": "Required. The consumer group to update. Its ``name`` field must be populated.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Identifier. The name of the consumer group. The ``consumer_group`` segment is used when connecting directly to the cluster. Structured like: projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumer_group}",
                "type": "string"
              },
              "topics": {
                "description": "Optional. Metadata for this consumer group for all topics it has metadata for. The key of the map is a topic name, structured like:  projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}",
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "partitions": {
                      "description": "Optional. Metadata for this consumer group and topic for all partition indexes it has metadata for.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "offset": {
                            "description": "Required. The current offset for this partition, or 0 if no offset has been committed.",
                            "type": "integer"
                          },
                          "metadata": {
                            "description": "Optional. The associated metadata for this partition, or empty if it does not exist.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "offset"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "update_mask",
          "consumer_group"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteConsumerGroupRequest",
      "description": "Request for DeleteConsumerGroup.\n\nAttributes:\n    name (str):\n        Required. The name of the consumer group to delete.\n        ``projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumerGroup}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the consumer group to delete. ``projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumerGroup}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}