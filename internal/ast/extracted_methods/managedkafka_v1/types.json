{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-managedkafka/google/cloud/managedkafka_v1/types/managed_kafka.py": [
    {
      "type": "function",
      "name": "ListClustersRequest",
      "description": "Request for ListClusters.\n\nAttributes:\n    parent (str):\n        Required. The parent location whose clusters are to be\n        listed. Structured like\n        ``projects/{project}/locations/{location}``.\n    page_size (int):\n        Optional. The maximum number of clusters to\n        return. The service may return fewer than this\n        value. If unspecified, server will pick an\n        appropriate default.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListClusters`` call. Provide this to retrieve the\n        subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListClusters`` must match the call that provided the page\n        token.\n    filter (str):\n        Optional. Filter expression for the result.\n    order_by (str):\n        Optional. Order by fields for the result.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent location whose clusters are to be listed. Structured like ``projects/{project}/locations/{location}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of clusters to return. The service may return fewer than this value. If unspecified, server will pick an appropriate default.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListClusters`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListClusters`` must match the call that provided the page token.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. Filter expression for the result.",
            "type": "string"
          },
          "order_by": {
            "description": "Optional. Order by fields for the result.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetClusterRequest",
      "description": "Request for GetCluster.\n\nAttributes:\n    name (str):\n        Required. The name of the cluster whose\n        configuration to return.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the cluster whose configuration to return.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateClusterRequest",
      "description": "Request for CreateCluster.\n\nAttributes:\n    parent (str):\n        Required. The parent region in which to create the cluster.\n        Structured like ``projects/{project}/locations/{location}``.\n    cluster_id (str):\n        Required. The ID to use for the cluster, which will become\n        the final component of the cluster's name. The ID must be\n        1-63 characters long, and match the regular expression\n        ``[a-z]([-a-z0-9]*[a-z0-9])?`` to comply with RFC 1035.\n\n        This value is structured like: ``my-cluster-id``.\n    cluster (google.cloud.managedkafka_v1.types.Cluster):\n        Required. Configuration of the cluster to create. Its\n        ``name`` field is ignored.\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID to avoid\n        duplication of requests. If a request times out\n        or fails, retrying with the same ID allows the\n        server to recognize the previous attempt. For at\n        least 60 minutes, the serve",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent region in which to create the cluster. Structured like ``projects/{project}/locations/{location}``.",
            "type": "string"
          },
          "cluster_id": {
            "description": "Required. The ID to use for the cluster, which will become the final component of the cluster's name. The ID must be 1-63 characters long, and match the regular expression ``[a-z]([-a-z0-9]*[a-z0-9])?`` to comply with RFC 1035.  This value is structured like: ``my-cluster-id``.",
            "type": "string"
          },
          "cluster": {
            "description": "Required. Configuration of the cluster to create. Its ``name`` field is ignored.",
            "reference": "google.cloud.managedkafka_v1.types.Cluster",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Unique name of the resource in this scope including project and location using the form: ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}``",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp associated with the cluster creation request.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.State",
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. System assigned, unique identifier for the cluster.",
                  "type": "string",
                  "output_only": true
                },
                "replica_count": {
                  "description": "Optional. The number of replica nodes per shard.  This field is a member of `oneof`_ ``_replica_count``.",
                  "type": "integer"
                },
                "authorization_mode": {
                  "description": "Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.AuthorizationMode"
                },
                "transit_encryption_mode": {
                  "description": "Optional. The in-transit encryption for the Redis cluster. If not provided, encryption  is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.TransitEncryptionMode"
                },
                "size_gb": {
                  "description": "Output only. Redis memory size in GB for the entire cluster rounded up to the next integer.  This field is a member of `oneof`_ ``_size_gb``.",
                  "type": "integer",
                  "output_only": true
                },
                "shard_count": {
                  "description": "Required. Number of shards for the Redis cluster.  This field is a member of `oneof`_ ``_shard_count``.",
                  "type": "integer"
                },
                "psc_configs": {
                  "description": "Required. Each PscConfig configures the consumer network where IPs will be designated to the cluster for client access through Private Service Connect Automation. Currently, only one PscConfig is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "network": {
                          "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "network"
                      ]
                    }
                  }
                },
                "discovery_endpoints": {
                  "description": "Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one discovery endpoint is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.DiscoveryEndpoint",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Output only. Address of the exposed Redis endpoint used by clients to connect to the service. The address could be either IP or hostname.",
                          "type": "string",
                          "output_only": true
                        },
                        "port": {
                          "description": "Output only. The port number of the exposed Redis endpoint.",
                          "type": "integer",
                          "output_only": true
                        },
                        "psc_config": {
                          "description": "Output only. Customer configuration for where the endpoint is created and accessed from.",
                          "type": "object",
                          "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "network": {
                                "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "network"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "psc_connections": {
                  "description": "Output only. PSC connections for discovery of the cluster topology and accessing the cluster.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConnection",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "psc_connection_id": {
                          "description": "Output only. The PSC connection id of the forwarding rule connected to the service attachment.",
                          "type": "string",
                          "output_only": true
                        },
                        "address": {
                          "description": "Output only. The IP allocated on the consumer network for the PSC forwarding rule.",
                          "type": "string",
                          "output_only": true
                        },
                        "forwarding_rule": {
                          "description": "Output only. The URI of the consumer side forwarding rule. Example:  projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.",
                          "type": "string",
                          "output_only": true
                        },
                        "project_id": {
                          "description": "Output only. The consumer project_id where the forwarding rule is created from.",
                          "type": "string",
                          "output_only": true
                        },
                        "network": {
                          "description": "The consumer network where the IP address resides, in the form of projects/{project_id}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "state_info": {
                  "description": "Output only. Additional information about the current state of the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "update_info": {
                        "description": "Describes ongoing update on the cluster when cluster state is UPDATING.  This field is a member of `oneof`_ ``info``.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo.UpdateInfo",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "target_shard_count": {
                              "description": "Target number of shards for redis cluster  This field is a member of `oneof`_ ``_target_shard_count``.",
                              "type": "integer"
                            },
                            "target_replica_count": {
                              "description": "Target number of replica nodes per shard.  This field is a member of `oneof`_ ``_target_replica_count``.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "node_type": {
                  "description": "Optional. The type of a redis node in the cluster. NodeType determines the underlying machine-type of a redis node.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.NodeType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "cpu_platform": {
                        "description": "[Output Only] The CPU platform used by this node type.  This field is a member of `oneof`_ ``_cpu_platform``.",
                        "type": "string",
                        "output_only": true
                      },
                      "creation_timestamp": {
                        "description": "[Output Only] Creation timestamp in RFC3339 text format.  This field is a member of `oneof`_ ``_creation_timestamp``.",
                        "type": "string",
                        "output_only": true
                      },
                      "deprecated": {
                        "description": "[Output Only] The deprecation status associated with this node type.  This field is a member of `oneof`_ ``_deprecated``.",
                        "type": "object",
                        "reference": "google.cloud.compute_v1.types.DeprecationStatus",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "deleted": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deleted``.",
                              "type": "string"
                            },
                            "deprecated": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deprecated``.",
                              "type": "string"
                            },
                            "obsolete": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_obsolete``.",
                              "type": "string"
                            },
                            "replacement": {
                              "description": "The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.  This field is a member of `oneof`_ ``_replacement``.",
                              "type": "string"
                            },
                            "state": {
                              "description": "The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error. Check the State enum for the list of possible values.  This field is a member of `oneof`_ ``_state``.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": {
                        "description": "[Output Only] An optional textual description of the resource.  This field is a member of `oneof`_ ``_description``.",
                        "type": "string",
                        "output_only": true
                      },
                      "guest_cpus": {
                        "description": "[Output Only] The number of virtual CPUs that are available to the node type.  This field is a member of `oneof`_ ``_guest_cpus``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "id": {
                        "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.  This field is a member of `oneof`_ ``_id``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "kind": {
                        "description": "[Output Only] The type of the resource. Always compute#nodeType for node types.  This field is a member of `oneof`_ ``_kind``.",
                        "type": "string",
                        "output_only": true
                      },
                      "local_ssd_gb": {
                        "description": "[Output Only] Local SSD available to the node type, defined in GB.  This field is a member of `oneof`_ ``_local_ssd_gb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "memory_mb": {
                        "description": "[Output Only] The amount of physical memory available to the node type, defined in MB.  This field is a member of `oneof`_ ``_memory_mb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "name": {
                        "description": "[Output Only] Name of the resource.  This field is a member of `oneof`_ ``_name``.",
                        "type": "string",
                        "output_only": true
                      },
                      "self_link": {
                        "description": "[Output Only] Server-defined URL for the resource.  This field is a member of `oneof`_ ``_self_link``.",
                        "type": "string",
                        "output_only": true
                      },
                      "zone": {
                        "description": "[Output Only] The name of the zone where the node type resides, such as us-central1-a.  This field is a member of `oneof`_ ``_zone``.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                },
                "persistence_config": {
                  "description": "Optional. Persistence config (RDB, AOF) for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of persistence.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.PersistenceMode"
                      },
                      "rdb_config": {
                        "description": "Optional. RDB configuration. This field will be ignored if mode is not RDB.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "rdb_snapshot_period": {
                              "description": "Optional. Period between RDB snapshots.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig.SnapshotPeriod"
                            },
                            "rdb_snapshot_start_time": {
                              "description": "Optional. The time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            }
                          }
                        }
                      },
                      "aof_config": {
                        "description": "Optional. AOF configuration. This field will be ignored if mode is not AOF.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "append_fsync": {
                              "description": "Optional. fsync configuration.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig.AppendFsync"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "redis_configs": {
                  "description": "Optional. Key/Value pairs of customer overrides for mutable Redis Configs",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "precise_size_gb": {
                  "description": "Output only. Precise value of redis memory size in GB for the entire cluster.  This field is a member of `oneof`_ ``_precise_size_gb``.",
                  "type": "number",
                  "output_only": true
                },
                "zone_distribution_config": {
                  "description": "Optional. This config will be used to determine how the customer wants us to distribute cluster resources within the region.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of zone distribution. Defaults to MULTI_ZONE, when not specified.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig.ZoneDistributionMode"
                      },
                      "zone": {
                        "description": "Optional. When SINGLE ZONE distribution is selected, zone field would be used to allocate all resources in that zone. This is not applicable to MULTI_ZONE, and would be ignored for MULTI_ZONE clusters.",
                        "type": "string"
                      }
                    }
                  }
                },
                "deletion_protection_enabled": {
                  "description": "Optional. The delete operation will fail when the value is set to true.  This field is a member of `oneof`_ ``_deletion_protection_enabled``.",
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "shard_count",
                "psc_configs"
              ]
            }
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID to avoid duplication of requests. If a request times out or fails, retrying with the same ID allows the server to recognize the previous attempt. For at least 60 minutes, the server ignores duplicate requests bearing the same ID.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID within 60 minutes of the last request, the server checks if an original operation with the same request ID was received. If so, the server ignores the second request.  The request ID must be a valid UUID. A zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "parent",
          "cluster_id",
          "cluster"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateClusterRequest",
      "description": "Request for UpdateCluster.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Field mask is used to specify the fields to be\n        overwritten in the cluster resource by the update. The\n        fields specified in the update_mask are relative to the\n        resource, not the full request. A field will be overwritten\n        if it is in the mask. The mask is required and a value of \\*\n        will update all fields.\n    cluster (google.cloud.managedkafka_v1.types.Cluster):\n        Required. The cluster to update. Its ``name`` field must be\n        populated.\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID to avoid\n        duplication of requests. If a request times out\n        or fails, retrying with the same ID allows the\n        server to recognize the previous attempt. For at\n        least 60 minutes, the server ignores duplicate\n        requests bearing the same ID.\n\n        For example, consi",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Field mask is used to specify the fields to be overwritten in the cluster resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. The mask is required and a value of \\* will update all fields.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "cluster": {
            "description": "Required. The cluster to update. Its ``name`` field must be populated.",
            "reference": "google.cloud.managedkafka_v1.types.Cluster",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Required. Unique name of the resource in this scope including project and location using the form: ``projects/{project_id}/locations/{location_id}/clusters/{cluster_id}``",
                  "type": "string"
                },
                "create_time": {
                  "description": "Output only. The timestamp associated with the cluster creation request.",
                  "type": "object",
                  "reference": "google.protobuf.timestamp_pb2.Timestamp",
                  "output_only": true
                },
                "state": {
                  "description": "Output only. The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.State",
                  "output_only": true
                },
                "uid": {
                  "description": "Output only. System assigned, unique identifier for the cluster.",
                  "type": "string",
                  "output_only": true
                },
                "replica_count": {
                  "description": "Optional. The number of replica nodes per shard.  This field is a member of `oneof`_ ``_replica_count``.",
                  "type": "integer"
                },
                "authorization_mode": {
                  "description": "Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.AuthorizationMode"
                },
                "transit_encryption_mode": {
                  "description": "Optional. The in-transit encryption for the Redis cluster. If not provided, encryption  is disabled for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.TransitEncryptionMode"
                },
                "size_gb": {
                  "description": "Output only. Redis memory size in GB for the entire cluster rounded up to the next integer.  This field is a member of `oneof`_ ``_size_gb``.",
                  "type": "integer",
                  "output_only": true
                },
                "shard_count": {
                  "description": "Required. Number of shards for the Redis cluster.  This field is a member of `oneof`_ ``_shard_count``.",
                  "type": "integer"
                },
                "psc_configs": {
                  "description": "Required. Each PscConfig configures the consumer network where IPs will be designated to the cluster for client access through Private Service Connect Automation. Currently, only one PscConfig is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "network": {
                          "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "network"
                      ]
                    }
                  }
                },
                "discovery_endpoints": {
                  "description": "Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one discovery endpoint is supported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.DiscoveryEndpoint",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Output only. Address of the exposed Redis endpoint used by clients to connect to the service. The address could be either IP or hostname.",
                          "type": "string",
                          "output_only": true
                        },
                        "port": {
                          "description": "Output only. The port number of the exposed Redis endpoint.",
                          "type": "integer",
                          "output_only": true
                        },
                        "psc_config": {
                          "description": "Output only. Customer configuration for where the endpoint is created and accessed from.",
                          "type": "object",
                          "reference": "google.cloud.redis_cluster_v1.types.PscConfig",
                          "output_only": true,
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "network": {
                                "description": "Required. The network where the IP address of the discovery endpoint will be reserved, in the form of projects/{network_project}/global/networks/{network_id}.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "network"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "psc_connections": {
                  "description": "Output only. PSC connections for discovery of the cluster topology and accessing the cluster.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.redis_cluster_v1.types.PscConnection",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "psc_connection_id": {
                          "description": "Output only. The PSC connection id of the forwarding rule connected to the service attachment.",
                          "type": "string",
                          "output_only": true
                        },
                        "address": {
                          "description": "Output only. The IP allocated on the consumer network for the PSC forwarding rule.",
                          "type": "string",
                          "output_only": true
                        },
                        "forwarding_rule": {
                          "description": "Output only. The URI of the consumer side forwarding rule. Example:  projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.",
                          "type": "string",
                          "output_only": true
                        },
                        "project_id": {
                          "description": "Output only. The consumer project_id where the forwarding rule is created from.",
                          "type": "string",
                          "output_only": true
                        },
                        "network": {
                          "description": "The consumer network where the IP address resides, in the form of projects/{project_id}/global/networks/{network_id}.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "output_only": true
                },
                "state_info": {
                  "description": "Output only. Additional information about the current state of the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "update_info": {
                        "description": "Describes ongoing update on the cluster when cluster state is UPDATING.  This field is a member of `oneof`_ ``info``.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.Cluster.StateInfo.UpdateInfo",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "target_shard_count": {
                              "description": "Target number of shards for redis cluster  This field is a member of `oneof`_ ``_target_shard_count``.",
                              "type": "integer"
                            },
                            "target_replica_count": {
                              "description": "Target number of replica nodes per shard.  This field is a member of `oneof`_ ``_target_replica_count``.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "node_type": {
                  "description": "Optional. The type of a redis node in the cluster. NodeType determines the underlying machine-type of a redis node.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.NodeType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "cpu_platform": {
                        "description": "[Output Only] The CPU platform used by this node type.  This field is a member of `oneof`_ ``_cpu_platform``.",
                        "type": "string",
                        "output_only": true
                      },
                      "creation_timestamp": {
                        "description": "[Output Only] Creation timestamp in RFC3339 text format.  This field is a member of `oneof`_ ``_creation_timestamp``.",
                        "type": "string",
                        "output_only": true
                      },
                      "deprecated": {
                        "description": "[Output Only] The deprecation status associated with this node type.  This field is a member of `oneof`_ ``_deprecated``.",
                        "type": "object",
                        "reference": "google.cloud.compute_v1.types.DeprecationStatus",
                        "output_only": true,
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "deleted": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deleted``.",
                              "type": "string"
                            },
                            "deprecated": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_deprecated``.",
                              "type": "string"
                            },
                            "obsolete": {
                              "description": "An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.  This field is a member of `oneof`_ ``_obsolete``.",
                              "type": "string"
                            },
                            "replacement": {
                              "description": "The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.  This field is a member of `oneof`_ ``_replacement``.",
                              "type": "string"
                            },
                            "state": {
                              "description": "The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error. Check the State enum for the list of possible values.  This field is a member of `oneof`_ ``_state``.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": {
                        "description": "[Output Only] An optional textual description of the resource.  This field is a member of `oneof`_ ``_description``.",
                        "type": "string",
                        "output_only": true
                      },
                      "guest_cpus": {
                        "description": "[Output Only] The number of virtual CPUs that are available to the node type.  This field is a member of `oneof`_ ``_guest_cpus``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "id": {
                        "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.  This field is a member of `oneof`_ ``_id``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "kind": {
                        "description": "[Output Only] The type of the resource. Always compute#nodeType for node types.  This field is a member of `oneof`_ ``_kind``.",
                        "type": "string",
                        "output_only": true
                      },
                      "local_ssd_gb": {
                        "description": "[Output Only] Local SSD available to the node type, defined in GB.  This field is a member of `oneof`_ ``_local_ssd_gb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "memory_mb": {
                        "description": "[Output Only] The amount of physical memory available to the node type, defined in MB.  This field is a member of `oneof`_ ``_memory_mb``.",
                        "type": "integer",
                        "output_only": true
                      },
                      "name": {
                        "description": "[Output Only] Name of the resource.  This field is a member of `oneof`_ ``_name``.",
                        "type": "string",
                        "output_only": true
                      },
                      "self_link": {
                        "description": "[Output Only] Server-defined URL for the resource.  This field is a member of `oneof`_ ``_self_link``.",
                        "type": "string",
                        "output_only": true
                      },
                      "zone": {
                        "description": "[Output Only] The name of the zone where the node type resides, such as us-central1-a.  This field is a member of `oneof`_ ``_zone``.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                },
                "persistence_config": {
                  "description": "Optional. Persistence config (RDB, AOF) for the cluster.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of persistence.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.PersistenceMode"
                      },
                      "rdb_config": {
                        "description": "Optional. RDB configuration. This field will be ignored if mode is not RDB.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "rdb_snapshot_period": {
                              "description": "Optional. Period between RDB snapshots.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.RDBConfig.SnapshotPeriod"
                            },
                            "rdb_snapshot_start_time": {
                              "description": "Optional. The time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.",
                              "type": "object",
                              "reference": "google.protobuf.timestamp_pb2.Timestamp"
                            }
                          }
                        }
                      },
                      "aof_config": {
                        "description": "Optional. AOF configuration. This field will be ignored if mode is not AOF.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "append_fsync": {
                              "description": "Optional. fsync configuration.",
                              "type": "object",
                              "reference": "google.cloud.redis_cluster_v1.types.ClusterPersistenceConfig.AOFConfig.AppendFsync"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "redis_configs": {
                  "description": "Optional. Key/Value pairs of customer overrides for mutable Redis Configs",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "precise_size_gb": {
                  "description": "Output only. Precise value of redis memory size in GB for the entire cluster.  This field is a member of `oneof`_ ``_precise_size_gb``.",
                  "type": "number",
                  "output_only": true
                },
                "zone_distribution_config": {
                  "description": "Optional. This config will be used to determine how the customer wants us to distribute cluster resources within the region.",
                  "type": "object",
                  "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Optional. The mode of zone distribution. Defaults to MULTI_ZONE, when not specified.",
                        "type": "object",
                        "reference": "google.cloud.redis_cluster_v1.types.ZoneDistributionConfig.ZoneDistributionMode"
                      },
                      "zone": {
                        "description": "Optional. When SINGLE ZONE distribution is selected, zone field would be used to allocate all resources in that zone. This is not applicable to MULTI_ZONE, and would be ignored for MULTI_ZONE clusters.",
                        "type": "string"
                      }
                    }
                  }
                },
                "deletion_protection_enabled": {
                  "description": "Optional. The delete operation will fail when the value is set to true.  This field is a member of `oneof`_ ``_deletion_protection_enabled``.",
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "shard_count",
                "psc_configs"
              ]
            }
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID to avoid duplication of requests. If a request times out or fails, retrying with the same ID allows the server to recognize the previous attempt. For at least 60 minutes, the server ignores duplicate requests bearing the same ID.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID within 60 minutes of the last request, the server checks if an original operation with the same request ID was received. If so, the server ignores the second request.  The request ID must be a valid UUID. A zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "update_mask",
          "cluster"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteClusterRequest",
      "description": "Request for DeleteCluster.\n\nAttributes:\n    name (str):\n        Required. The name of the cluster to delete.\n    request_id (str):\n        Optional. An optional request ID to identify\n        requests. Specify a unique request ID to avoid\n        duplication of requests. If a request times out\n        or fails, retrying with the same ID allows the\n        server to recognize the previous attempt. For at\n        least 60 minutes, the server ignores duplicate\n        requests bearing the same ID.\n\n        For example, consider a situation where you make\n        an initial request and the request times out. If\n        you make the request again with the same request\n        ID within 60 minutes of the last request, the\n        server checks if an original operation with the\n        same request ID was received. If so, the server\n        ignores the second request.\n\n        The request ID must be a valid UUID. A zero UUID\n        is not supported\n        (00000000-0000-0000-0000-000000000000).",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the cluster to delete.",
            "type": "string"
          },
          "request_id": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID to avoid duplication of requests. If a request times out or fails, retrying with the same ID allows the server to recognize the previous attempt. For at least 60 minutes, the server ignores duplicate requests bearing the same ID.  For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID within 60 minutes of the last request, the server checks if an original operation with the same request ID was received. If so, the server ignores the second request.  The request ID must be a valid UUID. A zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListTopicsRequest",
      "description": "Request for ListTopics.\n\nAttributes:\n    parent (str):\n        Required. The parent cluster whose topics are to be listed.\n        Structured like\n        ``projects/{project}/locations/{location}/clusters/{cluster}``.\n    page_size (int):\n        Optional. The maximum number of topics to\n        return. The service may return fewer than this\n        value. If unset or zero, all topics for the\n        parent is returned.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListTopics`` call. Provide this to retrieve the subsequent\n        page.\n\n        When paginating, all other parameters provided to\n        ``ListTopics`` must match the call that provided the page\n        token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent cluster whose topics are to be listed. Structured like ``projects/{project}/locations/{location}/clusters/{cluster}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of topics to return. The service may return fewer than this value. If unset or zero, all topics for the parent is returned.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListTopics`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListTopics`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTopicRequest",
      "description": "Request for GetTopic.\n\nAttributes:\n    name (str):\n        Required. The name of the topic whose\n        configuration to return. Structured like:\n\n        projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the topic whose configuration to return. Structured like:  projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateTopicRequest",
      "description": "Request for CreateTopic.\n\nAttributes:\n    parent (str):\n        Required. The parent cluster in which to create the topic.\n        Structured like\n        ``projects/{project}/locations/{location}/clusters/{cluster}``.\n    topic_id (str):\n        Required. The ID to use for the topic, which will become the\n        final component of the topic's name.\n\n        This value is structured like: ``my-topic-name``.\n    topic (google.cloud.managedkafka_v1.types.Topic):\n        Required. Configuration of the topic to create. Its ``name``\n        field is ignored.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent cluster in which to create the topic. Structured like ``projects/{project}/locations/{location}/clusters/{cluster}``.",
            "type": "string"
          },
          "topic_id": {
            "description": "Required. The ID to use for the topic, which will become the final component of the topic's name.  This value is structured like: ``my-topic-name``.",
            "type": "string"
          },
          "topic": {
            "description": "Required. Configuration of the topic to create. Its ``name`` field is ignored.",
            "reference": "google.cloud.managedkafka_v1.types.Topic",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The name of the topic. The ``topic`` segment is used when connecting directly to the cluster. Structured like: projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}",
                  "type": "string"
                },
                "partition_count": {
                  "description": "Required. The number of partitions this topic has. The partition count can only be increased, not decreased. Please note that if partitions are increased for a topic that has a key, the partitioning logic or the ordering of the messages will be affected.",
                  "type": "integer"
                },
                "replication_factor": {
                  "description": "Required. Immutable. The number of replicas of each partition. A replication factor of 3 is recommended for high availability.",
                  "type": "integer"
                },
                "configs": {
                  "description": "Optional. Configurations for the topic that are overridden from the cluster defaults. The key of the map is a Kafka topic property name, for example: ``cleanup.policy``, ``compression.type``.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "partition_count",
                "replication_factor"
              ]
            }
          }
        },
        "required": [
          "parent",
          "topic_id",
          "topic"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTopicRequest",
      "description": "Request for UpdateTopic.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Field mask is used to specify the fields to be\n        overwritten in the Topic resource by the update. The fields\n        specified in the update_mask are relative to the resource,\n        not the full request. A field will be overwritten if it is\n        in the mask. The mask is required and a value of \\* will\n        update all fields.\n    topic (google.cloud.managedkafka_v1.types.Topic):\n        Required. The topic to update. Its ``name`` field must be\n        populated.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Field mask is used to specify the fields to be overwritten in the Topic resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. The mask is required and a value of \\* will update all fields.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "topic": {
            "description": "Required. The topic to update. Its ``name`` field must be populated.",
            "reference": "google.cloud.managedkafka_v1.types.Topic",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The name of the topic. The ``topic`` segment is used when connecting directly to the cluster. Structured like: projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}",
                  "type": "string"
                },
                "partition_count": {
                  "description": "Required. The number of partitions this topic has. The partition count can only be increased, not decreased. Please note that if partitions are increased for a topic that has a key, the partitioning logic or the ordering of the messages will be affected.",
                  "type": "integer"
                },
                "replication_factor": {
                  "description": "Required. Immutable. The number of replicas of each partition. A replication factor of 3 is recommended for high availability.",
                  "type": "integer"
                },
                "configs": {
                  "description": "Optional. Configurations for the topic that are overridden from the cluster defaults. The key of the map is a Kafka topic property name, for example: ``cleanup.policy``, ``compression.type``.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "partition_count",
                "replication_factor"
              ]
            }
          }
        },
        "required": [
          "update_mask",
          "topic"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTopicRequest",
      "description": "Request for DeleteTopic.\n\nAttributes:\n    name (str):\n        Required. The name of the topic to delete.\n        ``projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the topic to delete. ``projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListConsumerGroupsRequest",
      "description": "Request for ListConsumerGroups.\n\nAttributes:\n    parent (str):\n        Required. The parent cluster whose consumer groups are to be\n        listed. Structured like\n        ``projects/{project}/locations/{location}/clusters/{cluster}``.\n    page_size (int):\n        Optional. The maximum number of consumer\n        groups to return. The service may return fewer\n        than this value. If unset or zero, all consumer\n        groups for the parent is returned.\n    page_token (str):\n        Optional. A page token, received from a previous\n        ``ListConsumerGroups`` call. Provide this to retrieve the\n        subsequent page.\n\n        When paginating, all other parameters provided to\n        ``ListConsumerGroups`` must match the call that provided the\n        page token.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The parent cluster whose consumer groups are to be listed. Structured like ``projects/{project}/locations/{location}/clusters/{cluster}``.",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of consumer groups to return. The service may return fewer than this value. If unset or zero, all consumer groups for the parent is returned.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. A page token, received from a previous ``ListConsumerGroups`` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to ``ListConsumerGroups`` must match the call that provided the page token.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetConsumerGroupRequest",
      "description": "Request for GetConsumerGroup.\n\nAttributes:\n    name (str):\n        Required. The name of the consumer group whose configuration\n        to return.\n        ``projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumerGroup}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the consumer group whose configuration to return. ``projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumerGroup}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateConsumerGroupRequest",
      "description": "Request for UpdateConsumerGroup.\n\nAttributes:\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Required. Field mask is used to specify the fields to be\n        overwritten in the ConsumerGroup resource by the update. The\n        fields specified in the update_mask are relative to the\n        resource, not the full request. A field will be overwritten\n        if it is in the mask. The mask is required and a value of \\*\n        will update all fields.\n    consumer_group (google.cloud.managedkafka_v1.types.ConsumerGroup):\n        Required. The consumer group to update. Its ``name`` field\n        must be populated.",
      "parameters": {
        "type": "object",
        "properties": {
          "update_mask": {
            "description": "Required. Field mask is used to specify the fields to be overwritten in the ConsumerGroup resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. The mask is required and a value of \\* will update all fields.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          },
          "consumer_group": {
            "description": "Required. The consumer group to update. Its ``name`` field must be populated.",
            "reference": "google.cloud.managedkafka_v1.types.ConsumerGroup",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The name of the consumer group. The ``consumer_group`` segment is used when connecting directly to the cluster. Structured like: projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumer_group}",
                  "type": "string"
                },
                "topics": {
                  "description": "Optional. Metadata for this consumer group for all topics it has metadata for. The key of the map is a topic name, structured like:  projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "reference": "google.cloud.managedkafka_v1.types.ConsumerTopicMetadata",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "partitions": {
                          "description": "Optional. Metadata for this consumer group and topic for all partition indexes it has metadata for.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "reference": "google.cloud.managedkafka_v1.types.ConsumerPartitionMetadata",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "offset": {
                                  "description": "Required. The current offset for this partition, or 0 if no offset has been committed.",
                                  "type": "integer"
                                },
                                "metadata": {
                                  "description": "Optional. The associated metadata for this partition, or empty if it does not exist.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "offset"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "update_mask",
          "consumer_group"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteConsumerGroupRequest",
      "description": "Request for DeleteConsumerGroup.\n\nAttributes:\n    name (str):\n        Required. The name of the consumer group to delete.\n        ``projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumerGroup}``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the consumer group to delete. ``projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumerGroup}``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ]
}