{
  "ServiceHealth": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_events",
          "description": "Lists events under a given project and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicehealth_v1\n\n    async def sample_list_events():\n        # Create a client\n        client = servicehealth_v1.ServiceHealthAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicehealth_v1.ListEventsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_events(request=request)\n\n        # Handle the response\n        async for response in page_result:\n            print(response)\n\nArgs:\n    request (Optional[Union[go",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value using the form ``projects/{project_id}/locations/{location}/events``.  ``project_id`` - ID of the project for which to list service health events. ``location`` - The location to get the service health events from. To retrieve service health events of category = INCIDENT, use ``location`` = ``global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicehealth_v1.services.service_health.pagers.ListEventsAsyncPager: Message for response to listing events. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.servicehealth_v1.services.service_health.pagers.ListEventsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_event",
          "description": "Retrieves a resource containing information about an\nevent.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicehealth_v1\n\n    async def sample_get_event():\n        # Create a client\n        client = servicehealth_v1.ServiceHealthAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicehealth_v1.GetEventRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_event(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    request (Optional[Union[google.cloud.servicehealth_v1.types.GetEventR",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Unique name of the event in this scope including project and location using the form ``projects/{project_id}/locations/{location}/events/{event_id}``.  ``project_id`` - Project ID of the project that contains the event. ``location`` - The location to get the service health events from. ``event_id`` - Event ID to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicehealth_v1.types.Event: Represents service health events that may affect Google Cloud products. Event resource is a read-only view and does not allow any modifications. All fields are output only."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.servicehealth_v1.types.Event"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_organization_events",
          "description": "Lists organization events under a given organization\nand location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicehealth_v1\n\n    async def sample_list_organization_events():\n        # Create a client\n        client = servicehealth_v1.ServiceHealthAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicehealth_v1.ListOrganizationEventsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_organization_events(request=request)\n\n        # Handle the response\n        async for response in page_result:\n         ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value using the form ``organizations/{organization_id}/locations/{location}/organizationEvents``.  ``organization_id`` - ID (number) of the project that contains the event. To get your ``organization_id``, see `Getting your organization resource ID <https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id>`__. ``location`` - The location to get the service health events from. To retrieve service health events of category = INCIDENT, use ``location`` = ``global``.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicehealth_v1.services.service_health.pagers.ListOrganizationEventsAsyncPager: Message for response to listing organization events. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.servicehealth_v1.services.service_health.pagers.ListOrganizationEventsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_organization_event",
          "description": "Retrieves a resource containing information about an\nevent affecting an organization .\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicehealth_v1\n\n    async def sample_get_organization_event():\n        # Create a client\n        client = servicehealth_v1.ServiceHealthAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicehealth_v1.GetOrganizationEventRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_organization_event(request=request)\n\n        # Handle the response\n        print(response)\n\nArgs:\n    requ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Unique name of the event in this scope including organization and event ID using the form ``organizations/{organization_id}/locations/locations/global/organizationEvents/{event_id}``.  ``organization_id`` - ID (number) of the project that contains the event. To get your ``organization_id``, see `Getting your organization resource ID <https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id>`__. ``event_id`` - Organization event ID to retrieve.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicehealth_v1.types.OrganizationEvent: Represents service health events that may affect Google Cloud products used across the organization. It is a read-only view and does not allow any modifications."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.servicehealth_v1.types.OrganizationEvent"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_organization_impacts",
          "description": "Lists assets impacted by organization events under a\ngiven organization and location.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicehealth_v1\n\n    async def sample_list_organization_impacts():\n        # Create a client\n        client = servicehealth_v1.ServiceHealthAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicehealth_v1.ListOrganizationImpactsRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_organization_impacts(request=request)\n\n        # Handle the response\n        async for response in ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Parent value using the form ``organizations/{organization_id}/locations/{location}/organizationImpacts``.  ``organization_id`` - ID (number) of the project that contains the event. To get your ``organization_id``, see `Getting your organization resource ID <https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id>`__.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicehealth_v1.services.service_health.pagers.ListOrganizationImpactsAsyncPager: Message for response to listing organization impacts. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.servicehealth_v1.services.service_health.pagers.ListOrganizationImpactsAsyncPager"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_organization_impact",
          "description": "Retrieves a resource containing information about\nimpact to an asset under an organization affected by a\nservice health event.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import servicehealth_v1\n\n    async def sample_get_organization_impact():\n        # Create a client\n        client = servicehealth_v1.ServiceHealthAsyncClient()\n\n        # Initialize request argument(s)\n        request = servicehealth_v1.GetOrganizationImpactRequest(\n            name=\"name_value\",\n        )\n\n        # Make the request\n        response = await client.get_organization_impact(request=request)\n\n        # Handle the respo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. Name of the resource using the form ``organizations/{organization_id}/locations/global/organizationImpacts/{organization_impact_id}``.  ``organization_id`` - ID (number) of the organization that contains the event. To get your ``organization_id``, see `Getting your organization resource ID <https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id>`__. ``organization_impact_id`` - ID of the `OrganizationImpact resource </service-health/docs/reference/rest/v1beta/organizations.locations.organizationImpacts#OrganizationImpact>`__.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.servicehealth_v1.types.OrganizationImpact: Represents impact to assets at organizational level. It is a read-only view and does not allow any modifications."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [],
          "response_types": [
            "google.cloud.servicehealth_v1.types.OrganizationImpact"
          ]
        }
      }
    ]
  }
}