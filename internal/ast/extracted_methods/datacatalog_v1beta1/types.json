{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-datacatalog/google/cloud/datacatalog_v1beta1/types/datacatalog.py": [
    {
      "type": "function",
      "name": "SearchCatalogRequest",
      "description": "Request message for\n[SearchCatalog][google.cloud.datacatalog.v1beta1.DataCatalog.SearchCatalog].\n\nAttributes:\n    scope (google.cloud.datacatalog_v1beta1.types.SearchCatalogRequest.Scope):\n        Required. The scope of this search request. A ``scope`` that\n        has empty ``include_org_ids``, ``include_project_ids`` AND\n        false ``include_gcp_public_datasets`` is considered invalid.\n        Data Catalog will return an error in such a case.\n    query (str):\n        Optional. The query string in search query syntax. An empty\n        query string will result in all data assets (in the\n        specified scope) that the user has access to. Query strings\n        can be simple as \"x\" or more qualified as:\n\n        -  name:x\n        -  column:x\n        -  description:y\n\n        Note: Query tokens need to have a minimum of 3 characters\n        for substring matching to work correctly. See `Data Catalog\n        Search\n        Syntax <https://cloud.google.com/data-catalog/docs/how-to/search-reference>`__\n       ",
      "parameters": {
        "type": "object",
        "properties": {
          "scope": {
            "description": "Required. The scope of this search request. A ``scope`` that has empty ``include_org_ids``, ``include_project_ids`` AND false ``include_gcp_public_datasets`` is considered invalid. Data Catalog will return an error in such a case.",
            "reference": "google.cloud.datacatalog_v1beta1.types.SearchCatalogRequest.Scope",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "include_org_ids": {
                  "description": "The list of organization IDs to search within. To find your organization ID, follow instructions in https://cloud.google.com/resource-manager/docs/creating-managing-organization.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "include_project_ids": {
                  "description": "The list of project IDs to search within. To learn more about the distinction between project names/IDs/numbers, go to https://cloud.google.com/docs/overview/#projects.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "include_gcp_public_datasets": {
                  "description": "If ``true``, include Google Cloud public datasets in the search results. Info on Google Cloud public datasets is available at https://cloud.google.com/public-datasets/. By default, Google Cloud public datasets are excluded.",
                  "type": "boolean"
                },
                "restricted_locations": {
                  "description": "Optional. The list of locations to search within.  1. If empty, search will be performed in all locations; 2. If any of the locations are NOT in the valid locations list, error will be returned; 3. Otherwise, search only the given locations for matching results. Typical usage is to leave this field empty. When a location is unreachable as returned in the ``SearchCatalogResponse.unreachable`` field, users can repeat the search request with this parameter set to get additional information on the error.  Valid locations:  -  asia-east1 -  asia-east2 -  asia-northeast1 -  asia-northeast2 -  asia-northeast3 -  asia-south1 -  asia-southeast1 -  australia-southeast1 -  eu -  europe-north1 -  europe-west1 -  europe-west2 -  europe-west3 -  europe-west4 -  europe-west6 -  global -  northamerica-northeast1 -  southamerica-east1 -  us -  us-central1 -  us-east1 -  us-east4 -  us-west1 -  us-west2",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "query": {
            "description": "Optional. The query string in search query syntax. An empty query string will result in all data assets (in the specified scope) that the user has access to. Query strings can be simple as \"x\" or more qualified as:  -  name:x -  column:x -  description:y  Note: Query tokens need to have a minimum of 3 characters for substring matching to work correctly. See `Data Catalog Search Syntax <https://cloud.google.com/data-catalog/docs/how-to/search-reference>`__ for more information.",
            "type": "string"
          },
          "page_size": {
            "description": "Number of results in the search page. If <=0 then defaults to 10. Max limit for page_size is 1000. Throws an invalid argument for page_size > 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. Pagination token returned in an earlier [SearchCatalogResponse.next_page_token][google.cloud.datacatalog.v1beta1.SearchCatalogResponse.next_page_token], which indicates that this is a continuation of a prior [SearchCatalogRequest][google.cloud.datacatalog.v1beta1.DataCatalog.SearchCatalog] call, and that the system should return the next page of data. If empty, the first page is returned.",
            "type": "string"
          },
          "order_by": {
            "description": "Specifies the ordering of results, currently supported case-sensitive choices are:  -  ``relevance``, only supports descending -  ``last_modified_timestamp [asc|desc]``, defaults to descending if not specified -  ``default`` that can only be descending  If not specified, defaults to ``relevance`` descending.",
            "type": "string"
          }
        },
        "required": [
          "scope"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateEntryGroupRequest",
      "description": "Request message for\n[CreateEntryGroup][google.cloud.datacatalog.v1beta1.DataCatalog.CreateEntryGroup].\n\nAttributes:\n    parent (str):\n        Required. The name of the project this entry group is in.\n        Example:\n\n        -  projects/{project_id}/locations/{location}\n\n        Note that this EntryGroup and its child resources may not\n        actually be stored in the location in this name.\n    entry_group_id (str):\n        Required. The id of the entry group to\n        create. The id must begin with a letter or\n        underscore, contain only English letters,\n        numbers and underscores, and be at most 64\n        characters.\n    entry_group (google.cloud.datacatalog_v1beta1.types.EntryGroup):\n        The entry group to create. Defaults to an\n        empty entry group.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the project this entry group is in. Example:  -  projects/{project_id}/locations/{location}  Note that this EntryGroup and its child resources may not actually be stored in the location in this name.",
            "type": "string"
          },
          "entry_group_id": {
            "description": "Required. The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters, numbers and underscores, and be at most 64 characters.",
            "type": "string"
          },
          "entry_group": {
            "description": "The entry group to create. Defaults to an empty entry group.",
            "reference": "google.cloud.datacatalog_v1beta1.types.EntryGroup",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The resource name of the entry group in URL format. Example:  -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}  Note that this EntryGroup and its child resources may not actually be stored in the location in this name.",
                  "type": "string"
                },
                "display_name": {
                  "description": "A short name to identify the entry group, for example, \"analytics data - jan 2011\". Default value is an empty string.",
                  "type": "string"
                },
                "description": {
                  "description": "Entry group description, which can consist of several sentences or paragraphs that describe entry group contents. Default value is an empty string.",
                  "type": "string"
                },
                "data_catalog_timestamps": {
                  "description": "Output only. Timestamps about this EntryGroup. Default value is empty timestamps.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.SystemTimestamps",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_time": {
                        "description": "The creation time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "update_time": {
                        "description": "The last-modified time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "expire_time": {
                        "description": "Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "entry_group_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateEntryGroupRequest",
      "description": "Request message for\n[UpdateEntryGroup][google.cloud.datacatalog.v1beta1.DataCatalog.UpdateEntryGroup].\n\nAttributes:\n    entry_group (google.cloud.datacatalog_v1beta1.types.EntryGroup):\n        Required. The updated entry group. \"name\"\n        field must be set.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Names of fields whose values to overwrite on\n        an entry group.\n        If this parameter is absent or empty, all\n        modifiable fields are overwritten. If such\n        fields are non-required and omitted in the\n        request body, their values are emptied.",
      "parameters": {
        "type": "object",
        "properties": {
          "entry_group": {
            "description": "Required. The updated entry group. \"name\" field must be set.",
            "reference": "google.cloud.datacatalog_v1beta1.types.EntryGroup",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The resource name of the entry group in URL format. Example:  -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}  Note that this EntryGroup and its child resources may not actually be stored in the location in this name.",
                  "type": "string"
                },
                "display_name": {
                  "description": "A short name to identify the entry group, for example, \"analytics data - jan 2011\". Default value is an empty string.",
                  "type": "string"
                },
                "description": {
                  "description": "Entry group description, which can consist of several sentences or paragraphs that describe entry group contents. Default value is an empty string.",
                  "type": "string"
                },
                "data_catalog_timestamps": {
                  "description": "Output only. Timestamps about this EntryGroup. Default value is empty timestamps.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.SystemTimestamps",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_time": {
                        "description": "The creation time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "update_time": {
                        "description": "The last-modified time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "expire_time": {
                        "description": "Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "Names of fields whose values to overwrite on an entry group. If this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "entry_group"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetEntryGroupRequest",
      "description": "Request message for\n[GetEntryGroup][google.cloud.datacatalog.v1beta1.DataCatalog.GetEntryGroup].\n\nAttributes:\n    name (str):\n        Required. The name of the entry group. For example,\n        ``projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}``.\n    read_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The fields to return. If not set or empty,\n        all fields are returned.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the entry group. For example, ``projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}``.",
            "type": "string"
          },
          "read_mask": {
            "description": "The fields to return. If not set or empty, all fields are returned.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteEntryGroupRequest",
      "description": "Request message for\n[DeleteEntryGroup][google.cloud.datacatalog.v1beta1.DataCatalog.DeleteEntryGroup].\n\nAttributes:\n    name (str):\n        Required. The name of the entry group. For example,\n        ``projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}``.\n    force (bool):\n        Optional. If true, deletes all entries in the\n        entry group.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the entry group. For example, ``projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}``.",
            "type": "string"
          },
          "force": {
            "description": "Optional. If true, deletes all entries in the entry group.",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListEntryGroupsRequest",
      "description": "Request message for\n[ListEntryGroups][google.cloud.datacatalog.v1beta1.DataCatalog.ListEntryGroups].\n\nAttributes:\n    parent (str):\n        Required. The name of the location that contains the entry\n        groups, which can be provided in URL format. Example:\n\n        -  projects/{project_id}/locations/{location}\n    page_size (int):\n        Optional. The maximum number of items to return. Default is\n        10. Max limit is 1000. Throws an invalid argument for\n        ``page_size > 1000``.\n    page_token (str):\n        Optional. Token that specifies which page is\n        requested. If empty, the first page is returned.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the location that contains the entry groups, which can be provided in URL format. Example:  -  projects/{project_id}/locations/{location}",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. The maximum number of items to return. Default is 10. Max limit is 1000. Throws an invalid argument for ``page_size > 1000``.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. Token that specifies which page is requested. If empty, the first page is returned.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateEntryRequest",
      "description": "Request message for\n[CreateEntry][google.cloud.datacatalog.v1beta1.DataCatalog.CreateEntry].\n\nAttributes:\n    parent (str):\n        Required. The name of the entry group this entry is in.\n        Example:\n\n        -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}\n\n        Note that this Entry and its child resources may not\n        actually be stored in the location in this name.\n    entry_id (str):\n        Required. The id of the entry to create.\n    entry (google.cloud.datacatalog_v1beta1.types.Entry):\n        Required. The entry to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the entry group this entry is in. Example:  -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}  Note that this Entry and its child resources may not actually be stored in the location in this name.",
            "type": "string"
          },
          "entry_id": {
            "description": "Required. The id of the entry to create.",
            "type": "string"
          },
          "entry": {
            "description": "Required. The entry to create.",
            "reference": "google.cloud.datacatalog_v1beta1.types.Entry",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "role": {
                  "description": "The granted role, which can be ``READER``, ``WRITER``, or ``OWNER``.",
                  "type": "string"
                },
                "group_email": {
                  "description": "Grants access to a group identified by an email address.",
                  "type": "string"
                },
                "user_email": {
                  "description": "Grants access to a user identified by an email address.",
                  "type": "string"
                },
                "domain": {
                  "description": "Grants access to all members of a domain.",
                  "type": "string"
                },
                "special_group": {
                  "description": "Grants access to special groups. Valid groups are ``PROJECT_OWNERS``, ``PROJECT_READERS``, ``PROJECT_WRITERS`` and ``ALL_AUTHENTICATED_USERS``.",
                  "type": "string"
                },
                "view_name": {
                  "description": "Grants access to a BigQuery View.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "description": "The project ID.",
                        "type": "string"
                      },
                      "dataset_id": {
                        "description": "The dataset ID within the project.",
                        "type": "string"
                      },
                      "table_id": {
                        "description": "The table ID of the table within the dataset.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "entry_id",
          "entry"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateEntryRequest",
      "description": "Request message for\n[UpdateEntry][google.cloud.datacatalog.v1beta1.DataCatalog.UpdateEntry].\n\nAttributes:\n    entry (google.cloud.datacatalog_v1beta1.types.Entry):\n        Required. The updated entry. The \"name\" field\n        must be set.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Names of fields whose values to overwrite on an entry.\n\n        If this parameter is absent or empty, all modifiable fields\n        are overwritten. If such fields are non-required and omitted\n        in the request body, their values are emptied.\n\n        The following fields are modifiable:\n\n        -  For entries with type ``DATA_STREAM``:\n\n           -  ``schema``\n\n        -  For entries with type ``FILESET``:\n\n           -  ``schema``\n           -  ``display_name``\n           -  ``description``\n           -  ``gcs_fileset_spec``\n           -  ``gcs_fileset_spec.file_patterns``\n\n        -  For entries with ``user_specified_type``:\n\n           -  ``schema``\n           -  ``display_name``\n           -  ``d",
      "parameters": {
        "type": "object",
        "properties": {
          "entry": {
            "description": "Required. The updated entry. The \"name\" field must be set.",
            "reference": "google.cloud.datacatalog_v1beta1.types.Entry",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "role": {
                  "description": "The granted role, which can be ``READER``, ``WRITER``, or ``OWNER``.",
                  "type": "string"
                },
                "group_email": {
                  "description": "Grants access to a group identified by an email address.",
                  "type": "string"
                },
                "user_email": {
                  "description": "Grants access to a user identified by an email address.",
                  "type": "string"
                },
                "domain": {
                  "description": "Grants access to all members of a domain.",
                  "type": "string"
                },
                "special_group": {
                  "description": "Grants access to special groups. Valid groups are ``PROJECT_OWNERS``, ``PROJECT_READERS``, ``PROJECT_WRITERS`` and ``ALL_AUTHENTICATED_USERS``.",
                  "type": "string"
                },
                "view_name": {
                  "description": "Grants access to a BigQuery View.",
                  "type": "object",
                  "reference": "google.cloud.bigquery_logging_v1.types.TableName",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "description": "The project ID.",
                        "type": "string"
                      },
                      "dataset_id": {
                        "description": "The dataset ID within the project.",
                        "type": "string"
                      },
                      "table_id": {
                        "description": "The table ID of the table within the dataset.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "Names of fields whose values to overwrite on an entry.  If this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.  The following fields are modifiable:  -  For entries with type ``DATA_STREAM``:  -  ``schema``  -  For entries with type ``FILESET``:  -  ``schema`` -  ``display_name`` -  ``description`` -  ``gcs_fileset_spec`` -  ``gcs_fileset_spec.file_patterns``  -  For entries with ``user_specified_type``:  -  ``schema`` -  ``display_name`` -  ``description`` -  ``user_specified_type`` -  ``user_specified_system`` -  ``linked_resource`` -  ``source_system_timestamps``",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "entry"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteEntryRequest",
      "description": "Request message for\n[DeleteEntry][google.cloud.datacatalog.v1beta1.DataCatalog.DeleteEntry].\n\nAttributes:\n    name (str):\n        Required. The name of the entry. Example:\n\n        -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the entry. Example:  -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetEntryRequest",
      "description": "Request message for\n[GetEntry][google.cloud.datacatalog.v1beta1.DataCatalog.GetEntry].\n\nAttributes:\n    name (str):\n        Required. The name of the entry. Example:\n\n        -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the entry. Example:  -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "LookupEntryRequest",
      "description": "Request message for\n[LookupEntry][google.cloud.datacatalog.v1beta1.DataCatalog.LookupEntry].\n\nThis message has `oneof`_ fields (mutually exclusive fields).\nFor each oneof, at most one member field can be set at the same time.\nSetting any member of the oneof automatically clears all other\nmembers.\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    linked_resource (str):\n        The full name of the Google Cloud Platform resource the Data\n        Catalog entry represents. See:\n        https://cloud.google.com/apis/design/resource_names#full_resource_name.\n        Full names are case-sensitive.\n\n        Examples:\n\n        -  //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId\n        -  //pubsub.googleapis.com/projects/projectId/topics/topicId\n\n        This field is a member of `oneof`_ ``target_name``.\n    sql_resource (str):\n        The SQL name of the entry. SQL names are case-sensitive.\n\n        Examples:\n\n  ",
      "parameters": {
        "type": "object",
        "properties": {
          "linked_resource": {
            "description": "The full name of the Google Cloud Platform resource the Data Catalog entry represents. See: https://cloud.google.com/apis/design/resource_names#full_resource_name. Full names are case-sensitive.  Examples:  -  //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId -  //pubsub.googleapis.com/projects/projectId/topics/topicId  This field is a member of `oneof`_ ``target_name``.",
            "type": "string"
          },
          "sql_resource": {
            "description": "The SQL name of the entry. SQL names are case-sensitive.  Examples:  -  ``pubsub.project_id.topic_id`` -  :literal:`pubsub.project_id.`topic.id.with.dots\\`` -  ``bigquery.table.project_id.dataset_id.table_id`` -  ``bigquery.dataset.project_id.dataset_id`` -  ``datacatalog.entry.project_id.location_id.entry_group_id.entry_id``  ``*_id``\\ s should satisfy the standard SQL rules for identifiers. https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical.  This field is a member of `oneof`_ ``target_name``.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "CreateTagTemplateRequest",
      "description": "Request message for\n[CreateTagTemplate][google.cloud.datacatalog.v1beta1.DataCatalog.CreateTagTemplate].\n\nAttributes:\n    parent (str):\n        Required. The name of the project and the template location\n        [region](https://cloud.google.com/data-catalog/docs/concepts/regions.\n\n        Example:\n\n        -  projects/{project_id}/locations/us-central1\n    tag_template_id (str):\n        Required. The id of the tag template to\n        create.\n    tag_template (google.cloud.datacatalog_v1beta1.types.TagTemplate):\n        Required. The tag template to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions.  Example:  -  projects/{project_id}/locations/us-central1",
            "type": "string"
          },
          "tag_template_id": {
            "description": "Required. The id of the tag template to create.",
            "type": "string"
          },
          "tag_template": {
            "description": "Required. The tag template to create.",
            "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplate",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The resource name of the tag template in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}  Note that this TagTemplate and its child resources may not actually be stored in the location in this name.",
                  "type": "string"
                },
                "display_name": {
                  "description": "The display name for this template. Defaults to an empty string.",
                  "type": "string"
                },
                "fields": {
                  "description": "Required. Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields.  The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplateField",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Output only. Identifier. The resource name of the tag template field in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field}  Note that this TagTemplateField may not actually be stored in the location in this name.",
                          "type": "string",
                          "output_only": true
                        },
                        "display_name": {
                          "description": "The display name for this field. Defaults to an empty string.",
                          "type": "string"
                        },
                        "type_": {
                          "description": "Required. The type of value this tag field can contain.",
                          "type": "object",
                          "reference": "google.cloud.datacatalog_v1beta1.types.FieldType",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "primitive_type": {
                                "description": "Represents primitive types - string, bool etc.  This field is a member of `oneof`_ ``type_decl``.",
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.PrimitiveType"
                              },
                              "enum_type": {
                                "description": "Represents an enum type.  This field is a member of `oneof`_ ``type_decl``.",
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "allowed_values": {
                                      "description": "",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType.EnumValue",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "display_name": {
                                              "description": "Required. The display name of the enum value. Must not be an empty string.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "display_name"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "is_required": {
                          "description": "Whether this is a required field. Defaults to false.",
                          "type": "boolean"
                        },
                        "description": {
                          "description": "The description for this field. Defaults to an empty string.",
                          "type": "string"
                        },
                        "order": {
                          "description": "The order of this field with respect to other fields in this tag template.  A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "type_"
                      ]
                    }
                  }
                },
                "dataplex_transfer_status": {
                  "description": "Output only. Transfer status of the TagTemplate",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplate.DataplexTransferStatus",
                  "output_only": true
                }
              },
              "required": [
                "fields"
              ]
            }
          }
        },
        "required": [
          "parent",
          "tag_template_id",
          "tag_template"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTagTemplateRequest",
      "description": "Request message for\n[GetTagTemplate][google.cloud.datacatalog.v1beta1.DataCatalog.GetTagTemplate].\n\nAttributes:\n    name (str):\n        Required. The name of the tag template. Example:\n\n        -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag template. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTagTemplateRequest",
      "description": "Request message for\n[UpdateTagTemplate][google.cloud.datacatalog.v1beta1.DataCatalog.UpdateTagTemplate].\n\nAttributes:\n    tag_template (google.cloud.datacatalog_v1beta1.types.TagTemplate):\n        Required. The template to update. The \"name\"\n        field must be set.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Names of fields whose values to overwrite on a tag template.\n        Currently, only ``display_name`` can be overwritten.\n\n        In general, if this parameter is absent or empty, all\n        modifiable fields are overwritten. If such fields are\n        non-required and omitted in the request body, their values\n        are emptied.",
      "parameters": {
        "type": "object",
        "properties": {
          "tag_template": {
            "description": "Required. The template to update. The \"name\" field must be set.",
            "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplate",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. The resource name of the tag template in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}  Note that this TagTemplate and its child resources may not actually be stored in the location in this name.",
                  "type": "string"
                },
                "display_name": {
                  "description": "The display name for this template. Defaults to an empty string.",
                  "type": "string"
                },
                "fields": {
                  "description": "Required. Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields.  The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplateField",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Output only. Identifier. The resource name of the tag template field in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field}  Note that this TagTemplateField may not actually be stored in the location in this name.",
                          "type": "string",
                          "output_only": true
                        },
                        "display_name": {
                          "description": "The display name for this field. Defaults to an empty string.",
                          "type": "string"
                        },
                        "type_": {
                          "description": "Required. The type of value this tag field can contain.",
                          "type": "object",
                          "reference": "google.cloud.datacatalog_v1beta1.types.FieldType",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "primitive_type": {
                                "description": "Represents primitive types - string, bool etc.  This field is a member of `oneof`_ ``type_decl``.",
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.PrimitiveType"
                              },
                              "enum_type": {
                                "description": "Represents an enum type.  This field is a member of `oneof`_ ``type_decl``.",
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "allowed_values": {
                                      "description": "",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType.EnumValue",
                                        "resolved_schema": {
                                          "type": "object",
                                          "properties": {
                                            "display_name": {
                                              "description": "Required. The display name of the enum value. Must not be an empty string.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "display_name"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "is_required": {
                          "description": "Whether this is a required field. Defaults to false.",
                          "type": "boolean"
                        },
                        "description": {
                          "description": "The description for this field. Defaults to an empty string.",
                          "type": "string"
                        },
                        "order": {
                          "description": "The order of this field with respect to other fields in this tag template.  A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "type_"
                      ]
                    }
                  }
                },
                "dataplex_transfer_status": {
                  "description": "Output only. Transfer status of the TagTemplate",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplate.DataplexTransferStatus",
                  "output_only": true
                }
              },
              "required": [
                "fields"
              ]
            }
          },
          "update_mask": {
            "description": "Names of fields whose values to overwrite on a tag template. Currently, only ``display_name`` can be overwritten.  In general, if this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "tag_template"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTagTemplateRequest",
      "description": "Request message for\n[DeleteTagTemplate][google.cloud.datacatalog.v1beta1.DataCatalog.DeleteTagTemplate].\n\nAttributes:\n    name (str):\n        Required. The name of the tag template to delete. Example:\n\n        -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}\n    force (bool):\n        Required. Currently, this field must always be set to\n        ``true``. This confirms the deletion of any possible tags\n        using this template. ``force = false`` will be supported in\n        the future.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag template to delete. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}",
            "type": "string"
          },
          "force": {
            "description": "Required. Currently, this field must always be set to ``true``. This confirms the deletion of any possible tags using this template. ``force = false`` will be supported in the future.",
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "force"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateTagRequest",
      "description": "Request message for\n[CreateTag][google.cloud.datacatalog.v1beta1.DataCatalog.CreateTag].\n\nAttributes:\n    parent (str):\n        Required. The name of the resource to attach this tag to.\n        Tags can be attached to Entries. Example:\n\n        -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}\n\n        Note that this Tag and its child resources may not actually\n        be stored in the location in this name.\n    tag (google.cloud.datacatalog_v1beta1.types.Tag):\n        Required. The tag to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example:  -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}  Note that this Tag and its child resources may not actually be stored in the location in this name.",
            "type": "string"
          },
          "tag": {
            "description": "Required. The tag to create.",
            "reference": "google.cloud.datacatalog_v1beta1.types.Tag",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "tag_key": {
                  "description": "TagKey namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}.  This field is a member of `oneof`_ ``_tag_key``.",
                  "type": "string"
                },
                "tag_key_id": {
                  "description": "TagKey ID, in the format of tagKeys/{TAG_KEY_ID}.  This field is a member of `oneof`_ ``_tag_key_id``.",
                  "type": "string"
                },
                "tag_value": {
                  "description": "TagValue namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}/{TAG_VALUE_SHORT_NAME}.  This field is a member of `oneof`_ ``_tag_value``.",
                  "type": "string"
                },
                "tag_value_id": {
                  "description": "TagValue ID, in the format of tagValues/{TAG_VALUE_ID}.  This field is a member of `oneof`_ ``_tag_value_id``.",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "parent",
          "tag"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTagRequest",
      "description": "Request message for\n[UpdateTag][google.cloud.datacatalog.v1beta1.DataCatalog.UpdateTag].\n\nAttributes:\n    tag (google.cloud.datacatalog_v1beta1.types.Tag):\n        Required. The updated tag. The \"name\" field\n        must be set.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Note: Currently, this parameter can only take ``\"fields\"``\n        as value.\n\n        Names of fields whose values to overwrite on a tag.\n        Currently, a tag has the only modifiable field with the name\n        ``fields``.\n\n        In general, if this parameter is absent or empty, all\n        modifiable fields are overwritten. If such fields are\n        non-required and omitted in the request body, their values\n        are emptied.",
      "parameters": {
        "type": "object",
        "properties": {
          "tag": {
            "description": "Required. The updated tag. The \"name\" field must be set.",
            "reference": "google.cloud.datacatalog_v1beta1.types.Tag",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "tag_key": {
                  "description": "TagKey namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}.  This field is a member of `oneof`_ ``_tag_key``.",
                  "type": "string"
                },
                "tag_key_id": {
                  "description": "TagKey ID, in the format of tagKeys/{TAG_KEY_ID}.  This field is a member of `oneof`_ ``_tag_key_id``.",
                  "type": "string"
                },
                "tag_value": {
                  "description": "TagValue namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}/{TAG_VALUE_SHORT_NAME}.  This field is a member of `oneof`_ ``_tag_value``.",
                  "type": "string"
                },
                "tag_value_id": {
                  "description": "TagValue ID, in the format of tagValues/{TAG_VALUE_ID}.  This field is a member of `oneof`_ ``_tag_value_id``.",
                  "type": "string"
                }
              }
            }
          },
          "update_mask": {
            "description": "Note: Currently, this parameter can only take ``\"fields\"`` as value.  Names of fields whose values to overwrite on a tag. Currently, a tag has the only modifiable field with the name ``fields``.  In general, if this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "tag"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTagRequest",
      "description": "Request message for\n[DeleteTag][google.cloud.datacatalog.v1beta1.DataCatalog.DeleteTag].\n\nAttributes:\n    name (str):\n        Required. The name of the tag to delete. Example:\n\n        -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag to delete. Example:  -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreateTagTemplateFieldRequest",
      "description": "Request message for\n[CreateTagTemplateField][google.cloud.datacatalog.v1beta1.DataCatalog.CreateTagTemplateField].\n\nAttributes:\n    parent (str):\n        Required. The name of the project and the template location\n        `region <https://cloud.google.com/data-catalog/docs/concepts/regions>`__.\n\n        Example:\n\n        -  projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}\n    tag_template_field_id (str):\n        Required. The ID of the tag template field to create. Field\n        ids can contain letters (both uppercase and lowercase),\n        numbers (0-9), underscores (_) and dashes (-). Field IDs\n        must be at least 1 character long and at most 128 characters\n        long. Field IDs must also be unique within their template.\n    tag_template_field (google.cloud.datacatalog_v1beta1.types.TagTemplateField):\n        Required. The tag template field to create.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the project and the template location `region <https://cloud.google.com/data-catalog/docs/concepts/regions>`__.  Example:  -  projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}",
            "type": "string"
          },
          "tag_template_field_id": {
            "description": "Required. The ID of the tag template field to create. Field ids can contain letters (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field IDs must be at least 1 character long and at most 128 characters long. Field IDs must also be unique within their template.",
            "type": "string"
          },
          "tag_template_field": {
            "description": "Required. The tag template field to create.",
            "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplateField",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. Identifier. The resource name of the tag template field in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field}  Note that this TagTemplateField may not actually be stored in the location in this name.",
                  "type": "string",
                  "output_only": true
                },
                "display_name": {
                  "description": "The display name for this field. Defaults to an empty string.",
                  "type": "string"
                },
                "type_": {
                  "description": "Required. The type of value this tag field can contain.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.FieldType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "primitive_type": {
                        "description": "Represents primitive types - string, bool etc.  This field is a member of `oneof`_ ``type_decl``.",
                        "type": "object",
                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.PrimitiveType"
                      },
                      "enum_type": {
                        "description": "Represents an enum type.  This field is a member of `oneof`_ ``type_decl``.",
                        "type": "object",
                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "allowed_values": {
                              "description": "",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType.EnumValue",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "display_name": {
                                      "description": "Required. The display name of the enum value. Must not be an empty string.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "display_name"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "is_required": {
                  "description": "Whether this is a required field. Defaults to false.",
                  "type": "boolean"
                },
                "description": {
                  "description": "The description for this field. Defaults to an empty string.",
                  "type": "string"
                },
                "order": {
                  "description": "The order of this field with respect to other fields in this tag template.  A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
                  "type": "integer"
                }
              },
              "required": [
                "type_"
              ]
            }
          }
        },
        "required": [
          "parent",
          "tag_template_field_id",
          "tag_template_field"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTagTemplateFieldRequest",
      "description": "Request message for\n[UpdateTagTemplateField][google.cloud.datacatalog.v1beta1.DataCatalog.UpdateTagTemplateField].\n\nAttributes:\n    name (str):\n        Required. The name of the tag template field. Example:\n\n        -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}\n    tag_template_field (google.cloud.datacatalog_v1beta1.types.TagTemplateField):\n        Required. The template to update.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Optional. Names of fields whose values to overwrite on an\n        individual field of a tag template. The following fields are\n        modifiable:\n\n        -  ``display_name``\n        -  ``type.enum_type``\n        -  ``is_required``\n\n        If this parameter is absent or empty, all modifiable fields\n        are overwritten. If such fields are non-required and omitted\n        in the request body, their values are emptied with one\n        exception: when updating an enum type, the provided values\n       ",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag template field. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}",
            "type": "string"
          },
          "tag_template_field": {
            "description": "Required. The template to update.",
            "reference": "google.cloud.datacatalog_v1beta1.types.TagTemplateField",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Output only. Identifier. The resource name of the tag template field in URL format. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field}  Note that this TagTemplateField may not actually be stored in the location in this name.",
                  "type": "string",
                  "output_only": true
                },
                "display_name": {
                  "description": "The display name for this field. Defaults to an empty string.",
                  "type": "string"
                },
                "type_": {
                  "description": "Required. The type of value this tag field can contain.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.FieldType",
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "primitive_type": {
                        "description": "Represents primitive types - string, bool etc.  This field is a member of `oneof`_ ``type_decl``.",
                        "type": "object",
                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.PrimitiveType"
                      },
                      "enum_type": {
                        "description": "Represents an enum type.  This field is a member of `oneof`_ ``type_decl``.",
                        "type": "object",
                        "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType",
                        "resolved_schema": {
                          "type": "object",
                          "properties": {
                            "allowed_values": {
                              "description": "",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "reference": "google.cloud.datacatalog_v1beta1.types.FieldType.EnumType.EnumValue",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "display_name": {
                                      "description": "Required. The display name of the enum value. Must not be an empty string.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "display_name"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "is_required": {
                  "description": "Whether this is a required field. Defaults to false.",
                  "type": "boolean"
                },
                "description": {
                  "description": "The description for this field. Defaults to an empty string.",
                  "type": "string"
                },
                "order": {
                  "description": "The order of this field with respect to other fields in this tag template.  A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
                  "type": "integer"
                }
              },
              "required": [
                "type_"
              ]
            }
          },
          "update_mask": {
            "description": "Optional. Names of fields whose values to overwrite on an individual field of a tag template. The following fields are modifiable:  -  ``display_name`` -  ``type.enum_type`` -  ``is_required``  If this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied with one exception: when updating an enum type, the provided values are merged with the existing values. Therefore, enum values can only be added, existing enum values cannot be deleted or renamed.  Additionally, updating a template field from optional to required is *not* allowed.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "name",
          "tag_template_field"
        ]
      }
    },
    {
      "type": "function",
      "name": "RenameTagTemplateFieldRequest",
      "description": "Request message for\n[RenameTagTemplateField][google.cloud.datacatalog.v1beta1.DataCatalog.RenameTagTemplateField].\n\nAttributes:\n    name (str):\n        Required. The name of the tag template. Example:\n\n        -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}\n    new_tag_template_field_id (str):\n        Required. The new ID of this tag template field. For\n        example, ``my_new_field``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag template. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}",
            "type": "string"
          },
          "new_tag_template_field_id": {
            "description": "Required. The new ID of this tag template field. For example, ``my_new_field``.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "new_tag_template_field_id"
        ]
      }
    },
    {
      "type": "function",
      "name": "RenameTagTemplateFieldEnumValueRequest",
      "description": "Request message for\n[RenameTagTemplateFieldEnumValue][google.cloud.datacatalog.v1.DataCatalog.RenameTagTemplateFieldEnumValue].\n\nAttributes:\n    name (str):\n        Required. The name of the enum field value. Example:\n\n        -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}\n    new_enum_value_display_name (str):\n        Required. The new display name of the enum value. For\n        example, ``my_new_enum_value``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the enum field value. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}",
            "type": "string"
          },
          "new_enum_value_display_name": {
            "description": "Required. The new display name of the enum value. For example, ``my_new_enum_value``.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "new_enum_value_display_name"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTagTemplateFieldRequest",
      "description": "Request message for\n[DeleteTagTemplateField][google.cloud.datacatalog.v1beta1.DataCatalog.DeleteTagTemplateField].\n\nAttributes:\n    name (str):\n        Required. The name of the tag template field to delete.\n        Example:\n\n        -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}\n    force (bool):\n        Required. Currently, this field must always be set to\n        ``true``. This confirms the deletion of this field from any\n        tags using this field. ``force = false`` will be supported\n        in the future.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the tag template field to delete. Example:  -  projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}",
            "type": "string"
          },
          "force": {
            "description": "Required. Currently, this field must always be set to ``true``. This confirms the deletion of this field from any tags using this field. ``force = false`` will be supported in the future.",
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "force"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListTagsRequest",
      "description": "Request message for\n[ListTags][google.cloud.datacatalog.v1beta1.DataCatalog.ListTags].\n\nAttributes:\n    parent (str):\n        Required. The name of the Data Catalog resource to list the\n        tags of. The resource could be an\n        [Entry][google.cloud.datacatalog.v1beta1.Entry] or an\n        [EntryGroup][google.cloud.datacatalog.v1beta1.EntryGroup].\n\n        Examples:\n\n        -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}\n        -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}\n    page_size (int):\n        The maximum number of tags to return. Default\n        is 10. Max limit is 1000.\n    page_token (str):\n        Token that specifies which page is requested.\n        If empty, the first page is returned.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the Data Catalog resource to list the tags of. The resource could be an [Entry][google.cloud.datacatalog.v1beta1.Entry] or an [EntryGroup][google.cloud.datacatalog.v1beta1.EntryGroup].  Examples:  -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of tags to return. Default is 10. Max limit is 1000.",
            "type": "integer"
          },
          "page_token": {
            "description": "Token that specifies which page is requested. If empty, the first page is returned.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListEntriesRequest",
      "description": "Request message for\n[ListEntries][google.cloud.datacatalog.v1beta1.DataCatalog.ListEntries].\n\nAttributes:\n    parent (str):\n        Required. The name of the entry group that contains the\n        entries, which can be provided in URL format. Example:\n\n        -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}\n    page_size (int):\n        The maximum number of items to return. Default is 10. Max\n        limit is 1000. Throws an invalid argument for\n        ``page_size > 1000``.\n    page_token (str):\n        Token that specifies which page is requested.\n        If empty, the first page is returned.\n    read_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The fields to return for each Entry. If not set or empty,\n        all fields are returned. For example, setting read_mask to\n        contain only one path \"name\" will cause ListEntries to\n        return a list of Entries with only \"name\" field.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. The name of the entry group that contains the entries, which can be provided in URL format. Example:  -  projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of items to return. Default is 10. Max limit is 1000. Throws an invalid argument for ``page_size > 1000``.",
            "type": "integer"
          },
          "page_token": {
            "description": "Token that specifies which page is requested. If empty, the first page is returned.",
            "type": "string"
          },
          "read_mask": {
            "description": "The fields to return for each Entry. If not set or empty, all fields are returned. For example, setting read_mask to contain only one path \"name\" will cause ListEntries to return a list of Entries with only \"name\" field.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-datacatalog/google/cloud/datacatalog_v1beta1/types/policytagmanager.py": [
    {
      "type": "function",
      "name": "CreateTaxonomyRequest",
      "description": "Request message for\n[CreateTaxonomy][google.cloud.datacatalog.v1beta1.PolicyTagManager.CreateTaxonomy].\n\nAttributes:\n    parent (str):\n        Required. Resource name of the project that\n        the taxonomy will belong to.\n    taxonomy (google.cloud.datacatalog_v1beta1.types.Taxonomy):\n        The taxonomy to be created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the project that the taxonomy will belong to.",
            "type": "string"
          },
          "taxonomy": {
            "description": "The taxonomy to be created.",
            "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. Resource name of this taxonomy, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{id}\".",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.  The taxonomy display name must be unique within an organization.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.",
                  "type": "string"
                },
                "policy_tag_count": {
                  "description": "Output only. Number of policy tags contained in this taxonomy.",
                  "type": "integer",
                  "output_only": true
                },
                "taxonomy_timestamps": {
                  "description": "Output only. Timestamps about this taxonomy. Only create_time and update_time are used.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.SystemTimestamps",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_time": {
                        "description": "The creation time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "update_time": {
                        "description": "The last-modified time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "expire_time": {
                        "description": "Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      }
                    }
                  }
                },
                "activated_policy_types": {
                  "description": "Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy.PolicyType"
                  }
                },
                "service": {
                  "description": "Output only. Identity of the service which owns the Taxonomy. This field is only populated when the taxonomy is created by a Google Cloud service. Currently only 'DATAPLEX' is supported.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy.Service",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Immutable. The resource name for the service in the format ``projects/*/locations/*/namespaces/*/services/*``.",
                        "type": "string"
                      },
                      "annotations": {
                        "description": "Optional. Annotations for the service. This data can be consumed by service clients.  Restrictions:  -  The entire annotations dictionary may contain up to 2000 characters, spread accoss all key-value pairs. Annotations that go beyond this limit are rejected -  Valid annotation keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Annotations that fails to meet these requirements are rejected  Note: This field is equivalent to the ``metadata`` field in the v1beta1 API. They have the same syntax and read/write to the same location in Service Directory.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "endpoints": {
                        "description": "Output only. Endpoints associated with this service. Returned on [LookupService.ResolveService][google.cloud.servicedirectory.v1.LookupService.ResolveService]. Control plane clients should use [RegistrationService.ListEndpoints][google.cloud.servicedirectory.v1.RegistrationService.ListEndpoints].",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.servicedirectory_v1.types.Endpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "ip_address": {
                                "description": "The IP address of the endpoint, which can be an external or internal IP.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.",
                                "type": "integer"
                              },
                              "instance": {
                                "description": "A Compute Engine instance URI.",
                                "type": "string"
                              },
                              "forwarding_rule": {
                                "description": "A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format:  projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}",
                                "type": "string"
                              },
                              "forwarding_rule_target": {
                                "description": "Output only. Specifies the type of the target of the forwarding rule.  This field is a member of `oneof`_ ``_forwarding_rule_target``.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.ForwardingRuleTarget",
                                "output_only": true
                              },
                              "load_balancer_id": {
                                "description": "Output only. ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.  This field is a member of `oneof`_ ``_load_balancer_id``.",
                                "type": "string",
                                "output_only": true
                              },
                              "load_balancer_type": {
                                "description": "Output only. Type of the load balancer the forwarding rule points to.  This field is a member of `oneof`_ ``_load_balancer_type``.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.LoadBalancerType",
                                "output_only": true
                              },
                              "gke_master_cluster": {
                                "description": "A cluster URI for `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__.",
                                "type": "string"
                              },
                              "fqdn": {
                                "description": "DNS endpoint of `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__. Requires gke_master_cluster to be set, can't be used simultaneoulsly with ip_address or network. Applicable only to destination endpoint.",
                                "type": "string"
                              },
                              "cloud_sql_instance": {
                                "description": "A `Cloud SQL <https://cloud.google.com/sql>`__ instance URI.",
                                "type": "string"
                              },
                              "redis_instance": {
                                "description": "A `Redis Instance <https://cloud.google.com/memorystore/docs/redis>`__ URI.",
                                "type": "string"
                              },
                              "redis_cluster": {
                                "description": "A `Redis Cluster <https://cloud.google.com/memorystore/docs/cluster>`__ URI.",
                                "type": "string"
                              },
                              "cloud_function": {
                                "description": "A `Cloud Function <https://cloud.google.com/functions>`__.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.CloudFunctionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "A `Cloud Function <https://cloud.google.com/functions>`__ name.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "app_engine_version": {
                                "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.AppEngineVersionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__ name.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "cloud_run_revision": {
                                "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.CloudRunRevisionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__ URI. The format is: projects/{project}/locations/{location}/revisions/{revision}",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "network": {
                                "description": "A Compute Engine network URI.",
                                "type": "string"
                              },
                              "network_type": {
                                "description": "Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.NetworkType"
                              },
                              "project_id": {
                                "description": "Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID:  1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "output_only": true
                      },
                      "uid": {
                        "description": "Output only. The globally unique identifier of the service in the UUID4 format.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              },
              "required": [
                "display_name"
              ]
            }
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeleteTaxonomyRequest",
      "description": "Request message for\n[DeleteTaxonomy][google.cloud.datacatalog.v1beta1.PolicyTagManager.DeleteTaxonomy].\n\nAttributes:\n    name (str):\n        Required. Resource name of the taxonomy to be\n        deleted. All policy tags in this taxonomy will\n        also be deleted.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the taxonomy to be deleted. All policy tags in this taxonomy will also be deleted.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateTaxonomyRequest",
      "description": "Request message for\n[UpdateTaxonomy][google.cloud.datacatalog.v1beta1.PolicyTagManager.UpdateTaxonomy].\n\nAttributes:\n    taxonomy (google.cloud.datacatalog_v1beta1.types.Taxonomy):\n        The taxonomy to update. Only description, display_name, and\n        activated policy types can be updated.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The update mask applies to the resource. For the\n        ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\n        If not set, defaults to all of the fields that are allowed\n        to update.",
      "parameters": {
        "type": "object",
        "properties": {
          "taxonomy": {
            "description": "The taxonomy to update. Only description, display_name, and activated policy types can be updated.",
            "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. Resource name of this taxonomy, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{id}\".",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.  The taxonomy display name must be unique within an organization.",
                  "type": "string"
                },
                "description": {
                  "description": "Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.",
                  "type": "string"
                },
                "policy_tag_count": {
                  "description": "Output only. Number of policy tags contained in this taxonomy.",
                  "type": "integer",
                  "output_only": true
                },
                "taxonomy_timestamps": {
                  "description": "Output only. Timestamps about this taxonomy. Only create_time and update_time are used.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.SystemTimestamps",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "create_time": {
                        "description": "The creation time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "update_time": {
                        "description": "The last-modified time of the resource within the given system.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp"
                      },
                      "expire_time": {
                        "description": "Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.",
                        "type": "object",
                        "reference": "google.protobuf.timestamp_pb2.Timestamp",
                        "output_only": true
                      }
                    }
                  }
                },
                "activated_policy_types": {
                  "description": "Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy.PolicyType"
                  }
                },
                "service": {
                  "description": "Output only. Identity of the service which owns the Taxonomy. This field is only populated when the taxonomy is created by a Google Cloud service. Currently only 'DATAPLEX' is supported.",
                  "type": "object",
                  "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy.Service",
                  "output_only": true,
                  "resolved_schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Immutable. The resource name for the service in the format ``projects/*/locations/*/namespaces/*/services/*``.",
                        "type": "string"
                      },
                      "annotations": {
                        "description": "Optional. Annotations for the service. This data can be consumed by service clients.  Restrictions:  -  The entire annotations dictionary may contain up to 2000 characters, spread accoss all key-value pairs. Annotations that go beyond this limit are rejected -  Valid annotation keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Annotations that fails to meet these requirements are rejected  Note: This field is equivalent to the ``metadata`` field in the v1beta1 API. They have the same syntax and read/write to the same location in Service Directory.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "endpoints": {
                        "description": "Output only. Endpoints associated with this service. Returned on [LookupService.ResolveService][google.cloud.servicedirectory.v1.LookupService.ResolveService]. Control plane clients should use [RegistrationService.ListEndpoints][google.cloud.servicedirectory.v1.RegistrationService.ListEndpoints].",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "reference": "google.cloud.servicedirectory_v1.types.Endpoint",
                          "resolved_schema": {
                            "type": "object",
                            "properties": {
                              "ip_address": {
                                "description": "The IP address of the endpoint, which can be an external or internal IP.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.",
                                "type": "integer"
                              },
                              "instance": {
                                "description": "A Compute Engine instance URI.",
                                "type": "string"
                              },
                              "forwarding_rule": {
                                "description": "A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format:  projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}",
                                "type": "string"
                              },
                              "forwarding_rule_target": {
                                "description": "Output only. Specifies the type of the target of the forwarding rule.  This field is a member of `oneof`_ ``_forwarding_rule_target``.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.ForwardingRuleTarget",
                                "output_only": true
                              },
                              "load_balancer_id": {
                                "description": "Output only. ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.  This field is a member of `oneof`_ ``_load_balancer_id``.",
                                "type": "string",
                                "output_only": true
                              },
                              "load_balancer_type": {
                                "description": "Output only. Type of the load balancer the forwarding rule points to.  This field is a member of `oneof`_ ``_load_balancer_type``.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.LoadBalancerType",
                                "output_only": true
                              },
                              "gke_master_cluster": {
                                "description": "A cluster URI for `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__.",
                                "type": "string"
                              },
                              "fqdn": {
                                "description": "DNS endpoint of `Google Kubernetes Engine cluster control plane <https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture>`__. Requires gke_master_cluster to be set, can't be used simultaneoulsly with ip_address or network. Applicable only to destination endpoint.",
                                "type": "string"
                              },
                              "cloud_sql_instance": {
                                "description": "A `Cloud SQL <https://cloud.google.com/sql>`__ instance URI.",
                                "type": "string"
                              },
                              "redis_instance": {
                                "description": "A `Redis Instance <https://cloud.google.com/memorystore/docs/redis>`__ URI.",
                                "type": "string"
                              },
                              "redis_cluster": {
                                "description": "A `Redis Cluster <https://cloud.google.com/memorystore/docs/cluster>`__ URI.",
                                "type": "string"
                              },
                              "cloud_function": {
                                "description": "A `Cloud Function <https://cloud.google.com/functions>`__.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.CloudFunctionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "A `Cloud Function <https://cloud.google.com/functions>`__ name.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "app_engine_version": {
                                "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.AppEngineVersionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "An `App Engine <https://cloud.google.com/appengine>`__ `service version <https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions>`__ name.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "cloud_run_revision": {
                                "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.CloudRunRevisionEndpoint",
                                "resolved_schema": {
                                  "type": "object",
                                  "properties": {
                                    "uri": {
                                      "description": "A `Cloud Run <https://cloud.google.com/run>`__ `revision <https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get>`__ URI. The format is: projects/{project}/locations/{location}/revisions/{revision}",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "network": {
                                "description": "A Compute Engine network URI.",
                                "type": "string"
                              },
                              "network_type": {
                                "description": "Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.",
                                "type": "object",
                                "reference": "google.cloud.network_management_v1.types.Endpoint.NetworkType"
                              },
                              "project_id": {
                                "description": "Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID:  1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "output_only": true
                      },
                      "uid": {
                        "description": "Output only. The globally unique identifier of the service in the UUID4 format.",
                        "type": "string",
                        "output_only": true
                      }
                    }
                  }
                }
              },
              "required": [
                "display_name"
              ]
            }
          },
          "update_mask": {
            "description": "The update mask applies to the resource. For the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "ListTaxonomiesRequest",
      "description": "Request message for\n[ListTaxonomies][google.cloud.datacatalog.v1beta1.PolicyTagManager.ListTaxonomies].\n\nAttributes:\n    parent (str):\n        Required. Resource name of the project to\n        list the taxonomies of.\n    page_size (int):\n        The maximum number of items to return. Must\n        be a value between 1 and 1000. If not set,\n        defaults to 50.\n    page_token (str):\n        The next_page_token value returned from a previous list\n        request, if any. If not set, defaults to an empty string.\n    filter (str):\n        Supported field for filter is 'service' and\n        value is 'dataplex'. Eg: service=dataplex.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the project to list the taxonomies of.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to 50.",
            "type": "integer"
          },
          "page_token": {
            "description": "The next_page_token value returned from a previous list request, if any. If not set, defaults to an empty string.",
            "type": "string"
          },
          "filter": {
            "description": "Supported field for filter is 'service' and value is 'dataplex'. Eg: service=dataplex.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTaxonomyRequest",
      "description": "Request message for\n[GetTaxonomy][google.cloud.datacatalog.v1beta1.PolicyTagManager.GetTaxonomy].\n\nAttributes:\n    name (str):\n        Required. Resource name of the requested\n        taxonomy.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the requested taxonomy.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "CreatePolicyTagRequest",
      "description": "Request message for\n[CreatePolicyTag][google.cloud.datacatalog.v1beta1.PolicyTagManager.CreatePolicyTag].\n\nAttributes:\n    parent (str):\n        Required. Resource name of the taxonomy that\n        the policy tag will belong to.\n    policy_tag (google.cloud.datacatalog_v1beta1.types.PolicyTag):\n        The policy tag to be created.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the taxonomy that the policy tag will belong to.",
            "type": "string"
          },
          "policy_tag": {
            "description": "The policy tag to be created.",
            "reference": "google.cloud.datacatalog_v1beta1.types.PolicyTag",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. Resource name of this policy tag, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\".",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.",
                  "type": "string"
                },
                "description": {
                  "description": "Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.",
                  "type": "string"
                },
                "parent_policy_tag": {
                  "description": "Resource name of this policy tag's parent policy tag (e.g. for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the \"Geolocation\" policy tag in the example above). If not set, defaults to an empty string.",
                  "type": "string"
                },
                "child_policy_tags": {
                  "description": "Output only. Resource names of child policy tags of this policy tag.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "output_only": true
                }
              },
              "required": [
                "display_name"
              ]
            }
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "DeletePolicyTagRequest",
      "description": "Request message for\n[DeletePolicyTag][google.cloud.datacatalog.v1beta1.PolicyTagManager.DeletePolicyTag].\n\nAttributes:\n    name (str):\n        Required. Resource name of the policy tag to\n        be deleted. All of its descendant policy tags\n        will also be deleted.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the policy tag to be deleted. All of its descendant policy tags will also be deleted.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdatePolicyTagRequest",
      "description": "Request message for\n[UpdatePolicyTag][google.cloud.datacatalog.v1beta1.PolicyTagManager.UpdatePolicyTag].\n\nAttributes:\n    policy_tag (google.cloud.datacatalog_v1beta1.types.PolicyTag):\n        The policy tag to update. Only the description,\n        display_name, and parent_policy_tag fields can be updated.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        The update mask applies to the resource. Only display_name,\n        description and parent_policy_tag can be updated and thus\n        can be listed in the mask. If update_mask is not provided,\n        all allowed fields (i.e. display_name, description and\n        parent) will be updated. For more information including the\n        ``FieldMask`` definition, see\n        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\n        If not set, defaults to all of the fields that are allowed\n        to update.",
      "parameters": {
        "type": "object",
        "properties": {
          "policy_tag": {
            "description": "The policy tag to update. Only the description, display_name, and parent_policy_tag fields can be updated.",
            "reference": "google.cloud.datacatalog_v1beta1.types.PolicyTag",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Identifier. Resource name of this policy tag, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\".",
                  "type": "string"
                },
                "display_name": {
                  "description": "Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.",
                  "type": "string"
                },
                "description": {
                  "description": "Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.",
                  "type": "string"
                },
                "parent_policy_tag": {
                  "description": "Resource name of this policy tag's parent policy tag (e.g. for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the \"Geolocation\" policy tag in the example above). If not set, defaults to an empty string.",
                  "type": "string"
                },
                "child_policy_tags": {
                  "description": "Output only. Resource names of child policy tags of this policy tag.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "output_only": true
                }
              },
              "required": [
                "display_name"
              ]
            }
          },
          "update_mask": {
            "description": "The update mask applies to the resource. Only display_name, description and parent_policy_tag can be updated and thus can be listed in the mask. If update_mask is not provided, all allowed fields (i.e. display_name, description and parent) will be updated. For more information including the ``FieldMask`` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "ListPolicyTagsRequest",
      "description": "Request message for\n[ListPolicyTags][google.cloud.datacatalog.v1beta1.PolicyTagManager.ListPolicyTags].\n\nAttributes:\n    parent (str):\n        Required. Resource name of the taxonomy to\n        list the policy tags of.\n    page_size (int):\n        The maximum number of items to return. Must\n        be a value between 1 and 1000. If not set,\n        defaults to 50.\n    page_token (str):\n        The next_page_token value returned from a previous List\n        request, if any. If not set, defaults to an empty string.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the taxonomy to list the policy tags of.",
            "type": "string"
          },
          "page_size": {
            "description": "The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to 50.",
            "type": "integer"
          },
          "page_token": {
            "description": "The next_page_token value returned from a previous List request, if any. If not set, defaults to an empty string.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetPolicyTagRequest",
      "description": "Request message for\n[GetPolicyTag][google.cloud.datacatalog.v1beta1.PolicyTagManager.GetPolicyTag].\n\nAttributes:\n    name (str):\n        Required. Resource name of the requested\n        policy tag.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the requested policy tag.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  ],
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-cloud-datacatalog/google/cloud/datacatalog_v1beta1/types/policytagmanagerserialization.py": [
    {
      "type": "function",
      "name": "ImportTaxonomiesRequest",
      "description": "Request message for\n[ImportTaxonomies][google.cloud.datacatalog.v1beta1.PolicyTagManagerSerialization.ImportTaxonomies].\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    parent (str):\n        Required. Resource name of project that the\n        imported taxonomies will belong to.\n    inline_source (google.cloud.datacatalog_v1beta1.types.InlineSource):\n        Inline source used for taxonomies to be\n        imported.\n\n        This field is a member of `oneof`_ ``source``.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of project that the imported taxonomies will belong to.",
            "type": "string"
          },
          "inline_source": {
            "description": "Inline source used for taxonomies to be imported.  This field is a member of `oneof`_ ``source``.",
            "reference": "google.cloud.datacatalog_v1beta1.types.InlineSource",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "taxonomies": {
                  "description": "Required. Taxonomies to be imported.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.datacatalog_v1beta1.types.SerializedTaxonomy",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "display_name": {
                          "description": "Required. Display name of the taxonomy. Max 200 bytes when encoded in UTF-8.",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of the serialized taxonomy. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.",
                          "type": "string"
                        },
                        "policy_tags": {
                          "description": "Top level policy tags associated with the taxonomy if any.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.datacatalog_v1beta1.types.SerializedPolicyTag",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "policy_tag": {
                                  "description": "Resource name of the policy tag.  This field will be ignored when calling ImportTaxonomies.",
                                  "type": "string"
                                },
                                "display_name": {
                                  "description": "Required. Display name of the policy tag. Max 200 bytes when encoded in UTF-8.",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "Description of the serialized policy tag. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.",
                                  "type": "string"
                                },
                                "child_policy_tags": {
                                  "description": "Children of the policy tag if any.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "reference": "google.cloud.datacatalog_v1beta1.types.SerializedPolicyTag"
                                  }
                                }
                              },
                              "required": [
                                "display_name"
                              ]
                            }
                          }
                        },
                        "activated_policy_types": {
                          "description": "A list of policy types that are activated for a taxonomy.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.datacatalog_v1beta1.types.Taxonomy.PolicyType"
                          }
                        }
                      },
                      "required": [
                        "display_name"
                      ]
                    }
                  }
                }
              },
              "required": [
                "taxonomies"
              ]
            }
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "ExportTaxonomiesRequest",
      "description": "Request message for\n[ExportTaxonomies][google.cloud.datacatalog.v1beta1.PolicyTagManagerSerialization.ExportTaxonomies].\n\n\n.. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields\n\nAttributes:\n    parent (str):\n        Required. Resource name of the project that\n        taxonomies to be exported will share.\n    taxonomies (MutableSequence[str]):\n        Required. Resource names of the taxonomies to\n        be exported.\n    serialized_taxonomies (bool):\n        Export taxonomies as serialized taxonomies.\n\n        This field is a member of `oneof`_ ``destination``.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Resource name of the project that taxonomies to be exported will share.",
            "type": "string"
          },
          "taxonomies": {
            "description": "Required. Resource names of the taxonomies to be exported.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serialized_taxonomies": {
            "description": "Export taxonomies as serialized taxonomies.  This field is a member of `oneof`_ ``destination``.",
            "type": "boolean"
          }
        },
        "required": [
          "parent",
          "taxonomies"
        ]
      }
    }
  ]
}