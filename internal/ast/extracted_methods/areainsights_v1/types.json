{
  "/Users/prashanthvarma/Saturn/internal/ast/google-cloud-python/packages/google-maps-areainsights/google/maps/areainsights_v1/types/area_insights_service.py": [
    {
      "type": "function",
      "name": "ComputeInsightsRequest",
      "description": "Request for the ComputeInsights RPC.\n\nAttributes:\n    insights (MutableSequence[google.maps.areainsights_v1.types.Insight]):\n        Required. Insights to compute. Currently only INSIGHT_COUNT\n        and INSIGHT_PLACES are supported.\n    filter (google.maps.areainsights_v1.types.Filter):\n        Required. Insight filter.",
      "parameters": {
        "type": "object",
        "properties": {
          "insights": {
            "description": "Required. Insights to compute. Currently only INSIGHT_COUNT and INSIGHT_PLACES are supported.",
            "type": "array",
            "items": {
              "reference": "google.maps.areainsights_v1.types.Insight",
              "resolved_schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the insight.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free-form human readable summary in English. The maximum length is 500 characters.",
                    "type": "string"
                  },
                  "target_resources": {
                    "description": "Fully qualified resource names that this insight is targeting.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "insight_subtype": {
                    "description": "Insight subtype. Insight content schema will be stable for a given subtype.",
                    "type": "string"
                  },
                  "content": {
                    "description": "A struct of custom fields to explain the insight. Example: \"grantedPermissionsCount\": \"1000\".",
                    "type": "object",
                    "reference": "google.protobuf.struct_pb2.Struct"
                  },
                  "last_refresh_time": {
                    "description": "Timestamp of the latest data used to generate the insight.",
                    "type": "object",
                    "reference": "google.protobuf.timestamp_pb2.Timestamp"
                  },
                  "observation_period": {
                    "description": "Observation period that led to the insight. The source data used to generate the insight ends at last_refresh_time and begins at (last_refresh_time - observation_period).",
                    "type": "object",
                    "reference": "google.protobuf.duration_pb2.Duration",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "nanos": {
                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 ``seconds`` field and a positive ``nanos`` field. Must be from 0 to 999,999,999 inclusive.  This field is a member of `oneof`_ ``_nanos``.",
                          "type": "integer"
                        },
                        "seconds": {
                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min \\* 60 min/hr \\* 24 hr/day \\* 365.25 days/year \\* 10000 years  This field is a member of `oneof`_ ``_seconds``.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "state_info": {
                    "description": "Information state and metadata.",
                    "type": "object",
                    "reference": "google.cloud.recommender_v1beta1.types.InsightStateInfo",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "Insight state.",
                          "type": "object",
                          "reference": "google.cloud.recommender_v1beta1.types.InsightStateInfo.State"
                        },
                        "state_metadata": {
                          "description": "A map of metadata for the state, provided by user or automations systems.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "category": {
                    "description": "Category being targeted by the insight.",
                    "type": "object",
                    "reference": "google.cloud.recommender_v1beta1.types.Insight.Category",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "category_id": {
                          "description": "The identifier of the category.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The localized name of the category.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "severity": {
                    "description": "Insight's severity.",
                    "type": "object",
                    "reference": "google.cloud.recommender_v1beta1.types.Insight.Severity"
                  },
                  "etag": {
                    "description": "Fingerprint of the Insight. Provides optimistic locking when updating states.",
                    "type": "string"
                  },
                  "associated_recommendations": {
                    "description": "Recommendations derived from this insight.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "reference": "google.cloud.recommender_v1beta1.types.Insight.RecommendationReference",
                      "resolved_schema": {
                        "type": "object",
                        "properties": {
                          "recommendation": {
                            "description": "Recommendation resource name, e.g. projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/recommendations/[RECOMMENDATION_ID]",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "filter": {
            "description": "Required. Insight filter.",
            "reference": "google.maps.areainsights_v1.types.Filter",
            "resolved_schema": {
              "type": "object",
              "properties": {
                "event_type": {
                  "description": "Event types to allowlist.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "reference": "google.cloud.container_v1beta1.types.NotificationConfig.EventType",
                    "resolved_schema": {
                      "type": "object",
                      "properties": {
                        "type_": {
                          "description": "Output only. The full name of the event type (for example, \"google.cloud.storage.object.v1.finalized\"). In the form of {provider-specific-prefix}.{resource}.{version}.{verb}. Types MUST be versioned and event schemas are guaranteed to remain backward compatible within one version. Note that event type versions and API versions do not need to match.",
                          "type": "string",
                          "output_only": true
                        },
                        "description": {
                          "description": "Output only. Human friendly description of what the event type is about. For example \"Bucket created in Cloud Storage\".",
                          "type": "string",
                          "output_only": true
                        },
                        "filtering_attributes": {
                          "description": "Output only. Filtering attributes for the event type.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "reference": "google.cloud.eventarc_v1.types.FilteringAttribute",
                            "resolved_schema": {
                              "type": "object",
                              "properties": {
                                "attribute": {
                                  "description": "Output only. Attribute used for filtering the event type.",
                                  "type": "string",
                                  "output_only": true
                                },
                                "description": {
                                  "description": "Output only. Description of the purpose of the attribute.",
                                  "type": "string",
                                  "output_only": true
                                },
                                "required": {
                                  "description": "Output only. If true, the triggers for this provider should always specify a filter on these attributes. Trigger creation will fail otherwise.",
                                  "type": "boolean",
                                  "output_only": true
                                },
                                "path_pattern_supported": {
                                  "description": "Output only. If true, the attribute accepts matching expressions in the Eventarc PathPattern format.",
                                  "type": "boolean",
                                  "output_only": true
                                }
                              }
                            }
                          },
                          "output_only": true
                        },
                        "event_schema_uri": {
                          "description": "Output only. URI for the event schema. For example \"https://github.com/googleapis/google-cloudevents/blob/master/proto/google/events/cloud/storage/v1/events.proto\".",
                          "type": "string",
                          "output_only": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "insights",
          "filter"
        ]
      }
    }
  ]
}