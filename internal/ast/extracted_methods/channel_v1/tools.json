{
  "CloudChannelReportsService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "run_report_job",
          "description": "Begins generation of data for a given report. The report\nidentifier is a UID (for example, ``613bf59q``).\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The user doesn't have access to this\n   report.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: The report identifier was not found.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The ID of a long-running operation.\n\nTo get the results of the operation, call the GetOperation\nmethod of CloudChannelOperationsService. The Operation metadata\ncontains an instance of\n[OperationMetadata][google.cloud.channel.v1.OperationMetadata].\n\nTo get the results of report generation, call\n[CloudChannelReportsService.FetchReportResults][google.cloud.channel.v1.CloudChannelReportsService.FetchReportResults]\nwith the\n[RunReportJobResponse.report_job][goog",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "fetch_report_results",
          "description": "Retrieves data generated by\n[CloudChannelReportsService.RunReportJob][google.cloud.channel.v1.CloudChannelReportsService.RunReportJob].\n\nDeprecated: Please use `Export Channel Services data to\nBigQuery <https://cloud.google.com/channel/docs/rebilling/export-data-to-bigquery>`__\ninstead.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_fetch_report_results():\n        # Create a client\n        client = channel_v1.CloudChannelReportsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = channel_v1.FetchReportResultsRequest(\n            report_",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "report_job": {
                "type": "str",
                "description": "Required. The report job created by [CloudChannelReportsService.RunReportJob][google.cloud.channel.v1.CloudChannelReportsService.RunReportJob]. Report_job uses the format: accounts/{account_id}/reportJobs/{report_job_id}  This corresponds to the ``report_job`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.services.cloud_channel_reports_service.pagers.FetchReportResultsAsyncPager: Response message for [CloudChannelReportsService.FetchReportResults][google.cloud.channel.v1.CloudChannelReportsService.FetchReportResults]. Contains a tabular representation of the report results.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "report_job",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_reports",
          "description": "Lists the reports that RunReportJob can run. These reports\ninclude an ID, a description, and the list of columns that will\nbe in the result.\n\nDeprecated: Please use `Export Channel Services data to\nBigQuery <https://cloud.google.com/channel/docs/rebilling/export-data-to-bigquery>`__\ninstead.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_list_reports():\n        # Create a client\n        client = channel_v1.CloudChannelReportsServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = channel_v1.ListReportsRequest(\n            parent=\"parent_va",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the partner account to list available reports for. Parent uses the format: accounts/{account_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.services.cloud_channel_reports_service.pagers.ListReportsAsyncPager: Response message for [CloudChannelReportsService.ListReports][google.cloud.channel.v1.CloudChannelReportsService.ListReports].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  },
  "CloudChannelService": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "list_customers",
          "description": "List [Customer][google.cloud.channel.v1.Customer]s.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request is\n   different from the reseller account in the API request.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n\nReturn value: List of\n[Customer][google.cloud.channel.v1.Customer]s, or an empty list\nif there are no customers.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_list_customers():\n        # Create a client\n        client = channel_v1.CloudChannelServiceAsyncClient()\n\n        # Initialize reques",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_customer",
          "description": "Returns the requested\n[Customer][google.cloud.channel.v1.Customer] resource.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request is\n   different from the reseller account in the API request.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: The customer resource doesn't exist. Usually the\n   result of an invalid name parameter.\n\nReturn value: The [Customer][google.cloud.channel.v1.Customer]\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_get_customer():\n        # Create a client\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the customer to retrieve. Name uses the format: accounts/{account_id}/customers/{customer_id}  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.types.Customer: Entity representing a customer of a reseller or distributor."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "check_cloud_identity_accounts_exist",
          "description": "Confirms the existence of Cloud Identity accounts based on the\ndomain and if the Cloud Identity accounts are owned by the\nreseller.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request is\n   different from the reseller account in the API request.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  INVALID_VALUE: Invalid domain value in the request.\n\nReturn value: A list of\n[CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]\nresources for the domain (may be empty)\n\nNote: in the v1alpha1 version of the API, a NOT_FOUND error\nreturns if no\n[CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]\nresources match the domain.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require s",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_customer",
          "description": "Creates a new [Customer][google.cloud.channel.v1.Customer]\nresource under the reseller or distributor account.\n\nPossible error codes:\n\n-  PERMISSION_DENIED:\n\n   -  The reseller account making the request is different from\n      the reseller account in the API request.\n   -  You are not authorized to create a customer. See\n      https://support.google.com/channelservices/answer/9759265\n\n-  INVALID_ARGUMENT:\n\n   -  Required request parameters are missing or invalid.\n   -  Domain field value doesn't match the primary email domain.\n\nReturn value: The newly created\n[Customer][google.cloud.channel.v1.Customer] resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_customer",
          "description": "Updates an existing [Customer][google.cloud.channel.v1.Customer]\nresource for the reseller or distributor.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request is\n   different from the reseller account in the API request.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer]\n   resource found for the name in the request.\n\nReturn value: The updated\n[Customer][google.cloud.channel.v1.Customer] resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_u",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_customer",
          "description": "Deletes the given [Customer][google.cloud.channel.v1.Customer]\npermanently.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The account making the request does not\n   own this customer.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  FAILED_PRECONDITION: The customer has existing entitlements.\n-  NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer]\n   resource found for the name in the request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_delete_customer():\n        # Create a client\n        client = channel_v1.CloudChannelServi",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the customer to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "import_customer",
          "description": "Imports a [Customer][google.cloud.channel.v1.Customer] from the\nCloud Identity associated with the provided Cloud Identity ID or\ndomain before a TransferEntitlements call. If a linked Customer\nalready exists and overwrite_if_exists is true, it will update\nthat Customer's data.\n\nPossible error codes:\n\n-  PERMISSION_DENIED:\n\n   -  The reseller account making the request is different from\n      the reseller account in the API request.\n   -  You are not authorized to import the customer. See\n      https://support.google.com/channelservices/answer/9759265\n\n-  NOT_FOUND: Cloud Identity doesn't exist or was deleted.\n-  INVALID_ARGUMENT: Required parameters are missing, or the\n   auth_token is expired or invalid.\n-  ALREADY_EXISTS: A customer already exists and has conflicting\n   critical fields. Requires an overwrite.\n\nReturn value: The [Customer][google.cloud.channel.v1.Customer].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    #",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "provision_cloud_identity",
          "description": "Creates a Cloud Identity for the given customer using the\ncustomer's information, or the information provided here.\n\nPossible error codes:\n\n-  PERMISSION_DENIED:\n\n   -  The customer doesn't belong to the reseller.\n   -  You are not authorized to provision cloud identity id. See\n      https://support.google.com/channelservices/answer/9759265\n\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: The customer was not found.\n-  ALREADY_EXISTS: The customer's primary email already exists.\n   Retry after changing the customer's primary contact email.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The ID of a long-running operation.\n\nTo get the results of the operation, call the GetOperation\nmethod of CloudChannelOperationsService. The Operation metadata\ncontains an instance of\n[OperationMetada",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_entitlements",
          "description": "Lists [Entitlement][google.cloud.channel.v1.Entitlement]s\nbelonging to a customer.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The customer doesn't belong to the\n   reseller.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n\nReturn value: A list of the customer's\n[Entitlement][google.cloud.channel.v1.Entitlement]s.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_list_entitlements():\n        # Create a client\n        client = channel_v1.CloudChannelServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = channel_v",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_transferable_skus",
          "description": "List [TransferableSku][google.cloud.channel.v1.TransferableSku]s\nof a customer based on the Cloud Identity ID or Customer Name in\nthe request.\n\nUse this method to list the entitlements information of an\nunowned customer. You should provide the customer's Cloud\nIdentity ID or Customer Name.\n\nPossible error codes:\n\n-  PERMISSION_DENIED:\n\n   -  The customer doesn't belong to the reseller and has no\n      auth token.\n   -  The supplied auth token is invalid.\n   -  The reseller account making the request is different from\n      the reseller account in the query.\n\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n\nReturn value: A list of the customer's\n[TransferableSku][google.cloud.channel.v1.TransferableSku].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifyin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_transferable_offers",
          "description": "List\n[TransferableOffer][google.cloud.channel.v1.TransferableOffer]s\nof a customer based on Cloud Identity ID or Customer Name in the\nrequest.\n\nUse this method when a reseller gets the entitlement information\nof an unowned customer. The reseller should provide the\ncustomer's Cloud Identity ID or Customer Name.\n\nPossible error codes:\n\n-  PERMISSION_DENIED:\n\n   -  The customer doesn't belong to the reseller and has no\n      auth token.\n   -  The customer provided incorrect reseller information when\n      generating auth token.\n   -  The reseller account making the request is different from\n      the reseller account in the query.\n   -  The reseller is not authorized to transact on this\n      Product. See\n      https://support.google.com/channelservices/answer/9759265\n\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n\nReturn value: List of\n[TransferableOffer][google.cloud.channel.v1.TransferableOffer]\nfor the given customer and SKU.\n\n.. code-block:: python\n\n    # This snippet has been ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_entitlement",
          "description": "Returns the requested\n[Entitlement][google.cloud.channel.v1.Entitlement] resource.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The customer doesn't belong to the\n   reseller.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: The customer entitlement was not found.\n\nReturn value: The requested\n[Entitlement][google.cloud.channel.v1.Entitlement] resource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_get_entitlement():\n        # Create a client\n        client = channel_v1.CloudChannelServiceAsyncClient()\n\n        # Initializ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_entitlement",
          "description": "Creates an entitlement for a customer.\n\nPossible error codes:\n\n-  PERMISSION_DENIED:\n\n   -  The customer doesn't belong to the reseller.\n   -  The reseller is not authorized to transact on this\n      Product. See\n      https://support.google.com/channelservices/answer/9759265\n\n-  INVALID_ARGUMENT:\n\n   -  Required request parameters are missing or invalid.\n   -  There is already a customer entitlement for a SKU from the\n      same product family.\n\n-  INVALID_VALUE: Make sure the OfferId is valid. If it is,\n   contact Google Channel support for further troubleshooting.\n-  NOT_FOUND: The customer or offer resource was not found.\n-  ALREADY_EXISTS:\n\n   -  The SKU was already purchased for the customer.\n   -  The customer's primary email already exists. Retry after\n      changing the customer's primary contact email.\n\n-  CONDITION_NOT_MET or FAILED_PRECONDITION:\n\n   -  The domain required for purchasing a SKU has not been\n      verified.\n   -  A pre-requisite SKU required to purchase an Add-On SKU is\n      missing",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "change_parameters",
          "description": "Change parameters of the entitlement.\n\nAn entitlement update is a long-running operation and it updates\nthe entitlement as a result of fulfillment.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The customer doesn't belong to the\n   reseller.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid. For example, the number of seats being changed is\n   greater than the allowed number of max seats, or decreasing\n   seats for a commitment based plan.\n-  NOT_FOUND: Entitlement resource not found.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The ID of a long-running operation.\n\nTo get the results of the operation, call the GetOperation\nmethod of CloudChannelOperationsService. The Operation metadata\nwill contain an instance of\n[OperationMetadata][google.cloud.channel.v1.OperationMetadata].\n\n.. code-block:: pyth",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "change_renewal_settings",
          "description": "Updates the renewal settings for an existing customer\nentitlement.\n\nAn entitlement update is a long-running operation and it updates\nthe entitlement as a result of fulfillment.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The customer doesn't belong to the\n   reseller.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: Entitlement resource not found.\n-  NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for\n   a commitment plan. Can't enable or disable renewals for\n   non-commitment plans.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The ID of a long-running operation.\n\nTo get the results of the operation, call the GetOperation\nmethod of CloudChannelOperationsService. The Operation metadata\nwill contain an instance of\n[OperationMetadata][google.cloud.channel.v1.OperationMetad",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "change_offer",
          "description": "Updates the Offer for an existing customer entitlement.\n\nAn entitlement update is a long-running operation and it updates\nthe entitlement as a result of fulfillment.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The customer doesn't belong to the\n   reseller.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: Offer or Entitlement resource not found.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The ID of a long-running operation.\n\nTo get the results of the operation, call the GetOperation\nmethod of CloudChannelOperationsService. The Operation metadata\nwill contain an instance of\n[OperationMetadata][google.cloud.channel.v1.OperationMetadata].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "start_paid_service",
          "description": "Starts paid service for a trial entitlement.\n\nStarts paid service for a trial entitlement immediately. This\nmethod is only applicable if a plan is set up for a trial\nentitlement but has some trial days remaining.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The customer doesn't belong to the\n   reseller.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: Entitlement resource not found.\n-  FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for\n   entitlement on trial plans.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The ID of a long-running operation.\n\nTo get the results of the operation, call the GetOperation\nmethod of CloudChannelOperationsService. The Operation metadata\nwill contain an instance of\n[OperationMetadata][google.cloud.channel.v1.OperationMetadata].\n\n.. code-blo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "suspend_entitlement",
          "description": "Suspends a previously fulfilled entitlement.\n\nAn entitlement suspension is a long-running operation.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The customer doesn't belong to the\n   reseller.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: Entitlement resource not found.\n-  NOT_ACTIVE: Entitlement is not active.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The ID of a long-running operation.\n\nTo get the results of the operation, call the GetOperation\nmethod of CloudChannelOperationsService. The Operation metadata\nwill contain an instance of\n[OperationMetadata][google.cloud.channel.v1.OperationMetadata].\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "cancel_entitlement",
          "description": "Cancels a previously fulfilled entitlement.\n\nAn entitlement cancellation is a long-running operation.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request is\n   different from the reseller account in the API request.\n-  FAILED_PRECONDITION: There are Google Cloud projects linked\n   to the Google Cloud entitlement's Cloud Billing subaccount.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: Entitlement resource not found.\n-  DELETION_TYPE_NOT_ALLOWED: Cancel is only allowed for Google\n   Workspace add-ons, or entitlements for Google Cloud's\n   development platform.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The ID of a long-running operation.\n\nTo get the results of the operation, call the GetOperation\nmethod of CloudChannelOperationsService. The res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "activate_entitlement",
          "description": "Activates a previously suspended entitlement. Entitlements\nsuspended for pending ToS acceptance can't be activated using\nthis method.\n\nAn entitlement activation is a long-running operation and it\nupdates the state of the customer entitlement.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request is\n   different from the reseller account in the API request.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: Entitlement resource not found.\n-  SUSPENSION_NOT_RESELLER_INITIATED: Can only activate\n   reseller-initiated suspensions and entitlements that have\n   accepted the TOS.\n-  NOT_SUSPENDED: Can only activate suspended entitlements not\n   in an ACTIVE state.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The ID of a long-running operation.\n\nTo get the res",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "transfer_entitlements",
          "description": "Transfers customer entitlements to new reseller.\n\nPossible error codes:\n\n-  PERMISSION_DENIED:\n\n   -  The customer doesn't belong to the reseller.\n   -  The reseller is not authorized to transact on this\n      Product. See\n      https://support.google.com/channelservices/answer/9759265\n\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: The customer or offer resource was not found.\n-  ALREADY_EXISTS: The SKU was already transferred for the\n   customer.\n-  CONDITION_NOT_MET or FAILED_PRECONDITION:\n\n   -  The SKU requires domain verification to transfer, but the\n      domain is not verified.\n   -  An Add-On SKU (example, Vault or Drive) is missing the\n      pre-requisite SKU (example, G Suite Basic).\n   -  (Developer accounts only) Reseller and resold domain must\n      meet the following naming requirements:\n\n      -  Domain names must start with goog-test.\n      -  Domain names must include the reseller domain.\n\n   -  Specify all transferring entitlements.\n\n-  INTERNAL: A",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "transfer_entitlements_to_google",
          "description": "Transfers customer entitlements from their current reseller to\nGoogle.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The customer doesn't belong to the\n   reseller.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: The customer or offer resource was not found.\n-  ALREADY_EXISTS: The SKU was already transferred for the\n   customer.\n-  CONDITION_NOT_MET or FAILED_PRECONDITION:\n\n   -  The SKU requires domain verification to transfer, but the\n      domain is not verified.\n   -  An Add-On SKU (example, Vault or Drive) is missing the\n      pre-requisite SKU (example, G Suite Basic).\n   -  (Developer accounts only) Reseller and resold domain must\n      meet the following naming requirements:\n\n      -  Domain names must start with goog-test.\n      -  Domain names must include the reseller domain.\n\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the ba",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_channel_partner_links",
          "description": "List\n[ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]s\nbelonging to a distributor. You must be a distributor to call\nthis method.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request is\n   different from the reseller account in the API request.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n\nReturn value: The list of the distributor account's\n[ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]\nresources.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_list_channel_partner_lin",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_channel_partner_link",
          "description": "Returns the requested\n[ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]\nresource. You must be a distributor to call this method.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request is\n   different from the reseller account in the API request.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: ChannelPartnerLink resource not found because of\n   an invalid channel partner link name.\n\nReturn value: The\n[ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.clo",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_channel_partner_link",
          "description": "Initiates a channel partner link between a distributor and a\nreseller, or between resellers in an n-tier reseller channel.\nInvited partners need to follow the invite_link_uri provided in\nthe response to accept. After accepting the invitation, a link\nis set up between the two parties. You must be a distributor to\ncall this method.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request is\n   different from the reseller account in the API request.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  ALREADY_EXISTS: The ChannelPartnerLink sent in the request\n   already exists.\n-  NOT_FOUND: No Cloud Identity customer exists for provided\n   domain.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The new\n[ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]\nresour",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_channel_partner_link",
          "description": "Updates a channel partner link. Distributors call this method to\nchange a link's status. For example, to suspend a partner link.\nYou must be a distributor to call this method.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request is\n   different from the reseller account in the API request.\n-  INVALID_ARGUMENT:\n\n   -  Required request parameters are missing or invalid.\n   -  Link state cannot change from invited to active or\n      suspended.\n   -  Cannot send reseller_cloud_identity_id, invite_url, or\n      name in update mask.\n\n-  NOT_FOUND: ChannelPartnerLink resource not found.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The updated\n[ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_customer_repricing_config",
          "description": "Gets information about how a Reseller modifies their bill before\nsending it to a Customer.\n\nPossible Error Codes:\n\n-  PERMISSION_DENIED: If the account making the request and the\n   account being queried are different.\n-  NOT_FOUND: The\n   [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]\n   was not found.\n-  INTERNAL: Any non-user error related to technical issues in\n   the backend. In this case, contact Cloud Channel support.\n\nReturn Value: If successful, the\n[CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]\nresource, otherwise returns an error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/c",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the CustomerRepricingConfig. Format: accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.types.CustomerRepricingConfig: Configuration for how a reseller will reprice a Customer."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_customer_repricing_configs",
          "description": "Lists information about how a Reseller modifies their bill\nbefore sending it to a Customer.\n\nPossible Error Codes:\n\n-  PERMISSION_DENIED: If the account making the request and the\n   account being queried are different.\n-  NOT_FOUND: The\n   [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]\n   specified does not exist or is not associated with the given\n   account.\n-  INTERNAL: Any non-user error related to technical issues in\n   the backend. In this case, contact Cloud Channel support.\n\nReturn Value: If successful, the\n[CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]\nresources. The data for each resource is displayed in the\nascending order of:\n\n-  Customer ID\n-  [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement]\n-  [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]\n-  [CustomerRepricingConfig.update_time][google.cloud.channel.v",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the customer. Parent uses the format: accounts/{account_id}/customers/{customer_id}. Supports accounts/{account_id}/customers/- to retrieve configs for all customers.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.services.cloud_channel_service.pagers.ListCustomerRepricingConfigsAsyncPager: Response message for [CloudChannelService.ListCustomerRepricingConfigs][google.cloud.channel.v1.CloudChannelService.ListCustomerRepricingConfigs].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_customer_repricing_config",
          "description": "Creates a CustomerRepricingConfig. Call this method to set\nmodifications for a specific customer's bill. You can only\ncreate configs if the\n[RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]\nis a future month. If needed, you can create a config for the\ncurrent month, with some restrictions.\n\nWhen creating a config for a future month, make sure there are\nno existing configs for that\n[RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].\n\nThe following restrictions are for creating configs in the\ncurrent month.\n\n-  This functionality is reserved for recovering from an\n   erroneous config, and should not be used for regular business\n   cases.\n-  The new config will not modify exports used with other\n   configs. Changes to the config may be immediate, but may take\n   up to 24 hours.\n-  There is a limit of ten configs for any\n   [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.Re",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the customer that will receive this repricing config. Parent uses the format: accounts/{account_id}/customers/{customer_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "customer_repricing_config": {
                "type": "google.cloud.channel_v1.types.CustomerRepricingConfig",
                "description": "Required. The CustomerRepricingConfig object to update.  This corresponds to the ``customer_repricing_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.types.CustomerRepricingConfig: Configuration for how a reseller will reprice a Customer."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "customer_repricing_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_customer_repricing_config",
          "description": "Updates a CustomerRepricingConfig. Call this method to set\nmodifications for a specific customer's bill. This method\noverwrites the existing CustomerRepricingConfig.\n\nYou can only update configs if the\n[RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]\nis a future month. To make changes to configs for the current\nmonth, use\n[CreateCustomerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateCustomerRepricingConfig],\ntaking note of its restrictions. You cannot update the\n[RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].\n\nWhen updating a config in the future:\n\n-  This config must already exist.\n\nPossible Error Codes:\n\n-  PERMISSION_DENIED: If the account making the request and the\n   account being queried are different.\n-  INVALID_ARGUMENT: Missing or invalid required parameters in\n   the request. Also displays if the updated config is for the\n   current month or past months.\n-  NOT_FO",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "customer_repricing_config": {
                "type": "google.cloud.channel_v1.types.CustomerRepricingConfig",
                "description": "Required. The CustomerRepricingConfig object to update.  This corresponds to the ``customer_repricing_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.types.CustomerRepricingConfig: Configuration for how a reseller will reprice a Customer."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "customer_repricing_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_customer_repricing_config",
          "description": "Deletes the given\n[CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]\npermanently. You can only delete configs if their\n[RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]\nis set to a date after the current month.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The account making the request does not\n   own this customer.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  FAILED_PRECONDITION: The\n   [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]\n   is active or in the past.\n-  NOT_FOUND: No\n   [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]\n   found for the name in the request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specif",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the customer repricing config rule to delete. Format: accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "get_channel_partner_repricing_config",
          "description": "Gets information about how a Distributor modifies their bill\nbefore sending it to a ChannelPartner.\n\nPossible Error Codes:\n\n-  PERMISSION_DENIED: If the account making the request and the\n   account being queried are different.\n-  NOT_FOUND: The\n   [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]\n   was not found.\n-  INTERNAL: Any non-user error related to technical issues in\n   the backend. In this case, contact Cloud Channel support.\n\nReturn Value: If successful, the\n[ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]\nresource, otherwise returns an error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.de",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the ChannelPartnerRepricingConfig Format: accounts/{account_id}/channelPartnerLinks/{channel_partner_id}/channelPartnerRepricingConfigs/{id}.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.types.ChannelPartnerRepricingConfig: Configuration for how a distributor will rebill a channel partner (also known as a distributor-authorized reseller)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_channel_partner_repricing_configs",
          "description": "Lists information about how a Reseller modifies their bill\nbefore sending it to a ChannelPartner.\n\nPossible Error Codes:\n\n-  PERMISSION_DENIED: If the account making the request and the\n   account being queried are different.\n-  NOT_FOUND: The\n   [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]\n   specified does not exist or is not associated with the given\n   account.\n-  INTERNAL: Any non-user error related to technical issues in\n   the backend. In this case, contact Cloud Channel support.\n\nReturn Value: If successful, the\n[ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]\nresources. The data for each resource is displayed in the\nascending order of:\n\n-  Channel Partner ID\n-  [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]\n-  [ChannelPartnerRepricingConfig.update_time][google.cloud.channel.v1.ChannelPartnerRepricingConfig.update_time]\n\nIf unsuccessful, returns an error.\n\n.. code",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the account's [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]. Parent uses the format: accounts/{account_id}/channelPartnerLinks/{channel_partner_id}. Supports accounts/{account_id}/channelPartnerLinks/- to retrieve configs for all channel partners.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.services.cloud_channel_service.pagers.ListChannelPartnerRepricingConfigsAsyncPager: Response message for [CloudChannelService.ListChannelPartnerRepricingConfigs][google.cloud.channel.v1.CloudChannelService.ListChannelPartnerRepricingConfigs].  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "create_channel_partner_repricing_config",
          "description": "Creates a ChannelPartnerRepricingConfig. Call this method to set\nmodifications for a specific ChannelPartner's bill. You can only\ncreate configs if the\n[RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]\nis a future month. If needed, you can create a config for the\ncurrent month, with some restrictions.\n\nWhen creating a config for a future month, make sure there are\nno existing configs for that\n[RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].\n\nThe following restrictions are for creating configs in the\ncurrent month.\n\n-  This functionality is reserved for recovering from an\n   erroneous config, and should not be used for regular business\n   cases.\n-  The new config will not modify exports used with other\n   configs. Changes to the config may be immediate, but may take\n   up to 24 hours.\n-  There is a limit of ten configs for any ChannelPartner or\n   [RepricingConfig.EntitlementGranularity.entitleme",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the ChannelPartner that will receive the repricing config. Parent uses the format: accounts/{account_id}/channelPartnerLinks/{channel_partner_id}  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set."
              },
              "channel_partner_repricing_config": {
                "type": "google.cloud.channel_v1.types.ChannelPartnerRepricingConfig",
                "description": "Required. The ChannelPartnerRepricingConfig object to update.  This corresponds to the ``channel_partner_repricing_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.types.ChannelPartnerRepricingConfig: Configuration for how a distributor will rebill a channel partner (also known as a distributor-authorized reseller)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "channel_partner_repricing_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "update_channel_partner_repricing_config",
          "description": "Updates a ChannelPartnerRepricingConfig. Call this method to set\nmodifications for a specific ChannelPartner's bill. This method\noverwrites the existing CustomerRepricingConfig.\n\nYou can only update configs if the\n[RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]\nis a future month. To make changes to configs for the current\nmonth, use\n[CreateChannelPartnerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerRepricingConfig],\ntaking note of its restrictions. You cannot update the\n[RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].\n\nWhen updating a config in the future:\n\n-  This config must already exist.\n\nPossible Error Codes:\n\n-  PERMISSION_DENIED: If the account making the request and the\n   account being queried are different.\n-  INVALID_ARGUMENT: Missing or invalid required parameters in\n   the request. Also displays if the updated config is for the\n   current month o",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "channel_partner_repricing_config": {
                "type": "google.cloud.channel_v1.types.ChannelPartnerRepricingConfig",
                "description": "Required. The ChannelPartnerRepricingConfig object to update.  This corresponds to the ``channel_partner_repricing_config`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.types.ChannelPartnerRepricingConfig: Configuration for how a distributor will rebill a channel partner (also known as a distributor-authorized reseller)."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "channel_partner_repricing_config",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "delete_channel_partner_repricing_config",
          "description": "Deletes the given\n[ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]\npermanently. You can only delete configs if their\n[RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]\nis set to a date after the current month.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The account making the request does not\n   own this customer.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  FAILED_PRECONDITION: The\n   [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]\n   is active or in the past.\n-  NOT_FOUND: No\n   [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]\n   found for the name in the request.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initializ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "str",
                "description": "Required. The resource name of the channel partner repricing config rule to delete.  This corresponds to the ``name`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "name",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_sku_groups",
          "description": "Lists the Rebilling supported SKU groups the account is\nauthorized to sell. Reference:\nhttps://cloud.google.com/skus/sku-groups\n\nPossible Error Codes:\n\n-  PERMISSION_DENIED: If the account making the request and the\n   account being queried are different, or the account doesn't\n   exist.\n-  INTERNAL: Any non-user error related to technical issues in\n   the backend. In this case, contact Cloud Channel support.\n\nReturn Value: If successful, the\n[SkuGroup][google.cloud.channel.v1.SkuGroup] resources. The data\nfor each resource is displayed in the alphabetical order of SKU\ngroup display name. The data for each resource is displayed in\nthe ascending order of\n[SkuGroup.display_name][google.cloud.channel.v1.SkuGroup.display_name]\n\nIf unsuccessful, returns an error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the account from which to list SKU groups. Parent uses the format: accounts/{account}.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.services.cloud_channel_service.pagers.ListSkuGroupsAsyncPager: Response message for ListSkuGroups.  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_sku_group_billable_skus",
          "description": "Lists the Billable SKUs in a given SKU group.\n\nPossible error codes: PERMISSION_DENIED: If the account making\nthe request and the account being queried for are different, or\nthe account doesn't exist. INVALID_ARGUMENT: Missing or invalid\nrequired parameters in the request. INTERNAL: Any non-user error\nrelated to technical issue in the backend. In this case, contact\ncloud channel support.\n\nReturn Value: If successful, the\n[BillableSku][google.cloud.channel.v1.BillableSku] resources.\nThe data for each resource is displayed in the ascending order\nof:\n\n-  [BillableSku.service_display_name][google.cloud.channel.v1.BillableSku.service_display_name]\n-  [BillableSku.sku_display_name][google.cloud.channel.v1.BillableSku.sku_display_name]\n\nIf unsuccessful, returns an error.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. Resource name of the SKU group. Format: accounts/{account}/skuGroups/{sku_group}.  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.services.cloud_channel_service.pagers.ListSkuGroupBillableSkusAsyncPager: Response message for ListSkuGroupBillableSkus. Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "lookup_offer",
          "description": "Returns the requested [Offer][google.cloud.channel.v1.Offer]\nresource.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The entitlement doesn't belong to the\n   reseller.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: Entitlement or offer was not found.\n\nReturn value: The [Offer][google.cloud.channel.v1.Offer]\nresource.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_lookup_offer():\n        # Create a client\n        client = channel_v1.CloudChannelServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_products",
          "description": "Lists the Products the reseller is authorized to sell.\n\nPossible error codes:\n\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_list_products():\n        # Create a client\n        client = channel_v1.CloudChannelServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = channel_v1.ListProductsRequest(\n            account=\"account_value\",\n        )\n\n        # Make the request\n        page_result = client.list_products(request=request)\n\n        # Handle the response\n      ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_skus",
          "description": "Lists the SKUs for a product the reseller is authorized to sell.\n\nPossible error codes:\n\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_list_skus():\n        # Create a client\n        client = channel_v1.CloudChannelServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = channel_v1.ListSkusRequest(\n            parent=\"parent_value\",\n            account=\"account_value\",\n        )\n\n        # Make the request\n        page_result = client.list_skus(request=request)\n\n   ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_offers",
          "description": "Lists the Offers the reseller can sell.\n\nPossible error codes:\n\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_list_offers():\n        # Create a client\n        client = channel_v1.CloudChannelServiceAsyncClient()\n\n        # Initialize request argument(s)\n        request = channel_v1.ListOffersRequest(\n            parent=\"parent_value\",\n        )\n\n        # Make the request\n        page_result = client.list_offers(request=request)\n\n        # Handle the response\n        async for response in",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_purchasable_skus",
          "description": "Lists the following:\n\n-  SKUs that you can purchase for a customer\n-  SKUs that you can upgrade or downgrade for an entitlement.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The customer doesn't belong to the\n   reseller.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_list_purchasable_skus():\n        # Create a client\n        client = channel_v1.CloudChannelServiceAsyncClient()\n\n        # Initialize request argument(s)\n        create_entitlement_purchase = channel_v1.CreateEntitlementPurc",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_purchasable_offers",
          "description": "Lists the following:\n\n-  Offers that you can purchase for a customer.\n-  Offers that you can change for an entitlement.\n\nPossible error codes:\n\n-  PERMISSION_DENIED:\n\n   -  The customer doesn't belong to the reseller\n   -  The reseller is not authorized to transact on this\n      Product. See\n      https://support.google.com/channelservices/answer/9759265\n\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_list_purchasable_offers():\n        # Create a client\n        client = channel_v1.CloudCha",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "query_eligible_billing_accounts",
          "description": "Lists the billing accounts that are eligible to purchase\nparticular SKUs for a given customer.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The customer doesn't belong to the\n   reseller.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n\nReturn value: Based on the provided list of SKUs, returns a list\nof SKU groups that must be purchased using the same billing\naccount and the billing accounts eligible to purchase each SKU\ngroup.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as shown in:\n    #   https://googleapis.dev/python/google-api-core/latest/client_options.html\n    from google.cloud import channel_v1\n\n    async def sample_query_eligible_billing_accounts():\n        # Create a client\n ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "register_subscriber",
          "description": "Registers a service account with subscriber privileges on the\nCloud Pub/Sub topic for this Channel Services account. After you\ncreate a subscriber, you get the events through\n[SubscriberEvent][google.cloud.channel.v1.SubscriberEvent]\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request\n   and the provided reseller account are different, or the\n   impersonated user is not a super admin.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The topic name with the registered service email\naddress.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for reque",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "unregister_subscriber",
          "description": "Unregisters a service account with subscriber privileges on the\nCloud Pub/Sub topic created for this Channel Services account.\nIf there are no service accounts left with subscriber\nprivileges, this deletes the topic. You can call ListSubscribers\nto check for these accounts.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request\n   and the provided reseller account are different, or the\n   impersonated user is not a super admin.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: The topic resource doesn't exist.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: The topic name that unregistered the service email\naddress. Returns a success response if the service email address\nwasn't registered with the topic.\n\n.. code-block:: python\n\n    # This snippet has bee",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_subscribers",
          "description": "Lists service accounts with subscriber privileges on the Cloud\nPub/Sub topic created for this Channel Services account.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request\n   and the provided reseller account are different, or the\n   impersonated user is not a super admin.\n-  INVALID_ARGUMENT: Required request parameters are missing or\n   invalid.\n-  NOT_FOUND: The topic resource doesn't exist.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. Contact Cloud Channel support.\n\nReturn value: A list of service email addresses.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      },
      {
        "type": "function",
        "function": {
          "name": "list_entitlement_changes",
          "description": "List entitlement history.\n\nPossible error codes:\n\n-  PERMISSION_DENIED: The reseller account making the request\n   and the provided reseller account are different.\n-  INVALID_ARGUMENT: Missing or invalid required fields in the\n   request.\n-  NOT_FOUND: The parent resource doesn't exist. Usually the\n   result of an invalid name parameter.\n-  INTERNAL: Any non-user error related to a technical issue in\n   the backend. In this case, contact CloudChannel support.\n-  UNKNOWN: Any non-user error related to a technical issue in\n   the backend. In this case, contact Cloud Channel support.\n\nReturn value: List of\n[EntitlementChange][google.cloud.channel.v1.EntitlementChange]s.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values for request initialization.\n    # - It may require specifying regional endpoints when creating the service\n    #   client as ",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "parent": {
                "type": "str",
                "description": "Required. The resource name of the entitlement for which to list entitlement changes. The ``-`` wildcard may be used to match entitlements across a customer. Formats:  -  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} -  accounts/{account_id}/customers/{customer_id}/entitlements/-  This corresponds to the ``parent`` field on the ``request`` instance; if ``request`` is provided, this should not be set. retry (google.api_core.retry_async.AsyncRetry): Designation of what errors, if any, should be retried. timeout (float): The timeout for this request. metadata (Sequence[Tuple[str, str]]): Strings which should be sent along with the request as metadata.  Returns: google.cloud.channel_v1.services.cloud_channel_service.pagers.ListEntitlementChangesAsyncPager: Response message for [CloudChannelService.ListEntitlementChanges][google.cloud.channel.v1.CloudChannelService.ListEntitlementChanges]  Iterating over this object will yield results and resolve additional pages automatically."
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "parent",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": []
        }
      }
    ]
  }
}