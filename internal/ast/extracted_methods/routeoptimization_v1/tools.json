{
  "RouteOptimization": {
    "methods": [
      {
        "type": "function",
        "function": {
          "name": "optimize_tours",
          "description": "Sends an ``OptimizeToursRequest`` containing a ``ShipmentModel``\nand returns an ``OptimizeToursResponse`` containing\n``ShipmentRoute``\\ s, which are a set of routes to be performed\nby vehicles minimizing the overall cost.\n\nA ``ShipmentModel`` model consists mainly of ``Shipment``\\ s\nthat need to be carried out and ``Vehicle``\\ s that can be used\nto transport the ``Shipment``\\ s. The ``ShipmentRoute``\\ s\nassign ``Shipment``\\ s to ``Vehicle``\\ s. More specifically,\nthey assign a series of ``Visit``\\ s to each vehicle, where a\n``Visit`` corresponds to a ``VisitRequest``, which is a pickup\nor delivery for a ``Shipment``.\n\nThe goal is to provide an assignment of ``ShipmentRoute``\\ s to\n``Vehicle``\\ s that minimizes the total cost where cost has many\ncomponents defined in the ``ShipmentModel``.\n\n.. code-block:: python\n\n    # This snippet has been automatically generated and should be regarded as a\n    # code template only.\n    # It will require modifications to work:\n    # - It may require correct/in-range values f",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "route_optimization_service.OptimizeToursRequest"
          ]
        }
      },
      {
        "type": "function",
        "function": {
          "name": "batch_optimize_tours",
          "description": "Optimizes vehicle tours for one or more ``OptimizeToursRequest``\nmessages as a batch.\n\nThis method is a Long Running Operation (LRO). The inputs for\noptimization (``OptimizeToursRequest`` messages) and outputs\n(``OptimizeToursResponse`` messages) are read from and written\nto Cloud Storage in user-specified format. Like the\n``OptimizeTours`` method, each ``OptimizeToursRequest`` contains\na ``ShipmentModel`` and returns an ``OptimizeToursResponse``\ncontaining ``ShipmentRoute`` fields, which are a set of routes\nto be performed by vehicles minimizing the overall cost.\n\nThe user can poll ``operations.get`` to check the status of the\nLRO:\n\nIf the LRO ``done`` field is false, then at least one request is\nstill being processed. Other requests may have completed\nsuccessfully and their results are available in Cloud Storage.\n\nIf the LRO's ``done`` field is true, then all requests have been\nprocessed. Any successfully processed requests will have their\nresults available in Cloud Storage. Any requests that failed\nwill no",
          "parameters": {
            "type": "object",
            "properties": {
              "request": {
                "type": "string",
                "description": ""
              },
              "retry": {
                "type": "string",
                "description": ""
              },
              "timeout": {
                "type": "string",
                "description": ""
              },
              "metadata": {
                "type": "string",
                "description": ""
              }
            },
            "required": [
              "request",
              "retry",
              "timeout",
              "metadata"
            ]
          },
          "request_types": [
            "route_optimization_service.BatchOptimizeToursRequest"
          ]
        }
      }
    ]
  }
}