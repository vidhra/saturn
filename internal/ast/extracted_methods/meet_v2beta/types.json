{
  "\\Users\\AMD\\vidhra\\internal\\ast\\google-cloud-python\\packages\\google-apps-meet\\google\\apps\\meet_v2beta\\types\\service.py": [
    {
      "type": "function",
      "name": "CreateSpaceRequest",
      "description": "Request to create a space.\n\nAttributes:\n    space (google.apps.meet_v2beta.types.Space):\n        Space to be created. As of May 2023, the\n        input space can be empty. Later on the input\n        space can be non-empty when space configuration\n        is introduced.",
      "parameters": {
        "type": "object",
        "properties": {
          "space": {
            "description": "Space to be created. As of May 2023, the input space can be empty. Later on the input space can be non-empty when space configuration is introduced.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Immutable. Resource name of the space. Format: ``spaces/{space}``",
                "type": "string"
              },
              "meeting_uri": {
                "description": "Output only. URI used to join meeting, such as ``https://meet.google.com/abc-mnop-xyz``.",
                "type": "string"
              },
              "meeting_code": {
                "description": "Output only. Type friendly code to join the meeting. Format: ``[a-z]+-[a-z]+-[a-z]+`` such as ``abc-mnop-xyz``. The maximum length is 128 characters. Can ONLY be used as alias of the space ID to get the space.",
                "type": "string"
              },
              "config": {
                "type": "object",
                "properties": {
                  "access_type": {
                    "type": "enum",
                    "name": "AccessType",
                    "description": "AccessType is an enum of all the supported access types for a\nvolume.\n\nValues:\n    ACCESS_TYPE_UNSPECIFIED (0):\n        Unspecified Access Type\n    READ_ONLY (1):\n        Read Only\n    READ_WRITE (2):\n        Read Write\n    READ_NONE (3):\n        None",
                    "values": {
                      "ACCESS_TYPE_UNSPECIFIED": {
                        "value": 0
                      },
                      "READ_ONLY": {
                        "value": 1
                      },
                      "READ_WRITE": {
                        "value": 2
                      },
                      "READ_NONE": {
                        "value": 3
                      }
                    }
                  },
                  "entry_point_access": {
                    "type": "enum",
                    "name": "EntryPointAccess",
                    "description": "Entry points that can be used to join a meeting. Example:\n``meet.google.com``, the Embed SDK Web, or a mobile application.\n\nValues:\n    ENTRY_POINT_ACCESS_UNSPECIFIED (0):\n        Unused.\n    ALL (1):\n        All entry points are allowed.\n    CREATOR_APP_ONLY (2):\n        Only entry points owned by the Google Cloud\n        project that created the space can be used to\n        join meetings in this space.  Apps can use the\n        Embed SDK Web or mobile Meet SDKs to create\n        owned entry points.",
                    "values": {
                      "ENTRY_POINT_ACCESS_UNSPECIFIED": {
                        "value": 0
                      },
                      "ALL": {
                        "value": 1
                      },
                      "CREATOR_APP_ONLY": {
                        "value": 2
                      }
                    }
                  }
                }
              },
              "active_conference": {
                "type": "object",
                "properties": {
                  "conference_record": {
                    "description": "Output only. Reference to 'ConferenceRecord' resource. Format: ``conferenceRecords/{conference_record}`` where ``{conference_record}`` is a unique id for each instance of a call within a space.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "name": "GetSpaceRequest",
      "description": "Request to get a space.\n\nAttributes:\n    name (str):\n        Required. Resource name of the space.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the space.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "UpdateSpaceRequest",
      "description": "Request to update a space.\n\nAttributes:\n    space (google.apps.meet_v2beta.types.Space):\n        Required. Space to be updated.\n    update_mask (google.protobuf.field_mask_pb2.FieldMask):\n        Optional. Field mask used to specify the fields to be\n        updated in the space. If update_mask isn't provided, it\n        defaults to '*' and updates all fields provided in the\n        request, including deleting fields not set in the request.",
      "parameters": {
        "type": "object",
        "properties": {
          "space": {
            "description": "Required. Space to be updated.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Immutable. Resource name of the space. Format: ``spaces/{space}``",
                "type": "string"
              },
              "meeting_uri": {
                "description": "Output only. URI used to join meeting, such as ``https://meet.google.com/abc-mnop-xyz``.",
                "type": "string"
              },
              "meeting_code": {
                "description": "Output only. Type friendly code to join the meeting. Format: ``[a-z]+-[a-z]+-[a-z]+`` such as ``abc-mnop-xyz``. The maximum length is 128 characters. Can ONLY be used as alias of the space ID to get the space.",
                "type": "string"
              },
              "config": {
                "type": "object",
                "properties": {
                  "access_type": {
                    "type": "enum",
                    "name": "AccessType",
                    "description": "AccessType is an enum of all the supported access types for a\nvolume.\n\nValues:\n    ACCESS_TYPE_UNSPECIFIED (0):\n        Unspecified Access Type\n    READ_ONLY (1):\n        Read Only\n    READ_WRITE (2):\n        Read Write\n    READ_NONE (3):\n        None",
                    "values": {
                      "ACCESS_TYPE_UNSPECIFIED": {
                        "value": 0
                      },
                      "READ_ONLY": {
                        "value": 1
                      },
                      "READ_WRITE": {
                        "value": 2
                      },
                      "READ_NONE": {
                        "value": 3
                      }
                    }
                  },
                  "entry_point_access": {
                    "type": "enum",
                    "name": "EntryPointAccess",
                    "description": "Entry points that can be used to join a meeting. Example:\n``meet.google.com``, the Embed SDK Web, or a mobile application.\n\nValues:\n    ENTRY_POINT_ACCESS_UNSPECIFIED (0):\n        Unused.\n    ALL (1):\n        All entry points are allowed.\n    CREATOR_APP_ONLY (2):\n        Only entry points owned by the Google Cloud\n        project that created the space can be used to\n        join meetings in this space.  Apps can use the\n        Embed SDK Web or mobile Meet SDKs to create\n        owned entry points.",
                    "values": {
                      "ENTRY_POINT_ACCESS_UNSPECIFIED": {
                        "value": 0
                      },
                      "ALL": {
                        "value": 1
                      },
                      "CREATOR_APP_ONLY": {
                        "value": 2
                      }
                    }
                  }
                }
              },
              "active_conference": {
                "type": "object",
                "properties": {
                  "conference_record": {
                    "description": "Output only. Reference to 'ConferenceRecord' resource. Format: ``conferenceRecords/{conference_record}`` where ``{conference_record}`` is a unique id for each instance of a call within a space.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "update_mask": {
            "description": "Optional. Field mask used to specify the fields to be updated in the space. If update_mask isn't provided, it defaults to '*' and updates all fields provided in the request, including deleting fields not set in the request.",
            "type": "object",
            "reference": "google.protobuf.field_mask_pb2.FieldMask"
          }
        },
        "required": [
          "space"
        ]
      }
    },
    {
      "type": "function",
      "name": "EndActiveConferenceRequest",
      "description": "Request to end an ongoing conference of a space.\n\nAttributes:\n    name (str):\n        Required. Resource name of the space.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the space.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetConferenceRecordRequest",
      "description": "Request to get a conference record.\n\nAttributes:\n    name (str):\n        Required. Resource name of the conference.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the conference.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListConferenceRecordsRequest",
      "description": "Request to fetch list of conference records per user.\n\nAttributes:\n    page_size (int):\n        Optional. Maximum number of conference\n        records to return. The service might return\n        fewer than this value. If unspecified, at most\n        25 conference records are returned. The maximum\n        value is 100; values above 100 are coerced to\n        100. Maximum might change in the future.\n    page_token (str):\n        Optional. Page token returned from previous\n        List Call.\n    filter (str):\n        Optional. User specified filtering condition in EBNF format.\n        The following are the filterable fields:\n\n        -  ``space.meeting_code``\n        -  ``space.name``\n        -  ``start_time``\n        -  ``end_time``\n\n        For example, ``space.meeting_code = \"abc-mnop-xyz\"``.",
      "parameters": {
        "type": "object",
        "properties": {
          "page_size": {
            "description": "Optional. Maximum number of conference records to return. The service might return fewer than this value. If unspecified, at most 25 conference records are returned. The maximum value is 100; values above 100 are coerced to 100. Maximum might change in the future.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. Page token returned from previous List Call.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. User specified filtering condition in EBNF format. The following are the filterable fields:  -  ``space.meeting_code`` -  ``space.name`` -  ``start_time`` -  ``end_time``  For example, ``space.meeting_code = \"abc-mnop-xyz\"``.",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "function",
      "name": "GetParticipantRequest",
      "description": "Request to get a Participant.\n\nAttributes:\n    name (str):\n        Required. Resource name of the participant.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the participant.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListParticipantsRequest",
      "description": "Request to fetch list of participant per conference.\n\nAttributes:\n    parent (str):\n        Required. Format: ``conferenceRecords/{conference_record}``\n    page_size (int):\n        Maximum number of participants to return. The\n        service might return fewer than this value.\n        If unspecified, at most 100 participants are\n        returned. The maximum value is 250; values above\n        250 are coerced to 250. Maximum might change in\n        the future.\n    page_token (str):\n        Page token returned from previous List Call.\n    filter (str):\n        Optional. User specified filtering condition in EBNF format.\n        The following are the filterable fields:\n\n        -  ``earliest_start_time``\n        -  ``latest_end_time``\n\n        For example, ``latest_end_time IS NULL`` returns active\n        participants in the conference.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``conferenceRecords/{conference_record}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum number of participants to return. The service might return fewer than this value. If unspecified, at most 100 participants are returned. The maximum value is 250; values above 250 are coerced to 250. Maximum might change in the future.",
            "type": "integer"
          },
          "page_token": {
            "description": "Page token returned from previous List Call.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. User specified filtering condition in EBNF format. The following are the filterable fields:  -  ``earliest_start_time`` -  ``latest_end_time``  For example, ``latest_end_time IS NULL`` returns active participants in the conference.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetParticipantSessionRequest",
      "description": "Request to get a participant session.\n\nAttributes:\n    name (str):\n        Required. Resource name of the participant.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the participant.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListParticipantSessionsRequest",
      "description": "Request to fetch list of participant sessions per conference\nrecord per participant.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``conferenceRecords/{conference_record}/participants/{participant}``\n    page_size (int):\n        Optional. Maximum number of participant\n        sessions to return. The service might return\n        fewer than this value. If unspecified, at most\n        100 participants are returned. The maximum value\n        is 250; values above 250 are coerced to 250.\n        Maximum might change in the future.\n    page_token (str):\n        Optional. Page token returned from previous\n        List Call.\n    filter (str):\n        Optional. User specified filtering condition in EBNF format.\n        The following are the filterable fields:\n\n        -  ``start_time``\n        -  ``end_time``\n\n        For example, ``end_time IS NULL`` returns active participant\n        sessions in the conference record.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``conferenceRecords/{conference_record}/participants/{participant}``",
            "type": "string"
          },
          "page_size": {
            "description": "Optional. Maximum number of participant sessions to return. The service might return fewer than this value. If unspecified, at most 100 participants are returned. The maximum value is 250; values above 250 are coerced to 250. Maximum might change in the future.",
            "type": "integer"
          },
          "page_token": {
            "description": "Optional. Page token returned from previous List Call.",
            "type": "string"
          },
          "filter": {
            "description": "Optional. User specified filtering condition in EBNF format. The following are the filterable fields:  -  ``start_time`` -  ``end_time``  For example, ``end_time IS NULL`` returns active participant sessions in the conference record.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetRecordingRequest",
      "description": "Request message for GetRecording method.\n\nAttributes:\n    name (str):\n        Required. Resource name of the recording.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the recording.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListRecordingsRequest",
      "description": "Request for ListRecordings method.\n\nAttributes:\n    parent (str):\n        Required. Format: ``conferenceRecords/{conference_record}``\n    page_size (int):\n        Maximum number of recordings to return. The\n        service might return fewer than this value.\n        If unspecified, at most 10 recordings are\n        returned. The maximum value is 100; values above\n        100 are coerced to 100. Maximum might change in\n        the future.\n    page_token (str):\n        Page token returned from previous List Call.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``conferenceRecords/{conference_record}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum number of recordings to return. The service might return fewer than this value. If unspecified, at most 10 recordings are returned. The maximum value is 100; values above 100 are coerced to 100. Maximum might change in the future.",
            "type": "integer"
          },
          "page_token": {
            "description": "Page token returned from previous List Call.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTranscriptRequest",
      "description": "Request for GetTranscript method.\n\nAttributes:\n    name (str):\n        Required. Resource name of the transcript.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the transcript.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListTranscriptsRequest",
      "description": "Request for ListTranscripts method.\n\nAttributes:\n    parent (str):\n        Required. Format: ``conferenceRecords/{conference_record}``\n    page_size (int):\n        Maximum number of transcripts to return. The\n        service might return fewer than this value.\n        If unspecified, at most 10 transcripts are\n        returned. The maximum value is 100; values above\n        100 are coerced to 100. Maximum might change in\n        the future.\n    page_token (str):\n        Page token returned from previous List Call.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``conferenceRecords/{conference_record}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum number of transcripts to return. The service might return fewer than this value. If unspecified, at most 10 transcripts are returned. The maximum value is 100; values above 100 are coerced to 100. Maximum might change in the future.",
            "type": "integer"
          },
          "page_token": {
            "description": "Page token returned from previous List Call.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    },
    {
      "type": "function",
      "name": "GetTranscriptEntryRequest",
      "description": "Request for GetTranscriptEntry method.\n\nAttributes:\n    name (str):\n        Required. Resource name of the ``TranscriptEntry``.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Resource name of the ``TranscriptEntry``.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "type": "function",
      "name": "ListTranscriptEntriesRequest",
      "description": "Request for ListTranscriptEntries method.\n\nAttributes:\n    parent (str):\n        Required. Format:\n        ``conferenceRecords/{conference_record}/transcripts/{transcript}``\n    page_size (int):\n        Maximum number of entries to return. The\n        service might return fewer than this value.\n        If unspecified, at most 10 entries are returned.\n        The maximum value is 100; values above 100 are\n        coerced to 100. Maximum might change in the\n        future.\n    page_token (str):\n        Page token returned from previous List Call.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "Required. Format: ``conferenceRecords/{conference_record}/transcripts/{transcript}``",
            "type": "string"
          },
          "page_size": {
            "description": "Maximum number of entries to return. The service might return fewer than this value. If unspecified, at most 10 entries are returned. The maximum value is 100; values above 100 are coerced to 100. Maximum might change in the future.",
            "type": "integer"
          },
          "page_token": {
            "description": "Page token returned from previous List Call.",
            "type": "string"
          }
        },
        "required": [
          "parent"
        ]
      }
    }
  ]
}